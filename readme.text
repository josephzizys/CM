This is the readme for Common Music 3. 

  1. Applications
  2. Dependancies
  3. Building
  4. CM in Emacs
  5. SVN Access

==========================================================================
                               APPLICATIONS
==========================================================================

The CM source tree builds three different applications:

Grace (Graphical Realtime Algorithmic Composition Environment) 

   A drag-and-drop GUI with embedded Scheme interpreter (Sndlib/S7),
   code editor, data plotter and realtime audio connections to various
   packages such as MIDI, OSC, CLM, Csound, Fomus.

cm 

   A console version of Grace that you can run in the Terminal or as
   an 'inferior process' under Emacs (see section 4 below).

GraceCL
    
   A version of Grace for use with Common Lisp (either SBCL or CLISP)
   and the older CM2 branch of Common Music. It is intended as a
   replacement for working with CLM4/CM2 in Emacs. GraceCL is not
   realtime and has no Audio menu.

==========================================================================
                               DEPENDENCIES                               
==========================================================================

Premake 3.7 available at:

  http://premake.sourceforge.net/download

SndLib with S7 Scheme, available at:

  ftp://ccrma-ftp.stanford.edu/pub/Lisp/sndlib.tar.gz

==========================================================================
                                 BUILDING                                 
==========================================================================

Use premake to create your make files and then make the targets. For
example this is how I build the basic system on my mac:

  $ premake --target gnu --sndlib ../sndlib
  $ make

You MUST specify a --target option (either gnu or vs2008) and a --sndlib
installation directory

To use an external JUCE installation rather than CM's amalgamated JUCE
sources (part of the CM source tree) pass an optinal --juce
installation directory.  To build with Fomus add your --fomus
installation root as well, typically '--fomus /usr/local'

The --sndlib --juce and --fomus options all allow their
path to be either the source directory (eg '--juce ../juce-1.46') or
an install root (eg '--juce /usr/local').

Executables are saved in bin/:

  bin/cm                      console app    
  bin/Grace                   gui app
  bin/GraceCL                 gui app (for cm2/common lisp)

EXAMPLE: BUILDING SNDLIB AND CM FROM SOURCES ON OSX AND LINUX

  rm -rf sndlib
  curl -o sndlib.tar.gz ftp://ccrma-ftp.stanford.edu/pub/Lisp/sndlib.tar.gz
  tar -zxf sndlib.tar.gz
  rm sndlib.tar.gz
  cd sndlib
  ./configure CC=g++
  make
  cd ..
  rm -rf cm
  svn co http://commonmusic.svn.sf.net/svnroot/commonmusic/trunk cm
  cd cm
  premake --verbose --target gnu --sndlib  ../sndlib
  make

EXAMPLE: BUILDING SNDLIB AND CM FROM SOURCES ON WINDOWS

  These instructions assume you already have Microsoft Visual Studio
  Express C++ 2008 installed on your computer. Its easiest if you
  create a common folder to hold the source trees for CM and SndLib.
  I created a C:\Software directory to hold both systems on my
  machine:

        C:\Software\sndlib 
        C:\Software\cm 

  1. Download and install the latest version of SndLib: 
  ftp://ccrma-ftp.stanford.edu/pub/Lisp/sndlib.tar.gz 

  2. Double-click 'sndlib.vcproj' to open the project in Visual Studio
  and choose 'Build Solution' from the Build menu (or press F7). This
  should compile the release version of the sndlib library.

  3. Download and install Premake 3.7, make sure that the executable
  is on your PATH variable:
  http://downloads.sourceforge.net/premake/premake-win32-3.7.zip

  4. Download and install the latest Common Music sources from the svn
  repository. The svn command to do this is:
  svn co http://commonmusic.svn.sf.net/svnroot/commonmusic/trunk cm

  5. Open a Windows CMD shell (terminal) by selecting Run... from the
  Start menu and click OK.

  6. In the terminal window, change directories to your CM directory
  and use premake to create the Visual Studio project files: 
    $ cd \Software\cm 
    $ premake --target vs2008 --sndlib ../sndlib

  7. Double click the file 'cm.sln' , select the RELEASE configuration
  in the pulldown menu and press F7.

Building a static, uninstalled liblo for CM

         $ cd liblo-0.26
         $ ./configure --enable-static=yes --enable-shared=no
         $ make
         $ mkdir lib
         $ cp src/.libs/liblo.a lib
         $ mkdir include
         $ cp -r lo include
         
         $ cd ../cm
         $ premake ... --liblo ../liblo-0.26

libtool: link: ar cru .libs/liblo.a  liblo_la-address.o liblo_la-send.o liblo_la-message.o liblo_la-server.o liblo_la-method.o liblo_la-server_thread.o liblo_la-blob.o liblo_la-bundle.o liblo_la-timetag.o liblo_la-pattern_match.o
libtool: link: ranlib .libs/liblo.a


==========================================================================
                                 CM IN EMACS                             
==========================================================================

bin/cm is a console app that can be used as an inferior scheme process
in Emacs.  Add this snippet to your .emacs file and fix 'cm-path' for
your machine. Then restart emacs and start CM by doing: M-x: cm

;-----------------------------------------------------------------------

(defvar cm-path "~/Software/cm/") ; FIX pathname for your machine
(require 'scheme)
(load (concat cm-path "res/etc/sal.el"))
(let ((spec '("definstrument" "loop" "process" "run" "send")))
  (font-lock-add-keywords 'scheme-mode
    (list (cons (concat "(" (regexp-opt spec t) "\\>") 1))))
(defun cm (path)
  "Start CM"
  (interactive (list (if prefix-arg
			 (read-string "Command to start CM: " "cm") 
		       (concat cm-path "bin/cm"))))
  (run-scheme path))


==========================================================================
                                SVN ACCESS                                
==========================================================================

To download the svn tip of Common Music type the following command (all
one line) in your terminal window:

svn co http://commonmusic.svn.sourceforge.net/svnroot/commonmusic/trunk cm

