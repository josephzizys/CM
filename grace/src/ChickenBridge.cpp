/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-27 17:54
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[836];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,53,54,53,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,53,56,55,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,53,57,55,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,54,48,51,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,57,50,57,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,57,49,56,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,57,50,55,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,56,54,53,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,57,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,57,52,55,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,53,57,54,50,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,50,56,32,98,49,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,51,48,32,98,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,50,52,32,46,32,111,98,106,49,50,53,41,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,51,53,32,112,114,111,112,49,51,54,32,46,32,100,101,102,49,51,55,41,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,12),40,100,111,49,52,51,32,102,49,52,53,41,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,52,49,32,98,49,52,50,41};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,55,51,49,55,54,32,97,49,55,50,49,55,55,32,97,49,55,49,49,55,56,32,97,49,55,48,49,55,57,32,97,49,54,57,49,56,48,32,97,49,54,56,49,56,49,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,32,97,49,56,54,49,57,51,32,97,49,56,53,49,57,52,32,97,49,56,52,49,57,53,32,97,49,56,51,49,57,54,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,49,57,55,50,48,48,41};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,50,48,50,50,48,53,32,97,50,48,49,50,48,54,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,48,57,50,49,50,32,97,50,48,56,50,49,51,41,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,49,55,50,50,48,32,97,50,49,54,50,50,49,32,97,50,49,53,50,50,50,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,50,52,50,50,55,41,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,50,57,50,51,50,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,51,51,50,51,54,41,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,52,55,50,53,48,41,0,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,53,49,50,53,52,41,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,53,53,50,53,56,41,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,56,51,50,56,54,32,97,50,56,50,50,56,55,41,0,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,56,57,50,57,50,41,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,48,49,51,48,52,41,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,48,57,51,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,12),40,97,54,55,51,52,32,122,51,50,53,41,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,49,57,32,120,49,51,50,48,32,120,50,51,50,49,32,121,49,51,50,50,32,121,50,51,50,51,32,46,32,98,51,50,52,41,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,12),40,97,54,55,55,52,32,122,51,51,55,41,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,12),40,97,54,56,48,48,32,122,51,51,56,41,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,50,54,32,120,49,51,50,55,32,120,50,51,50,56,32,105,49,51,50,57,32,46,32,97,114,103,115,51,51,48,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,52,48,41,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,52,49,41};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,52,50,32,46,32,97,114,103,115,51,52,51,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,97,54,57,54,50,32,110,51,52,54,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,52,52,32,115,116,101,112,115,51,52,53,41,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,52,55,32,46,32,100,105,103,105,116,115,51,52,56,41,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,12),40,97,55,48,49,49,32,120,51,56,57,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,52,57,32,46,32,97,114,103,115,51,53,48,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,51,57,51,41};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,51,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,15),40,100,111,52,48,51,32,116,97,105,108,52,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,57,53,32,99,111,111,114,100,115,51,57,54,32,46,32,98,97,115,101,51,57,55,41,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,49,51,32,46,32,97,114,103,115,52,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,27),40,100,111,52,49,57,32,105,52,50,49,32,107,52,50,50,32,108,52,50,51,32,116,52,50,52,41,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,52,49,53,32,107,101,121,110,117,109,52,49,54,32,46,32,97,114,103,115,52,49,55,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,52,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,52,51,50,32,98,52,51,51,41,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,52,51,52,41};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,52,51,53,32,46,32,97,114,103,115,52,51,54,41,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,52,55,56,41,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,53,50,49,41,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,53,50,50,41,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,53,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,53,50,52,41,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,7),40,97,56,49,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,7),40,97,56,49,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,53,54,54,32,111,99,116,53,54,55,32,101,114,114,53,54,56,41,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,7),40,97,56,49,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,7),40,97,56,49,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,53,55,52,32,100,111,99,116,53,55,53,32,101,114,114,63,53,55,54,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,39),40,100,111,53,55,57,32,116,97,105,108,53,56,49,32,100,101,102,111,53,56,50,32,116,104,105,115,53,56,51,32,114,101,115,108,53,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,39),40,100,111,53,57,51,32,116,97,105,108,53,57,53,32,100,101,102,111,53,57,54,32,116,104,105,115,53,57,55,32,114,101,115,108,53,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,53,57,49,41,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,39),40,100,111,54,48,57,32,116,97,105,108,54,49,49,32,100,101,102,111,54,49,50,32,116,104,105,115,54,49,51,32,114,101,115,108,54,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,54,48,55,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,54,50,51,41,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,23),40,100,111,54,50,57,32,116,97,105,108,54,51,49,32,108,97,115,116,54,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,54,50,54,41,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,12),40,97,56,55,52,56,32,122,54,51,54,41,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,54,50,52,41,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,23),40,100,111,54,52,52,32,116,97,105,108,54,52,54,32,108,97,115,116,54,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,54,52,49,32,111,114,105,103,54,52,50,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,12),40,97,56,57,48,49,32,122,54,53,49,41,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,54,51,55,32,121,54,51,56,41,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,55,50,57,32,108,101,110,103,116,104,55,51,48,32,115,116,114,101,97,109,55,51,49,32,100,101,102,97,117,108,116,55,51,50,32,111,109,105,116,55,51,51,32,114,101,112,115,55,51,52,41,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,55,51,54,32,118,97,108,55,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,55,51,57,41,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,55,52,53,41,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,55,53,49,41,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,55,54,48,32,118,97,108,55,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,55,54,51,41,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,55,54,57,41,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,55,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,55,57,57,41,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,56,48,50,32,118,97,108,56,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,56,48,53,41,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,56,49,49,41,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,56,49,52,32,118,97,108,56,49,53,41};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,56,49,55,41,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,56,50,51,41,0,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,56,50,54,32,118,97,108,56,50,55,41};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,13),40,102,95,57,51,53,51,32,120,56,50,57,41,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,56,51,50,32,118,97,108,56,51,51,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,56,51,53,41,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,56,55,52,32,118,97,108,56,55,53,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,56,55,55,41,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,12),40,97,57,55,51,49,32,120,57,48,55,41,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,56,57,55,32,100,97,116,97,56,57,56,32,102,111,114,56,57,57,32,114,101,112,57,48,48,32,102,108,97,103,115,57,48,49,32,108,101,110,57,48,50,32,100,112,101,114,57,48,51,32,103,101,116,114,57,48,52,32,109,97,112,114,57,48,53,41,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,57,51,50,41,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,57,51,51,41,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,17),40,100,111,57,51,56,32,105,57,52,48,32,101,57,52,49,41,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,22),40,100,111,57,52,53,32,110,57,52,55,32,101,57,52,56,32,102,57,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,57,51,52,32,46,32,97,114,103,115,57,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,7),40,100,111,57,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,23),40,100,111,57,54,57,32,100,121,110,63,57,55,49,32,115,116,111,112,57,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,57,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,57,57,51,41};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,31),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,57,57,52,32,111,98,106,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,14),40,97,49,48,51,48,55,32,120,49,48,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,57,57,57,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,23),40,97,49,48,52,48,49,32,102,110,49,48,53,54,32,111,98,106,49,48,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,48,49,51,32,46,32,97,114,103,115,49,48,49,52,41};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,48,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,48,56,51,41,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,48,56,54,32,118,97,108,49,48,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,23),40,97,49,48,56,51,49,32,102,110,49,49,56,52,32,111,98,106,49,49,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,49,49,50,32,46,32,97,114,103,115,49,49,49,51,41,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,49,57,51,41,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,23),40,97,49,49,52,57,56,32,102,110,49,50,53,53,32,111,98,106,49,50,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,50,49,50,32,46,32,97,114,103,115,49,50,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,50,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,23),40,97,49,49,55,56,53,32,102,110,49,51,49,48,32,111,98,106,49,51,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,50,54,55,32,46,32,97,114,103,115,49,50,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,50,49,32,105,49,51,50,51,32,106,49,51,50,52,32,118,49,51,50,53,41,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,51,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,23),40,97,49,50,49,51,48,32,102,110,49,52,48,53,32,111,98,106,49,52,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,51,51,51,32,46,32,97,114,103,115,49,51,51,52,41,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,14),40,100,111,49,52,50,49,32,105,49,52,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,52,49,54,32,115,116,97,114,116,49,52,49,55,32,115,116,101,112,49,52,49,56,32,119,105,100,116,104,49,52,49,57,32,101,110,100,49,52,50,48,41,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,52,49,52,41,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,52,52,56,41,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,52,53,49,32,118,97,108,49,52,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,52,53,52,41,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,52,54,48,41,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,52,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,52,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,55,53,32,118,97,108,49,52,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,52,55,56,41,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,14),40,97,49,51,48,49,53,32,105,49,53,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,23),40,97,49,51,48,48,57,32,102,110,49,53,53,57,32,111,98,106,49,53,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,17),40,97,49,51,50,52,54,32,105,116,101,109,49,53,49,52,41,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,53,55,50,41,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,53,48,52,32,46,32,97,114,103,115,49,53,48,53,41,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,37),40,100,111,49,54,53,57,32,116,97,105,108,49,54,54,49,32,105,110,100,101,120,49,54,54,50,32,116,111,116,97,108,49,54,54,51,41,0,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,53,51,32,116,97,105,108,49,54,53,53,41,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,54,52,57,32,102,105,120,63,49,54,53,48,41,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,27),40,100,111,49,54,56,49,32,116,97,105,108,49,54,56,51,32,105,110,100,101,120,49,54,56,52,41,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,54,55,57,32,114,49,54,56,48,41,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,57,48,32,116,97,105,108,49,54,57,50,41,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,56,54,32,105,116,101,109,49,54,56,56,41,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,54,54,57,41,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,23),40,97,49,52,51,50,57,32,102,110,49,56,49,56,32,111,98,106,49,56,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,14),40,97,49,52,48,56,51,32,115,49,55,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,49,50,41};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,41),40,100,111,49,55,51,52,32,116,97,105,108,49,55,51,54,32,111,114,100,101,114,49,55,51,55,32,108,105,115,49,55,51,56,32,112,49,55,51,57,41,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,55,52,54,32,46,32,97,114,103,115,49,55,52,55,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,52,51,32,116,97,105,108,49,56,52,53,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,33),40,100,111,49,56,51,51,32,116,97,105,108,49,56,51,53,32,111,117,116,49,56,51,54,32,115,117,109,49,56,51,55,41,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,56,51,49,32,111,117,116,112,117,116,115,49,56,51,50,41,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,55,51,32,108,97,115,116,49,56,55,53,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,52,57,32,105,49,56,53,49,32,106,49,56,53,50,32,102,49,56,53,51,41,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,35),40,100,111,49,56,54,52,32,116,97,105,108,49,56,54,54,32,112,97,115,116,49,56,54,55,32,105,116,101,109,49,56,54,56,41,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,56,50,56,41};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,56,57,51,41};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,14),40,97,49,53,50,48,49,32,110,49,57,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,23),40,97,49,53,49,57,53,32,102,110,49,57,53,55,32,111,98,106,49,57,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,28),40,97,49,53,52,52,55,32,105,116,101,109,49,57,54,57,32,46,32,97,114,103,115,49,57,55,48,41,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,57,54,56,41,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,57,49,52,32,46,32,97,114,103,115,49,57,49,53,41};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,17),40,100,111,50,48,50,51,32,116,97,105,108,50,48,50,53,41,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,48,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,48,55,48,32,115,116,114,105,110,103,50,48,55,49,32,112,111,115,105,116,105,111,110,50,48,55,50,41,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,48,55,55,41,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,48,56,51,41,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,48,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,48,57,56,41,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,49,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,49,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,49,48,51,32,116,121,112,101,50,49,48,52,32,112,97,116,116,101,114,110,50,49,48,53,32,112,97,114,115,101,114,50,49,48,54,32,101,109,105,116,101,114,50,49,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,49,49,50,41,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,49,53,54,32,100,101,102,50,49,53,55,41,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,49,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,49,54,50,41,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,49,54,51,41,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,49,54,52,32,105,50,49,54,53,41,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,49,54,57,41,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,49,55,49,32,112,111,115,105,116,105,111,110,50,49,55,50,41,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,49,55,55,41,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,49,56,51,41,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,49,57,49,32,112,97,114,115,101,100,50,49,57,50,32,112,111,115,105,116,105,111,110,50,49,57,51,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,49,57,52,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,49,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,50,48,52,41,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,50,49,48,41,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,50,50,48,41,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,50,50,49,32,116,121,112,50,50,50,50,41,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,50,50,52,32,105,110,102,111,50,50,50,53,41,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,50,50,55,32,100,97,116,97,50,50,50,56,32,105,110,102,111,50,50,50,57,41,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,50,51,48,32,100,97,116,97,50,50,51,49,32,105,110,102,111,50,50,51,50,41,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,50,51,53,32,105,110,102,111,50,50,51,54,32,101,114,114,102,50,50,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,50,51,56,32,105,110,102,111,50,50,51,57,32,101,114,114,102,50,50,52,48,41,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,27),40,102,95,49,54,54,48,49,32,97,114,103,115,50,50,53,51,32,101,114,114,102,50,50,53,52,41,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,50,53,50,41,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,54,50,32,116,97,105,108,50,50,54,52,41,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,36),40,102,95,49,54,54,48,57,32,117,110,105,116,50,50,53,54,32,105,110,102,111,50,50,53,55,32,101,114,114,102,50,50,53,56,41,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,50,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,8),40,97,49,54,56,48,55,41};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,26),40,97,49,54,56,49,55,32,97,50,50,57,52,32,98,50,50,57,53,32,99,50,50,57,54,41,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,8),40,97,49,54,57,49,51,41};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,26),40,97,49,54,57,50,55,32,97,50,51,49,48,32,98,50,51,49,49,32,99,50,51,49,50,41,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,48,53,32,105,50,51,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,8),40,97,49,54,57,56,48,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,26),40,97,49,54,57,57,52,32,97,50,51,51,50,32,98,50,51,51,51,32,99,50,51,51,52,41,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,50,55,32,105,50,51,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,8),40,97,49,55,48,54,57,41};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,26),40,97,49,55,48,55,53,32,97,50,51,53,49,32,98,50,51,53,50,32,99,50,51,53,51,41,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,8),40,100,111,50,51,52,55,41};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,8),40,97,49,55,49,48,56,41};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,26),40,97,49,55,49,49,52,32,97,50,51,54,57,32,98,50,51,55,48,32,99,50,51,55,49,41,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,50,56,49,32,116,111,107,101,110,115,50,50,56,50,32,102,111,114,99,101,45,97,110,100,50,50,56,51,32,108,101,118,101,108,50,50,56,52,32,116,114,97,99,101,50,50,56,53,32,101,114,114,102,50,50,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,53,52,54,41,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,53,53,48,41,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,53,53,57,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,53,54,48,32,116,121,112,50,50,53,54,49,41,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,49,48,32,116,111,107,115,50,54,49,50,41,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,54,48,54,32,116,121,112,50,54,48,55,41,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,54,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,29),40,100,111,50,54,52,54,32,119,50,50,54,52,56,32,111,107,50,54,52,57,32,108,105,50,54,53,48,41,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,8),40,100,111,50,54,52,52,41};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,54,51,57,41,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,56,48,53,32,101,114,114,102,50,56,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,49,52,32,102,51,48,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,55,32,102,51,48,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,8),40,97,49,54,54,55,56,41};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,44),40,97,49,54,54,56,53,32,115,117,99,99,101,115,115,50,50,55,54,32,114,101,115,117,108,116,115,50,50,55,55,32,114,101,109,97,105,110,115,50,50,55,56,41,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,97,49,54,54,55,50,32,101,114,114,102,50,50,55,52,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,50,57,57,50,32,114,117,108,101,50,57,57,51,32,116,111,107,101,110,115,50,57,57,52,32,116,114,97,99,101,63,50,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,51,52,32,116,97,105,108,51,48,51,54,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,48,51,50,32,108,101,118,51,48,51,51,41,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,52,50,32,116,97,105,108,51,48,52,52,41,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,48,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,48,52,57,41,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,48,53,49,41,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,48,53,53,41,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,48,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,49,56,54,32,120,51,49,56,55,41};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,49,56,56,41,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,49,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,49,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,49,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,50,48,48,41,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,50,48,49,32,120,51,50,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,50,48,51,41,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,50,48,54,41,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,50,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,49,52,32,97,51,50,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,50,49,50,41,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,50,54,32,108,51,50,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,50,50,52,32,97,99,99,101,115,115,111,114,51,50,50,53,41};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,50,50,49,32,99,108,97,117,115,101,115,51,50,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,50,51,50,32,111,112,115,51,50,51,51,41};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,50,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,50,51,53,32,118,97,108,51,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,53,56,32,116,97,105,108,51,50,54,48,41,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,53,51,32,116,97,105,108,51,50,53,53,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,20),40,100,111,51,50,52,51,32,104,51,50,52,53,32,108,51,50,52,54,41,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,50,51,55,32,102,111,114,109,115,51,50,51,56,32,97,114,103,115,51,50,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,50,55,50,32,99,108,97,117,115,101,115,51,50,55,51,32,111,112,115,51,50,55,52,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,57,50,32,110,101,120,116,51,50,57,52,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,50,55,56,32,99,108,97,117,115,101,115,51,50,55,57,32,111,112,115,51,50,56,48,41,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,8),40,97,50,48,50,54,54,41};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,30),40,97,50,48,50,56,52,32,99,108,97,117,115,101,51,51,55,51,32,105,103,110,111,114,101,51,51,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,51,55,48,32,99,108,97,117,115,101,115,51,51,55,49,32,111,112,115,51,51,55,50,41,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,57,49,32,110,101,120,116,51,51,57,51,41,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,51,55,54,32,99,108,97,117,115,101,115,51,51,55,55,32,111,112,115,51,51,55,56,41};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,53,56,32,110,101,120,116,51,52,54,48,41,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,52,52,56,32,99,108,97,117,115,101,115,51,52,52,57,32,111,112,115,51,52,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,26),40,100,111,51,52,57,54,32,110,101,101,100,51,52,57,56,32,110,101,120,116,51,52,57,57,41,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,52,56,54,32,99,108,97,117,115,101,115,51,52,56,55,32,111,112,115,51,52,56,56,41,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,8),40,100,111,51,53,52,48,41};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,53,51,49,32,99,108,97,117,115,101,115,51,53,51,50,32,111,112,115,51,53,51,51,41};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,53,53,48,32,99,108,97,117,115,101,115,51,53,53,49,32,111,112,115,51,53,53,50,41,0,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,53,54,52,32,99,108,97,117,115,101,115,51,53,54,53,32,111,112,115,51,53,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,54,51,49,32,116,121,112,101,51,54,51,50,32,97,99,99,51,54,51,51,32,104,101,97,100,51,54,51,52,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,54,51,53,41};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,54,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,56,51,32,97,51,53,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,57,49,32,99,51,53,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,54,49,48,32,99,108,97,117,115,101,115,51,54,49,49,32,111,112,115,51,54,49,50,41,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,55,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,55,49,50,32,99,108,97,117,115,101,115,51,55,49,51,32,111,112,115,51,55,49,52,41,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,55,51,51,32,99,108,97,117,115,101,115,51,55,51,52,32,111,112,115,51,55,51,53,41,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,55,52,57,32,99,108,97,117,115,101,115,51,55,53,48,32,111,112,115,51,55,53,49,41,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,8),40,97,50,50,49,53,55,41};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,97,50,50,49,55,48,32,97,51,55,55,54,32,98,51,55,55,55,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,38),40,100,111,51,55,54,57,32,111,112,51,55,55,49,32,99,108,97,117,115,101,51,55,55,50,32,114,101,109,97,105,110,115,51,55,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,55,54,51,32,99,108,97,117,115,101,115,51,55,54,52,32,111,112,115,51,55,54,53,41,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,8),40,97,50,50,51,50,49,41};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,20),40,97,50,50,51,51,53,32,97,51,56,48,53,32,98,51,56,48,54,41,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,8),40,97,50,50,51,57,57,41};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,20),40,97,50,50,52,48,53,32,97,51,56,48,50,32,98,51,56,48,51,41,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,55,56,57,32,99,108,97,117,115,101,115,51,55,57,48,32,111,112,115,51,55,57,49,41,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,56,51,50,32,116,121,112,101,51,56,51,51,41,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,8),40,97,50,50,53,52,55,41};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,20),40,97,50,50,53,53,54,32,97,51,56,52,53,32,98,51,56,52,54,41,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,47),40,100,111,51,56,51,54,32,111,112,51,56,51,56,32,99,108,97,117,115,101,51,56,51,57,32,114,101,109,97,105,110,115,51,56,52,48,32,98,111,100,121,51,56,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,56,53,56,32,102,111,114,109,115,51,56,53,57,32,111,112,115,51,56,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,57,54,50,32,97,52,48,51,55,52,48,52,48,32,97,52,48,51,54,52,48,52,49,32,97,52,48,51,53,52,48,52,50,32,97,52,48,51,52,52,48,52,51,32,97,52,48,51,51,52,48,52,52,41,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,57,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,54,55,54,32,97,52,48,53,51,52,48,53,55,32,97,52,48,53,50,52,48,53,56,41,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,48,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,55,48,55,32,97,52,49,51,50,52,49,51,53,32,97,52,49,51,49,52,49,51,54,32,97,52,49,51,48,52,49,51,55,32,97,52,49,50,57,52,49,51,56,32,97,52,49,50,56,52,49,51,57,41,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,48,54,48,41};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,49,52,54,32,97,52,49,52,55,52,49,53,49,32,97,52,49,52,54,52,49,53,50,41,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,49,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,49,56,48,32,97,52,50,54,51,52,50,54,54,32,97,52,50,54,50,52,50,54,55,32,97,52,50,54,49,52,50,54,56,32,97,52,50,54,48,52,50,54,57,32,97,52,50,53,57,52,50,55,48,41,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,49,53,52,41,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,56,57,52,32,97,52,50,55,57,52,50,56,51,32,97,52,50,55,56,52,50,56,52,41,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,50,55,55,41,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,57,50,56,32,97,52,51,57,53,52,51,57,56,32,97,52,51,57,52,52,51,57,57,32,97,52,51,57,51,52,52,48,48,32,97,52,51,57,50,52,52,48,49,32,97,52,51,57,49,52,52,48,50,41,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,50,56,54,41,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,54,52,50,32,97,52,52,49,49,52,52,49,53,32,97,52,52,49,48,52,52,49,54,41,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,52,48,57,41};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,54,55,51,32,97,52,52,57,48,52,52,57,51,32,97,52,52,56,57,52,52,57,52,32,97,52,52,56,56,52,52,57,53,32,97,52,52,56,55,52,52,57,54,32,97,52,52,56,54,52,52,57,55,41,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,52,49,56,41,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,49,49,50,32,97,52,53,48,53,52,53,48,57,32,97,52,53,48,52,52,53,49,48,41,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,53,48,51,41};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,49,52,51,32,97,52,53,56,52,52,53,56,55,32,97,52,53,56,51,52,53,56,56,32,97,52,53,56,50,52,53,56,57,32,97,52,53,56,49,52,53,57,48,32,97,52,53,56,48,52,53,57,49,41,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,53,49,50,41,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,53,56,50,32,97,52,53,57,57,52,54,48,51,32,97,52,53,57,56,52,54,48,52,41,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,53,57,55,41,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,54,49,51,32,97,52,54,55,56,52,54,56,49,32,97,52,54,55,55,52,54,56,50,32,97,52,54,55,54,52,54,56,51,32,97,52,54,55,53,52,54,56,52,32,97,52,54,55,52,52,54,56,53,41,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,54,48,54,41,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,48,55,52,32,97,52,55,48,49,52,55,48,53,41,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,55,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,48,56,57,32,97,52,55,48,57,52,55,49,51,41,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,55,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,49,48,52,32,97,52,55,49,55,52,55,50,49,41,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,55,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,49,49,57,32,97,52,55,50,55,52,55,51,49,32,97,52,55,50,54,52,55,51,50,41,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,55,50,52,32,116,52,55,50,53,41,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,49,51,56,32,97,52,55,51,54,52,55,52,48,41,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,55,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,49,53,51,32,97,52,55,52,53,52,55,52,57,32,97,52,55,52,52,52,55,53,48,41,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,55,52,50,32,99,52,55,52,51,41,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,49,55,50,32,97,52,55,53,53,52,55,53,57,32,97,52,55,53,52,52,55,54,48,41,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,55,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,49,57,49,32,97,52,55,54,54,52,55,55,48,32,97,52,55,54,53,52,55,55,49,32,97,52,55,54,52,52,55,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,55,54,50,32,107,52,55,54,51,41,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,50,49,52,32,97,52,55,55,55,52,55,56,49,32,97,52,55,55,54,52,55,56,50,41,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,55,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,50,51,51,32,97,52,55,56,56,52,55,57,50,32,97,52,55,56,55,52,55,57,51,32,97,52,55,56,54,52,55,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,55,56,52,32,118,52,55,56,53,41,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,50,54,53,32,97,52,56,48,49,52,56,48,53,32,97,52,56,48,48,52,56,48,54,41,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,50,56,49,32,97,52,56,48,57,52,56,49,51,32,97,52,56,48,56,52,56,49,52,41,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,55,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,51,49,50,32,97,52,56,50,50,52,56,50,54,32,97,52,56,50,49,52,56,50,55,32,97,52,56,50,48,52,56,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,51,51,50,32,97,52,56,51,50,52,56,51,54,32,97,52,56,51,49,52,56,51,55,32,97,52,56,51,48,52,56,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,56,49,54,32,118,52,56,49,55,41,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,51,53,56,32,97,52,56,52,51,52,56,52,55,32,97,52,56,52,50,52,56,52,56,41,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,56,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,51,55,55,32,97,52,56,53,52,52,56,53,56,32,97,52,56,53,51,52,56,53,57,32,97,52,56,53,50,52,56,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,56,53,48,32,118,52,56,53,49,41,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,48,48,32,97,52,56,55,50,52,56,55,53,32,97,52,56,55,49,52,56,55,54,32,97,52,56,55,48,52,56,55,55,32,97,52,56,54,57,52,56,55,56,32,97,52,56,54,56,52,56,55,57,41,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,56,54,51,32,100,117,114,52,56,54,52,32,107,101,121,52,56,54,53,32,97,109,112,52,56,54,54,32,99,104,97,110,52,56,54,55,41,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,50,56,32,97,52,56,56,57,52,56,57,50,32,97,52,56,56,56,52,56,57,51,32,97,52,56,56,55,52,56,57,52,32,97,52,56,56,54,52,56,57,53,32,97,52,56,56,53,52,56,57,54,41,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,56,56,48,32,100,117,114,52,56,56,49,32,107,101,121,52,56,56,50,32,97,109,112,52,56,56,51,32,99,104,97,110,52,56,56,52,41,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,53,54,32,97,52,57,48,52,52,57,48,55,32,97,52,57,48,51,52,57,48,56,32,97,52,57,48,50,52,57,48,57,32,97,52,57,48,49,52,57,49,48,32,97,52,57,48,48,52,57,49,49,41,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,56,57,55,32,107,101,121,52,56,57,56,32,99,104,97,110,52,56,57,57,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,56,52,32,97,52,57,50,48,52,57,50,51,32,97,52,57,49,57,52,57,50,52,32,97,52,57,49,56,52,57,50,53,32,97,52,57,49,55,52,57,50,54,32,97,52,57,49,54,52,57,50,55,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,57,49,50,32,107,101,121,52,57,49,51,32,118,101,108,52,57,49,52,32,99,104,97,110,52,57,49,53,41,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,49,50,32,97,52,57,51,54,52,57,51,57,32,97,52,57,51,53,52,57,52,48,32,97,52,57,51,52,52,57,52,49,32,97,52,57,51,51,52,57,52,50,32,97,52,57,51,50,52,57,52,51,41,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,57,50,56,32,107,101,121,52,57,50,57,32,118,97,108,52,57,51,48,32,99,104,97,110,52,57,51,49,41,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,52,48,32,97,52,57,53,50,52,57,53,53,32,97,52,57,53,49,52,57,53,54,32,97,52,57,53,48,52,57,53,55,32,97,52,57,52,57,52,57,53,56,32,97,52,57,52,56,52,57,53,57,41,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,57,52,52,32,110,117,109,52,57,52,53,32,118,97,108,52,57,52,54,32,99,104,97,110,52,57,52,55,41,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,54,56,32,97,52,57,54,55,52,57,55,48,32,97,52,57,54,54,52,57,55,49,32,97,52,57,54,53,52,57,55,50,32,97,52,57,54,52,52,57,55,51,32,97,52,57,54,51,52,57,55,52,41,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,57,54,48,32,118,97,108,52,57,54,49,32,99,104,97,110,52,57,54,50,41,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,57,54,32,97,52,57,56,50,52,57,56,53,32,97,52,57,56,49,52,57,56,54,32,97,52,57,56,48,52,57,56,55,32,97,52,57,55,57,52,57,56,56,32,97,52,57,55,56,52,57,56,57,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,52,57,55,53,32,118,97,108,52,57,55,54,32,99,104,97,110,52,57,55,55,41,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,54,50,52,32,97,52,57,57,55,53,48,48,48,32,97,52,57,57,54,53,48,48,49,32,97,52,57,57,53,53,48,48,50,32,97,52,57,57,52,53,48,48,51,32,97,52,57,57,51,53,48,48,52,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,52,57,57,48,32,118,97,108,52,57,57,49,32,99,104,97,110,52,57,57,50,41,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,54,53,50,32,97,53,48,48,54,53,48,49,48,41,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,48,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,17),40,97,50,55,54,56,53,32,37,101,114,114,53,48,49,57,41,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,8),40,97,50,55,55,48,53,41};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,18),40,97,50,55,54,55,57,32,37,99,111,110,116,53,48,49,56,41,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,17),40,97,50,55,54,55,51,32,37,109,115,103,53,48,49,55,41,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,55,49,49,32,97,53,48,49,51,53,48,49,54,41,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,55,49,54,32,97,53,48,50,50,53,48,50,53,41,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,48,49,50,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,55,55,51,32,97,53,48,55,56,53,48,56,49,32,97,53,48,55,55,53,48,56,50,32,97,53,48,55,54,53,48,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,48,55,53,41,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,56,51,48,32,97,53,48,56,57,53,48,57,50,32,97,53,48,56,56,53,48,57,51,32,97,53,48,56,55,53,48,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,48,56,54,41,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,9),40,102,95,50,55,56,55,49,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,49,57,32,120,53,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,26),40,100,111,53,49,48,53,32,101,53,49,49,54,32,118,53,49,49,55,32,121,53,49,49,56,41,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,49,48,52,41,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,49,51,48,53,49,51,52,41,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,49,51,54,53,49,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,49,53,50,53,49,53,53,41,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,49,54,48,53,49,54,51,32,97,53,49,53,57,53,49,54,52,32,97,53,49,53,56,53,49,54,53,41};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,49,56,48,53,49,56,51,41,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,49,57,54,32,97,53,49,57,49,53,49,57,53,41,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,49,57,48,41};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,14),40,100,111,53,50,49,53,32,112,53,50,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,50,48,49,32,115,116,97,114,116,53,50,48,55,32,105,100,53,50,48,56,41,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,50,48,52,32,37,115,116,97,114,116,53,49,57,57,53,50,50,51,41,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,50,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,49,57,55,32,46,32,97,114,103,115,53,49,57,56,41,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,50,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,52,52,32,116,97,105,108,53,50,52,54,41,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,50,52,51,41,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,55,54,32,100,101,99,108,53,50,55,56,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,54,48,32,116,97,105,108,53,50,54,50,41,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,46),40,97,50,56,57,57,51,32,98,105,110,100,105,110,103,115,53,50,53,49,32,116,101,114,109,105,110,97,116,101,53,50,53,50,32,46,32,98,111,100,121,53,50,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,17),40,97,50,56,57,57,57,32,97,114,103,115,51,56,55,49,41,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,16),40,97,50,57,49,52,49,32,115,121,109,51,49,56,52,41};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,16),40,97,50,57,49,52,52,32,115,121,109,51,49,56,50,41};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,24),40,97,50,57,49,55,51,32,118,97,108,51,49,56,48,32,115,121,109,51,49,56,49,41};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,17),40,97,50,57,49,56,55,32,97,114,103,115,51,49,55,57,41,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,26),40,97,50,57,50,48,49,32,97,114,103,115,50,57,56,55,32,101,114,114,102,50,57,56,56,41,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,35),40,97,50,57,50,49,53,32,117,110,105,116,50,57,56,57,32,105,110,102,111,50,57,57,48,32,101,114,114,102,50,57,57,49,41,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,26),40,97,50,57,51,50,49,32,97,114,103,115,50,57,51,54,32,101,114,114,102,50,57,51,55,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,52,56,32,114,101,115,116,50,57,53,48,41,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,26),40,100,111,50,57,55,52,32,97,114,103,115,50,57,55,54,32,116,97,105,108,50,57,55,55,41,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,35),40,97,50,57,51,54,48,32,117,110,105,116,50,57,52,49,32,105,110,102,111,50,57,52,50,32,101,114,114,102,50,57,52,51,41,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,26),40,97,50,57,55,55,56,32,97,114,103,115,50,57,50,57,32,101,114,114,102,50,57,51,48,41,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,26),40,97,50,57,57,50,51,32,97,114,103,115,50,57,49,53,32,101,114,114,102,50,57,49,54,41,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,57,50,32,116,97,105,108,50,56,57,52,41,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,55,32,116,97,105,108,50,56,56,57,41,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,55,54,32,99,108,97,117,115,101,115,50,56,55,56,41,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,55,51,32,116,97,105,108,50,56,55,53,41,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,35),40,97,50,57,57,54,57,32,117,110,105,116,50,57,50,53,32,105,110,102,111,50,57,50,54,32,101,114,114,102,50,57,50,55,41,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,26),40,97,51,48,52,50,51,32,97,114,103,115,50,55,56,57,32,101,114,114,102,50,55,57,48,41,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,35),40,97,51,48,52,57,49,32,117,110,105,116,50,56,48,49,32,105,110,102,111,50,56,48,50,32,101,114,114,102,50,56,48,51,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,50,48,32,97,114,103,115,50,55,55,55,32,101,114,114,102,50,55,55,56,41,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,35),40,97,51,48,54,52,54,32,117,110,105,116,50,55,56,50,32,105,110,102,111,50,55,56,51,32,101,114,114,102,50,55,56,52,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,26),40,97,51,48,55,51,52,32,97,114,103,115,50,55,53,53,32,101,114,114,102,50,55,53,54,41,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,54,51,32,105,116,101,114,50,55,54,53,41,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,35),40,97,51,48,55,55,55,32,117,110,105,116,50,55,53,55,32,105,110,102,111,50,55,53,56,32,101,114,114,102,50,55,53,57,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,26),40,97,51,49,48,49,52,32,97,114,103,115,50,55,53,50,32,101,114,114,102,50,55,53,51,41,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,26),40,97,51,49,49,48,48,32,97,114,103,115,50,55,52,52,32,101,114,114,102,50,55,52,53,41,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,14),40,97,51,49,49,53,50,32,101,50,55,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,52,51,32,117,110,105,116,50,55,52,54,32,105,110,102,111,50,55,52,55,32,101,114,114,102,50,55,52,56,41,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,26),40,97,51,49,50,48,50,32,97,114,103,115,50,55,51,55,32,101,114,114,102,50,55,51,56,41,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,14),40,97,51,49,50,52,51,32,101,50,55,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,35),40,97,51,49,50,51,55,32,117,110,105,116,50,55,51,57,32,105,110,102,111,50,55,52,48,32,101,114,114,102,50,55,52,49,41,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,35),40,97,51,49,50,57,55,32,117,110,105,116,50,55,51,48,32,105,110,102,111,50,55,51,49,32,101,114,114,102,50,55,51,50,41,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,35),40,97,51,49,51,53,56,32,117,110,105,116,50,55,50,52,32,105,110,102,111,50,55,50,53,32,101,114,114,102,50,55,50,54,41,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,97,51,49,52,49,50,32,97,114,103,115,50,55,49,56,32,101,114,114,102,50,55,49,57,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,35),40,97,51,49,52,52,50,32,117,110,105,116,50,55,50,48,32,105,110,102,111,50,55,50,49,32,101,114,114,102,50,55,50,50,41,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,54,49,32,97,114,103,115,50,55,49,49,32,101,114,114,102,50,55,49,50,41,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,56,55,32,97,114,103,115,50,54,57,56,32,101,114,114,102,50,54,57,57,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,27),40,97,51,49,55,54,56,32,115,116,114,50,55,48,56,32,46,32,97,114,103,115,50,55,48,57,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,35),40,97,51,49,55,52,56,32,117,110,105,116,50,55,48,51,32,105,110,102,111,50,55,48,52,32,101,114,114,102,50,55,48,53,41,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,26),40,97,51,49,56,56,54,32,97,114,103,115,50,54,57,49,32,101,114,114,102,50,54,57,50,41,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,35),40,97,51,49,57,48,56,32,117,110,105,116,50,54,57,51,32,105,110,102,111,50,54,57,52,32,101,114,114,102,50,54,57,53,41,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,26),40,97,51,49,57,54,49,32,97,114,103,115,50,54,55,55,32,101,114,114,102,50,54,55,56,41,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,56,52,32,97,114,103,115,50,54,56,54,41,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,35),40,97,51,49,57,56,51,32,117,110,105,116,50,54,55,57,32,105,110,102,111,50,54,56,48,32,101,114,114,102,50,54,56,49,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,26),40,97,51,50,49,49,53,32,97,114,103,115,50,54,55,48,32,101,114,114,102,50,54,55,49,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,35),40,97,51,50,49,52,49,32,117,110,105,116,50,54,55,50,32,105,110,102,111,50,54,55,51,32,101,114,114,102,50,54,55,52,41,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,97,51,50,50,53,49,32,97,114,103,115,50,54,54,54,32,101,114,114,102,50,54,54,55,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,48,55,32,97,114,103,115,50,54,50,57,32,101,114,114,102,50,54,51,48,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,35),40,97,51,50,52,50,53,32,117,110,105,116,50,54,51,49,32,105,110,102,111,50,54,51,50,32,101,114,114,102,50,54,51,51,41,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,55,56,32,97,114,103,115,50,54,50,51,32,101,114,114,102,50,54,50,52,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,26),40,97,51,50,54,51,48,32,97,114,103,115,50,54,50,48,32,101,114,114,102,50,54,50,49,41,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,26),40,97,51,50,55,54,57,32,97,114,103,115,50,54,49,55,32,101,114,114,102,50,54,49,56,41,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,26),40,97,51,50,56,56,57,32,97,114,103,115,50,53,57,54,32,101,114,114,102,50,53,57,55,41,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,35),40,97,51,50,57,50,48,32,117,110,105,116,50,53,57,57,32,105,110,102,111,50,54,48,48,32,101,114,114,102,50,54,48,49,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,26),40,97,51,51,48,49,50,32,97,114,103,115,50,53,57,48,32,101,114,114,102,50,53,57,49,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,35),40,97,51,51,48,51,48,32,117,110,105,116,50,53,57,50,32,105,110,102,111,50,53,57,51,32,101,114,114,102,50,53,57,52,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,35),40,97,51,51,49,48,52,32,117,110,105,116,50,53,55,57,32,105,110,102,111,50,53,56,48,32,101,114,114,102,50,53,56,49,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,26),40,97,51,51,50,48,48,32,97,114,103,115,50,53,54,55,32,101,114,114,102,50,53,54,56,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,35),40,97,51,51,50,49,48,32,117,110,105,116,50,53,54,57,32,105,110,102,111,50,53,55,48,32,101,114,114,102,50,53,55,49,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,20),40,97,51,51,51,56,54,32,117,50,50,49,55,32,112,50,50,49,56,41,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,20),40,97,51,51,52,49,50,32,101,50,49,56,57,32,112,50,49,57,48,41,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,49,53,50,41,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,35),40,97,51,51,52,50,54,32,116,121,112,50,49,52,56,32,112,97,116,50,49,52,57,32,46,32,97,114,103,115,50,49,53,48,41,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,20),40,97,51,51,53,50,57,32,114,50,49,52,53,32,112,50,49,52,54,41,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,20),40,97,51,51,53,51,57,32,116,50,48,57,54,32,112,50,48,57,55,41,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,71),40,100,111,53,51,52,32,100,53,51,54,32,107,53,51,55,32,112,53,51,56,32,107,60,53,51,57,32,107,62,53,52,48,32,102,53,52,49,32,102,62,53,52,50,32,102,60,53,52,51,32,111,53,52,52,32,120,53,52,53,32,110,53,52,54,32,101,53,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,14),40,100,111,53,50,56,32,107,101,121,53,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,24),40,97,51,51,55,54,57,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,22),40,97,51,51,55,55,53,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,24),40,97,51,51,56,50,55,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k28199 */
static C_word C_fcall stub5192(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5192(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k28184 in hush in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
C_noret_decl(stub5186)
static void C_ccall stub5186(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5186(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28178 */
C_noret_decl(stub5181)
static void C_ccall stub5181(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5181(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28162 in cont in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
C_noret_decl(stub5176)
static void C_ccall stub5176(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5176(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28153 in pause in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
C_noret_decl(stub5172)
static void C_ccall stub5172(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5172(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28144 in paused? in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
C_noret_decl(stub5168)
static void C_ccall stub5168(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5168(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28138 */
C_noret_decl(stub5161)
static void C_ccall stub5161(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5161(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28118 in scheduler-set-time-milliseconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
C_noret_decl(stub5153)
static void C_ccall stub5153(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5153(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28109 in time-format in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
C_noret_decl(stub5148)
static void C_ccall stub5148(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5148(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5145(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5145(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5142(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5142(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k28090 in print-error in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub5137(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5137(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k28076 in print-message in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub5131(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5131(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_27871 in cs:clear in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub5097(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5097(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k27837 */
static C_word C_fcall stub5090(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5090(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k27780 */
static C_word C_fcall stub5079(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5079(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_27716 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub5023(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5023(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_27711 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub5014(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5014(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k27655 */
static C_word C_fcall stub5007(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5007(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k27643 */
static C_word C_fcall stub4998(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4998(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27615 */
static C_word C_fcall stub4983(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4983(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27587 */
static C_word C_fcall stub4968(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4968(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27559 */
static C_word C_fcall stub4953(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4953(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27531 */
static C_word C_fcall stub4937(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4937(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27503 */
static C_word C_fcall stub4921(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4921(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27475 */
static C_word C_fcall stub4905(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4905(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27447 */
static C_word C_fcall stub4890(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4890(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27419 */
static C_word C_fcall stub4873(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4873(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27388 */
static C_word C_fcall stub4855(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4855(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27365 */
static C_word C_fcall stub4844(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4844(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27343 */
static C_word C_fcall stub4833(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4833(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27323 */
static C_word C_fcall stub4823(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4823(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27288 */
static C_word C_fcall stub4810(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4810(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27272 */
static C_word C_fcall stub4802(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4802(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27244 */
static C_word C_fcall stub4789(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4789(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27221 */
static C_word C_fcall stub4778(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4778(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27202 */
static C_word C_fcall stub4767(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4767(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27179 */
static C_word C_fcall stub4756(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4756(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27160 */
static C_word C_fcall stub4746(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4746(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k27141 */
static C_word C_fcall stub4737(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4737(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k27126 */
static C_word C_fcall stub4728(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4728(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k27107 */
static C_word C_fcall stub4718(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4718(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k27092 */
static C_word C_fcall stub4710(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4710(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k27077 */
static C_word C_fcall stub4702(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4702(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k27059 */
static C_word C_fcall stub4694(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4694(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26632 */
static C_word C_fcall stub4679(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4679(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26589 */
static C_word C_fcall stub4600(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4600(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26162 */
static C_word C_fcall stub4585(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4585(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26119 */
static C_word C_fcall stub4506(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4506(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25692 */
static C_word C_fcall stub4491(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4491(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25649 */
static C_word C_fcall stub4412(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4412(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24947 */
static C_word C_fcall stub4396(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4396(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24901 */
static C_word C_fcall stub4280(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4280(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24199 */
static C_word C_fcall stub4264(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4264(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24153 */
static C_word C_fcall stub4148(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4148(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23726 */
static C_word C_fcall stub4133(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4133(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23683 */
static C_word C_fcall stub4054(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4054(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22981 */
static C_word C_fcall stub4038(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4038(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub316(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub316(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub313(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub313(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6713 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub306(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6703 */
static C_word C_fcall stub302(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6696 */
static C_word C_fcall stub296(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6685 */
static C_word C_fcall stub290(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub290(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6678 */
static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub279(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub279(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub276(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub276(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub273(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6658 */
static C_word C_fcall stub268(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub268(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6647 */
static C_word C_fcall stub262(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6636 */
static C_word C_fcall stub256(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6629 */
static C_word C_fcall stub252(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6619 */
static C_word C_fcall stub243(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub243(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6612 */
static C_word C_fcall stub239(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub239(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6605 */
static C_word C_fcall stub234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6598 */
static C_word C_fcall stub230(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub230(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6591 */
static C_word C_fcall stub225(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub225(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6584 */
static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6569 */
static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6558 */
static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6547 */
static C_word C_fcall stub198(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub198(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6540 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6513 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k5965 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5947 in cwd in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5340)
static void C_ccall f_5340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5343)
static void C_ccall f_5343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5346)
static void C_ccall f_5346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5349)
static void C_ccall f_5349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33828)
static void C_ccall f_33828(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33828)
static void C_ccall f_33828r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5640)
static void C_ccall f_5640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5644)
static void C_ccall f_5644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33776)
static void C_ccall f_33776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33823)
static void C_ccall f_33823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33813)
static void C_ccall f_33813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33780)
static void C_ccall f_33780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5647)
static void C_ccall f_5647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33770)
static void C_ccall f_33770(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33770)
static void C_ccall f_33770r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5940)
static void C_ccall f_5940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8109)
static void C_ccall f_8109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33554)
static void C_fcall f_33554(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33768)
static void C_ccall f_33768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33588)
static void C_ccall f_33588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33600)
static void C_ccall f_33600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33604)
static void C_ccall f_33604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33608)
static void C_ccall f_33608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33752)
static void C_ccall f_33752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33614)
static void C_fcall f_33614(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_33634)
static void C_fcall f_33634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33637)
static void C_fcall f_33637(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33645)
static void C_ccall f_33645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33652)
static void C_ccall f_33652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33655)
static void C_ccall f_33655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33659)
static void C_ccall f_33659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33666)
static void C_ccall f_33666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33669)
static void C_ccall f_33669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33673)
static void C_ccall f_33673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33680)
static void C_ccall f_33680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33624)
static void C_ccall f_33624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33577)
static void C_ccall f_33577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33567)
static void C_ccall f_33567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33570)
static void C_ccall f_33570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8112)
static void C_ccall f_8112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33540)
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33548)
static void C_ccall f_33548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33552)
static void C_ccall f_33552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15847)
static void C_ccall f_15847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15898)
static void C_ccall f_15898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33530)
static void C_ccall f_33530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33538)
static void C_ccall f_33538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16003)
static void C_ccall f_16003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33427)
static void C_ccall f_33427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_33427)
static void C_ccall f_33427r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_33490)
static void C_ccall f_33490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33494)
static void C_ccall f_33494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33508)
static void C_fcall f_33508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33430)
static void C_fcall f_33430(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33450)
static void C_ccall f_33450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33454)
static void C_ccall f_33454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16006)
static void C_ccall f_16006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33413)
static void C_ccall f_33413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33421)
static void C_ccall f_33421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33425)
static void C_ccall f_33425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16199)
static void C_ccall f_16199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33387)
static void C_ccall f_33387(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33391)
static void C_ccall f_33391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33397)
static void C_ccall f_33397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33408)
static void C_ccall f_33408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33404)
static void C_ccall f_33404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16268)
static void C_ccall f_16268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33365)
static void C_ccall f_33365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17513)
static void C_ccall f_17513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33345)
static void C_ccall f_33345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17516)
static void C_ccall f_17516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33305)
static void C_ccall f_33305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17519)
static void C_ccall f_17519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33211)
static void C_ccall f_33211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33215)
static void C_ccall f_33215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33218)
static void C_ccall f_33218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33236)
static void C_ccall f_33236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33239)
static void C_ccall f_33239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33270)
static void C_ccall f_33270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33242)
static void C_fcall f_33242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33248)
static void C_ccall f_33248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33201)
static void C_ccall f_33201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33195)
static void C_ccall f_33195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17522)
static void C_ccall f_17522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33103)
static void C_ccall f_33103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33105)
static void C_ccall f_33105(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33109)
static void C_ccall f_33109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33112)
static void C_ccall f_33112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33115)
static void C_ccall f_33115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33155)
static void C_ccall f_33155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33147)
static void C_ccall f_33147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33118)
static void C_ccall f_33118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33121)
static void C_ccall f_33121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33124)
static void C_ccall f_33124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33095)
static void C_ccall f_33095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17525)
static void C_ccall f_17525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33067)
static void C_ccall f_33067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17528)
static void C_ccall f_17528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33031)
static void C_ccall f_33031(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33043)
static void C_ccall f_33043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33039)
static void C_ccall f_33039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33013)
static void C_ccall f_33013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33007)
static void C_ccall f_33007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17531)
static void C_ccall f_17531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32921)
static void C_ccall f_32921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32925)
static void C_ccall f_32925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32928)
static void C_ccall f_32928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32931)
static void C_ccall f_32931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32944)
static void C_ccall f_32944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32890)
static void C_ccall f_32890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32894)
static void C_ccall f_32894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32909)
static void C_ccall f_32909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32884)
static void C_ccall f_32884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17534)
static void C_ccall f_17534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32770)
static void C_ccall f_32770(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32786)
static void C_ccall f_32786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32797)
static void C_ccall f_32797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32764)
static void C_ccall f_32764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17590)
static void C_ccall f_17590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32631)
static void C_ccall f_32631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32654)
static void C_ccall f_32654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32651)
static void C_ccall f_32651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32625)
static void C_ccall f_32625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17593)
static void C_ccall f_17593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32479)
static void C_ccall f_32479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32497)
static void C_ccall f_32497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32506)
static void C_ccall f_32506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32473)
static void C_ccall f_32473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17596)
static void C_ccall f_17596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32426)
static void C_ccall f_32426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32430)
static void C_ccall f_32430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32433)
static void C_ccall f_32433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32449)
static void C_ccall f_32449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32408)
static void C_ccall f_32408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32402)
static void C_ccall f_32402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17599)
static void C_ccall f_17599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32326)
static void C_ccall f_32326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17738)
static void C_ccall f_17738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32252)
static void C_ccall f_32252(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32259)
static void C_ccall f_32259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32246)
static void C_ccall f_32246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17741)
static void C_ccall f_17741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32142)
static void C_ccall f_32142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32150)
static void C_ccall f_32150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32116)
static void C_ccall f_32116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32133)
static void C_ccall f_32133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32124)
static void C_fcall f_32124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32110)
static void C_ccall f_32110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17744)
static void C_ccall f_17744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32066)
static void C_ccall f_32066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17747)
static void C_ccall f_17747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31984)
static void C_ccall f_31984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31995)
static void C_ccall f_31995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31997)
static void C_fcall f_31997(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32026)
static void C_ccall f_32026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31962)
static void C_ccall f_31962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31978)
static void C_ccall f_31978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31956)
static void C_ccall f_31956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17750)
static void C_ccall f_17750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31909)
static void C_ccall f_31909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31913)
static void C_ccall f_31913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31920)
static void C_ccall f_31920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31887)
static void C_ccall f_31887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31903)
static void C_ccall f_31903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31881)
static void C_ccall f_31881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17753)
static void C_ccall f_17753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31749)
static void C_ccall f_31749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31789)
static void C_ccall f_31789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31753)
static void C_ccall f_31753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31769)
static void C_ccall f_31769(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31769)
static void C_ccall f_31769r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_31781)
static void C_ccall f_31781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31785)
static void C_ccall f_31785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31777)
static void C_ccall f_31777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31688)
static void C_ccall f_31688(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31735)
static void C_ccall f_31735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31695)
static void C_fcall f_31695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31706)
static void C_ccall f_31706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31682)
static void C_ccall f_31682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17756)
static void C_ccall f_17756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31662)
static void C_ccall f_31662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31656)
static void C_ccall f_31656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17759)
static void C_ccall f_17759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31636)
static void C_ccall f_31636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31640)
static void C_ccall f_31640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31628)
static void C_ccall f_31628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17762)
static void C_ccall f_17762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31608)
static void C_ccall f_31608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31612)
static void C_ccall f_31612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31600)
static void C_ccall f_31600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17765)
static void C_ccall f_17765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31580)
static void C_ccall f_31580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31584)
static void C_ccall f_31584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31572)
static void C_ccall f_31572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17768)
static void C_ccall f_17768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31552)
static void C_ccall f_31552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31556)
static void C_ccall f_31556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31544)
static void C_ccall f_31544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17771)
static void C_ccall f_17771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31443)
static void C_ccall f_31443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31413)
static void C_ccall f_31413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31437)
static void C_ccall f_31437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31407)
static void C_ccall f_31407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17774)
static void C_ccall f_17774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31357)
static void C_ccall f_31357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31359)
static void C_ccall f_31359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31363)
static void C_ccall f_31363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31391)
static void C_ccall f_31391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31383)
static void C_ccall f_31383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31379)
static void C_ccall f_31379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31366)
static void C_ccall f_31366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31349)
static void C_ccall f_31349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17777)
static void C_ccall f_17777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31296)
static void C_ccall f_31296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31298)
static void C_ccall f_31298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31302)
static void C_ccall f_31302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31333)
static void C_ccall f_31333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31325)
static void C_ccall f_31325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31321)
static void C_ccall f_31321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31305)
static void C_ccall f_31305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31308)
static void C_ccall f_31308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31288)
static void C_ccall f_31288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17780)
static void C_ccall f_17780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31238)
static void C_ccall f_31238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31252)
static void C_ccall f_31252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31244)
static void C_ccall f_31244(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31203)
static void C_ccall f_31203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31236)
static void C_ccall f_31236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31197)
static void C_ccall f_31197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17783)
static void C_ccall f_17783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31144)
static void C_ccall f_31144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31148)
static void C_ccall f_31148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31161)
static void C_ccall f_31161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31153)
static void C_ccall f_31153(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31101)
static void C_ccall f_31101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31134)
static void C_ccall f_31134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31095)
static void C_ccall f_31095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17786)
static void C_ccall f_17786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31015)
static void C_ccall f_31015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31009)
static void C_ccall f_31009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17789)
static void C_ccall f_17789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30778)
static void C_ccall f_30778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30782)
static void C_ccall f_30782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30790)
static void C_fcall f_30790(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30813)
static void C_ccall f_30813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30816)
static void C_ccall f_30816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30819)
static void C_ccall f_30819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30822)
static void C_ccall f_30822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30882)
static void C_ccall f_30882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30889)
static void C_ccall f_30889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30899)
static void C_ccall f_30899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30909)
static void C_ccall f_30909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30923)
static void C_ccall f_30923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30933)
static void C_ccall f_30933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30943)
static void C_ccall f_30943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30953)
static void C_ccall f_30953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30825)
static void C_fcall f_30825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30849)
static void C_fcall f_30849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30828)
static void C_fcall f_30828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30735)
static void C_ccall f_30735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30768)
static void C_ccall f_30768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30729)
static void C_ccall f_30729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17792)
static void C_ccall f_17792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30647)
static void C_ccall f_30647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30651)
static void C_ccall f_30651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30657)
static void C_ccall f_30657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30677)
static void C_ccall f_30677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30621)
static void C_ccall f_30621(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30631)
static void C_fcall f_30631(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30615)
static void C_ccall f_30615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17795)
static void C_ccall f_17795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30492)
static void C_ccall f_30492(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30496)
static void C_ccall f_30496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30424)
static void C_ccall f_30424(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30443)
static void C_ccall f_30443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30478)
static void C_ccall f_30478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_fcall f_30449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30453)
static void C_ccall f_30453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30467)
static void C_ccall f_30467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30456)
static void C_fcall f_30456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30437)
static void C_fcall f_30437(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30418)
static void C_ccall f_30418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17798)
static void C_ccall f_17798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30146)
static void C_ccall f_30146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18321)
static void C_ccall f_18321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30098)
static void C_ccall f_30098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30090)
static void C_ccall f_30090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18324)
static void C_ccall f_18324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29970)
static void C_ccall f_29970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18330)
static void C_ccall f_18330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18805)
static void C_ccall f_18805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18839)
static void C_ccall f_18839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18831)
static void C_ccall f_18831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18827)
static void C_ccall f_18827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18812)
static void C_ccall f_18812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18816)
static void C_ccall f_18816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18809)
static void C_ccall f_18809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18348)
static void C_fcall f_18348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18798)
static void C_ccall f_18798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18794)
static void C_ccall f_18794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18355)
static void C_fcall f_18355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18669)
static void C_fcall f_18669(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18690)
static void C_ccall f_18690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18692)
static void C_fcall f_18692(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18706)
static void C_ccall f_18706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18759)
static void C_ccall f_18759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18709)
static void C_fcall f_18709(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18744)
static void C_ccall f_18744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18712)
static void C_fcall f_18712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18725)
static void C_ccall f_18725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18737)
static void C_ccall f_18737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18729)
static void C_ccall f_18729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18715)
static void C_fcall f_18715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18679)
static void C_ccall f_18679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18358)
static void C_ccall f_18358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18633)
static void C_fcall f_18633(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18659)
static void C_ccall f_18659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18644)
static void C_ccall f_18644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18361)
static void C_ccall f_18361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18365)
static void C_ccall f_18365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18577)
static void C_fcall f_18577(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18587)
static void C_ccall f_18587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18590)
static void C_ccall f_18590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18611)
static void C_ccall f_18611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18593)
static void C_fcall f_18593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18597)
static void C_ccall f_18597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18368)
static void C_ccall f_18368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18371)
static void C_fcall f_18371(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18540)
static void C_ccall f_18540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18548)
static void C_ccall f_18548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18544)
static void C_ccall f_18544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18374)
static void C_fcall f_18374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18402)
static void C_ccall f_18402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18405)
static void C_ccall f_18405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18408)
static void C_ccall f_18408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18411)
static void C_ccall f_18411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18414)
static void C_ccall f_18414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18473)
static void C_ccall f_18473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29924)
static void C_ccall f_29924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29940)
static void C_ccall f_29940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29943)
static void C_ccall f_29943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29946)
static void C_fcall f_29946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29949)
static void C_fcall f_29949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29960)
static void C_ccall f_29960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29918)
static void C_ccall f_29918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18846)
static void C_ccall f_18846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29779)
static void C_ccall f_29779(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29818)
static void C_ccall f_29818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29792)
static void C_fcall f_29792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29773)
static void C_ccall f_29773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18849)
static void C_ccall f_18849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29361)
static void C_ccall f_29361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29365)
static void C_ccall f_29365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29377)
static void C_ccall f_29377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29435)
static void C_ccall f_29435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29438)
static void C_ccall f_29438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29441)
static void C_ccall f_29441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29653)
static void C_ccall f_29653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29591)
static void C_ccall f_29591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29625)
static void C_ccall f_29625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29600)
static void C_fcall f_29600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29611)
static void C_ccall f_29611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29607)
static void C_ccall f_29607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29450)
static void C_fcall f_29450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29528)
static void C_ccall f_29528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29569)
static void C_ccall f_29569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29573)
static void C_ccall f_29573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29577)
static void C_ccall f_29577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29532)
static void C_ccall f_29532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29536)
static void C_ccall f_29536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29563)
static void C_ccall f_29563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29539)
static void C_fcall f_29539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29453)
static void C_fcall f_29453(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29525)
static void C_ccall f_29525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29467)
static void C_ccall f_29467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29469)
static void C_fcall f_29469(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29517)
static void C_ccall f_29517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29488)
static void C_ccall f_29488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29505)
static void C_ccall f_29505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29491)
static void C_fcall f_29491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29484)
static void C_ccall f_29484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29456)
static void C_ccall f_29456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29386)
static void C_fcall f_29386(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29396)
static void C_ccall f_29396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29402)
static void C_ccall f_29402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29374)
static void C_ccall f_29374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29322)
static void C_ccall f_29322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29339)
static void C_ccall f_29339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29355)
static void C_ccall f_29355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29333)
static void C_fcall f_29333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29316)
static void C_ccall f_29316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18852)
static void C_ccall f_18852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29240)
static void C_ccall f_29240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18855)
static void C_ccall f_18855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29216)
static void C_ccall f_29216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29228)
static void C_ccall f_29228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29224)
static void C_ccall f_29224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29202)
static void C_ccall f_29202(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29210)
static void C_ccall f_29210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29196)
static void C_ccall f_29196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18858)
static void C_ccall f_18858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29188)
static void C_ccall f_29188(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22622)
static void C_ccall f_22622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22625)
static void C_ccall f_22625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22791)
static void C_ccall f_22791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22787)
static void C_ccall f_22787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22777)
static void C_fcall f_22777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22632)
static void C_ccall f_22632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22636)
static void C_ccall f_22636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22639)
static void C_fcall f_22639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22650)
static void C_ccall f_22650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22658)
static void C_ccall f_22658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22730)
static void C_ccall f_22730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22738)
static void C_ccall f_22738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22734)
static void C_ccall f_22734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22726)
static void C_ccall f_22726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22722)
static void C_ccall f_22722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22694)
static void C_ccall f_22694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22690)
static void C_ccall f_22690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22654)
static void C_ccall f_22654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19269)
static void C_ccall f_19269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29174)
static void C_ccall f_29174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19272)
static void C_ccall f_19272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29145)
static void C_ccall f_29145(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29149)
static void C_ccall f_29149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19275)
static void C_ccall f_19275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29142)
static void C_ccall f_29142(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19278)
static void C_ccall f_19278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29000)
static void C_ccall f_29000(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22804)
static void C_ccall f_22804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22936)
static void C_ccall f_22936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22807)
static void C_ccall f_22807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22818)
static void C_ccall f_22818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22826)
static void C_ccall f_22826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22850)
static void C_ccall f_22850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22853)
static void C_fcall f_22853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22861)
static void C_ccall f_22861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22869)
static void C_ccall f_22869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22889)
static void C_ccall f_22889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22885)
static void C_ccall f_22885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22865)
static void C_ccall f_22865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22857)
static void C_ccall f_22857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22846)
static void C_ccall f_22846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22822)
static void C_ccall f_22822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22798)
static void C_ccall f_22798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27720)
static void C_ccall f_27720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27723)
static void C_ccall f_27723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27726)
static void C_ccall f_27726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27729)
static void C_ccall f_27729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27732)
static void C_ccall f_27732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27735)
static void C_ccall f_27735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27738)
static void C_ccall f_27738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27741)
static void C_ccall f_27741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27744)
static void C_ccall f_27744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27747)
static void C_ccall f_27747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27750)
static void C_ccall f_27750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27875)
static void C_ccall f_27875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27878)
static void C_ccall f_27878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27881)
static void C_ccall f_27881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28994)
static void C_ccall f_28994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28994)
static void C_ccall f_28994r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_28548)
static void C_ccall f_28548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28551)
static void C_ccall f_28551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28829)
static void C_fcall f_28829(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28937)
static void C_ccall f_28937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28849)
static void C_fcall f_28849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28858)
static void C_fcall f_28858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28862)
static void C_ccall f_28862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28866)
static void C_ccall f_28866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28874)
static void C_fcall f_28874(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28870)
static void C_ccall f_28870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28839)
static void C_ccall f_28839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28554)
static void C_ccall f_28554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28557)
static void C_ccall f_28557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28560)
static void C_ccall f_28560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28563)
static void C_ccall f_28563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28566)
static void C_ccall f_28566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28823)
static void C_ccall f_28823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28722)
static void C_fcall f_28722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28729)
static void C_ccall f_28729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28731)
static void C_fcall f_28731(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28803)
static void C_ccall f_28803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28755)
static void C_fcall f_28755(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28758)
static void C_ccall f_28758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28779)
static void C_ccall f_28779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28745)
static void C_ccall f_28745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28569)
static void C_ccall f_28569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28711)
static void C_ccall f_28711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28699)
static void C_ccall f_28699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28695)
static void C_ccall f_28695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28576)
static void C_fcall f_28576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28533)
static void C_ccall f_28533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28992)
static void C_ccall f_28992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28523)
static void C_ccall f_28523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28186)
static void C_ccall f_28186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28527)
static void C_ccall f_28527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28465)
static void C_ccall f_28465(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28465)
static void C_ccall f_28465r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28483)
static void C_fcall f_28483(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28493)
static void C_ccall f_28493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28469)
static void C_ccall f_28469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28456)
static void C_ccall f_28456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28164)
static void C_ccall f_28164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28460)
static void C_ccall f_28460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28450)
static void C_ccall f_28450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28146)
static void C_ccall f_28146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28441)
static void C_ccall f_28441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28155)
static void C_ccall f_28155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28445)
static void C_ccall f_28445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28378)
static void C_ccall f_28378(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28378)
static void C_ccall f_28378r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28403)
static void C_fcall f_28403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28111)
static void C_ccall f_28111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28391)
static void C_ccall f_28391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28210)
static void C_ccall f_28210(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_28210)
static void C_ccall f_28210r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_28329)
static void C_fcall f_28329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28324)
static void C_fcall f_28324(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28212)
static void C_fcall f_28212(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28319)
static void C_ccall f_28319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28323)
static void C_ccall f_28323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28315)
static void C_ccall f_28315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28283)
static void C_fcall f_28283(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28308)
static void C_ccall f_28308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28312)
static void C_ccall f_28312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28293)
static void C_ccall f_28293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28272)
static void C_ccall f_28272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28242)
static void C_fcall f_28242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28214)
static void C_fcall f_28214(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28191)
static void C_ccall f_28191(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28196)
static void C_ccall f_28196(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28201)
static void C_ccall f_28201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28169)
static void C_fcall f_28169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28173)
static void C_ccall f_28173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28125)
static void C_fcall f_28125(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28129)
static void C_ccall f_28129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28116)
static void C_fcall f_28116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28120)
static void C_ccall f_28120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28104)
static void C_ccall f_28104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28101)
static void C_ccall f_28101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28087)
static void C_ccall f_28087(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28092)
static void C_ccall f_28092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28073)
static void C_ccall f_28073(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28078)
static void C_ccall f_28078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27883)
static void C_ccall f_27883(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27944)
static void C_ccall f_27944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27946)
static void C_fcall f_27946(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27956)
static void C_ccall f_27956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27975)
static void C_fcall f_27975(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28015)
static void C_ccall f_28015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28057)
static void C_ccall f_28057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28027)
static void C_ccall f_28027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28012)
static void C_fcall f_28012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27930)
static void C_ccall f_27930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27895)
static void C_ccall f_27895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27922)
static void C_ccall f_27922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27903)
static void C_ccall f_27903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27910)
static void C_ccall f_27910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27914)
static void C_ccall f_27914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27918)
static void C_ccall f_27918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27995)
static void C_ccall f_27995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27973)
static void C_ccall f_27973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27959)
static void C_ccall f_27959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27962)
static void C_ccall f_27962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27937)
static void C_ccall f_27937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27866)
static void C_ccall f_27866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27871)
static void C_ccall f_27871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27809)
static void C_ccall f_27809(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27809)
static void C_ccall f_27809r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27842)
static void C_fcall f_27842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27822)
static void C_fcall f_27822(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27830)
static void C_ccall f_27830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27813)
static void C_ccall f_27813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27752)
static void C_ccall f_27752(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27752)
static void C_ccall f_27752r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27785)
static void C_fcall f_27785(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27765)
static void C_fcall f_27765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27773)
static void C_ccall f_27773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27756)
static void C_ccall f_27756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27662)
static void C_ccall f_27662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27716)
static void C_ccall f_27716(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27711)
static void C_ccall f_27711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27674)
static void C_ccall f_27674(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27680)
static void C_ccall f_27680(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27706)
static void C_ccall f_27706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27710)
static void C_ccall f_27710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27686)
static void C_ccall f_27686(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27704)
static void C_ccall f_27704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27701)
static void C_ccall f_27701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27697)
static void C_ccall f_27697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27690)
static void C_ccall f_27690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27647)
static void C_ccall f_27647(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27652)
static void C_ccall f_27652(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27619)
static void C_ccall f_27619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27624)
static void C_ccall f_27624(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27591)
static void C_ccall f_27591(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27596)
static void C_ccall f_27596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27563)
static void C_ccall f_27563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27568)
static void C_ccall f_27568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27535)
static void C_ccall f_27535(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27540)
static void C_ccall f_27540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27507)
static void C_ccall f_27507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27512)
static void C_ccall f_27512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27479)
static void C_ccall f_27479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27484)
static void C_ccall f_27484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27451)
static void C_ccall f_27451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27456)
static void C_ccall f_27456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27423)
static void C_ccall f_27423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27428)
static void C_ccall f_27428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27395)
static void C_ccall f_27395(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27400)
static void C_ccall f_27400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27372)
static void C_ccall f_27372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27377)
static void C_ccall f_27377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27376)
static void C_ccall f_27376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27353)
static void C_ccall f_27353(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27358)
static void C_ccall f_27358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27298)
static void C_ccall f_27298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27305)
static void C_ccall f_27305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27308)
static void C_ccall f_27308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27332)
static void C_ccall f_27332(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27312)
static void C_ccall f_27312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27302)
static void C_ccall f_27302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27251)
static void C_ccall f_27251(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27258)
static void C_ccall f_27258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27261)
static void C_ccall f_27261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27281)
static void C_ccall f_27281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27265)
static void C_ccall f_27265(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27228)
static void C_ccall f_27228(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27233)
static void C_ccall f_27233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27232)
static void C_ccall f_27232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27209)
static void C_ccall f_27209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27214)
static void C_ccall f_27214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27186)
static void C_ccall f_27186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27191)
static void C_ccall f_27191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27190)
static void C_ccall f_27190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27167)
static void C_ccall f_27167(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27172)
static void C_ccall f_27172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27148)
static void C_ccall f_27148(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27153)
static void C_ccall f_27153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27152)
static void C_ccall f_27152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27133)
static void C_ccall f_27133(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27138)
static void C_ccall f_27138(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27114)
static void C_ccall f_27114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27119)
static void C_ccall f_27119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27118)
static void C_ccall f_27118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27099)
static void C_ccall f_27099(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27104)
static void C_ccall f_27104(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27084)
static void C_ccall f_27084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27089)
static void C_ccall f_27089(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27066)
static void C_ccall f_27066(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27074)
static void C_ccall f_27074(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27070)
static void C_ccall f_27070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26596)
static void C_ccall f_26596(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26596)
static void C_ccall f_26596r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27024)
static void C_ccall f_27024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27039)
static void C_ccall f_27039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27031)
static void C_ccall f_27031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26995)
static void C_ccall f_26995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26999)
static void C_ccall f_26999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26960)
static void C_ccall f_26960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26964)
static void C_ccall f_26964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26925)
static void C_ccall f_26925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26929)
static void C_ccall f_26929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26600)
static void C_fcall f_26600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26889)
static void C_ccall f_26889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26904)
static void C_ccall f_26904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26896)
static void C_ccall f_26896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26860)
static void C_ccall f_26860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26864)
static void C_ccall f_26864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26825)
static void C_ccall f_26825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26829)
static void C_ccall f_26829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26790)
static void C_ccall f_26790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26794)
static void C_ccall f_26794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26603)
static void C_fcall f_26603(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26754)
static void C_ccall f_26754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26769)
static void C_ccall f_26769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26761)
static void C_ccall f_26761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26725)
static void C_ccall f_26725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26729)
static void C_ccall f_26729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26690)
static void C_ccall f_26690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26694)
static void C_ccall f_26694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26655)
static void C_ccall f_26655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26659)
static void C_ccall f_26659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26606)
static void C_fcall f_26606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26609)
static void C_ccall f_26609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26613)
static void C_ccall f_26613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26577)
static void C_ccall f_26577(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26582)
static void C_ccall f_26582(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26126)
static void C_ccall f_26126(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26126)
static void C_ccall f_26126r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26554)
static void C_ccall f_26554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26569)
static void C_ccall f_26569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26561)
static void C_ccall f_26561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26525)
static void C_ccall f_26525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26529)
static void C_ccall f_26529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26490)
static void C_ccall f_26490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26494)
static void C_ccall f_26494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26455)
static void C_ccall f_26455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26459)
static void C_ccall f_26459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26130)
static void C_fcall f_26130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26419)
static void C_ccall f_26419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26434)
static void C_ccall f_26434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26426)
static void C_ccall f_26426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26390)
static void C_ccall f_26390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26394)
static void C_ccall f_26394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26355)
static void C_ccall f_26355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26359)
static void C_ccall f_26359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26320)
static void C_ccall f_26320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26324)
static void C_ccall f_26324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26133)
static void C_fcall f_26133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26284)
static void C_ccall f_26284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26299)
static void C_ccall f_26299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26291)
static void C_ccall f_26291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26255)
static void C_ccall f_26255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26259)
static void C_ccall f_26259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26220)
static void C_ccall f_26220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26224)
static void C_ccall f_26224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26185)
static void C_ccall f_26185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26189)
static void C_ccall f_26189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26136)
static void C_fcall f_26136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26139)
static void C_ccall f_26139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26143)
static void C_ccall f_26143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26107)
static void C_ccall f_26107(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26112)
static void C_ccall f_26112(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25656)
static void C_ccall f_25656(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25656)
static void C_ccall f_25656r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26084)
static void C_ccall f_26084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26099)
static void C_ccall f_26099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26091)
static void C_ccall f_26091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26055)
static void C_ccall f_26055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26059)
static void C_ccall f_26059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26020)
static void C_ccall f_26020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26024)
static void C_ccall f_26024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25985)
static void C_ccall f_25985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25989)
static void C_ccall f_25989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25660)
static void C_fcall f_25660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25949)
static void C_ccall f_25949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25964)
static void C_ccall f_25964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25956)
static void C_ccall f_25956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25920)
static void C_ccall f_25920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25924)
static void C_ccall f_25924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25885)
static void C_ccall f_25885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25889)
static void C_ccall f_25889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25850)
static void C_ccall f_25850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25854)
static void C_ccall f_25854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25663)
static void C_fcall f_25663(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25814)
static void C_ccall f_25814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25829)
static void C_ccall f_25829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25821)
static void C_ccall f_25821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25785)
static void C_ccall f_25785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25789)
static void C_ccall f_25789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25750)
static void C_ccall f_25750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25754)
static void C_ccall f_25754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25715)
static void C_ccall f_25715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25719)
static void C_ccall f_25719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25666)
static void C_fcall f_25666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25669)
static void C_ccall f_25669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25673)
static void C_ccall f_25673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25637)
static void C_ccall f_25637(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25642)
static void C_ccall f_25642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24908)
static void C_ccall f_24908(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24908)
static void C_ccall f_24908r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25614)
static void C_ccall f_25614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25629)
static void C_ccall f_25629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25621)
static void C_ccall f_25621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25585)
static void C_ccall f_25585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25589)
static void C_ccall f_25589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25550)
static void C_ccall f_25550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25554)
static void C_ccall f_25554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25515)
static void C_ccall f_25515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25519)
static void C_ccall f_25519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25480)
static void C_ccall f_25480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25484)
static void C_ccall f_25484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24912)
static void C_fcall f_24912(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25444)
static void C_ccall f_25444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25459)
static void C_ccall f_25459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25451)
static void C_ccall f_25451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25415)
static void C_ccall f_25415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25419)
static void C_ccall f_25419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25380)
static void C_ccall f_25380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25384)
static void C_ccall f_25384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25345)
static void C_ccall f_25345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25349)
static void C_ccall f_25349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25310)
static void C_ccall f_25310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24915)
static void C_fcall f_24915(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25274)
static void C_ccall f_25274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25289)
static void C_ccall f_25289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25281)
static void C_ccall f_25281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25245)
static void C_ccall f_25245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25249)
static void C_ccall f_25249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25210)
static void C_ccall f_25210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25214)
static void C_ccall f_25214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25175)
static void C_ccall f_25175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25179)
static void C_ccall f_25179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25140)
static void C_ccall f_25140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25144)
static void C_ccall f_25144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24918)
static void C_fcall f_24918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25104)
static void C_ccall f_25104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25119)
static void C_ccall f_25119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25111)
static void C_ccall f_25111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25075)
static void C_ccall f_25075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25079)
static void C_ccall f_25079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25040)
static void C_ccall f_25040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25044)
static void C_ccall f_25044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25005)
static void C_ccall f_25005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25009)
static void C_ccall f_25009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24970)
static void C_ccall f_24970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24974)
static void C_ccall f_24974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24921)
static void C_fcall f_24921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24924)
static void C_ccall f_24924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24928)
static void C_ccall f_24928(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24889)
static void C_ccall f_24889(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24894)
static void C_ccall f_24894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24160)
static void C_ccall f_24160(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24160)
static void C_ccall f_24160r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24866)
static void C_ccall f_24866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24881)
static void C_ccall f_24881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24873)
static void C_ccall f_24873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24837)
static void C_ccall f_24837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24841)
static void C_ccall f_24841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24802)
static void C_ccall f_24802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24806)
static void C_ccall f_24806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24767)
static void C_ccall f_24767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24771)
static void C_ccall f_24771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24732)
static void C_ccall f_24732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24736)
static void C_ccall f_24736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24164)
static void C_fcall f_24164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24696)
static void C_ccall f_24696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24711)
static void C_ccall f_24711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24703)
static void C_ccall f_24703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24667)
static void C_ccall f_24667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24671)
static void C_ccall f_24671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24632)
static void C_ccall f_24632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24636)
static void C_ccall f_24636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24597)
static void C_ccall f_24597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24601)
static void C_ccall f_24601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24562)
static void C_ccall f_24562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24566)
static void C_ccall f_24566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24167)
static void C_fcall f_24167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24526)
static void C_ccall f_24526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24541)
static void C_ccall f_24541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24533)
static void C_ccall f_24533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24497)
static void C_ccall f_24497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24501)
static void C_ccall f_24501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24462)
static void C_ccall f_24462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24466)
static void C_ccall f_24466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24427)
static void C_ccall f_24427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24431)
static void C_ccall f_24431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24392)
static void C_ccall f_24392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24396)
static void C_ccall f_24396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24170)
static void C_fcall f_24170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24356)
static void C_ccall f_24356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24371)
static void C_ccall f_24371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24363)
static void C_ccall f_24363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24327)
static void C_ccall f_24327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24331)
static void C_ccall f_24331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24292)
static void C_ccall f_24292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24296)
static void C_ccall f_24296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24257)
static void C_ccall f_24257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24261)
static void C_ccall f_24261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24222)
static void C_ccall f_24222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24226)
static void C_ccall f_24226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24173)
static void C_fcall f_24173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24176)
static void C_ccall f_24176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24180)
static void C_ccall f_24180(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24141)
static void C_ccall f_24141(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24146)
static void C_ccall f_24146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23690)
static void C_ccall f_23690(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23690)
static void C_ccall f_23690r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24118)
static void C_ccall f_24118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24133)
static void C_ccall f_24133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24125)
static void C_ccall f_24125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24089)
static void C_ccall f_24089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24093)
static void C_ccall f_24093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24054)
static void C_ccall f_24054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24058)
static void C_ccall f_24058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24019)
static void C_ccall f_24019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24023)
static void C_ccall f_24023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23694)
static void C_fcall f_23694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23983)
static void C_ccall f_23983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23998)
static void C_ccall f_23998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23990)
static void C_ccall f_23990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23954)
static void C_ccall f_23954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23958)
static void C_ccall f_23958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23919)
static void C_ccall f_23919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23923)
static void C_ccall f_23923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23884)
static void C_ccall f_23884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23888)
static void C_ccall f_23888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23697)
static void C_fcall f_23697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23848)
static void C_ccall f_23848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23863)
static void C_ccall f_23863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23855)
static void C_ccall f_23855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23819)
static void C_ccall f_23819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23823)
static void C_ccall f_23823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23784)
static void C_ccall f_23784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23788)
static void C_ccall f_23788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23749)
static void C_ccall f_23749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23753)
static void C_ccall f_23753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23700)
static void C_fcall f_23700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23703)
static void C_ccall f_23703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23707)
static void C_ccall f_23707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23671)
static void C_ccall f_23671(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23676)
static void C_ccall f_23676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22942)
static void C_ccall f_22942(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22942)
static void C_ccall f_22942r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23648)
static void C_ccall f_23648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23663)
static void C_ccall f_23663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23655)
static void C_ccall f_23655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23619)
static void C_ccall f_23619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23623)
static void C_ccall f_23623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23584)
static void C_ccall f_23584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23588)
static void C_ccall f_23588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23549)
static void C_ccall f_23549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23553)
static void C_ccall f_23553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23514)
static void C_ccall f_23514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23518)
static void C_ccall f_23518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22946)
static void C_fcall f_22946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23478)
static void C_ccall f_23478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23493)
static void C_ccall f_23493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23485)
static void C_ccall f_23485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23449)
static void C_ccall f_23449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23453)
static void C_ccall f_23453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23414)
static void C_ccall f_23414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23418)
static void C_ccall f_23418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23379)
static void C_ccall f_23379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23383)
static void C_ccall f_23383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23344)
static void C_ccall f_23344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23348)
static void C_ccall f_23348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22949)
static void C_fcall f_22949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23308)
static void C_ccall f_23308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23323)
static void C_ccall f_23323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23315)
static void C_ccall f_23315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23279)
static void C_ccall f_23279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23283)
static void C_ccall f_23283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23244)
static void C_ccall f_23244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23248)
static void C_ccall f_23248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23209)
static void C_ccall f_23209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23213)
static void C_ccall f_23213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23174)
static void C_ccall f_23174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23178)
static void C_ccall f_23178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22952)
static void C_fcall f_22952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23138)
static void C_ccall f_23138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23153)
static void C_ccall f_23153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23145)
static void C_ccall f_23145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23109)
static void C_ccall f_23109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23113)
static void C_ccall f_23113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23074)
static void C_ccall f_23074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23078)
static void C_ccall f_23078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23039)
static void C_ccall f_23039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23043)
static void C_ccall f_23043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23004)
static void C_ccall f_23004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23008)
static void C_ccall f_23008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22955)
static void C_fcall f_22955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22958)
static void C_ccall f_22958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22962)
static void C_ccall f_22962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22604)
static void C_fcall f_22604(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22444)
static void C_fcall f_22444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22479)
static void C_fcall f_22479(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22489)
static void C_fcall f_22489(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22493)
static void C_ccall f_22493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22496)
static void C_ccall f_22496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22557)
static void C_ccall f_22557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22548)
static void C_ccall f_22548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22499)
static void C_ccall f_22499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22518)
static void C_ccall f_22518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22525)
static void C_ccall f_22525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22502)
static void C_ccall f_22502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22508)
static void C_ccall f_22508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22477)
static void C_ccall f_22477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22452)
static void C_fcall f_22452(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22451)
static void C_ccall f_22451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22612)
static void C_fcall f_22612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22190)
static void C_ccall f_22190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22212)
static void C_ccall f_22212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22227)
static void C_ccall f_22227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22230)
static void C_fcall f_22230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22406)
static void C_ccall f_22406(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22400)
static void C_ccall f_22400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22233)
static void C_ccall f_22233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22382)
static void C_ccall f_22382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22236)
static void C_fcall f_22236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22239)
static void C_ccall f_22239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22375)
static void C_ccall f_22375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22363)
static void C_ccall f_22363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22259)
static void C_fcall f_22259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22266)
static void C_ccall f_22266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22336)
static void C_ccall f_22336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22322)
static void C_ccall f_22322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22330)
static void C_ccall f_22330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22269)
static void C_ccall f_22269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22308)
static void C_ccall f_22308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22272)
static void C_fcall f_22272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22301)
static void C_ccall f_22301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22278)
static void C_ccall f_22278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22281)
static void C_ccall f_22281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22285)
static void C_ccall f_22285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22246)
static void C_fcall f_22246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22249)
static void C_ccall f_22249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22059)
static void C_fcall f_22059(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22068)
static void C_fcall f_22068(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22016)
static void C_ccall f_22016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22022)
static void C_fcall f_22022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22085)
static void C_ccall f_22085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22171)
static void C_ccall f_22171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22158)
static void C_ccall f_22158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22166)
static void C_ccall f_22166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22088)
static void C_ccall f_22088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22092)
static void C_ccall f_22092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22135)
static void C_ccall f_22135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22097)
static void C_ccall f_22097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22063)
static void C_ccall f_22063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21958)
static void C_ccall f_21958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21965)
static void C_ccall f_21965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21996)
static void C_ccall f_21996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21992)
static void C_ccall f_21992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21984)
static void C_ccall f_21984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21867)
static void C_ccall f_21867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21874)
static void C_ccall f_21874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21942)
static void C_ccall f_21942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21885)
static void C_fcall f_21885(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21912)
static void C_ccall f_21912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21896)
static void C_ccall f_21896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21801)
static void C_ccall f_21801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21812)
static void C_ccall f_21812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21815)
static void C_fcall f_21815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21822)
static void C_ccall f_21822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21795)
static void C_ccall f_21795(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21249)
static void C_ccall f_21249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21280)
static void C_ccall f_21280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21744)
static void C_ccall f_21744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21750)
static void C_ccall f_21750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21291)
static void C_ccall f_21291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21176)
static void C_fcall f_21176(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21201)
static void C_ccall f_21201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21136)
static void C_fcall f_21136(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21149)
static void C_fcall f_21149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21190)
static void C_ccall f_21190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21295)
static void C_ccall f_21295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21732)
static void C_ccall f_21732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21728)
static void C_fcall f_21728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21724)
static void C_ccall f_21724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21298)
static void C_ccall f_21298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21518)
static void C_fcall f_21518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21627)
static void C_ccall f_21627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21692)
static void C_ccall f_21692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21634)
static void C_fcall f_21634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21638)
static void C_ccall f_21638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21642)
static void C_ccall f_21642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21684)
static void C_ccall f_21684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21680)
static void C_ccall f_21680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21658)
static void C_ccall f_21658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21521)
static void C_fcall f_21521(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_fcall f_21524(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21423)
static void C_ccall f_21423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21506)
static void C_ccall f_21506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21473)
static void C_ccall f_21473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21499)
static void C_ccall f_21499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21481)
static void C_ccall f_21481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21429)
static void C_fcall f_21429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21469)
static void C_ccall f_21469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21411)
static void C_ccall f_21411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21382)
static void C_ccall f_21382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21404)
static void C_ccall f_21404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21390)
static void C_ccall f_21390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21344)
static void C_fcall f_21344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21301)
static void C_fcall f_21301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21312)
static void C_ccall f_21312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21316)
static void C_ccall f_21316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21320)
static void C_ccall f_21320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21324)
static void C_ccall f_21324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21308)
static void C_ccall f_21308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21268)
static void C_fcall f_21268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21263)
static void C_fcall f_21263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21258)
static void C_fcall f_21258(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21090)
static void C_ccall f_21090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21101)
static void C_ccall f_21101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21116)
static void C_ccall f_21116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21052)
static void C_ccall f_21052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21063)
static void C_ccall f_21063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21078)
static void C_ccall f_21078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20985)
static void C_ccall f_20985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21005)
static void C_fcall f_21005(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21015)
static void C_ccall f_21015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21028)
static void C_ccall f_21028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20996)
static void C_ccall f_20996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21003)
static void C_ccall f_21003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20792)
static void C_ccall f_20792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20852)
static void C_fcall f_20852(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20862)
static void C_ccall f_20862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20976)
static void C_ccall f_20976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20941)
static void C_ccall f_20941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20933)
static void C_ccall f_20933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20904)
static void C_ccall f_20904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20882)
static void C_ccall f_20882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20885)
static void C_ccall f_20885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20873)
static void C_ccall f_20873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20799)
static void C_ccall f_20799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20850)
static void C_ccall f_20850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20842)
static void C_ccall f_20842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20802)
static void C_ccall f_20802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20813)
static void C_ccall f_20813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20817)
static void C_ccall f_20817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20809)
static void C_ccall f_20809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20650)
static void C_ccall f_20650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20698)
static void C_fcall f_20698(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20708)
static void C_ccall f_20708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20719)
static void C_ccall f_20719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20756)
static void C_ccall f_20756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20731)
static void C_ccall f_20731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20722)
static void C_ccall f_20722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20660)
static void C_ccall f_20660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20696)
static void C_ccall f_20696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20667)
static void C_ccall f_20667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20299)
static void C_ccall f_20299(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20306)
static void C_ccall f_20306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20540)
static void C_fcall f_20540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20550)
static void C_ccall f_20550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20561)
static void C_ccall f_20561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20573)
static void C_fcall f_20573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20576)
static void C_ccall f_20576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20564)
static void C_ccall f_20564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20312)
static void C_ccall f_20312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20538)
static void C_ccall f_20538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20534)
static void C_ccall f_20534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20480)
static void C_fcall f_20480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20445)
static void C_fcall f_20445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20461)
static void C_fcall f_20461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20416)
static void C_fcall f_20416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20340)
static void C_ccall f_20340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20343)
static void C_ccall f_20343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20407)
static void C_ccall f_20407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20403)
static void C_ccall f_20403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20323)
static void C_fcall f_20323(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20334)
static void C_ccall f_20334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20330)
static void C_ccall f_20330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20252)
static void C_ccall f_20252(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20285)
static void C_ccall f_20285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20267)
static void C_ccall f_20267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20279)
static void C_ccall f_20279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19870)
static void C_ccall f_19870(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20079)
static void C_fcall f_20079(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20089)
static void C_ccall f_20089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20100)
static void C_ccall f_20100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20220)
static void C_ccall f_20220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20199)
static void C_ccall f_20199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20178)
static void C_ccall f_20178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20157)
static void C_ccall f_20157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20136)
static void C_ccall f_20136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20115)
static void C_ccall f_20115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20103)
static void C_ccall f_20103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19880)
static void C_ccall f_19880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19883)
static void C_fcall f_19883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20046)
static void C_fcall f_20046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19886)
static void C_fcall f_19886(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20037)
static void C_ccall f_20037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20017)
static void C_ccall f_20017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19889)
static void C_fcall f_19889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19982)
static void C_ccall f_19982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19999)
static void C_ccall f_19999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19892)
static void C_fcall f_19892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19931)
static void C_ccall f_19931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19965)
static void C_ccall f_19965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19949)
static void C_ccall f_19949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19934)
static void C_fcall f_19934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19899)
static void C_fcall f_19899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19910)
static void C_ccall f_19910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19914)
static void C_ccall f_19914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19906)
static void C_ccall f_19906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19788)
static void C_ccall f_19788(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19792)
static void C_ccall f_19792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19810)
static void C_ccall f_19810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19628)
static void C_fcall f_19628(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19636)
static void C_fcall f_19636(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19646)
static void C_ccall f_19646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19684)
static void C_ccall f_19684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19687)
static void C_ccall f_19687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19690)
static void C_ccall f_19690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19765)
static void C_fcall f_19765(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19775)
static void C_ccall f_19775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19693)
static void C_ccall f_19693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19696)
static void C_ccall f_19696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19699)
static void C_ccall f_19699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19719)
static void C_fcall f_19719(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19729)
static void C_ccall f_19729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19732)
static void C_ccall f_19732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19735)
static void C_ccall f_19735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19702)
static void C_ccall f_19702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19705)
static void C_ccall f_19705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19622)
static void C_fcall f_19622(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19616)
static void C_fcall f_19616(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19610)
static void C_fcall f_19610(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19539)
static void C_fcall f_19539(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19580)
static void C_ccall f_19580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19584)
static void C_ccall f_19584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19588)
static void C_ccall f_19588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19592)
static void C_ccall f_19592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19596)
static void C_ccall f_19596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19600)
static void C_ccall f_19600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19604)
static void C_ccall f_19604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19608)
static void C_ccall f_19608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19541)
static void C_fcall f_19541(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19547)
static void C_fcall f_19547(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19569)
static void C_ccall f_19569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19558)
static void C_ccall f_19558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19388)
static void C_fcall f_19388(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19403)
static void C_fcall f_19403(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19416)
static void C_ccall f_19416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19376)
static void C_ccall f_19376(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19364)
static void C_ccall f_19364(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19352)
static void C_ccall f_19352(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19346)
static void C_fcall f_19346(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19340)
static void C_ccall f_19340(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19328)
static void C_ccall f_19328(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19316)
static void C_ccall f_19316(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19304)
static void C_ccall f_19304(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19292)
static void C_ccall f_19292(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19286)
static void C_fcall f_19286(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19250)
static void C_ccall f_19250(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19244)
static void C_ccall f_19244(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19197)
static void C_ccall f_19197(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19201)
static void C_ccall f_19201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19217)
static void C_ccall f_19217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19226)
static void C_ccall f_19226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19204)
static void C_ccall f_19204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19188)
static void C_ccall f_19188(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19192)
static void C_ccall f_19192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19035)
static void C_ccall f_19035(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19035)
static void C_ccall f_19035r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_19162)
static void C_fcall f_19162(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19175)
static void C_ccall f_19175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19157)
static void C_ccall f_19157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19038)
static void C_fcall f_19038(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19154)
static void C_ccall f_19154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19138)
static void C_ccall f_19138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19066)
static void C_ccall f_19066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19074)
static void C_fcall f_19074(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19084)
static void C_ccall f_19084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19087)
static void C_ccall f_19087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19069)
static void C_ccall f_19069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18864)
static void C_ccall f_18864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_18870)
static void C_ccall f_18870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18873)
static void C_fcall f_18873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16673)
static void C_ccall f_16673(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16686)
static void C_ccall f_16686(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16693)
static void C_fcall f_16693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16700)
static void C_ccall f_16700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16679)
static void C_ccall f_16679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18877)
static void C_ccall f_18877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18911)
static void C_ccall f_18911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19004)
static void C_fcall f_19004(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19014)
static void C_fcall f_19014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18917)
static void C_ccall f_18917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18974)
static void C_fcall f_18974(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18984)
static void C_fcall f_18984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18925)
static void C_ccall f_18925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18939)
static void C_ccall f_18939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18943)
static void C_ccall f_18943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18947)
static void C_ccall f_18947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18951)
static void C_ccall f_18951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18958)
static void C_ccall f_18958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18935)
static void C_ccall f_18935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18928)
static void C_ccall f_18928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18880)
static void C_ccall f_18880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17800)
static void C_ccall f_17800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17813)
static void C_ccall f_17813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17863)
static void C_ccall f_17863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17960)
static void C_ccall f_17960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18028)
static void C_ccall f_18028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18285)
static void C_ccall f_18285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18035)
static void C_fcall f_18035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18273)
static void C_ccall f_18273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18224)
static void C_ccall f_18224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18230)
static void C_ccall f_18230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18254)
static void C_ccall f_18254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18250)
static void C_ccall f_18250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18238)
static void C_ccall f_18238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18038)
static void C_fcall f_18038(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18200)
static void C_ccall f_18200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18204)
static void C_ccall f_18204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18041)
static void C_fcall f_18041(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18177)
static void C_ccall f_18177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18181)
static void C_ccall f_18181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18044)
static void C_fcall f_18044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18154)
static void C_ccall f_18154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18158)
static void C_ccall f_18158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18047)
static void C_fcall f_18047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18079)
static void C_ccall f_18079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18097)
static void C_ccall f_18097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18115)
static void C_ccall f_18115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18133)
static void C_ccall f_18133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18050)
static void C_fcall f_18050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18054)
static void C_ccall f_18054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17964)
static void C_ccall f_17964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17968)
static void C_ccall f_17968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17972)
static void C_ccall f_17972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17867)
static void C_ccall f_17867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17871)
static void C_ccall f_17871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17875)
static void C_ccall f_17875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17894)
static void C_ccall f_17894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17898)
static void C_ccall f_17898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17878)
static void C_fcall f_17878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17882)
static void C_ccall f_17882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17817)
static void C_ccall f_17817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17821)
static void C_ccall f_17821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17825)
static void C_ccall f_17825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17807)
static void C_fcall f_17807(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17622)
static void C_fcall f_17622(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17634)
static void C_fcall f_17634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17653)
static void C_ccall f_17653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17671)
static void C_fcall f_17671(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17703)
static void C_ccall f_17703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17706)
static void C_fcall f_17706(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17699)
static void C_ccall f_17699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17685)
static void C_ccall f_17685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17656)
static void C_ccall f_17656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17601)
static void C_fcall f_17601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17608)
static void C_ccall f_17608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17611)
static void C_ccall f_17611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17617)
static void C_ccall f_17617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17536)
static void C_fcall f_17536(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17545)
static void C_fcall f_17545(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17568)
static void C_ccall f_17568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17558)
static void C_fcall f_17558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17492)
static void C_fcall f_17492(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17480)
static void C_fcall f_17480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17378)
static void C_fcall f_17378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17330)
static void C_fcall f_17330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16711)
static void C_fcall f_16711(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16715)
static void C_ccall f_16715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16718)
static void C_ccall f_16718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17144)
static void C_ccall f_17144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17140)
static void C_ccall f_17140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17136)
static void C_ccall f_17136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16721)
static void C_fcall f_16721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16844)
static void C_ccall f_16844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16077)
static void C_ccall f_16077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16850)
static void C_fcall f_16850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16093)
static void C_ccall f_16093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16938)
static void C_fcall f_16938(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17008)
static void C_ccall f_17008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16109)
static void C_ccall f_16109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17011)
static void C_fcall f_17011(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16141)
static void C_ccall f_16141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17089)
static void C_fcall f_17089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17115)
static void C_ccall f_17115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17109)
static void C_ccall f_17109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17098)
static void C_ccall f_17098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17040)
static void C_fcall f_17040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17050)
static void C_ccall f_17050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17076)
static void C_ccall f_17076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17070)
static void C_ccall f_17070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17053)
static void C_ccall f_17053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17063)
static void C_ccall f_17063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17056)
static void C_fcall f_17056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17017)
static void C_ccall f_17017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17026)
static void C_ccall f_17026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17020)
static void C_fcall f_17020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16944)
static void C_ccall f_16944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16962)
static void C_fcall f_16962(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16995)
static void C_ccall f_16995(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16981)
static void C_ccall f_16981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16989)
static void C_ccall f_16989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16972)
static void C_ccall f_16972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16947)
static void C_ccall f_16947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16859)
static void C_ccall f_16859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16881)
static void C_fcall f_16881(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16928)
static void C_ccall f_16928(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16914)
static void C_ccall f_16914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16922)
static void C_ccall f_16922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16894)
static void C_ccall f_16894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16897)
static void C_fcall f_16897(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16862)
static void C_ccall f_16862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16879)
static void C_ccall f_16879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16865)
static void C_fcall f_16865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16730)
static void C_ccall f_16730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16736)
static void C_ccall f_16736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16794)
static void C_ccall f_16794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16797)
static void C_ccall f_16797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16818)
static void C_ccall f_16818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16829)
static void C_ccall f_16829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16808)
static void C_ccall f_16808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16742)
static void C_ccall f_16742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16752)
static void C_ccall f_16752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16788)
static void C_ccall f_16788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16758)
static void C_ccall f_16758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16773)
static void C_ccall f_16773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16777)
static void C_ccall f_16777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16781)
static void C_ccall f_16781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16765)
static void C_ccall f_16765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16607)
static void C_fcall f_16607(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16609)
static void C_ccall f_16609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16657)
static void C_ccall f_16657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16613)
static void C_ccall f_16613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16616)
static void C_fcall f_16616(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16621)
static void C_fcall f_16621(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16642)
static void C_ccall f_16642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16599)
static void C_fcall f_16599(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16601)
static void C_ccall f_16601(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16391)
static void C_fcall f_16391(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16408)
static void C_ccall f_16408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16412)
static void C_ccall f_16412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16358)
static void C_fcall f_16358(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16365)
static void C_ccall f_16365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16309)
static void C_ccall f_16309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16316)
static void C_ccall f_16316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16374)
static void C_ccall f_16374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16597)
static void C_ccall f_16597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16574)
static void C_ccall f_16574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16590)
static void C_ccall f_16590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16436)
static void C_ccall f_16436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16439)
static void C_ccall f_16439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16463)
static void C_ccall f_16463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16520)
static void C_ccall f_16520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16526)
static void C_ccall f_16526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16535)
static void C_ccall f_16535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16544)
static void C_ccall f_16544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16553)
static void C_ccall f_16553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16562)
static void C_ccall f_16562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16514)
static void C_ccall f_16514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16469)
static void C_ccall f_16469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16475)
static void C_ccall f_16475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16481)
static void C_ccall f_16481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16487)
static void C_ccall f_16487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16493)
static void C_ccall f_16493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16499)
static void C_ccall f_16499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16340)
static void C_fcall f_16340(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16347)
static void C_ccall f_16347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16330)
static void C_fcall f_16330(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16318)
static void C_fcall f_16318(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16286)
static void C_fcall f_16286(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16293)
static void C_ccall f_16293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16300)
static void C_ccall f_16300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16270)
static void C_fcall f_16270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16277)
static void C_ccall f_16277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16284)
static void C_ccall f_16284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16258)
static void C_fcall f_16258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16240)
static void C_fcall f_16240(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16222)
static void C_fcall f_16222(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16207)
static void C_fcall f_16207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16201)
static void C_fcall f_16201(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16189)
static void C_fcall f_16189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16171)
static void C_fcall f_16171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16150)
static void C_fcall f_16150(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16118)
static void C_fcall f_16118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16125)
static void C_ccall f_16125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16060)
static void C_fcall f_16060(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16068)
static void C_ccall f_16068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16050)
static void C_fcall f_16050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16058)
static void C_ccall f_16058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16044)
static void C_fcall f_16044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16032)
static void C_fcall f_16032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16029)
static void C_ccall f_16029(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16008)
static void C_fcall f_16008(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15921)
static void C_fcall f_15921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15900)
static void C_fcall f_15900(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_15890)
static void C_fcall f_15890(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15878)
static void C_fcall f_15878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15849)
static void C_ccall f_15849(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15837)
static void C_fcall f_15837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15819)
static void C_fcall f_15819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15801)
static void C_fcall f_15801(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15780)
static void C_ccall f_15780(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15686)
static void C_ccall f_15686(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15690)
static void C_ccall f_15690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15719)
static void C_ccall f_15719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15724)
static void C_fcall f_15724(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15749)
static void C_fcall f_15749(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15734)
static void C_ccall f_15734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15168)
static void C_ccall f_15168(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15168)
static void C_ccall f_15168r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15439)
static void C_ccall f_15439(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15443)
static void C_ccall f_15443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15448)
static void C_ccall f_15448(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15448)
static void C_ccall f_15448r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15654)
static void C_ccall f_15654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15669)
static void C_ccall f_15669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15661)
static void C_ccall f_15661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15625)
static void C_ccall f_15625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15629)
static void C_ccall f_15629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15590)
static void C_ccall f_15590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15594)
static void C_ccall f_15594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15452)
static void C_fcall f_15452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15554)
static void C_ccall f_15554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15569)
static void C_ccall f_15569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15561)
static void C_ccall f_15561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15529)
static void C_ccall f_15529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15490)
static void C_ccall f_15490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15494)
static void C_ccall f_15494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15455)
static void C_fcall f_15455(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15458)
static void C_ccall f_15458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15461)
static void C_fcall f_15461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15430)
static void C_ccall f_15430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15172)
static void C_ccall f_15172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15399)
static void C_ccall f_15399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15414)
static void C_ccall f_15414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15406)
static void C_ccall f_15406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15370)
static void C_ccall f_15370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15374)
static void C_ccall f_15374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15335)
static void C_ccall f_15335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15339)
static void C_ccall f_15339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15175)
static void C_fcall f_15175(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15299)
static void C_ccall f_15299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15314)
static void C_ccall f_15314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15306)
static void C_ccall f_15306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15270)
static void C_ccall f_15270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15274)
static void C_ccall f_15274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15235)
static void C_ccall f_15235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15239)
static void C_ccall f_15239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15178)
static void C_fcall f_15178(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15181)
static void C_ccall f_15181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15184)
static void C_ccall f_15184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15196)
static void C_ccall f_15196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15214)
static void C_ccall f_15214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15202)
static void C_ccall f_15202(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15190)
static void C_ccall f_15190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15105)
static void C_fcall f_15105(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14765)
static void C_ccall f_14765(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14947)
static void C_ccall f_14947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14951)
static void C_ccall f_14951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14953)
static void C_fcall f_14953(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14878)
static void C_fcall f_14878(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14888)
static void C_fcall f_14888(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14895)
static void C_fcall f_14895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14963)
static void C_ccall f_14963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14966)
static void C_ccall f_14966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14970)
static void C_ccall f_14970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14990)
static void C_fcall f_14990(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15006)
static void C_ccall f_15006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14973)
static void C_ccall f_14973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14768)
static void C_fcall f_14768(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14780)
static void C_fcall f_14780(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14816)
static void C_ccall f_14816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14836)
static void C_ccall f_14836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14841)
static void C_fcall f_14841(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14278)
static void C_ccall f_14278(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14278)
static void C_ccall f_14278r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14205)
static void C_fcall f_14205(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14050)
static void C_ccall f_14050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14056)
static void C_ccall f_14056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14141)
static void C_fcall f_14141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14068)
static void C_ccall f_14068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14084)
static void C_ccall f_14084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14088)
static void C_fcall f_14088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14091)
static void C_fcall f_14091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14071)
static void C_ccall f_14071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14082)
static void C_ccall f_14082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14222)
static void C_ccall f_14222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14759)
static void C_ccall f_14759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14282)
static void C_ccall f_14282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14728)
static void C_ccall f_14728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14743)
static void C_ccall f_14743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14735)
static void C_ccall f_14735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14699)
static void C_ccall f_14699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14703)
static void C_ccall f_14703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14664)
static void C_ccall f_14664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14668)
static void C_ccall f_14668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14629)
static void C_ccall f_14629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14633)
static void C_ccall f_14633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14285)
static void C_fcall f_14285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14593)
static void C_ccall f_14593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14608)
static void C_ccall f_14608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14600)
static void C_ccall f_14600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14564)
static void C_ccall f_14564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14568)
static void C_ccall f_14568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14529)
static void C_ccall f_14529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14533)
static void C_ccall f_14533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14494)
static void C_ccall f_14494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14498)
static void C_ccall f_14498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14288)
static void C_fcall f_14288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14458)
static void C_ccall f_14458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14473)
static void C_ccall f_14473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14465)
static void C_ccall f_14465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14429)
static void C_ccall f_14429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14433)
static void C_ccall f_14433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14394)
static void C_ccall f_14394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14398)
static void C_ccall f_14398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14359)
static void C_ccall f_14359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14363)
static void C_ccall f_14363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14291)
static void C_fcall f_14291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14294)
static void C_ccall f_14294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14297)
static void C_ccall f_14297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14330)
static void C_ccall f_14330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14338)
static void C_ccall f_14338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14303)
static void C_ccall f_14303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14316)
static void C_ccall f_14316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14306)
static void C_fcall f_14306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14309)
static void C_ccall f_14309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13845)
static void C_ccall f_13845(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13849)
static void C_ccall f_13849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13852)
static void C_ccall f_13852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13855)
static void C_ccall f_13855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14024)
static void C_ccall f_14024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14037)
static void C_ccall f_14037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14041)
static void C_ccall f_14041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13861)
static void C_ccall f_13861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14017)
static void C_ccall f_14017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13998)
static void C_ccall f_13998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14005)
static void C_ccall f_14005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14009)
static void C_ccall f_14009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13867)
static void C_fcall f_13867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13873)
static void C_ccall f_13873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13957)
static void C_ccall f_13957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13959)
static void C_fcall f_13959(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13981)
static void C_ccall f_13981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_ccall f_13988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13992)
static void C_ccall f_13992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13978)
static void C_fcall f_13978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13974)
static void C_ccall f_13974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13915)
static void C_ccall f_13915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13932)
static void C_fcall f_13932(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13942)
static void C_ccall f_13942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13918)
static void C_ccall f_13918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13877)
static void C_fcall f_13877(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13885)
static void C_ccall f_13885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13887)
static void C_fcall f_13887(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13908)
static void C_ccall f_13908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13733)
static void C_fcall f_13733(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13843)
static void C_ccall f_13843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13802)
static void C_fcall f_13802(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13835)
static void C_ccall f_13835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13831)
static void C_ccall f_13831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13816)
static void C_ccall f_13816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13740)
static void C_ccall f_13740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13748)
static void C_fcall f_13748(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13793)
static void C_ccall f_13793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13781)
static void C_ccall f_13781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13765)
static void C_ccall f_13765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12966)
static void C_ccall f_12966(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12966)
static void C_ccall f_12966r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13283)
static void C_ccall f_13283(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13290)
static void C_fcall f_13290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13695)
static void C_ccall f_13695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13710)
static void C_ccall f_13710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13702)
static void C_ccall f_13702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13666)
static void C_ccall f_13666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13670)
static void C_ccall f_13670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13631)
static void C_ccall f_13631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13635)
static void C_ccall f_13635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13596)
static void C_ccall f_13596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13600)
static void C_ccall f_13600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13293)
static void C_fcall f_13293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13560)
static void C_ccall f_13560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13575)
static void C_ccall f_13575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13567)
static void C_ccall f_13567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13531)
static void C_ccall f_13531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13535)
static void C_ccall f_13535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13496)
static void C_ccall f_13496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13500)
static void C_ccall f_13500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13461)
static void C_ccall f_13461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13465)
static void C_ccall f_13465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13296)
static void C_fcall f_13296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13425)
static void C_ccall f_13425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13440)
static void C_ccall f_13440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13432)
static void C_ccall f_13432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13396)
static void C_ccall f_13396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13400)
static void C_ccall f_13400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13361)
static void C_ccall f_13361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13365)
static void C_ccall f_13365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13326)
static void C_ccall f_13326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13330)
static void C_ccall f_13330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13299)
static void C_fcall f_13299(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13302)
static void C_ccall f_13302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12970)
static void C_ccall f_12970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12973)
static void C_ccall f_12973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13247)
static void C_ccall f_13247(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13251)
static void C_ccall f_13251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13254)
static void C_ccall f_13254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13257)
static void C_ccall f_13257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13260)
static void C_ccall f_13260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13273)
static void C_ccall f_13273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13263)
static void C_fcall f_13263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12979)
static void C_ccall f_12979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12986)
static void C_fcall f_12986(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13217)
static void C_ccall f_13217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13232)
static void C_ccall f_13232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13224)
static void C_ccall f_13224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13188)
static void C_ccall f_13188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13192)
static void C_ccall f_13192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13153)
static void C_ccall f_13153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13157)
static void C_ccall f_13157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12989)
static void C_fcall f_12989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13117)
static void C_ccall f_13117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13132)
static void C_ccall f_13132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13124)
static void C_ccall f_13124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13088)
static void C_ccall f_13088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13092)
static void C_ccall f_13092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13053)
static void C_ccall f_13053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13057)
static void C_ccall f_13057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12992)
static void C_fcall f_12992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12995)
static void C_ccall f_12995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13010)
static void C_ccall f_13010(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13032)
static void C_ccall f_13032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13016)
static void C_ccall f_13016(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13024)
static void C_ccall f_13024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_ccall f_12998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13001)
static void C_ccall f_13001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12883)
static void C_fcall f_12883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12874)
static void C_fcall f_12874(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12865)
static void C_fcall f_12865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12847)
static void C_fcall f_12847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12829)
static void C_fcall f_12829(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12811)
static void C_fcall f_12811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12802)
static void C_fcall f_12802(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12793)
static void C_fcall f_12793(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12571)
static void C_ccall f_12571(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12621)
static void C_ccall f_12621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12766)
static void C_ccall f_12766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12647)
static void C_ccall f_12647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12762)
static void C_ccall f_12762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12747)
static void C_ccall f_12747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12728)
static void C_ccall f_12728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12701)
static void C_ccall f_12701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12654)
static void C_ccall f_12654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12624)
static void C_fcall f_12624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12574)
static void C_ccall f_12574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12580)
static void C_fcall f_12580(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12596)
static void C_ccall f_12596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12599)
static void C_ccall f_12599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12097)
static void C_ccall f_12097(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12097)
static void C_ccall f_12097r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12561)
static void C_ccall f_12561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12101)
static void C_fcall f_12101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12533)
static void C_ccall f_12533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12548)
static void C_ccall f_12548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12540)
static void C_ccall f_12540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12504)
static void C_ccall f_12504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12508)
static void C_ccall f_12508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12469)
static void C_ccall f_12469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12473)
static void C_ccall f_12473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12434)
static void C_ccall f_12434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12438)
static void C_ccall f_12438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12104)
static void C_fcall f_12104(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12398)
static void C_ccall f_12398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12413)
static void C_ccall f_12413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12405)
static void C_ccall f_12405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12369)
static void C_ccall f_12369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12373)
static void C_ccall f_12373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12334)
static void C_ccall f_12334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12338)
static void C_ccall f_12338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12299)
static void C_ccall f_12299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12303)
static void C_ccall f_12303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12107)
static void C_fcall f_12107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12263)
static void C_ccall f_12263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12278)
static void C_ccall f_12278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12270)
static void C_ccall f_12270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12234)
static void C_ccall f_12234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12238)
static void C_ccall f_12238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12199)
static void C_ccall f_12199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12203)
static void C_ccall f_12203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12164)
static void C_ccall f_12164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12168)
static void C_ccall f_12168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12110)
static void C_fcall f_12110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12113)
static void C_ccall f_12113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12116)
static void C_ccall f_12116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12131)
static void C_ccall f_12131(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12143)
static void C_ccall f_12143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12122)
static void C_ccall f_12122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12125)
static void C_ccall f_12125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12021)
static void C_ccall f_12021(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12025)
static void C_ccall f_12025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12044)
static void C_ccall f_12044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12054)
static void C_ccall f_12054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12056)
static void C_fcall f_12056(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12073)
static void C_ccall f_12073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12076)
static void C_ccall f_12076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12087)
static void C_ccall f_12087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12028)
static void C_ccall f_12028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11758)
static void C_ccall f_11758(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11758)
static void C_ccall f_11758r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12011)
static void C_ccall f_12011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11762)
static void C_fcall f_11762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11983)
static void C_ccall f_11983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11998)
static void C_ccall f_11998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11990)
static void C_ccall f_11990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11954)
static void C_ccall f_11954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11958)
static void C_ccall f_11958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11919)
static void C_ccall f_11919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11923)
static void C_ccall f_11923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11765)
static void C_fcall f_11765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11883)
static void C_ccall f_11883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11898)
static void C_ccall f_11898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11890)
static void C_ccall f_11890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11854)
static void C_ccall f_11854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11858)
static void C_ccall f_11858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11819)
static void C_ccall f_11819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11823)
static void C_ccall f_11823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11768)
static void C_fcall f_11768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11771)
static void C_ccall f_11771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11774)
static void C_ccall f_11774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11786)
static void C_ccall f_11786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11798)
static void C_ccall f_11798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11780)
static void C_ccall f_11780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11722)
static void C_ccall f_11722(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11726)
static void C_ccall f_11726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11748)
static void C_ccall f_11748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11742)
static void C_ccall f_11742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11735)
static void C_ccall f_11735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11475)
static void C_ccall f_11475(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11475)
static void C_ccall f_11475r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11479)
static void C_fcall f_11479(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11692)
static void C_ccall f_11692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11707)
static void C_ccall f_11707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11699)
static void C_ccall f_11699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11663)
static void C_ccall f_11663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11667)
static void C_ccall f_11667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11628)
static void C_ccall f_11628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11632)
static void C_ccall f_11632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11482)
static void C_fcall f_11482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11592)
static void C_ccall f_11592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11607)
static void C_ccall f_11607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11599)
static void C_ccall f_11599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11563)
static void C_ccall f_11563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11567)
static void C_ccall f_11567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11528)
static void C_ccall f_11528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11532)
static void C_ccall f_11532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11485)
static void C_fcall f_11485(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11488)
static void C_ccall f_11488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11491)
static void C_ccall f_11491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11499)
static void C_ccall f_11499(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11507)
static void C_ccall f_11507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11497)
static void C_ccall f_11497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11260)
static void C_ccall f_11260(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11264)
static void C_ccall f_11264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11473)
static void C_ccall f_11473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11426)
static void C_ccall f_11426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11438)
static void C_fcall f_11438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11294)
static void C_ccall f_11294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11297)
static void C_ccall f_11297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11303)
static void C_ccall f_11303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11306)
static void C_ccall f_11306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11394)
static void C_fcall f_11394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11309)
static void C_fcall f_11309(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11388)
static void C_ccall f_11388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11315)
static void C_ccall f_11315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11318)
static void C_ccall f_11318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11270)
static void C_ccall f_11270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11273)
static void C_ccall f_11273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11280)
static void C_ccall f_11280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10790)
static void C_ccall f_10790(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10790)
static void C_ccall f_10790r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10794)
static void C_fcall f_10794(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11230)
static void C_ccall f_11230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11245)
static void C_ccall f_11245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11237)
static void C_ccall f_11237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11201)
static void C_ccall f_11201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11205)
static void C_ccall f_11205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11166)
static void C_ccall f_11166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11170)
static void C_ccall f_11170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11131)
static void C_ccall f_11131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11135)
static void C_ccall f_11135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10797)
static void C_fcall f_10797(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11095)
static void C_ccall f_11095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11110)
static void C_ccall f_11110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11102)
static void C_ccall f_11102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11066)
static void C_ccall f_11066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11070)
static void C_ccall f_11070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11031)
static void C_ccall f_11031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11035)
static void C_ccall f_11035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10996)
static void C_ccall f_10996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11000)
static void C_ccall f_11000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10800)
static void C_fcall f_10800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10960)
static void C_ccall f_10960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10975)
static void C_ccall f_10975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10967)
static void C_ccall f_10967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10931)
static void C_ccall f_10931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10935)
static void C_ccall f_10935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10896)
static void C_ccall f_10896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10900)
static void C_ccall f_10900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10861)
static void C_ccall f_10861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10865)
static void C_ccall f_10865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10803)
static void C_fcall f_10803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10806)
static void C_ccall f_10806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10809)
static void C_ccall f_10809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10832)
static void C_ccall f_10832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10840)
static void C_ccall f_10840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10815)
static void C_ccall f_10815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10818)
static void C_ccall f_10818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10710)
static void C_fcall f_10710(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10701)
static void C_fcall f_10701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10629)
static void C_ccall f_10629(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10633)
static void C_ccall f_10633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10636)
static void C_fcall f_10636(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10374)
static void C_ccall f_10374(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10374)
static void C_ccall f_10374r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10378)
static void C_fcall f_10378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10599)
static void C_ccall f_10599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10614)
static void C_ccall f_10614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10606)
static void C_ccall f_10606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10570)
static void C_ccall f_10570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10574)
static void C_ccall f_10574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10535)
static void C_ccall f_10535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10539)
static void C_ccall f_10539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10381)
static void C_fcall f_10381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10499)
static void C_ccall f_10499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10514)
static void C_ccall f_10514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10506)
static void C_ccall f_10506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10470)
static void C_ccall f_10470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10474)
static void C_ccall f_10474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10435)
static void C_ccall f_10435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10439)
static void C_ccall f_10439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10384)
static void C_fcall f_10384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10387)
static void C_ccall f_10387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10390)
static void C_ccall f_10390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10402)
static void C_ccall f_10402(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10414)
static void C_ccall f_10414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10396)
static void C_ccall f_10396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10259)
static void C_fcall f_10259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10372)
static void C_ccall f_10372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10269)
static void C_ccall f_10269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10357)
static void C_ccall f_10357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10368)
static void C_ccall f_10368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10364)
static void C_ccall f_10364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10272)
static void C_ccall f_10272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10354)
static void C_ccall f_10354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10280)
static void C_ccall f_10280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10344)
static void C_ccall f_10344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10289)
static void C_ccall f_10289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10308)
static void C_ccall f_10308(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10337)
static void C_ccall f_10337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10318)
static void C_ccall f_10318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10333)
static void C_ccall f_10333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10321)
static void C_ccall f_10321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10292)
static void C_ccall f_10292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10302)
static void C_ccall f_10302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10283)
static void C_fcall f_10283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10286)
static void C_ccall f_10286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10213)
static void C_fcall f_10213(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10204)
static void C_fcall f_10204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9903)
static void C_fcall f_9903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9910)
static void C_ccall f_9910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10199)
static void C_ccall f_10199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9913)
static void C_ccall f_9913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10184)
static void C_ccall f_10184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10176)
static void C_ccall f_10176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10168)
static void C_ccall f_10168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10171)
static void C_ccall f_10171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10139)
static void C_fcall f_10139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10162)
static void C_ccall f_10162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10145)
static void C_fcall f_10145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10149)
static void C_ccall f_10149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9916)
static void C_ccall f_9916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9922)
static void C_ccall f_9922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10014)
static void C_ccall f_10014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10126)
static void C_ccall f_10126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10133)
static void C_ccall f_10133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10037)
static void C_fcall f_10037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10039)
static void C_fcall f_10039(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10088)
static void C_fcall f_10088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10123)
static void C_ccall f_10123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10112)
static void C_ccall f_10112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10257)
static void C_ccall f_10257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10232)
static void C_ccall f_10232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10253)
static void C_ccall f_10253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10249)
static void C_ccall f_10249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10241)
static void C_ccall f_10241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10105)
static void C_ccall f_10105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10098)
static void C_ccall f_10098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10046)
static void C_ccall f_10046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10086)
static void C_ccall f_10086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10050)
static void C_ccall f_10050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10082)
static void C_ccall f_10082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10069)
static void C_ccall f_10069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10077)
static void C_ccall f_10077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10073)
static void C_ccall f_10073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10053)
static void C_fcall f_10053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10056)
static void C_ccall f_10056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10030)
static void C_ccall f_10030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10017)
static void C_ccall f_10017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10026)
static void C_ccall f_10026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10021)
static void C_ccall f_10021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9928)
static void C_ccall f_9928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10008)
static void C_ccall f_10008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9988)
static void C_ccall f_9988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9994)
static void C_ccall f_9994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10005)
static void C_ccall f_10005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9985)
static void C_ccall f_9985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9973)
static void C_ccall f_9973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9976)
static void C_ccall f_9976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9931)
static void C_ccall f_9931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9967)
static void C_ccall f_9967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9962)
static void C_ccall f_9962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9934)
static void C_ccall f_9934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9947)
static void C_ccall f_9947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9937)
static void C_fcall f_9937(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9940)
static void C_ccall f_9940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9943)
static void C_ccall f_9943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9780)
static void C_ccall f_9780(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9780)
static void C_ccall f_9780r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9839)
static void C_ccall f_9839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9849)
static void C_ccall f_9849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9851)
static void C_fcall f_9851(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9880)
static void C_ccall f_9880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9885)
static void C_ccall f_9885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9870)
static void C_fcall f_9870(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9801)
static void C_fcall f_9801(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9833)
static void C_ccall f_9833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9761)
static void C_ccall f_9761(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9768)
static void C_ccall f_9768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9775)
static void C_ccall f_9775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9742)
static void C_ccall f_9742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9749)
static void C_ccall f_9749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9756)
static void C_ccall f_9756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9562)
static void C_fcall f_9562(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_9566)
static void C_ccall f_9566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9569)
static void C_ccall f_9569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9572)
static void C_ccall f_9572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9575)
static void C_ccall f_9575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9732)
static void C_ccall f_9732(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9739)
static void C_ccall f_9739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9578)
static void C_ccall f_9578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9581)
static void C_fcall f_9581(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9587)
static void C_ccall f_9587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9593)
static void C_ccall f_9593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9656)
static void C_ccall f_9656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9670)
static void C_ccall f_9670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9596)
static void C_fcall f_9596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9599)
static void C_ccall f_9599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9605)
static void C_fcall f_9605(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9618)
static void C_ccall f_9618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9608)
static void C_ccall f_9608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9611)
static void C_ccall f_9611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9552)
static void C_fcall f_9552(C_word t0) C_noret;
C_noret_decl(f_9497)
static void C_fcall f_9497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9488)
static void C_fcall f_9488(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9371)
static void C_fcall f_9371(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9362)
static void C_fcall f_9362(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9353)
static void C_ccall f_9353(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9344)
static void C_fcall f_9344(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9335)
static void C_fcall f_9335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9317)
static void C_fcall f_9317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9308)
static void C_fcall f_9308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9299)
static void C_fcall f_9299(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9281)
static void C_fcall f_9281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9272)
static void C_fcall f_9272(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9263)
static void C_fcall f_9263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9248)
static void C_fcall f_9248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9203)
static void C_fcall f_9203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9185)
static void C_fcall f_9185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9176)
static void C_fcall f_9176(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9149)
static void C_fcall f_9149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9131)
static void C_fcall f_9131(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9113)
static void C_fcall f_9113(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9104)
static void C_fcall f_9104(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9092)
static void C_fcall f_9092(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8784)
static void C_ccall f_8784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8885)
static void C_ccall f_8885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8934)
static void C_ccall f_8934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8930)
static void C_ccall f_8930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8902)
static void C_ccall f_8902(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8837)
static void C_fcall f_8837(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8846)
static void C_fcall f_8846(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8830)
static void C_ccall f_8830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8649)
static void C_ccall f_8649(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8775)
static void C_ccall f_8775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8771)
static void C_ccall f_8771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8749)
static void C_ccall f_8749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8679)
static void C_fcall f_8679(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8695)
static void C_fcall f_8695(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8604)
static void C_ccall f_8604(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8647)
static void C_ccall f_8647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8636)
static void C_ccall f_8636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8488)
static void C_ccall f_8488(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8602)
static void C_ccall f_8602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8503)
static void C_fcall f_8503(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8533)
static void C_fcall f_8533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8552)
static void C_ccall f_8552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8537)
static void C_ccall f_8537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8516)
static void C_fcall f_8516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8366)
static void C_ccall f_8366(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8486)
static void C_ccall f_8486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8381)
static void C_fcall f_8381(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8411)
static void C_fcall f_8411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8430)
static void C_ccall f_8430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8415)
static void C_ccall f_8415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8394)
static void C_fcall f_8394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8269)
static void C_ccall f_8269(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8364)
static void C_ccall f_8364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8284)
static void C_fcall f_8284(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8330)
static void C_ccall f_8330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8315)
static void C_ccall f_8315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8297)
static void C_fcall f_8297(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8216)
static void C_fcall f_8216(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8254)
static void C_ccall f_8254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8261)
static void C_ccall f_8261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8239)
static void C_ccall f_8239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8214)
static void C_ccall f_8214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8186)
static void C_fcall f_8186(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8188)
static void C_ccall f_8188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8166)
static void C_ccall f_8166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8114)
static void C_fcall f_8114(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8151)
static void C_ccall f_8151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8118)
static void C_ccall f_8118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8134)
static void C_ccall f_8134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8136)
static void C_ccall f_8136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8086)
static void C_ccall f_8086(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8086)
static void C_ccall f_8086r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8067)
static void C_ccall f_8067(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8067)
static void C_ccall f_8067r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8026)
static void C_ccall f_8026(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8026)
static void C_ccall f_8026r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8007)
static void C_ccall f_8007(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8007)
static void C_ccall f_8007r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7779)
static void C_ccall f_7779(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7779)
static void C_ccall f_7779r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7984)
static void C_ccall f_7984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7999)
static void C_ccall f_7999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7991)
static void C_ccall f_7991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7955)
static void C_ccall f_7955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7959)
static void C_ccall f_7959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7920)
static void C_ccall f_7920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7924)
static void C_ccall f_7924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7783)
static void C_fcall f_7783(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7884)
static void C_ccall f_7884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7899)
static void C_ccall f_7899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7891)
static void C_ccall f_7891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7855)
static void C_ccall f_7855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7859)
static void C_ccall f_7859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7820)
static void C_ccall f_7820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7824)
static void C_ccall f_7824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7786)
static void C_fcall f_7786(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7789)
static void C_ccall f_7789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7792)
static void C_fcall f_7792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7548)
static void C_ccall f_7548(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7548)
static void C_ccall f_7548r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7753)
static void C_ccall f_7753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7768)
static void C_ccall f_7768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7760)
static void C_ccall f_7760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7724)
static void C_ccall f_7724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7728)
static void C_ccall f_7728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7689)
static void C_ccall f_7689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7693)
static void C_ccall f_7693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7552)
static void C_fcall f_7552(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7653)
static void C_ccall f_7653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7668)
static void C_ccall f_7668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7660)
static void C_ccall f_7660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7624)
static void C_ccall f_7624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7628)
static void C_ccall f_7628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7589)
static void C_ccall f_7589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7593)
static void C_ccall f_7593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7555)
static void C_fcall f_7555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7558)
static void C_ccall f_7558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7568)
static void C_ccall f_7568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7505)
static void C_ccall f_7505(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7505)
static void C_ccall f_7505r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7538)
static void C_ccall f_7538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7523)
static void C_ccall f_7523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7484)
static void C_ccall f_7484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7453)
static void C_ccall f_7453(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7453)
static void C_ccall f_7453r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7457)
static void C_fcall f_7457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7379)
static void C_ccall f_7379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7379)
static void C_ccall f_7379r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7386)
static void C_fcall f_7386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7395)
static void C_fcall f_7395(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7431)
static void C_ccall f_7431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7352)
static void C_ccall f_7352(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7352)
static void C_ccall f_7352r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7257)
static void C_ccall f_7257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7257)
static void C_ccall f_7257r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7261)
static void C_ccall f_7261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7264)
static void C_ccall f_7264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7276)
static void C_fcall f_7276(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7298)
static void C_ccall f_7298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7242)
static void C_ccall f_7242(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7227)
static void C_ccall f_7227(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6991)
static void C_ccall f_6991(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6991)
static void C_ccall f_6991r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7204)
static void C_ccall f_7204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7219)
static void C_ccall f_7219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7211)
static void C_ccall f_7211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7175)
static void C_ccall f_7175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7179)
static void C_ccall f_7179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7140)
static void C_ccall f_7140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7144)
static void C_ccall f_7144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6995)
static void C_fcall f_6995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7104)
static void C_ccall f_7104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7119)
static void C_ccall f_7119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7111)
static void C_ccall f_7111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7075)
static void C_ccall f_7075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7079)
static void C_ccall f_7079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7040)
static void C_ccall f_7040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7044)
static void C_ccall f_7044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6998)
static void C_fcall f_6998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7001)
static void C_ccall f_7001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7012)
static void C_ccall f_7012(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6972)
static void C_ccall f_6972(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6972)
static void C_ccall f_6972r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6951)
static void C_ccall f_6951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6963)
static void C_ccall f_6963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6925)
static void C_ccall f_6925(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6925)
static void C_ccall f_6925r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6883)
static void C_ccall f_6883(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6883)
static void C_ccall f_6883r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6868)
static void C_ccall f_6868(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6757)
static void C_ccall f_6757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6757)
static void C_ccall f_6757r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6832)
static void C_ccall f_6832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6761)
static void C_fcall f_6761(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6801)
static void C_ccall f_6801(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6790)
static void C_ccall f_6790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6775)
static void C_ccall f_6775(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6783)
static void C_ccall f_6783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6723)
static void C_ccall f_6723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6723)
static void C_ccall f_6723r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6735)
static void C_ccall f_6735(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6720)
static void C_ccall f_6720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6717)
static void C_ccall f_6717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6710)
static void C_fcall f_6710(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6707)
static void C_ccall f_6707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6700)
static void C_fcall f_6700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6682)
static void C_fcall f_6682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6671)
static void C_fcall f_6671(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6668)
static void C_ccall f_6668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6665)
static void C_ccall f_6665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6662)
static void C_ccall f_6662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6633)
static void C_fcall f_6633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6626)
static void C_fcall f_6626(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6623)
static void C_ccall f_6623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6602)
static void C_fcall f_6602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6595)
static void C_ccall f_6595(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6588)
static void C_ccall f_6588(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6573)
static void C_fcall f_6573(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6562)
static void C_fcall f_6562(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6551)
static void C_fcall f_6551(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6544)
static void C_ccall f_6544(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6517)
static void C_fcall f_6517(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6490)
static void C_fcall f_6490(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6449)
static void C_fcall f_6449(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6455)
static void C_fcall f_6455(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6465)
static void C_fcall f_6465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6363)
static void C_ccall f_6363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6363)
static void C_ccall f_6363r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6268)
static void C_ccall f_6268(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6268)
static void C_ccall f_6268r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6272)
static void C_ccall f_6272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6297)
static void C_fcall f_6297(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6314)
static void C_ccall f_6314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6318)
static void C_ccall f_6318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6274)
static void C_fcall f_6274(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6291)
static void C_ccall f_6291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6258)
static void C_ccall f_6258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6218)
static void C_ccall f_6218(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6218)
static void C_ccall f_6218r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6248)
static void C_ccall f_6248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6080)
static void C_ccall f_6080(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6114)
static void C_ccall f_6114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6057)
static void C_ccall f_6057(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6051)
static void C_ccall f_6051(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6036)
static void C_ccall f_6036(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6022)
static void C_ccall f_6022(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6012)
static void C_ccall f_6012(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6002)
static void C_ccall f_6002(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5992)
static void C_ccall f_5992(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5982)
static void C_ccall f_5982(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5953)
static void C_ccall f_5953(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5953)
static void C_ccall f_5953r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5962)
static void C_ccall f_5962(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5967)
static void C_ccall f_5967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5942)
static void C_ccall f_5942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5947)
static void C_ccall f_5947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5649)
static void C_ccall f_5649(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5659)
static void C_ccall f_5659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5910)
static void C_ccall f_5910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5662)
static void C_ccall f_5662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5665)
static void C_ccall f_5665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5680)
static void C_fcall f_5680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5690)
static void C_ccall f_5690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5692)
static void C_fcall f_5692(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5751)
static void C_ccall f_5751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5761)
static void C_ccall f_5761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5878)
static void C_ccall f_5878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5866)
static void C_ccall f_5866(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5864)
static void C_ccall f_5864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5851)
static void C_ccall f_5851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5805)
static void C_ccall f_5805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5832)
static void C_ccall f_5832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5811)
static void C_ccall f_5811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5745)
static void C_fcall f_5745(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5704)
static void C_fcall f_5704(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5717)
static void C_fcall f_5717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5927)
static void C_ccall f_5927(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5918)
static void C_ccall f_5918(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5926)
static void C_ccall f_5926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5929)
static void C_ccall f_5929(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5929)
static void C_ccall f_5929r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5937)
static void C_ccall f_5937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5351)
static void C_ccall f_5351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5604)
static void C_ccall f_5604(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5637)
static void C_ccall f_5637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5633)
static void C_ccall f_5633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5622)
static void C_ccall f_5622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5618)
static void C_ccall f_5618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5512)
static void C_ccall f_5512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5515)
static void C_ccall f_5515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5518)
static void C_ccall f_5518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5598)
static void C_ccall f_5598(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5423)
static void C_ccall f_5423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5364)
static void C_ccall f_5364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5521)
static void C_ccall f_5521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5528)
static void C_ccall f_5528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5588)
static void C_ccall f_5588(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5574)
static void C_ccall f_5574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5540)
static void C_ccall f_5540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5566)
static void C_ccall f_5566(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5501)
static void C_ccall f_5501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5548)
static void C_ccall f_5548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5544)
static void C_ccall f_5544(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_33554)
static void C_fcall trf_33554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33554(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33554(t0,t1,t2);}

C_noret_decl(trf_33614)
static void C_fcall trf_33614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33614(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_33614(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_33634)
static void C_fcall trf_33634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33634(t0,t1);}

C_noret_decl(trf_33637)
static void C_fcall trf_33637(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33637(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33637(t0,t1);}

C_noret_decl(trf_33508)
static void C_fcall trf_33508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33508(t0,t1);}

C_noret_decl(trf_33430)
static void C_fcall trf_33430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33430(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33430(t0,t1,t2);}

C_noret_decl(trf_33242)
static void C_fcall trf_33242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33242(t0,t1);}

C_noret_decl(trf_32124)
static void C_fcall trf_32124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32124(t0,t1);}

C_noret_decl(trf_31997)
static void C_fcall trf_31997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31997(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31997(t0,t1,t2);}

C_noret_decl(trf_31695)
static void C_fcall trf_31695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31695(t0,t1);}

C_noret_decl(trf_30790)
static void C_fcall trf_30790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30790(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30790(t0,t1,t2);}

C_noret_decl(trf_30825)
static void C_fcall trf_30825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30825(t0,t1);}

C_noret_decl(trf_30849)
static void C_fcall trf_30849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30849(t0,t1);}

C_noret_decl(trf_30828)
static void C_fcall trf_30828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30828(t0,t1);}

C_noret_decl(trf_30631)
static void C_fcall trf_30631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30631(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30631(t0,t1);}

C_noret_decl(trf_30449)
static void C_fcall trf_30449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30449(t0,t1);}

C_noret_decl(trf_30456)
static void C_fcall trf_30456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30456(t0,t1);}

C_noret_decl(trf_30437)
static void C_fcall trf_30437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30437(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30437(t0,t1);}

C_noret_decl(trf_18348)
static void C_fcall trf_18348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18348(t0,t1);}

C_noret_decl(trf_18355)
static void C_fcall trf_18355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18355(t0,t1);}

C_noret_decl(trf_18669)
static void C_fcall trf_18669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18669(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18669(t0,t1,t2);}

C_noret_decl(trf_18692)
static void C_fcall trf_18692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18692(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18692(t0,t1,t2);}

C_noret_decl(trf_18709)
static void C_fcall trf_18709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18709(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18709(t0,t1);}

C_noret_decl(trf_18712)
static void C_fcall trf_18712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18712(t0,t1);}

C_noret_decl(trf_18715)
static void C_fcall trf_18715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18715(t0,t1);}

C_noret_decl(trf_18633)
static void C_fcall trf_18633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18633(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18633(t0,t1,t2);}

C_noret_decl(trf_18577)
static void C_fcall trf_18577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18577(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18577(t0,t1,t2);}

C_noret_decl(trf_18593)
static void C_fcall trf_18593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18593(t0,t1);}

C_noret_decl(trf_18371)
static void C_fcall trf_18371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18371(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18371(t0,t1);}

C_noret_decl(trf_18374)
static void C_fcall trf_18374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18374(t0,t1);}

C_noret_decl(trf_29946)
static void C_fcall trf_29946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29946(t0,t1);}

C_noret_decl(trf_29949)
static void C_fcall trf_29949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29949(t0,t1);}

C_noret_decl(trf_29792)
static void C_fcall trf_29792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29792(t0,t1);}

C_noret_decl(trf_29600)
static void C_fcall trf_29600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29600(t0,t1);}

C_noret_decl(trf_29450)
static void C_fcall trf_29450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29450(t0,t1);}

C_noret_decl(trf_29539)
static void C_fcall trf_29539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29539(t0,t1);}

C_noret_decl(trf_29453)
static void C_fcall trf_29453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29453(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29453(t0,t1);}

C_noret_decl(trf_29469)
static void C_fcall trf_29469(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29469(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29469(t0,t1,t2,t3);}

C_noret_decl(trf_29491)
static void C_fcall trf_29491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29491(t0,t1);}

C_noret_decl(trf_29386)
static void C_fcall trf_29386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29386(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29386(t0,t1,t2);}

C_noret_decl(trf_29333)
static void C_fcall trf_29333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29333(t0,t1);}

C_noret_decl(trf_22777)
static void C_fcall trf_22777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22777(t0,t1);}

C_noret_decl(trf_22639)
static void C_fcall trf_22639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22639(t0,t1);}

C_noret_decl(trf_22853)
static void C_fcall trf_22853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22853(t0,t1);}

C_noret_decl(trf_28829)
static void C_fcall trf_28829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28829(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28829(t0,t1,t2);}

C_noret_decl(trf_28849)
static void C_fcall trf_28849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28849(t0,t1);}

C_noret_decl(trf_28858)
static void C_fcall trf_28858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28858(t0,t1);}

C_noret_decl(trf_28874)
static void C_fcall trf_28874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28874(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28874(t0,t1);}

C_noret_decl(trf_28722)
static void C_fcall trf_28722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28722(t0,t1);}

C_noret_decl(trf_28731)
static void C_fcall trf_28731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28731(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28731(t0,t1,t2);}

C_noret_decl(trf_28755)
static void C_fcall trf_28755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28755(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28755(t0,t1);}

C_noret_decl(trf_28576)
static void C_fcall trf_28576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28576(t0,t1);}

C_noret_decl(trf_28483)
static void C_fcall trf_28483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28483(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28483(t0,t1,t2);}

C_noret_decl(trf_28403)
static void C_fcall trf_28403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28403(t0,t1);}

C_noret_decl(trf_28329)
static void C_fcall trf_28329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28329(t0,t1);}

C_noret_decl(trf_28324)
static void C_fcall trf_28324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28324(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28324(t0,t1,t2);}

C_noret_decl(trf_28212)
static void C_fcall trf_28212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28212(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28212(t0,t1,t2,t3);}

C_noret_decl(trf_28283)
static void C_fcall trf_28283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28283(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28283(t0,t1,t2);}

C_noret_decl(trf_28242)
static void C_fcall trf_28242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28242(t0,t1);}

C_noret_decl(trf_28214)
static void C_fcall trf_28214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28214(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28214(t0,t1);}

C_noret_decl(trf_28169)
static void C_fcall trf_28169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28169(t0,t1);}

C_noret_decl(trf_28125)
static void C_fcall trf_28125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28125(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28125(t0,t1,t2,t3);}

C_noret_decl(trf_28116)
static void C_fcall trf_28116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28116(t0,t1);}

C_noret_decl(trf_27946)
static void C_fcall trf_27946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27946(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27946(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27975)
static void C_fcall trf_27975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27975(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27975(t0,t1,t2);}

C_noret_decl(trf_28012)
static void C_fcall trf_28012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28012(t0,t1);}

C_noret_decl(trf_27842)
static void C_fcall trf_27842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27842(t0,t1);}

C_noret_decl(trf_27822)
static void C_fcall trf_27822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27822(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27822(t0,t1);}

C_noret_decl(trf_27785)
static void C_fcall trf_27785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27785(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27785(t0,t1);}

C_noret_decl(trf_27765)
static void C_fcall trf_27765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27765(t0,t1);}

C_noret_decl(trf_26600)
static void C_fcall trf_26600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26600(t0,t1);}

C_noret_decl(trf_26603)
static void C_fcall trf_26603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26603(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26603(t0,t1);}

C_noret_decl(trf_26606)
static void C_fcall trf_26606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26606(t0,t1);}

C_noret_decl(trf_26130)
static void C_fcall trf_26130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26130(t0,t1);}

C_noret_decl(trf_26133)
static void C_fcall trf_26133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26133(t0,t1);}

C_noret_decl(trf_26136)
static void C_fcall trf_26136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26136(t0,t1);}

C_noret_decl(trf_25660)
static void C_fcall trf_25660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25660(t0,t1);}

C_noret_decl(trf_25663)
static void C_fcall trf_25663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25663(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25663(t0,t1);}

C_noret_decl(trf_25666)
static void C_fcall trf_25666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25666(t0,t1);}

C_noret_decl(trf_24912)
static void C_fcall trf_24912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24912(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24912(t0,t1);}

C_noret_decl(trf_24915)
static void C_fcall trf_24915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24915(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24915(t0,t1);}

C_noret_decl(trf_24918)
static void C_fcall trf_24918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24918(t0,t1);}

C_noret_decl(trf_24921)
static void C_fcall trf_24921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24921(t0,t1);}

C_noret_decl(trf_24164)
static void C_fcall trf_24164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24164(t0,t1);}

C_noret_decl(trf_24167)
static void C_fcall trf_24167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24167(t0,t1);}

C_noret_decl(trf_24170)
static void C_fcall trf_24170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24170(t0,t1);}

C_noret_decl(trf_24173)
static void C_fcall trf_24173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24173(t0,t1);}

C_noret_decl(trf_23694)
static void C_fcall trf_23694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23694(t0,t1);}

C_noret_decl(trf_23697)
static void C_fcall trf_23697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23697(t0,t1);}

C_noret_decl(trf_23700)
static void C_fcall trf_23700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23700(t0,t1);}

C_noret_decl(trf_22946)
static void C_fcall trf_22946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22946(t0,t1);}

C_noret_decl(trf_22949)
static void C_fcall trf_22949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22949(t0,t1);}

C_noret_decl(trf_22952)
static void C_fcall trf_22952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22952(t0,t1);}

C_noret_decl(trf_22955)
static void C_fcall trf_22955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22955(t0,t1);}

C_noret_decl(trf_22604)
static void C_fcall trf_22604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22604(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22604(t0,t1,t2,t3);}

C_noret_decl(trf_22444)
static void C_fcall trf_22444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22444(t0,t1);}

C_noret_decl(trf_22479)
static void C_fcall trf_22479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22479(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22479(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22489)
static void C_fcall trf_22489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22489(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22489(t0,t1);}

C_noret_decl(trf_22452)
static void C_fcall trf_22452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22452(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22452(t0,t1,t2);}

C_noret_decl(trf_22612)
static void C_fcall trf_22612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22612(t0,t1);}

C_noret_decl(trf_22230)
static void C_fcall trf_22230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22230(t0,t1);}

C_noret_decl(trf_22236)
static void C_fcall trf_22236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22236(t0,t1);}

C_noret_decl(trf_22259)
static void C_fcall trf_22259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22259(t0,t1);}

C_noret_decl(trf_22272)
static void C_fcall trf_22272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22272(t0,t1);}

C_noret_decl(trf_22246)
static void C_fcall trf_22246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22246(t0,t1);}

C_noret_decl(trf_22059)
static void C_fcall trf_22059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22059(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22059(t0,t1,t2,t3);}

C_noret_decl(trf_22068)
static void C_fcall trf_22068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22068(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22068(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22022)
static void C_fcall trf_22022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22022(t0,t1);}

C_noret_decl(trf_21885)
static void C_fcall trf_21885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21885(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21885(t0,t1);}

C_noret_decl(trf_21815)
static void C_fcall trf_21815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21815(t0,t1);}

C_noret_decl(trf_21176)
static void C_fcall trf_21176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21176(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21176(t0,t1,t2);}

C_noret_decl(trf_21136)
static void C_fcall trf_21136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21136(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21136(t0,t1,t2);}

C_noret_decl(trf_21149)
static void C_fcall trf_21149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21149(t0,t1);}

C_noret_decl(trf_21728)
static void C_fcall trf_21728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21728(t0,t1);}

C_noret_decl(trf_21518)
static void C_fcall trf_21518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21518(t0,t1);}

C_noret_decl(trf_21634)
static void C_fcall trf_21634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21634(t0,t1);}

C_noret_decl(trf_21521)
static void C_fcall trf_21521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21521(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21521(t0,t1);}

C_noret_decl(trf_21524)
static void C_fcall trf_21524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21524(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21524(t0,t1);}

C_noret_decl(trf_21429)
static void C_fcall trf_21429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21429(t0,t1);}

C_noret_decl(trf_21344)
static void C_fcall trf_21344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21344(t0,t1);}

C_noret_decl(trf_21301)
static void C_fcall trf_21301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21301(t0,t1);}

C_noret_decl(trf_21268)
static void C_fcall trf_21268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21268(t0,t1);}

C_noret_decl(trf_21263)
static void C_fcall trf_21263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21263(t0,t1);}

C_noret_decl(trf_21258)
static void C_fcall trf_21258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21258(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21258(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21005)
static void C_fcall trf_21005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21005(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21005(t0,t1);}

C_noret_decl(trf_20852)
static void C_fcall trf_20852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20852(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20852(t0,t1,t2,t3);}

C_noret_decl(trf_20698)
static void C_fcall trf_20698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20698(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20698(t0,t1,t2);}

C_noret_decl(trf_20540)
static void C_fcall trf_20540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20540(t0,t1,t2);}

C_noret_decl(trf_20573)
static void C_fcall trf_20573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20573(t0,t1);}

C_noret_decl(trf_20480)
static void C_fcall trf_20480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20480(t0,t1);}

C_noret_decl(trf_20445)
static void C_fcall trf_20445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20445(t0,t1);}

C_noret_decl(trf_20461)
static void C_fcall trf_20461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20461(t0,t1);}

C_noret_decl(trf_20416)
static void C_fcall trf_20416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20416(t0,t1);}

C_noret_decl(trf_20323)
static void C_fcall trf_20323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20323(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20323(t0,t1);}

C_noret_decl(trf_20079)
static void C_fcall trf_20079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20079(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20079(t0,t1,t2);}

C_noret_decl(trf_19883)
static void C_fcall trf_19883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19883(t0,t1);}

C_noret_decl(trf_20046)
static void C_fcall trf_20046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20046(t0,t1);}

C_noret_decl(trf_19886)
static void C_fcall trf_19886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19886(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19886(t0,t1);}

C_noret_decl(trf_19889)
static void C_fcall trf_19889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19889(t0,t1);}

C_noret_decl(trf_19892)
static void C_fcall trf_19892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19892(t0,t1);}

C_noret_decl(trf_19934)
static void C_fcall trf_19934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19934(t0,t1);}

C_noret_decl(trf_19899)
static void C_fcall trf_19899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19899(t0,t1);}

C_noret_decl(trf_19628)
static void C_fcall trf_19628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19628(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19628(t0,t1,t2,t3);}

C_noret_decl(trf_19636)
static void C_fcall trf_19636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19636(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19636(t0,t1,t2,t3);}

C_noret_decl(trf_19765)
static void C_fcall trf_19765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19765(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19765(t0,t1,t2);}

C_noret_decl(trf_19719)
static void C_fcall trf_19719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19719(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19719(t0,t1,t2);}

C_noret_decl(trf_19622)
static void C_fcall trf_19622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19622(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19622(t0,t1,t2);}

C_noret_decl(trf_19616)
static void C_fcall trf_19616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19616(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19616(t0,t1);}

C_noret_decl(trf_19610)
static void C_fcall trf_19610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19610(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19610(t0,t1,t2);}

C_noret_decl(trf_19539)
static void C_fcall trf_19539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19539(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19539(t0,t1,t2);}

C_noret_decl(trf_19541)
static void C_fcall trf_19541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19541(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19541(t0,t1,t2);}

C_noret_decl(trf_19547)
static void C_fcall trf_19547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19547(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19547(t0,t1,t2);}

C_noret_decl(trf_19388)
static void C_fcall trf_19388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19388(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19388(t0,t1);}

C_noret_decl(trf_19403)
static void C_fcall trf_19403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19403(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19403(t0,t1,t2);}

C_noret_decl(trf_19346)
static void C_fcall trf_19346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19346(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19346(t0,t1,t2);}

C_noret_decl(trf_19286)
static void C_fcall trf_19286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19286(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19286(t0,t1,t2);}

C_noret_decl(trf_19162)
static void C_fcall trf_19162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19162(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19162(t0,t1,t2);}

C_noret_decl(trf_19038)
static void C_fcall trf_19038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19038(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19038(t0,t1,t2,t3);}

C_noret_decl(trf_19074)
static void C_fcall trf_19074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19074(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19074(t0,t1,t2);}

C_noret_decl(trf_18873)
static void C_fcall trf_18873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18873(t0,t1);}

C_noret_decl(trf_16693)
static void C_fcall trf_16693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16693(t0,t1);}

C_noret_decl(trf_19004)
static void C_fcall trf_19004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19004(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19004(t0,t1,t2);}

C_noret_decl(trf_19014)
static void C_fcall trf_19014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19014(t0,t1);}

C_noret_decl(trf_18974)
static void C_fcall trf_18974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18974(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18974(t0,t1,t2);}

C_noret_decl(trf_18984)
static void C_fcall trf_18984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18984(t0,t1);}

C_noret_decl(trf_18035)
static void C_fcall trf_18035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18035(t0,t1);}

C_noret_decl(trf_18038)
static void C_fcall trf_18038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18038(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18038(t0,t1);}

C_noret_decl(trf_18041)
static void C_fcall trf_18041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18041(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18041(t0,t1);}

C_noret_decl(trf_18044)
static void C_fcall trf_18044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18044(t0,t1);}

C_noret_decl(trf_18047)
static void C_fcall trf_18047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18047(t0,t1);}

C_noret_decl(trf_18050)
static void C_fcall trf_18050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18050(t0,t1);}

C_noret_decl(trf_17878)
static void C_fcall trf_17878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17878(t0,t1);}

C_noret_decl(trf_17807)
static void C_fcall trf_17807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17807(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17807(t0,t1);}

C_noret_decl(trf_17622)
static void C_fcall trf_17622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17622(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17622(t0,t1);}

C_noret_decl(trf_17634)
static void C_fcall trf_17634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17634(t0,t1);}

C_noret_decl(trf_17671)
static void C_fcall trf_17671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17671(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17671(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17706)
static void C_fcall trf_17706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17706(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17706(t0,t1);}

C_noret_decl(trf_17601)
static void C_fcall trf_17601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17601(t0,t1);}

C_noret_decl(trf_17536)
static void C_fcall trf_17536(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17536(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17536(t0,t1,t2);}

C_noret_decl(trf_17545)
static void C_fcall trf_17545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17545(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17545(t0,t1,t2);}

C_noret_decl(trf_17558)
static void C_fcall trf_17558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17558(t0,t1);}

C_noret_decl(trf_17492)
static void C_fcall trf_17492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17492(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17492(t0,t1,t2);}

C_noret_decl(trf_17480)
static void C_fcall trf_17480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17480(t0,t1);}

C_noret_decl(trf_17378)
static void C_fcall trf_17378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17378(t0,t1);}

C_noret_decl(trf_17330)
static void C_fcall trf_17330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17330(t0,t1);}

C_noret_decl(trf_16711)
static void C_fcall trf_16711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16711(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_16711(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_16721)
static void C_fcall trf_16721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16721(t0,t1);}

C_noret_decl(trf_16850)
static void C_fcall trf_16850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16850(t0,t1);}

C_noret_decl(trf_16938)
static void C_fcall trf_16938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16938(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16938(t0,t1);}

C_noret_decl(trf_17011)
static void C_fcall trf_17011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17011(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17011(t0,t1);}

C_noret_decl(trf_17089)
static void C_fcall trf_17089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17089(t0,t1);}

C_noret_decl(trf_17040)
static void C_fcall trf_17040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17040(t0,t1);}

C_noret_decl(trf_17056)
static void C_fcall trf_17056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17056(t0,t1);}

C_noret_decl(trf_17020)
static void C_fcall trf_17020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17020(t0,t1);}

C_noret_decl(trf_16962)
static void C_fcall trf_16962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16962(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16962(t0,t1,t2);}

C_noret_decl(trf_16881)
static void C_fcall trf_16881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16881(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16881(t0,t1,t2);}

C_noret_decl(trf_16897)
static void C_fcall trf_16897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16897(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16897(t0,t1);}

C_noret_decl(trf_16865)
static void C_fcall trf_16865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16865(t0,t1);}

C_noret_decl(trf_16607)
static void C_fcall trf_16607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16607(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16607(t0,t1);}

C_noret_decl(trf_16616)
static void C_fcall trf_16616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16616(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16616(t0,t1);}

C_noret_decl(trf_16621)
static void C_fcall trf_16621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16621(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16621(t0,t1,t2);}

C_noret_decl(trf_16599)
static void C_fcall trf_16599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16599(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16599(t0,t1);}

C_noret_decl(trf_16391)
static void C_fcall trf_16391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16391(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16391(t0,t1,t2,t3);}

C_noret_decl(trf_16358)
static void C_fcall trf_16358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16358(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16358(t0,t1,t2,t3);}

C_noret_decl(trf_16340)
static void C_fcall trf_16340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16340(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16340(t0,t1,t2,t3);}

C_noret_decl(trf_16330)
static void C_fcall trf_16330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16330(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16330(t0,t1,t2,t3);}

C_noret_decl(trf_16318)
static void C_fcall trf_16318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16318(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16318(t0,t1,t2);}

C_noret_decl(trf_16286)
static void C_fcall trf_16286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16286(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16286(t0,t1,t2);}

C_noret_decl(trf_16270)
static void C_fcall trf_16270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16270(t0,t1);}

C_noret_decl(trf_16258)
static void C_fcall trf_16258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16258(t0,t1);}

C_noret_decl(trf_16240)
static void C_fcall trf_16240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16240(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16240(t0,t1);}

C_noret_decl(trf_16222)
static void C_fcall trf_16222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16222(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16222(t0,t1);}

C_noret_decl(trf_16207)
static void C_fcall trf_16207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16207(t0,t1);}

C_noret_decl(trf_16201)
static void C_fcall trf_16201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16201(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16201(t0,t1,t2,t3);}

C_noret_decl(trf_16189)
static void C_fcall trf_16189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16189(t0,t1);}

C_noret_decl(trf_16171)
static void C_fcall trf_16171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16171(t0,t1);}

C_noret_decl(trf_16150)
static void C_fcall trf_16150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16150(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16150(t0,t1,t2);}

C_noret_decl(trf_16118)
static void C_fcall trf_16118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16118(t0,t1);}

C_noret_decl(trf_16060)
static void C_fcall trf_16060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16060(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16060(t0,t1,t2);}

C_noret_decl(trf_16050)
static void C_fcall trf_16050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16050(t0,t1);}

C_noret_decl(trf_16044)
static void C_fcall trf_16044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16044(t0,t1);}

C_noret_decl(trf_16032)
static void C_fcall trf_16032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16032(t0,t1);}

C_noret_decl(trf_16008)
static void C_fcall trf_16008(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16008(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16008(t0,t1,t2);}

C_noret_decl(trf_15921)
static void C_fcall trf_15921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15921(t0,t1);}

C_noret_decl(trf_15900)
static void C_fcall trf_15900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15900(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_15900(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_15890)
static void C_fcall trf_15890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15890(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15890(t0,t1);}

C_noret_decl(trf_15878)
static void C_fcall trf_15878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15878(t0,t1);}

C_noret_decl(trf_15837)
static void C_fcall trf_15837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15837(t0,t1);}

C_noret_decl(trf_15819)
static void C_fcall trf_15819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15819(t0,t1);}

C_noret_decl(trf_15801)
static void C_fcall trf_15801(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15801(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15801(t0,t1);}

C_noret_decl(trf_15724)
static void C_fcall trf_15724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15724(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15724(t0,t1,t2);}

C_noret_decl(trf_15749)
static void C_fcall trf_15749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15749(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15749(t0,t1);}

C_noret_decl(trf_15452)
static void C_fcall trf_15452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15452(t0,t1);}

C_noret_decl(trf_15455)
static void C_fcall trf_15455(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15455(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15455(t0,t1);}

C_noret_decl(trf_15461)
static void C_fcall trf_15461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15461(t0,t1);}

C_noret_decl(trf_15175)
static void C_fcall trf_15175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15175(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15175(t0,t1);}

C_noret_decl(trf_15178)
static void C_fcall trf_15178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15178(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15178(t0,t1);}

C_noret_decl(trf_15105)
static void C_fcall trf_15105(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15105(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15105(t0,t1);}

C_noret_decl(trf_14953)
static void C_fcall trf_14953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14953(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14953(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14878)
static void C_fcall trf_14878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14878(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14878(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14888)
static void C_fcall trf_14888(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14888(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14888(t0,t1);}

C_noret_decl(trf_14895)
static void C_fcall trf_14895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14895(t0,t1);}

C_noret_decl(trf_14990)
static void C_fcall trf_14990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14990(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14990(t0,t1,t2);}

C_noret_decl(trf_14768)
static void C_fcall trf_14768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14768(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14768(t0,t1,t2,t3);}

C_noret_decl(trf_14780)
static void C_fcall trf_14780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14780(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14780(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14841)
static void C_fcall trf_14841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14841(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14841(t0,t1,t2);}

C_noret_decl(trf_14205)
static void C_fcall trf_14205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14205(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14205(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14141)
static void C_fcall trf_14141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14141(t0,t1);}

C_noret_decl(trf_14088)
static void C_fcall trf_14088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14088(t0,t1);}

C_noret_decl(trf_14091)
static void C_fcall trf_14091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14091(t0,t1);}

C_noret_decl(trf_14285)
static void C_fcall trf_14285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14285(t0,t1);}

C_noret_decl(trf_14288)
static void C_fcall trf_14288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14288(t0,t1);}

C_noret_decl(trf_14291)
static void C_fcall trf_14291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14291(t0,t1);}

C_noret_decl(trf_14306)
static void C_fcall trf_14306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14306(t0,t1);}

C_noret_decl(trf_13867)
static void C_fcall trf_13867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13867(t0,t1);}

C_noret_decl(trf_13959)
static void C_fcall trf_13959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13959(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13959(t0,t1,t2);}

C_noret_decl(trf_13978)
static void C_fcall trf_13978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13978(t0,t1);}

C_noret_decl(trf_13932)
static void C_fcall trf_13932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13932(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13932(t0,t1,t2);}

C_noret_decl(trf_13877)
static void C_fcall trf_13877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13877(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13877(t0,t1,t2);}

C_noret_decl(trf_13887)
static void C_fcall trf_13887(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13887(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13887(t0,t1,t2,t3);}

C_noret_decl(trf_13733)
static void C_fcall trf_13733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13733(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13733(t0,t1,t2);}

C_noret_decl(trf_13802)
static void C_fcall trf_13802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13802(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13802(t0,t1,t2);}

C_noret_decl(trf_13748)
static void C_fcall trf_13748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13748(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13748(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13290)
static void C_fcall trf_13290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13290(t0,t1);}

C_noret_decl(trf_13293)
static void C_fcall trf_13293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13293(t0,t1);}

C_noret_decl(trf_13296)
static void C_fcall trf_13296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13296(t0,t1);}

C_noret_decl(trf_13299)
static void C_fcall trf_13299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13299(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13299(t0,t1);}

C_noret_decl(trf_13263)
static void C_fcall trf_13263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13263(t0,t1);}

C_noret_decl(trf_12986)
static void C_fcall trf_12986(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12986(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12986(t0,t1);}

C_noret_decl(trf_12989)
static void C_fcall trf_12989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12989(t0,t1);}

C_noret_decl(trf_12992)
static void C_fcall trf_12992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12992(t0,t1);}

C_noret_decl(trf_12883)
static void C_fcall trf_12883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12883(t0,t1);}

C_noret_decl(trf_12874)
static void C_fcall trf_12874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12874(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12874(t0,t1,t2);}

C_noret_decl(trf_12865)
static void C_fcall trf_12865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12865(t0,t1);}

C_noret_decl(trf_12847)
static void C_fcall trf_12847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12847(t0,t1);}

C_noret_decl(trf_12829)
static void C_fcall trf_12829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12829(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12829(t0,t1);}

C_noret_decl(trf_12811)
static void C_fcall trf_12811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12811(t0,t1);}

C_noret_decl(trf_12802)
static void C_fcall trf_12802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12802(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12802(t0,t1,t2);}

C_noret_decl(trf_12793)
static void C_fcall trf_12793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12793(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12793(t0,t1);}

C_noret_decl(trf_12624)
static void C_fcall trf_12624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12624(t0,t1);}

C_noret_decl(trf_12580)
static void C_fcall trf_12580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12580(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12580(t0,t1,t2);}

C_noret_decl(trf_12101)
static void C_fcall trf_12101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12101(t0,t1);}

C_noret_decl(trf_12104)
static void C_fcall trf_12104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12104(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12104(t0,t1);}

C_noret_decl(trf_12107)
static void C_fcall trf_12107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12107(t0,t1);}

C_noret_decl(trf_12110)
static void C_fcall trf_12110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12110(t0,t1);}

C_noret_decl(trf_12056)
static void C_fcall trf_12056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12056(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12056(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11762)
static void C_fcall trf_11762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11762(t0,t1);}

C_noret_decl(trf_11765)
static void C_fcall trf_11765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11765(t0,t1);}

C_noret_decl(trf_11768)
static void C_fcall trf_11768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11768(t0,t1);}

C_noret_decl(trf_11479)
static void C_fcall trf_11479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11479(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11479(t0,t1);}

C_noret_decl(trf_11482)
static void C_fcall trf_11482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11482(t0,t1);}

C_noret_decl(trf_11485)
static void C_fcall trf_11485(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11485(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11485(t0,t1);}

C_noret_decl(trf_11438)
static void C_fcall trf_11438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11438(t0,t1);}

C_noret_decl(trf_11394)
static void C_fcall trf_11394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11394(t0,t1);}

C_noret_decl(trf_11309)
static void C_fcall trf_11309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11309(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11309(t0,t1);}

C_noret_decl(trf_10794)
static void C_fcall trf_10794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10794(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10794(t0,t1);}

C_noret_decl(trf_10797)
static void C_fcall trf_10797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10797(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10797(t0,t1);}

C_noret_decl(trf_10800)
static void C_fcall trf_10800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10800(t0,t1);}

C_noret_decl(trf_10803)
static void C_fcall trf_10803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10803(t0,t1);}

C_noret_decl(trf_10710)
static void C_fcall trf_10710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10710(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10710(t0,t1,t2);}

C_noret_decl(trf_10701)
static void C_fcall trf_10701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10701(t0,t1);}

C_noret_decl(trf_10636)
static void C_fcall trf_10636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10636(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10636(t0,t1);}

C_noret_decl(trf_10378)
static void C_fcall trf_10378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10378(t0,t1);}

C_noret_decl(trf_10381)
static void C_fcall trf_10381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10381(t0,t1);}

C_noret_decl(trf_10384)
static void C_fcall trf_10384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10384(t0,t1);}

C_noret_decl(trf_10259)
static void C_fcall trf_10259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10259(t0,t1);}

C_noret_decl(trf_10283)
static void C_fcall trf_10283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10283(t0,t1);}

C_noret_decl(trf_10213)
static void C_fcall trf_10213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10213(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10213(t0,t1,t2);}

C_noret_decl(trf_10204)
static void C_fcall trf_10204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10204(t0,t1);}

C_noret_decl(trf_9903)
static void C_fcall trf_9903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9903(t0,t1);}

C_noret_decl(trf_10139)
static void C_fcall trf_10139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10139(t0,t1);}

C_noret_decl(trf_10145)
static void C_fcall trf_10145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10145(t0,t1);}

C_noret_decl(trf_10037)
static void C_fcall trf_10037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10037(t0,t1);}

C_noret_decl(trf_10039)
static void C_fcall trf_10039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10039(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10039(t0,t1,t2,t3);}

C_noret_decl(trf_10088)
static void C_fcall trf_10088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10088(t0,t1);}

C_noret_decl(trf_10053)
static void C_fcall trf_10053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10053(t0,t1);}

C_noret_decl(trf_9937)
static void C_fcall trf_9937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9937(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9937(t0,t1);}

C_noret_decl(trf_9851)
static void C_fcall trf_9851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9851(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9851(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9870)
static void C_fcall trf_9870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9870(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9870(t0,t1);}

C_noret_decl(trf_9801)
static void C_fcall trf_9801(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9801(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9801(t0,t1,t2,t3);}

C_noret_decl(trf_9562)
static void C_fcall trf_9562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9562(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_9562(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_9581)
static void C_fcall trf_9581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9581(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9581(t0,t1);}

C_noret_decl(trf_9596)
static void C_fcall trf_9596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9596(t0,t1);}

C_noret_decl(trf_9605)
static void C_fcall trf_9605(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9605(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9605(t0,t1);}

C_noret_decl(trf_9552)
static void C_fcall trf_9552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9552(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_9552(t0);}

C_noret_decl(trf_9497)
static void C_fcall trf_9497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9497(t0,t1);}

C_noret_decl(trf_9488)
static void C_fcall trf_9488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9488(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9488(t0,t1,t2);}

C_noret_decl(trf_9371)
static void C_fcall trf_9371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9371(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9371(t0,t1);}

C_noret_decl(trf_9362)
static void C_fcall trf_9362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9362(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9362(t0,t1,t2);}

C_noret_decl(trf_9344)
static void C_fcall trf_9344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9344(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9344(t0,t1,t2);}

C_noret_decl(trf_9335)
static void C_fcall trf_9335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9335(t0,t1);}

C_noret_decl(trf_9317)
static void C_fcall trf_9317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9317(t0,t1);}

C_noret_decl(trf_9308)
static void C_fcall trf_9308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9308(t0,t1,t2);}

C_noret_decl(trf_9299)
static void C_fcall trf_9299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9299(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9299(t0,t1);}

C_noret_decl(trf_9281)
static void C_fcall trf_9281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9281(t0,t1);}

C_noret_decl(trf_9272)
static void C_fcall trf_9272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9272(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9272(t0,t1,t2);}

C_noret_decl(trf_9263)
static void C_fcall trf_9263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9263(t0,t1);}

C_noret_decl(trf_9248)
static void C_fcall trf_9248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9248(t0,t1);}

C_noret_decl(trf_9203)
static void C_fcall trf_9203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9203(t0,t1);}

C_noret_decl(trf_9185)
static void C_fcall trf_9185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9185(t0,t1);}

C_noret_decl(trf_9176)
static void C_fcall trf_9176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9176(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9176(t0,t1,t2);}

C_noret_decl(trf_9149)
static void C_fcall trf_9149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9149(t0,t1);}

C_noret_decl(trf_9131)
static void C_fcall trf_9131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9131(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9131(t0,t1);}

C_noret_decl(trf_9113)
static void C_fcall trf_9113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9113(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9113(t0,t1);}

C_noret_decl(trf_9104)
static void C_fcall trf_9104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9104(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9104(t0,t1,t2);}

C_noret_decl(trf_9092)
static void C_fcall trf_9092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9092(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_9092(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8837)
static void C_fcall trf_8837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8837(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8837(t0,t1,t2);}

C_noret_decl(trf_8846)
static void C_fcall trf_8846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8846(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8846(t0,t1,t2,t3);}

C_noret_decl(trf_8679)
static void C_fcall trf_8679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8679(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8679(t0,t1);}

C_noret_decl(trf_8695)
static void C_fcall trf_8695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8695(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8695(t0,t1,t2,t3);}

C_noret_decl(trf_8503)
static void C_fcall trf_8503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8503(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8503(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8533)
static void C_fcall trf_8533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8533(t0,t1);}

C_noret_decl(trf_8516)
static void C_fcall trf_8516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8516(t0,t1);}

C_noret_decl(trf_8381)
static void C_fcall trf_8381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8381(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8381(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8411)
static void C_fcall trf_8411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8411(t0,t1);}

C_noret_decl(trf_8394)
static void C_fcall trf_8394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8394(t0,t1);}

C_noret_decl(trf_8284)
static void C_fcall trf_8284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8284(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8284(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8297)
static void C_fcall trf_8297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8297(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8297(t0,t1);}

C_noret_decl(trf_8216)
static void C_fcall trf_8216(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8216(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8216(t0,t1,t2,t3);}

C_noret_decl(trf_8186)
static void C_fcall trf_8186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8186(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8186(t0,t1);}

C_noret_decl(trf_8114)
static void C_fcall trf_8114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8114(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8114(t0,t1,t2,t3);}

C_noret_decl(trf_7783)
static void C_fcall trf_7783(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7783(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7783(t0,t1);}

C_noret_decl(trf_7786)
static void C_fcall trf_7786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7786(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7786(t0,t1);}

C_noret_decl(trf_7792)
static void C_fcall trf_7792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7792(t0,t1);}

C_noret_decl(trf_7552)
static void C_fcall trf_7552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7552(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7552(t0,t1);}

C_noret_decl(trf_7555)
static void C_fcall trf_7555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7555(t0,t1);}

C_noret_decl(trf_7457)
static void C_fcall trf_7457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7457(t0,t1);}

C_noret_decl(trf_7386)
static void C_fcall trf_7386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7386(t0,t1);}

C_noret_decl(trf_7395)
static void C_fcall trf_7395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7395(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7395(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7276)
static void C_fcall trf_7276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7276(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7276(t0,t1,t2);}

C_noret_decl(trf_6995)
static void C_fcall trf_6995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6995(t0,t1);}

C_noret_decl(trf_6998)
static void C_fcall trf_6998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6998(t0,t1);}

C_noret_decl(trf_6761)
static void C_fcall trf_6761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6761(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6761(t0,t1);}

C_noret_decl(trf_6710)
static void C_fcall trf_6710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6710(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6710(t0,t1);}

C_noret_decl(trf_6700)
static void C_fcall trf_6700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6700(t0,t1);}

C_noret_decl(trf_6682)
static void C_fcall trf_6682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6682(t0,t1);}

C_noret_decl(trf_6671)
static void C_fcall trf_6671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6671(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6671(t0,t1,t2);}

C_noret_decl(trf_6633)
static void C_fcall trf_6633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6633(t0,t1);}

C_noret_decl(trf_6626)
static void C_fcall trf_6626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6626(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6626(t0,t1);}

C_noret_decl(trf_6602)
static void C_fcall trf_6602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6602(t0,t1);}

C_noret_decl(trf_6573)
static void C_fcall trf_6573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6573(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6573(t0,t1,t2,t3);}

C_noret_decl(trf_6562)
static void C_fcall trf_6562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6562(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6562(t0,t1,t2);}

C_noret_decl(trf_6551)
static void C_fcall trf_6551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6551(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6551(t0,t1,t2);}

C_noret_decl(trf_6517)
static void C_fcall trf_6517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6517(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6517(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6490)
static void C_fcall trf_6490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6490(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6490(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6449)
static void C_fcall trf_6449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6449(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6449(t0,t1,t2);}

C_noret_decl(trf_6455)
static void C_fcall trf_6455(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6455(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6455(t0,t1,t2);}

C_noret_decl(trf_6465)
static void C_fcall trf_6465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6465(t0,t1);}

C_noret_decl(trf_6297)
static void C_fcall trf_6297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6297(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6297(t0,t1,t2,t3);}

C_noret_decl(trf_6274)
static void C_fcall trf_6274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6274(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6274(t0,t1,t2,t3);}

C_noret_decl(trf_5680)
static void C_fcall trf_5680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5680(t0,t1);}

C_noret_decl(trf_5692)
static void C_fcall trf_5692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5692(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5692(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5745)
static void C_fcall trf_5745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5745(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5745(t0,t1);}

C_noret_decl(trf_5704)
static void C_fcall trf_5704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5704(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5704(t0,t1,t2);}

C_noret_decl(trf_5717)
static void C_fcall trf_5717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5717(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4928)){
C_save(t1);
C_rereclaim2(4928*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,836);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],9,"make-list");
lf[62]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[87]=C_h_intern(&lf[87],7,"rescale");
lf[88]=C_h_intern(&lf[88],8,"discrete");
lf[89]=C_h_intern(&lf[89],4,"not\077");
lf[90]=C_h_intern(&lf[90],3,"int");
lf[91]=C_h_intern(&lf[91],4,"plus");
lf[92]=C_h_intern(&lf[92],1,"+");
lf[93]=C_h_intern(&lf[93],5,"minus");
lf[94]=C_h_intern(&lf[94],1,"-");
lf[95]=C_h_intern(&lf[95],5,"times");
lf[96]=C_h_intern(&lf[96],1,"*");
lf[97]=C_h_intern(&lf[97],6,"divide");
lf[98]=C_h_intern(&lf[98],1,"/");
lf[99]=C_h_intern(&lf[99],8,"quantize");
lf[100]=C_h_intern(&lf[100],8,"decimals");
lf[101]=C_h_intern(&lf[101],15,"rhythm->seconds");
lf[102]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[103]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[104]=C_h_intern(&lf[104],6,"\000tempo");
lf[105]=C_h_intern(&lf[105],5,"\000beat");
lf[106]=C_h_intern(&lf[106],13,"cents->scaler");
lf[107]=C_h_intern(&lf[107],13,"scaler->cents");
lf[108]=C_h_intern(&lf[108],7,"interpl");
lf[109]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[110]=C_h_intern(&lf[110],3,"err");
lf[111]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[112]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[113]=C_h_intern(&lf[113],6,"interp");
lf[114]=C_h_intern(&lf[114],5,"scale");
lf[115]=C_h_intern(&lf[115],6,"modulo");
lf[116]=C_h_intern(&lf[116],8,"ran-set!");
lf[117]=C_h_intern(&lf[117],3,"ran");
lf[118]=C_h_intern(&lf[118],7,"between");
lf[119]=C_h_intern(&lf[119],4,"pick");
lf[120]=C_h_intern(&lf[120],4,"odds");
lf[121]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[122]=C_h_intern(&lf[122],5,"\000true");
lf[123]=C_h_intern(&lf[123],6,"\000false");
lf[124]=C_h_intern(&lf[124],6,"ranlow");
lf[125]=C_h_intern(&lf[125],7,"ranhigh");
lf[126]=C_h_intern(&lf[126],9,"ranmiddle");
lf[127]=C_h_intern(&lf[127],7,"ranbeta");
lf[128]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[129]=C_h_intern(&lf[129],2,"\000a");
lf[130]=C_h_intern(&lf[130],2,"\000b");
lf[131]=C_h_intern(&lf[131],6,"ranexp");
lf[132]=C_h_intern(&lf[132],8,"rangauss");
lf[133]=C_h_intern(&lf[133],9,"rancauchy");
lf[134]=C_h_intern(&lf[134],10,"ranpoisson");
lf[135]=C_h_intern(&lf[135],3,"arg");
lf[136]=C_h_intern(&lf[136],8,"rangamma");
lf[137]=C_h_intern(&lf[137],8,"ranbrown");
lf[138]=C_h_intern(&lf[138],7,"ranpink");
lf[141]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[142]=C_h_intern(&lf[142],13,"string-append");
lf[143]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[145]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[146]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[147]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[148]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[149]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[150]=C_h_intern(&lf[150],5,"floor");
lf[151]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[152]=C_h_intern(&lf[152],4,"note");
lf[153]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[154]=C_h_intern(&lf[154],3,"key");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[156]=C_h_intern(&lf[156],2,"hz");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[158]=C_h_intern(&lf[158],2,"pc");
lf[159]=C_h_intern(&lf[159],6,"invert");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[162]=C_h_intern(&lf[162],9,"transpose");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[164]=C_h_intern(&lf[164],10,"retrograde");
lf[165]=C_h_intern(&lf[165],7,"reverse");
lf[167]=C_h_intern(&lf[167],6,"period");
lf[169]=C_h_intern(&lf[169],14,"\003sysblock-set!");
lf[177]=C_h_intern(&lf[177],7,"pattern");
lf[192]=C_h_intern(&lf[192],4,"\000nad");
lf[193]=C_h_intern(&lf[193],8,"\000periods");
lf[194]=C_h_intern(&lf[194],12,"\000depth-first");
lf[196]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[197]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[198]=C_h_intern(&lf[198],14,"\000breadth-first");
lf[199]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[200]=C_h_intern(&lf[200],7,"\000values");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[203]=C_h_intern(&lf[203],4,"eop\077");
lf[204]=C_h_intern(&lf[204],4,"\000eop");
lf[205]=C_h_intern(&lf[205],4,"eod\077");
lf[206]=C_h_intern(&lf[206],4,"\000eod");
lf[207]=C_h_intern(&lf[207],4,"next");
lf[211]=C_h_intern(&lf[211],5,"force");
lf[212]=C_h_intern(&lf[212],8,"promise\077");
lf[213]=C_h_intern(&lf[213],3,"max");
lf[214]=C_h_intern(&lf[214],10,"make-cycle");
lf[215]=C_h_intern(&lf[215],12,"\003sysfor-each");
lf[217]=C_h_intern(&lf[217],4,"\000for");
lf[218]=C_h_intern(&lf[218],7,"\000repeat");
lf[220]=C_h_intern(&lf[220],5,"palin");
lf[222]=C_h_intern(&lf[222],15,"make-palindrome");
lf[224]=C_h_intern(&lf[224],6,"\000elide");
lf[225]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[226]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[227]=C_h_intern(&lf[227],9,"make-line");
lf[229]=C_h_intern(&lf[229],9,"make-heap");
lf[231]=C_h_intern(&lf[231],13,"make-rotation");
lf[233]=C_h_intern(&lf[233],7,"\000rotate");
lf[235]=C_h_intern(&lf[235],11,"random-item");
lf[243]=C_h_intern(&lf[243],14,"make-weighting");
lf[246]=C_h_intern(&lf[246],7,"\000weight");
lf[247]=C_h_intern(&lf[247],4,"\000min");
lf[248]=C_h_intern(&lf[248],4,"\000max");
lf[249]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[250]=C_h_intern(&lf[250],11,"make-markov");
lf[252]=C_h_intern(&lf[252],5,"\000past");
lf[253]=C_h_intern(&lf[253],2,"->");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[255]=C_h_intern(&lf[255],3,"\000->");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[259]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[261]=C_h_intern(&lf[261],10,"graph-node");
lf[262]=C_h_intern(&lf[262],10,"make-graph");
lf[264]=C_h_intern(&lf[264],3,"\000to");
lf[265]=C_h_intern(&lf[265],3,"\000id");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[268]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[270]=C_h_intern(&lf[270],5,"token");
lf[275]=C_h_intern(&lf[275],1,"t");
lf[280]=C_h_intern(&lf[280],4,"rule");
lf[283]=C_h_intern(&lf[283],22,"hash-table-ref/default");
lf[290]=C_h_intern(&lf[290],11,"parse-error");
lf[294]=C_h_intern(&lf[294],10,"parse-unit");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[308]=C_h_intern(&lf[308],14,"string->symbol");
lf[309]=C_h_intern(&lf[309],4,"expt");
lf[310]=C_h_intern(&lf[310],5,"equal");
lf[311]=C_h_intern(&lf[311],3,"and");
lf[312]=C_h_intern(&lf[312],2,"or");
lf[313]=C_h_intern(&lf[313],3,"not");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[326]=C_h_intern(&lf[326],1,"@");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[328]=C_h_intern(&lf[328],6,"printf");
lf[329]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[334]=C_h_intern(&lf[334],2,">=");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[336]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[337]=C_h_intern(&lf[337],5,"begin");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[339]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[340]=C_h_intern(&lf[340],1,">");
lf[341]=C_h_intern(&lf[341],2,"<=");
lf[342]=C_h_intern(&lf[342],1,"<");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[349]=C_h_intern(&lf[349],3,"sal");
lf[350]=C_h_intern(&lf[350],11,"print-error");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[352]=C_h_intern(&lf[352],11,"make-string");
lf[353]=C_h_intern(&lf[353],9,"substring");
lf[354]=C_h_intern(&lf[354],2,"pp");
lf[355]=C_h_intern(&lf[355],4,"eval");
lf[356]=C_h_intern(&lf[356],7,"\000syntax");
lf[357]=C_h_intern(&lf[357],7,"\000scheme");
lf[358]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[359]=C_h_intern(&lf[359],7,"call/cc");
lf[360]=C_h_intern(&lf[360],9,"sal:print");
lf[361]=C_h_intern(&lf[361],13,"print-message");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[368]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[369]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[370]=C_h_intern(&lf[370],9,"sal:chdir");
lf[371]=C_h_intern(&lf[371],8,"sal:load");
lf[372]=C_h_intern(&lf[372],13,"load-sal-file");
lf[373]=C_h_intern(&lf[373],4,"load");
lf[374]=C_h_intern(&lf[374],15,"\003syssubstring=\077");
lf[375]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[376]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[377]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[378]=C_h_intern(&lf[378],12,"file-exists\077");
lf[379]=C_h_intern(&lf[379],8,"sal:open");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[381]=C_h_intern(&lf[381],10,"sal:output");
lf[382]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[394]=C_h_intern(&lf[394],8,"operator");
lf[395]=C_h_intern(&lf[395],8,"bindings");
lf[396]=C_h_intern(&lf[396],10,"collectors");
lf[397]=C_h_intern(&lf[397],9,"initially");
lf[398]=C_h_intern(&lf[398],9,"end-tests");
lf[399]=C_h_intern(&lf[399],7,"looping");
lf[400]=C_h_intern(&lf[400],8,"stepping");
lf[401]=C_h_intern(&lf[401],7,"finally");
lf[402]=C_h_intern(&lf[402],9,"returning");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[409]=C_h_intern(&lf[409],7,"newline");
lf[410]=C_h_intern(&lf[410],7,"display");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[422]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[426]=C_h_intern(&lf[426],3,"for");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[429]=C_h_intern(&lf[429],8,"downfrom");
lf[430]=C_h_intern(&lf[430],5,"above");
lf[431]=C_h_intern(&lf[431],5,"below");
lf[432]=C_h_intern(&lf[432],6,"downto");
lf[433]=C_h_intern(&lf[433],4,"from");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[437]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[440]=C_h_intern(&lf[440],2,"to");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[446]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[450]=C_h_intern(&lf[450],2,"by");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[454]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[459]=C_h_intern(&lf[459],6,"across");
lf[460]=C_h_intern(&lf[460],13,"vector-length");
lf[461]=C_h_intern(&lf[461],10,"vector-ref");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[464]=C_h_intern(&lf[464],4,"over");
lf[465]=C_h_intern(&lf[465],2,"in");
lf[466]=C_h_intern(&lf[466],5,"quote");
lf[467]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[474]=C_h_intern(&lf[474],2,"on");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[478]=C_h_intern(&lf[478],1,"=");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[480]=C_h_intern(&lf[480],4,"then");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[486]=C_h_intern(&lf[486],4,"with");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[509]=C_h_intern(&lf[509],3,"sum");
lf[510]=C_h_intern(&lf[510],5,"count");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[512]=C_h_intern(&lf[512],8,"minimize");
lf[513]=C_h_intern(&lf[513],8,"maximize");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[516]=C_h_intern(&lf[516],4,"list");
lf[517]=C_h_intern(&lf[517],8,"set-cdr!");
lf[518]=C_h_intern(&lf[518],9,"last-pair");
lf[519]=C_h_intern(&lf[519],7,"collect");
lf[520]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[523]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[524]=C_h_intern(&lf[524],5,"nconc");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[528]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[529]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[530]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[531]=C_h_intern(&lf[531],4,"into");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[538]=C_h_intern(&lf[538],6,"return");
lf[540]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[541]=C_h_intern(&lf[541],5,"until");
lf[542]=C_h_intern(&lf[542],5,"while");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[546]=C_h_intern(&lf[546],7,"thereis");
lf[547]=C_h_intern(&lf[547],6,"always");
lf[548]=C_h_intern(&lf[548],5,"never");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[558]=C_h_intern(&lf[558],4,"task");
lf[559]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[561]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[567]=C_h_intern(&lf[567],2,"do");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[571]=C_h_intern(&lf[571],4,"iter");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[574]=C_h_intern(&lf[574],6,"repeat");
lf[575]=C_h_intern(&lf[575],2,"as");
lf[577]=C_h_intern(&lf[577],10,"mm:make-on");
lf[578]=C_h_intern(&lf[578],5,"\000time");
lf[579]=C_h_intern(&lf[579],4,"\000key");
lf[580]=C_h_intern(&lf[580],4,"\000vel");
lf[581]=C_h_intern(&lf[581],5,"\000chan");
lf[582]=C_h_intern(&lf[582],6,"mm:on\077");
lf[583]=C_h_intern(&lf[583],11,"mm:make-off");
lf[584]=C_h_intern(&lf[584],7,"mm:off\077");
lf[585]=C_h_intern(&lf[585],13,"mm:make-touch");
lf[586]=C_h_intern(&lf[586],4,"\000val");
lf[587]=C_h_intern(&lf[587],9,"mm:touch\077");
lf[588]=C_h_intern(&lf[588],12,"mm:make-ctrl");
lf[589]=C_h_intern(&lf[589],4,"\000num");
lf[590]=C_h_intern(&lf[590],8,"mm:ctrl\077");
lf[591]=C_h_intern(&lf[591],12,"mm:make-prog");
lf[592]=C_h_intern(&lf[592],8,"mm:prog\077");
lf[593]=C_h_intern(&lf[593],13,"mm:make-press");
lf[594]=C_h_intern(&lf[594],9,"mm:press\077");
lf[595]=C_h_intern(&lf[595],12,"mm:make-bend");
lf[596]=C_h_intern(&lf[596],7,"mm:free");
lf[597]=C_h_intern(&lf[597],7,"mm:copy");
lf[598]=C_h_intern(&lf[598],7,"mm:time");
lf[599]=C_h_intern(&lf[599],12,"mm:time-set!");
lf[600]=C_h_intern(&lf[600],7,"mm:chan");
lf[601]=C_h_intern(&lf[601],12,"mm:chan-set!");
lf[602]=C_h_intern(&lf[602],6,"mm:key");
lf[603]=C_h_intern(&lf[603],11,"mm:key-set!");
lf[604]=C_h_intern(&lf[604],6,"mm:vel");
lf[605]=C_h_intern(&lf[605],11,"mm:vel-set!");
lf[606]=C_h_intern(&lf[606],6,"mm:val");
lf[607]=C_h_intern(&lf[607],8,"mm:type\077");
lf[608]=C_h_intern(&lf[608],11,"mm:val-set!");
lf[609]=C_h_intern(&lf[609],1,"k");
lf[610]=C_h_intern(&lf[610],6,"mm:num");
lf[611]=C_h_intern(&lf[611],11,"mm:num-set!");
lf[612]=C_h_intern(&lf[612],7,"mp:note");
lf[613]=C_h_intern(&lf[613],7,"mp:midi");
lf[614]=C_h_intern(&lf[614],6,"mp:off");
lf[615]=C_h_intern(&lf[615],5,"mp:on");
lf[616]=C_h_intern(&lf[616],8,"mp:touch");
lf[617]=C_h_intern(&lf[617],7,"mp:ctrl");
lf[618]=C_h_intern(&lf[618],7,"mp:prog");
lf[619]=C_h_intern(&lf[619],8,"mp:press");
lf[620]=C_h_intern(&lf[620],7,"mp:bend");
lf[621]=C_h_intern(&lf[621],5,"mp:mm");
lf[622]=C_h_intern(&lf[622],9,"mp:inhook");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[624]=C_h_intern(&lf[624],27,"condition-property-accessor");
lf[625]=C_h_intern(&lf[625],3,"exn");
lf[626]=C_h_intern(&lf[626],7,"message");
lf[627]=C_h_intern(&lf[627],22,"with-exception-handler");
lf[628]=C_h_intern(&lf[628],30,"call-with-current-continuation");
lf[629]=C_h_intern(&lf[629],4,"cs:i");
lf[630]=C_h_intern(&lf[630],4,"cs:f");
lf[631]=C_h_intern(&lf[631],8,"cs:clear");
lf[632]=C_h_intern(&lf[632],7,"cm-logo");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[640]=C_h_intern(&lf[640],25,"current-time-milliseconds");
lf[641]=C_h_intern(&lf[641],20,"current-time-seconds");
lf[643]=C_h_intern(&lf[643],6,"\003sysgc");
lf[646]=C_h_intern(&lf[646],6,"sprout");
lf[647]=C_h_intern(&lf[647],9,"\003syserror");
lf[648]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[649]=C_h_intern(&lf[649],3,"now");
lf[650]=C_h_intern(&lf[650],11,"time-format");
lf[651]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[652]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[653]=C_h_intern(&lf[653],1,"m");
lf[654]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[655]=C_h_intern(&lf[655],1,"s");
lf[656]=C_h_intern(&lf[656],5,"pause");
lf[657]=C_h_intern(&lf[657],7,"paused\077");
lf[658]=C_h_intern(&lf[658],4,"cont");
lf[659]=C_h_intern(&lf[659],4,"stop");
lf[660]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[661]=C_h_intern(&lf[661],4,"hush");
lf[662]=C_h_intern(&lf[662],14,"return-to-host");
lf[663]=C_h_intern(&lf[663],4,"cond");
lf[664]=C_h_intern(&lf[664],6,"lambda");
lf[665]=C_h_intern(&lf[665],7,"elapsed");
lf[666]=C_h_intern(&lf[666],1,"x");
lf[667]=C_h_intern(&lf[667],4,"wait");
lf[668]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[669]=C_h_intern(&lf[669],6,"safety");
lf[670]=C_h_intern(&lf[670],4,"cdar");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[672]=C_h_intern(&lf[672],4,"caar");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[674]=C_h_intern(&lf[674],7,"declare");
lf[675]=C_h_intern(&lf[675],5,"\000null");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[680]=C_h_intern(&lf[680],18,"\003sysregister-macro");
lf[681]=C_h_intern(&lf[681],2,"go");
lf[682]=C_h_intern(&lf[682],15,"hash-table-set!");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[684]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[685]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[686]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[688]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[689]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[690]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[691]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[692]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[693]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[694]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[696]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[698]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[699]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[700]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[702]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[703]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[704]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[705]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[706]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[708]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[710]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[711]=C_h_intern(&lf[711],5,":loop");
lf[712]=C_h_intern(&lf[712],7,"tagbody");
lf[713]=C_h_intern(&lf[713],5,"block");
lf[714]=C_h_intern(&lf[714],3,"nil");
lf[715]=C_h_intern(&lf[715],20,"\003sysregister-macro-2");
lf[716]=C_h_intern(&lf[716],8,"function");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[718]=C_h_intern(&lf[718],3,"pop");
lf[719]=C_h_intern(&lf[719],4,"cons");
lf[720]=C_h_intern(&lf[720],4,"push");
lf[721]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[722]=C_h_intern(&lf[722],4,"loop");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[725]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[726]=C_h_intern(&lf[726],6,"define");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[732]=C_h_intern(&lf[732],7,"\000return");
lf[733]=C_h_intern(&lf[733],9,"\000function");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[735]=C_h_intern(&lf[735],8,"\000process");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[745]=C_h_intern(&lf[745],5,"\000loop");
lf[746]=C_h_intern(&lf[746],4,"\000run");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[755]=C_h_intern(&lf[755],9,"list-tail");
lf[756]=C_h_intern(&lf[756],8,"set-car!");
lf[757]=C_h_intern(&lf[757],3,"min");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[760]=C_h_intern(&lf[760],9,"\000bindings");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[768]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[771]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[772]=C_h_intern(&lf[772],10,"sal:system");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[790]=C_h_intern(&lf[790],7,"unquote");
lf[791]=C_h_intern(&lf[791],16,"unquote-splicing");
lf[792]=C_h_intern(&lf[792],5,"\000list");
lf[793]=C_h_intern(&lf[793],8,"\000unquote");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[797]=C_h_intern(&lf[797],10,"quasiquote");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[802]=C_h_intern(&lf[802],7,"fprintf");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[805]=C_h_intern(&lf[805],27,"\003sysregister-record-printer");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[807]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[808]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[809]=C_h_intern(&lf[809],6,"ruleid");
lf[810]=C_h_intern(&lf[810],9,"make-rule");
lf[811]=C_h_intern(&lf[811],7,"*rules*");
lf[812]=C_h_intern(&lf[812],7,"defrule");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[814]=C_h_intern(&lf[814],15,"make-hash-table");
lf[815]=C_h_intern(&lf[815],3,"eq\077");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[818]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[820]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[821]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[822]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[823]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[829]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[830]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[831]=C_h_intern(&lf[831],6,"equal\077");
lf[832]=C_h_intern(&lf[832],4,"send");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[834]=C_h_intern(&lf[834],19,"define-send-message");
lf[835]=C_h_intern(&lf[835],12,"with-optkeys");
C_register_lf2(lf,836,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5340,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5338 */
static void C_ccall f_5340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5343,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5341 in k5338 */
static void C_ccall f_5343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5346,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5344 in k5341 in k5338 */
static void C_ccall f_5346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5349,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5349,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5351,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5640,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33828,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 240  ##sys#register-macro");
t5=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[835],t4);}

/* a33827 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33828(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33828r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33828r(t0,t1,t2,t3);}}

static void C_ccall f_33828r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 241  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5644,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 247  make-hash-table");
t3=C_retrieve(lf[814]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[831]+1));}

/* k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5644,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5647,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33776,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[834],t4);}

/* a33775 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33776,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33780,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_33780(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33813,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 256  string->symbol");
t10=*((C_word*)lf[308]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33823,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 258  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 260  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[833]);}}}}

/* k33821 in a33775 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33780(2,t3,t2);}

/* k33811 in a33775 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33780(2,t3,t2);}

/* k33778 in a33775 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33780,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[466],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[682],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5647,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5649,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5940,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33770,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 345  ##sys#register-macro");
t5=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[832],t4);}

/* a33769 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33770(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33770r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33770r(t0,t1,t2,t3);}}

static void C_ccall f_33770r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 346  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[183],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5940,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5942,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5953,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5982,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5992,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6002,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6012,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6022,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6036,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6051,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6057,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6080,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6218,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6258,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6268,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[63],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6363,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6449,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6490,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6517,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6544,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6551,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6562,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6573,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6588,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6595,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6602,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6623,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6626,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6633,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6662,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6665,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6668,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6671,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6682,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6700,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6707,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6710,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6717,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6720,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6723,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6757,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6868,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[91]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6883,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6925,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[95]+1,*((C_word*)lf[96]+1));
t47=C_mutate((C_word*)lf[97]+1,*((C_word*)lf[98]+1));
t48=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6951,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6972,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6991,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7227,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7242,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[108]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7257,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7352,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7379,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[116]+1,C_retrieve2(lf[74],"tb:ran-set!"));
t57=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7453,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7484,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7505,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[120]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7548,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[124]+1,C_retrieve2(lf[77],"tb:ranlow"));
t62=C_mutate((C_word*)lf[125]+1,C_retrieve2(lf[78],"tb:ranhigh"));
t63=C_mutate((C_word*)lf[126]+1,C_retrieve2(lf[79],"tb:ranmiddle"));
t64=C_mutate((C_word*)lf[127]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7779,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8007,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8026,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[133]+1,C_retrieve2(lf[83],"tb:rancauchy"));
t68=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8067,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8086,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[137]+1,C_retrieve2(lf[86],"tb:ranbrown"));
t71=C_mutate((C_word*)lf[138]+1,C_retrieve2(lf[85],"tb:ranpink"));
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8109,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  make-hash-table");
t73=C_retrieve(lf[814]);
((C_proc3)C_retrieve_proc(t73))(3,t73,t72,*((C_word*)lf[831]+1));}

/* k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8109,2,t0,t1);}
t2=C_mutate(&lf[139],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8112,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33554,a[2]=t7,a[3]=t4,a[4]=((C_word)li534),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_33554(t9,t5,C_fix(0));}

/* do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33554(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33554,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[817],C_fix(-1),lf[818],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33567,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t5=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[139],"*notes*"),lf[819],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33768,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33768,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[820],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33588,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t6=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33588,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[821]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[822]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33600,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6602(t4,((C_word*)t0)[4]);}

/* k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33604,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[830]);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6602(t2,t3);}

/* k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33608,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[829]);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6602(t2,t3);}

/* k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33752,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 367  floor");
t4=*((C_word*)lf[150]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33752,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33614,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li533),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_33614(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33614(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33614,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33624,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33634,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_33634(t21,(C_word)C_i_string_equal_p(t20,lf[828]));}
else{
t20=t19;
f_33634(t20,C_SCHEME_FALSE);}}}

/* k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33634(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33634,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_33624(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33637,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[826]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_33637(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[827]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_33637(t7,t6);}
else{
t5=t2;
f_33637(t5,C_SCHEME_UNDEFINED);}}}}

/* k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33637(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33637,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[823],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_33645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t6=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33645,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33652,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[139],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t4=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[139],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_33655(2,t4,C_SCHEME_UNDEFINED);}}

/* k33653 in k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[142]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[825],((C_word*)((C_word*)t0)[8])[1]);}

/* k33657 in k33653 in k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33659,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33666,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[139],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k33664 in k33657 in k33653 in k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t4=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[139],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_33669(2,t4,C_SCHEME_UNDEFINED);}}

/* k33667 in k33664 in k33657 in k33653 in k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[142]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[824],((C_word*)((C_word*)t0)[6])[1]);}

/* k33671 in k33667 in k33664 in k33657 in k33653 in k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33673,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33680,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[139],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k33678 in k33671 in k33667 in k33664 in k33657 in k33653 in k33650 in k33643 in k33635 in k33632 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[139],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_33624(2,t3,C_SCHEME_UNDEFINED);}}

/* k33622 in do534 in k33750 in k33606 in k33602 in k33598 in k33586 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_33614(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k33575 in k33766 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33577,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_33554(t3,((C_word*)t0)[2],t2);}

/* k33565 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33570,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[139],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k33568 in k33565 in do528 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8112,2,t0,t1);}
t2=C_mutate(&lf[140],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8114,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[144],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8216,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[152]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8269,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[154]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8366,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[156]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8488,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8604,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[159]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8649,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8784,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[164]+1,*((C_word*)lf[165]+1));
t11=C_mutate(&lf[166],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9092,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[168],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9104,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9113,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[171],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9131,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[172],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9149,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9176,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[174],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9185,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[175],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9203,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[176],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9248,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[178],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9263,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[179],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9272,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[180],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9281,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[181],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9299,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[182],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9308,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[183],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9317,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[184],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9335,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9344,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9353,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[187],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9362,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9371,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9488,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9497,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9552,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9562,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9742,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9761,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9780,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[208],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9903,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10204,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[202],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10213,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[210],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10259,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[214]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10374,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[216],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10629,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10701,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[221],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10710,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[222]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10790,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[223],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11260,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11475,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11722,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[229]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11758,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12021,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[231]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12097,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12571,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12793,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12802,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12811,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12829,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12847,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12865,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12874,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12883,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[243]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12966,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[244],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13733,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[245],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13845,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[250]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14278,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14765,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15105,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[262]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15168,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[263],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15686,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15780,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15801,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15819,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15837,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t74=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15847,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33540,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t76=C_retrieve(lf[805]);
((C_proc4)C_retrieve_proc(t76))(4,t76,t74,lf[270],t75);}

/* a33539 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33540,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33548,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15801(t4,t2);}

/* k33546 in a33539 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33552,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-string");
f_15819(t2,((C_word*)t0)[2]);}

/* k33550 in k33546 in a33539 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[802]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[816],((C_word*)t0)[2],t1);}

/* k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15847,2,t0,t1);}
t2=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15849,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15878,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15890,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15898,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-hash-table");
t6=C_retrieve(lf[814]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[815]+1));}

/* k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15898,2,t0,t1);}
t2=C_mutate(&lf[278],t1);
t3=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15900,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15921,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16003,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33530,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t7=C_retrieve(lf[805]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[280],t6);}

/* a33529 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33530,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33538,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  rule-name");
f_15921(t4,t2);}

/* k33536 in a33529 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[802]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[813],t1);}

/* k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16006,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33427,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro");
t4=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[812],t3);}

/* a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_33427r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_33427r(t0,t1,t2,t3,t4);}}

static void C_ccall f_33427r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33430,a[2]=t6,a[3]=((C_word)li529),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[809],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33490,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k33488 in a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33494,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_33430(t3,t2,((C_word*)t0)[2]);}

/* k33492 in k33488 in a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33494,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_33508(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_33508(t7,(C_word)C_i_nullp(t6));}}

/* k33506 in k33492 in k33488 in a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33508,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[810],((C_word*)t0)[6],lf[809],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[682],lf[811],lf[809],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33430(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_33430,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[807]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33450,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[808]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[466],t2):t2));}}}

/* k33448 in ppat in a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33454,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_33430(t4,t2,t3);}

/* k33452 in k33448 in ppat in a33426 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33454,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[719],((C_word*)t0)[2],t1));}

/* k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16006,2,t0,t1);}
t2=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16008,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16029,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16032,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16044,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16050,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16060,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16118,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16150,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16171,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16189,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16199,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33413,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t14=C_retrieve(lf[805]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[290],t13);}

/* a33412 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33413,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33421,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-string");
f_16171(t4,t2);}

/* k33419 in a33412 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33425,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-position");
f_16189(t2,((C_word*)t0)[2]);}

/* k33423 in k33419 in a33412 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[802]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[806],((C_word*)t0)[2],t1);}

/* k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16199,2,t0,t1);}
t2=C_mutate(&lf[293],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16201,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16207,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16222,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16240,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16258,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16268,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33387,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t9=C_retrieve(lf[805]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[294],t8);}

/* a33386 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33387(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33387,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33391,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t4,t2);}

/* k33389 in a33386 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33397,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17480(t2,t1);}

/* k33395 in k33389 in a33386 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33397,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33408,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  get-rule");
f_16008(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[802]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[804],((C_word*)t0)[2]);}}

/* k33406 in k33395 in k33389 in a33386 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  rule-name");
f_15921(((C_word*)t0)[2],t1);}

/* k33402 in k33395 in k33389 in a33386 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[802]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[803],t1);}

/* k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16268,2,t0,t1);}
t2=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16270,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16286,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16318,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16330,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16340,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16358,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16391,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16599,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16607,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t11=lf[322]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16711,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17330,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17378,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17480,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17492,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17513,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33365,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[312],t21);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t18,lf[801],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33363 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(25856),t1);}

/* k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17516,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33345,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[312],t5);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[800],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33343 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(26112),t1);}

/* k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17519,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33305,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[312],t10);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[799],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33303 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(26368),t1);}

/* k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17522,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33195,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[96],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33201,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33211,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[798],C_fix(26624),t9,t10,t11);}

/* a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33211,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33215,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t5,lf[792],t3);}

/* k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t2,((C_word*)t0)[2]);}

/* k33216 in k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33218,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[516]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33236,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t3,lf[792],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k33234 in k33216 in k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33239,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k33237 in k33234 in k33216 in k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33239,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33242,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33270,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t5,lf[792],((C_word*)t0)[2]);}

/* k33268 in k33237 in k33234 in k33216 in k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33270,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[793]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[797],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33242(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[466],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33242(t5,t4);}}

/* k33240 in k33237 in k33234 in k33216 in k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_33242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33242,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t2,lf[760],((C_word*)t0)[2]);}

/* k33246 in k33240 in k33237 in k33234 in k33216 in k33213 in a33210 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33248,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[516]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a33200 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33201,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k33193 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(26624),t1);}

/* k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17525,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33095,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[312],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33103,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t10,C_fix(27648));}

/* k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33105,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[3],lf[796],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33105(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33105,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33109,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33112,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,t3,C_fix(5376));}

/* k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t2,lf[792],((C_word*)t0)[4]);}

/* k33113 in k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33118,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_33118(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33147,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[794]:lf[795]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33155,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t5,t6);}}

/* k33153 in k33113 in k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16150(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33145 in k33113 in k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33116 in k33113 in k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33121,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k33119 in k33116 in k33113 in k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33124,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  set-emit-info!");
f_16340(t2,lf[792],lf[793],((C_word*)t0)[2]);}

/* k33122 in k33119 in k33116 in k33113 in k33110 in k33107 in a33104 in k33101 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33124,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[790],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[791],((C_word*)t0)[2])));}

/* k33093 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(27648),t1);}

/* k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17528,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33067,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[312],t7);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[789],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33065 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(26880),t1);}

/* k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17531,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33007,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[311],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33013,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33031,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[788],C_fix(27136),t8,t9,t10);}

/* a33030 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33031(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33031,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33039,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33043,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t6,t2);}

/* k33041 in a33030 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33037 in a33030 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33039,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a33012 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33013,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k33005 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_33007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(27136),t1);}

/* k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17534,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32884,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[326],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32890,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32921,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[787],C_fix(27392),t14,t15,t16);}

/* a32920 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32921,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32925,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k32923 in a32920 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32926 in k32923 in a32920 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32929 in k32926 in k32923 in a32920 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32931,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32944,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k32942 in k32929 in k32926 in k32923 in a32920 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32944,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a32889 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32890,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32894,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k32892 in a32889 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32894,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32909,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k32907 in k32892 in a32889 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32909,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k32882 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(27392),t1);}

/* k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17534,2,t0,t1);}
t2=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17536,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17590,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32764,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[92],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[312],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32770,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t4,lf[786],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a32769 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32770(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32770,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32786,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t4,t8,C_fix(256));}
else{
t7=t4;
f_32786(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_32786(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k32784 in a32769 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32786,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32797,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k32795 in k32784 in a32769 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32797,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k32762 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(28416),t1);}

/* k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17593,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32625,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[92],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[311],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[312],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32631,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[785],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a32630 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32631,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32651,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32654,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t7,t11,C_fix(256));}
else{
t10=t7;
f_32654(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_32654(2,t9,C_SCHEME_FALSE);}}

/* k32652 in a32630 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_32651(2,t2,C_SCHEME_END_OF_LIST);}}

/* k32649 in a32630 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32651,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k32623 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(28672),t1);}

/* k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17596,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32473,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[311],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[312],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32479,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[784],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a32478 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32479,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32497,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t10,t7,C_fix(768));}

/* k32495 in a32478 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32497,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,t3,C_fix(256));}}

/* k32504 in k32495 in a32478 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k32471 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(28160),t1);}

/* k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17599,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32402,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32408,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32426,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[783],C_fix(27904),t6,t7,t8);}

/* a32425 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32426,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32430,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k32428 in a32425 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32430,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32431 in k32428 in a32425 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32449,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32447 in k32431 in k32428 in a32425 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32449,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a32407 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32408,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k32400 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(27904),t1);}

/* k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17599,2,t0,t1);}
t2=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17601,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17622,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17738,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32326,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[312],t21);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t5,lf[782],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32324 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(28928),t1);}

/* k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17741,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32246,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32252,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[781],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a32251 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32252(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32252,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32259,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17601(t4,t7);}
else{
t6=t4;
f_32259(2,t6,C_SCHEME_FALSE);}}

/* k32257 in a32251 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32259,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 369  inf->pre");
f_17622(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k32244 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(29184),t1);}

/* k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17744,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32110,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[311],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[312],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32116,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32142,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[780],C_fix(29440),t23,t24,t25);}

/* a32141 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32142,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32150,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k32148 in a32141 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a32115 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32116,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32124,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32133,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t5,t6,C_fix(512));}
else{
t5=t4;
f_32124(t5,t2);}}

/* k32131 in a32115 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_32124(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k32122 in a32115 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_32124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k32108 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(29440),t1);}

/* k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17747,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32066,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[312],t11);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[779],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32064 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(29696),t1);}

/* k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17750,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31956,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31962,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31984,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[778],C_fix(33536),t10,t11,t12);}

/* a31983 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31984(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31984,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[360]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31995,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t8,t2);}

/* k31993 in a31983 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31995,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li510),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31997(t5,((C_word*)t0)[2],t1);}

/* do2684 in k31993 in a31983 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_31997(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31997,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32026,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k32024 in do2684 in k31993 in a31983 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_32026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32026,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_31997(t7,((C_word*)t0)[2],t6);}

/* a31961 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31962,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31978,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t5,t6,C_fix(256));}

/* k31976 in a31961 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31978,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k31954 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(33536),t1);}

/* k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17753,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31881,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31887,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31909,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[777],C_fix(34560),t10,t11,t12);}

/* a31908 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31909,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31913,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k31911 in a31908 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31920,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31918 in k31911 in a31908 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31920,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[646],t1));}

/* a31886 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31887,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31903,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t5,t6,C_fix(256));}

/* k31901 in a31886 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31903,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k31879 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(34560),t1);}

/* k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17756,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31682,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[312],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[312],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[326],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[311],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31688,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31749,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[776],C_fix(34304),t21,t22,t23);}

/* a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31749,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31753,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31789,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t6,t2);}

/* k31787 in a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31751 in a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31753,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li505),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a31768 in k31751 in a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31769(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_31769r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31769r(t0,t1,t2,t3);}}

static void C_ccall f_31769r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31777,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31781,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k31779 in a31768 in k31751 in a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31785,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t2,((C_word*)t0)[2]);}

/* k31783 in k31779 in a31768 in k31751 in a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16150(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31775 in a31768 in k31751 in a31748 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a31687 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31688(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31688,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31695,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31735,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 369  append");
t15=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_31695(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_31695(t10,t9);}}

/* k31733 in a31687 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31695(t3,t2);}

/* k31693 in a31687 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_31695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31695,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31706,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t4,t5);}

/* k31704 in k31693 in a31687 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k31680 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(34304),t1);}

/* k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17759,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31656,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31662,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[775],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a31661 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31662,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k31654 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(33792),t1);}

/* k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17762,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31628,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31636,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t7,C_fix(35072));}

/* k31634 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31640,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16607(t2,lf[371]);}

/* k31638 in k31634 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[4],lf[774],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31626 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(35072),t1);}

/* k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17765,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31600,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31608,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t7,C_fix(35584));}

/* k31606 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31612,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16607(t2,lf[370]);}

/* k31610 in k31606 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[4],lf[773],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31598 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(35584),t1);}

/* k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17768,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31572,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31580,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t7,C_fix(35328));}

/* k31578 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31584,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16607(t2,lf[772]);}

/* k31582 in k31578 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[4],lf[771],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31570 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(35328),t1);}

/* k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17771,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31544,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31552,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t7,C_fix(34816));}

/* k31550 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31556,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16607(t2,lf[381]);}

/* k31554 in k31550 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[4],lf[770],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31542 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(34816),t1);}

/* k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17774,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31407,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[312],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[311],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[312],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[96],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[311],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31413,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31443,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[769],C_fix(36096),t22,t23,t24);}

/* a31442 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31443,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[768]);}

/* a31412 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31413,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31437,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t6,t7,C_fix(256));}

/* k31435 in a31412 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31437,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k31405 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(36096),t1);}

/* k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17777,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31349,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31357,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t7,C_fix(31744));}

/* k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31359,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[3],lf[767],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a31358 in k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31359,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31363,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k31361 in a31358 in k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31391,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t3,lf[746],((C_word*)t0)[3]);}

/* k31389 in k31361 in a31358 in k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31391,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31366(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31379,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31383,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t3,t4);}}

/* k31381 in k31389 in k31361 in a31358 in k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16150(((C_word*)t0)[2],lf[766],t1);}

/* k31377 in k31389 in k31361 in a31358 in k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31364 in k31361 in a31358 in k31355 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31347 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(31744),t1);}

/* k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17780,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31288,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31296,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t7,C_fix(31488));}

/* k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31298,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[3],lf[765],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31298,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31302,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k31300 in a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31333,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t3,lf[733],((C_word*)t0)[3]);}

/* k31331 in k31300 in a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31333,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31305(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31321,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31325,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t3,t4);}}

/* k31323 in k31331 in k31300 in a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16150(((C_word*)t0)[2],lf[764],t1);}

/* k31319 in k31331 in k31300 in a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31303 in k31300 in a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  set-emit-info!");
f_16340(t2,lf[733],lf[732],((C_word*)t0)[3]);}

/* k31306 in k31303 in k31300 in a31297 in k31294 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31286 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(31488),t1);}

/* k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17783,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31197,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[311],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[312],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31203,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31238,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[763],C_fix(30208),t10,t11,t12);}

/* a31237 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31238,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31244,a[2]=t4,a[3]=t3,a[4]=((C_word)li497),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31252,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t6,t2);}

/* k31250 in a31237 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a31243 in a31237 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31244(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31244,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31202 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31203,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31236,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t4,C_fix(4608),lf[762],C_SCHEME_FALSE);}}

/* k31234 in a31202 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31236,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k31195 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(30208),t1);}

/* k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17783,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17786,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31095,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31101,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31144,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[761],C_fix(29952),t10,t11,t12);}

/* a31143 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31144,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31148,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t5,lf[760],C_SCHEME_TRUE,t3);}

/* k31146 in a31143 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31153,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li494),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31161,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t3,((C_word*)t0)[2]);}

/* k31159 in k31146 in a31143 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a31152 in k31146 in a31143 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31153(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31153,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31100 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31101,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31134,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k31132 in a31100 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31134,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k31093 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(29952),t1);}

/* k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17789,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31009,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[312],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[312],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[311],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31015,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[759],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a31014 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31015,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k31007 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_31009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(30720),t1);}

/* k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17792,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30729,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30735,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30778,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[758],C_fix(30464),t10,t11,t12);}

/* a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30778,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30782,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30782,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[337]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li490),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_30790(t8,((C_word*)t0)[2],t1);}

/* do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30790(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30790,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t3,t4);}}

/* k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t2,t3);}

/* k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30822,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30822,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t5,((C_word*)t0)[2],C_fix(10756));}

/* k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30882,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_30825(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30889,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30889,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30825(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k30897 in k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30899,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[96],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30825(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k30907 in k30897 in k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30909,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[516],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_30825(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k30921 in k30907 in k30897 in k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30923,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[719],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30825(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k30931 in k30921 in k30907 in k30897 in k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30933,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30825(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k30941 in k30931 in k30921 in k30907 in k30897 in k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30943,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[757],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30825(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k30951 in k30941 in k30931 in k30921 in k30907 in k30897 in k30887 in k30880 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30953,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[213],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30825(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_30825(t2,C_SCHEME_UNDEFINED);}}

/* k30823 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30825,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30849,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_30849(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_30849(t4,C_SCHEME_FALSE);}}

/* k30847 in k30823 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30849,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[755],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[756],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30828(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30828(t4,t3);}}

/* k30826 in k30823 in k30820 in k30817 in k30814 in k30811 in do2763 in k30780 in a30777 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30828,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_30790(t7,((C_word*)t0)[2],t6);}

/* a30734 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30735,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30768,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k30766 in a30734 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30768,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k30727 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(30464),t1);}

/* k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17795,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30615,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[326],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[96],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[311],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30621,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30647,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[754],C_fix(32000),t12,t13,t14);}

/* a30646 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30647,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30651,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k30649 in a30646 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30651,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30655 in k30649 in a30646 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30657,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30677,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[337],t1));}}

/* k30675 in k30655 in k30649 in a30646 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30677,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a30620 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30621(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30621,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30631,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_30631(t12,t11);}
else{
t10=t8;
f_30631(t10,C_SCHEME_FALSE);}}

/* k30629 in a30620 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30631(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30631,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k30613 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(32000),t1);}

/* k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17798,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30418,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[326],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[326],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[311],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[311],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[312],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30424,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30492,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[753],C_fix(32256),t26,t27,t28);}

/* a30491 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30492(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30492,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30496,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t5,t2);}

/* k30494 in a30491 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30424(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30424,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30437,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30443,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t9,t4,C_fix(14336));}

/* k30441 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30443,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30449,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_30449(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30478,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t11,C_fix(4608),lf[752],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30437(t5,t4);}}

/* k30476 in k30441 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30449(t3,t2);}

/* k30447 in k30441 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30449(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30449,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k30451 in k30447 in k30441 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30453,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30456,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_30456(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30467,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t5,C_fix(4608),lf[751],C_SCHEME_FALSE);}}

/* k30465 in k30451 in k30447 in k30441 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30456(t3,t2);}

/* k30454 in k30451 in k30447 in k30441 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30456,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30437(t4,t3);}

/* k30435 in a30423 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_30437(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k30416 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(32256),t1);}

/* k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17798,2,t0,t1);}
t2=C_mutate(&lf[333],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17800,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18321,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30146,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[311],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[326],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[311],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[311],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[312],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[326],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[326],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[311],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[312],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[326],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[311],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[312],t58);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t4,lf[750],C_fix(33024),t59,C_retrieve2(lf[333],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k30144 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(33024),t1);}

/* k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18324,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30090,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[312],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30098,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16599(t13,C_fix(33280));}

/* k30096 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(((C_word*)t0)[3],lf[749],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k30088 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_30090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(33280),t1);}

/* k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18846,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29918,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[312],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[326],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[96],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[96],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[92],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[326],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[311],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29924,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29970,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[748],C_fix(32512),t25,t26,t27);}

/* a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29970(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29970,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18330,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t7,t2);}

/* k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18330,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18348,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18805,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t17,t18,C_fix(14864));}

/* k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18805,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18809,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t2,lf[745],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18812,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t3,lf[735],((C_word*)((C_word*)t0)[6])[1]);}}

/* k18837 in k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18839,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_18812(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18827,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18831,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t3,t4);}}

/* k18829 in k18837 in k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16150(((C_word*)t0)[2],lf[747],t1);}

/* k18825 in k18837 in k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18810 in k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t2,lf[746],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k18814 in k18810 in k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_18348(t4,t3);}

/* k18807 in k18803 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18348(t3,t2);}

/* k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18348(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18348,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18794,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18798,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_18355(t5,C_SCHEME_UNDEFINED);}}

/* k18796 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18792 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18355(t3,t2);}

/* k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18355,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18669,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li483),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_18669(t7,t2,t3);}

/* do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18669(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18669,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18679,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18690,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t4,t5);}}

/* k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18690,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li482),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_18692(t5,((C_word*)t0)[2],t1);}

/* do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18692(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18692,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18706,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 369  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18706,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18709,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18759,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 369  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_18709(t4,C_SCHEME_UNDEFINED);}}

/* k18757 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18709(t3,t2);}

/* k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18709(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18709,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18712,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18744,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_18712(t3,C_SCHEME_UNDEFINED);}}

/* k18742 in k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18712(t3,t2);}

/* k18710 in k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18712,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18715,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18725,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18723 in k18710 in k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18725,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18737,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18715(t2,C_SCHEME_UNDEFINED);}}

/* k18735 in k18723 in k18710 in k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18737,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18727 in k18723 in k18710 in k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18715(t3,t2);}

/* k18713 in k18710 in k18707 in k18704 in do2876 in k18688 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18692(t3,((C_word*)t0)[2],t2);}

/* k18677 in do2873 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18669(t3,((C_word*)t0)[2],t2);}

/* k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18633,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li481),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18633(t7,t2,t3);}

/* do2887 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18633(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18633,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18644,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18659,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k18657 in do2887 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18659,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18642 in do2887 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18633(t4,((C_word*)t0)[2],t3);}

/* k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18365,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18577,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li480),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18577(t8,t3,t4);}

/* do2892 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18577(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18577,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t3,t4);}}

/* k18585 in do2892 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18590,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18588 in k18585 in do2892 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18590,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18593,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18611,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t5,t6,C_fix(20224));}

/* k18609 in k18588 in k18585 in do2892 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18611,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[313],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18593(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18593(t2,C_SCHEME_UNDEFINED);}}

/* k18591 in k18588 in k18585 in do2892 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k18595 in k18591 in k18588 in k18585 in do2892 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18577(t4,((C_word*)t0)[2],t3);}

/* k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18371(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[312],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18371(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_18371(t4,t3);}}

/* k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18371(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18371,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18374,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18538 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18540,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18544,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18548,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_18374(t3,t2);}}

/* k18546 in k18538 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18542 in k18538 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18374(t3,t2);}

/* k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18374,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[744]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[567],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k18400 in k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[743]);}

/* k18403 in k18400 in k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18408,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[742]);}

/* k18406 in k18403 in k18400 in k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18411,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[741]);}

/* k18409 in k18406 in k18403 in k18400 in k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[740]);}

/* k18412 in k18409 in k18406 in k18403 in k18400 in k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18414,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[664],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[665],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[664],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[667],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[466],lf[625]);
t14=(C_word)C_a_i_list(&a,2,lf[466],lf[626]);
t15=(C_word)C_a_i_list(&a,3,lf[624],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[31],lf[739],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[350],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[664],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k18471 in k18412 in k18409 in k18406 in k18403 in k18400 in k18372 in k18369 in k18366 in k18363 in k18359 in k18356 in k18353 in k18346 in k18328 in a29969 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18473,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[664],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[627],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[664],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[628],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[664],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a29923 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29924,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29940,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k29938 in a29923 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29943,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29941 in k29938 in a29923 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29943,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29946,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_29946(t7,t6);}
else{
t5=t4;
f_29946(t5,C_SCHEME_UNDEFINED);}}

/* k29944 in k29941 in k29938 in a29923 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29946,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_29949(t5,t4);}
else{
t3=t2;
f_29949(t3,C_SCHEME_UNDEFINED);}}

/* k29947 in k29944 in k29941 in k29938 in a29923 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29949,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29960,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t3,((C_word*)t0)[8]);}

/* k29958 in k29947 in k29944 in k29941 in k29938 in a29923 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k29916 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(32512),t1);}

/* k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18849,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29773,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[96],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[312],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[311],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29779,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[738],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a29778 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29779(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29779,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29792,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_29792(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29818,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t12,t13,C_fix(256));}}

/* k29816 in a29778 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29818,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29792(t4,t3);}

/* k29790 in a29778 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29792,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k29771 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(37632),t1);}

/* k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18852,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29316,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[311],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[311],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[312],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[311],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29322,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29361,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[737],C_fix(36352),t23,t24,t25);}

/* a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29361,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29365,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t6,t2);}

/* k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29365,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[337]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29374,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29377,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t7,t2,C_fix(24576));}

/* k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29377,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29386,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li475),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_29386(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t2,t3);}}

/* k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29653,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29450,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_29450(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29591,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 369  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k29589 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29591,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29600,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29625,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 369  substring");
t6=*((C_word*)lf[353]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_29600(t4,C_SCHEME_FALSE);}}

/* k29623 in k29589 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29600(t2,(C_word)C_i_string_equal_p(t1,lf[736]));}

/* k29598 in k29589 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29600,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29607,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29611,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 369  substring");
t5=*((C_word*)lf[353]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_29450(t2,C_SCHEME_UNDEFINED);}}

/* k29609 in k29598 in k29589 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[308]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29605 in k29598 in k29589 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29450(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29450(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29450,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29453,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t3,((C_word*)t0)[2],C_fix(24064));}

/* k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29528,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t2,lf[733],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k29567 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29569,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t2,lf[735],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_29453(t2,C_SCHEME_UNDEFINED);}}

/* k29571 in k29567 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29573,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29577,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29575 in k29571 in k29567 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29577,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[726],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[734]);
t6=((C_word*)t0)[2];
f_29453(t6,t5);}

/* k29530 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29532,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29536,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29534 in k29530 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29536,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29539,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29563,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16318(t4,lf[733],((C_word*)((C_word*)t0)[2])[1]);}

/* k29561 in k29534 in k29530 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29563,2,t0,t1);}
t2=(C_word)C_eqp(lf[732],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[538]);
t4=(C_word)C_a_i_list(&a,3,lf[664],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[628],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29539(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_29539(t3,C_SCHEME_UNDEFINED);}}

/* k29537 in k29534 in k29530 in k29526 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29539,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[726],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[731]);
t5=((C_word*)t0)[2];
f_29453(t5,t4);}

/* k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29453(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29453,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29456,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29467,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29525,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k29523 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string-append");
t2=*((C_word*)lf[142]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[730]);}

/* k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29467,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29469,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li476),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_29469(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2974 in k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29469(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29469,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29484,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t6=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[728]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29488,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29517,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 369  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k29515 in do2974 in k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string-append");
t2=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29486 in do2974 in k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29488,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29491,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_29491(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29505,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t6=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[729]);}}

/* k29503 in k29486 in do2974 in k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29491(t3,t2);}

/* k29489 in k29486 in do2974 in k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29491(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_29469(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k29482 in do2974 in k29465 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29484,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[361],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k29454 in k29451 in k29448 in k29651 in k29439 in k29436 in k29433 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29456,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_29374(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2948 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29386(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29386,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29396,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k29394 in do2948 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29396,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[727],t2);}

/* k29400 in k29394 in do2948 in k29375 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29402,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[726],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[360],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_29386(t9,((C_word*)t0)[2],t8);}

/* k29372 in k29363 in a29360 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a29321 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29322,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29333,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29339,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t9,t7,C_fix(24576));}

/* k29337 in a29321 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29339,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17536(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_29333(t2,C_SCHEME_UNDEFINED);}}

/* k29353 in k29337 in a29321 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29355,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29333(t5,t4);}

/* k29331 in a29321 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_29333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k29314 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(36352),t1);}

/* k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18855,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29240,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[312],t19);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[725],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k29238 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(36608),t1);}

/* k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18858,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29196,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[92],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29202,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29216,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15900(t3,lf[724],C_fix(36864),t5,t6,t7);}

/* a29215 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29216,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29224,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29228,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t6,t2);}

/* k29226 in a29215 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29222 in a29215 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29224,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[337],t1));}

/* a29201 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29202(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29202,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29210,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16258(t4,t5);}

/* k29208 in a29201 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k29194 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[278],"*rules*"),C_fix(36864),t1);}

/* k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18858,2,t0,t1);}
t2=lf[346]=C_SCHEME_FALSE;;
t3=lf[347]=C_SCHEME_FALSE;;
t4=lf[348]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[349]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18864,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[360]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19035,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[370]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19188,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[371]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19197,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[379]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19244,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[381]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19250,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19269,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29188,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro-2");
t13=C_retrieve(lf[715]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[722],t12);}

/* a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29188(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29188,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22622,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[723]);}

/* k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22625,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  parse-iteration");
f_22604(t2,lf[722],((C_word*)t0)[2],C_retrieve2(lf[576],"*loop-operators*"));}

/* k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22625,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[538],C_retrieve2(lf[576],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22632,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22777,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22791,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t11=C_retrieve2(lf[392],"loop-returning");
f_19376(3,t11,t10,t1);}

/* k22789 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22791,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_22777(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22787,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t3=C_retrieve2(lf[392],"loop-returning");
f_19376(3,t3,t2,((C_word*)t0)[2]);}}

/* k22785 in k22789 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_22777(t2,(C_word)C_i_car(t1));}

/* k22775 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22632,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-end-tests");
t4=C_retrieve2(lf[387],"loop-end-tests");
f_19328(3,t4,t3,((C_word*)t0)[2]);}

/* k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_22639(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[312],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[721],C_SCHEME_FALSE);
t7=t2;
f_22639(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22639,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22650,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-bindings");
t4=C_retrieve2(lf[384],"loop-bindings");
f_19292(3,t4,t3,((C_word*)t0)[2]);}

/* k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22654,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-initially");
t4=C_retrieve2(lf[386],"loop-initially");
f_19316(3,t4,t3,((C_word*)t0)[3]);}

/* k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22658,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[538]);
t3=(C_word)C_a_i_list(&a,1,lf[681]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22722,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22726,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t7=C_retrieve2(lf[388],"loop-looping");
f_19340(3,t7,t6,((C_word*)t0)[3]);}

/* k22728 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22734,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22738,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-stepping");
t4=C_retrieve2(lf[390],"loop-stepping");
f_19352(3,t4,t3,((C_word*)t0)[2]);}

/* k22736 in k22728 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22738,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k22732 in k22728 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22724 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22720 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22722,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[664],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[628],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22690,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22694,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-finally");
t9=C_retrieve2(lf[391],"loop-finally");
f_19364(3,t9,t8,((C_word*)t0)[2]);}

/* k22692 in k22720 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22694,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22688 in k22720 in k22656 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22690,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[664],t3);
t5=(C_word)C_a_i_list(&a,2,lf[628],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k22652 in k22648 in k22637 in k22634 in k22630 in k22623 in k22620 in a29187 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22654,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19272,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29174,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[720],t3);}

/* a29173 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29174,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[719],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[337],t5,t3));}

/* k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19275,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29145,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[718],t3);}

/* a29144 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29145(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29145,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29149,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[717]);}

/* k29147 in a29144 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29149,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19278,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29142,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[716],t3);}

/* a29141 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29142(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29142,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19278,2,t0,t1);}
t2=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19286,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19292,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19304,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19316,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19328,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19340,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19346,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19352,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19364,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19376,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19388,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19539,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19610,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19616,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19622,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19628,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[417],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19788,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[425],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19870,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[455],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20252,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[458],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20299,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[477],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20650,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[485],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20792,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[499],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20985,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[502],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21052,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[505],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21090,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[508],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21249,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[537],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21795,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[539],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21801,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[545],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21867,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21958,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[554],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22059,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[560],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22190,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[566],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22604,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[486],C_retrieve2(lf[485],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[397],C_retrieve2(lf[505],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[574],C_retrieve2(lf[455],"parse-repeat"),lf[571]);
t38=(C_word)C_a_i_list(&a,2,lf[433],C_retrieve2(lf[425],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[429],C_retrieve2(lf[425],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[431],C_retrieve2(lf[425],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[440],C_retrieve2(lf[425],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[430],C_retrieve2(lf[425],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[432],C_retrieve2(lf[425],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[465],C_retrieve2(lf[458],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[474],C_retrieve2(lf[458],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[459],C_retrieve2(lf[458],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[478],C_retrieve2(lf[477],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[464],C_retrieve2(lf[458],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[426],C_retrieve2(lf[417],"parse-for"),lf[571],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[575],C_retrieve2(lf[417],"parse-for"),lf[571]);
t51=(C_word)C_a_i_list(&a,3,lf[567],C_retrieve2(lf[499],"parse-do"),lf[558]);
t52=(C_word)C_a_i_list(&a,3,lf[519],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t54=(C_word)C_a_i_list(&a,3,lf[524],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t55=(C_word)C_a_i_list(&a,3,lf[509],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t56=(C_word)C_a_i_list(&a,3,lf[510],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t57=(C_word)C_a_i_list(&a,3,lf[512],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t58=(C_word)C_a_i_list(&a,3,lf[513],C_retrieve2(lf[508],"parse-accumulation"),lf[558]);
t59=(C_word)C_a_i_list(&a,4,lf[546],C_retrieve2(lf[545],"parse-thereis"),lf[558],C_retrieve2(lf[537],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[547],C_retrieve2(lf[545],"parse-thereis"),lf[558],C_retrieve2(lf[537],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[548],C_retrieve2(lf[545],"parse-thereis"),lf[558],C_retrieve2(lf[537],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[538],C_retrieve2(lf[551],"parse-return"),lf[558],C_retrieve2(lf[537],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[542],C_retrieve2(lf[539],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[541],C_retrieve2(lf[539],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[560],"parse-conditional"),lf[558]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[560],"parse-conditional"),lf[558]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[560],"parse-conditional"),lf[558]);
t68=(C_word)C_a_i_list(&a,3,lf[401],C_retrieve2(lf[502],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[576],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22798,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29000,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro-2");
t73=C_retrieve(lf[715]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[571],t72);}

/* a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_29000(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29000,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22804,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  parse-iteration");
f_22604(t3,lf[571],t2,C_retrieve2(lf[576],"*loop-operators*"));}

/* k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22807,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[538],C_retrieve2(lf[576],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22936,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t6=C_retrieve2(lf[392],"loop-returning");
f_19376(3,t6,t5,t1);}

/* k22934 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22936,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22818,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-bindings");
t3=C_retrieve2(lf[384],"loop-bindings");
f_19292(3,t3,t2,((C_word*)t0)[2]);}

/* k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22822,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-initially");
t4=C_retrieve2(lf[386],"loop-initially");
f_19316(3,t4,t3,((C_word*)t0)[2]);}

/* k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22846,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-end-tests");
t4=C_retrieve2(lf[387],"loop-end-tests");
f_19328(3,t4,t3,((C_word*)t0)[2]);}

/* k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[312],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[681],lf[275]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_22853(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_22853(t3,C_SCHEME_END_OF_LIST);}}

/* k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22853,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22857,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[388],"loop-looping");
f_19340(3,t4,t3,((C_word*)t0)[2]);}

/* k22859 in k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22865,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-stepping");
t4=C_retrieve2(lf[390],"loop-stepping");
f_19352(3,t4,t3,((C_word*)t0)[2]);}

/* k22867 in k22859 in k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22869,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[681],lf[711]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22885,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22889,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-finally");
t5=C_retrieve2(lf[391],"loop-finally");
f_19364(3,t5,t4,((C_word*)t0)[2]);}

/* k22887 in k22867 in k22859 in k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22889,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22883 in k22867 in k22859 in k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22885,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[275],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22863 in k22859 in k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22855 in k22851 in k22848 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22844 in k22824 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22846,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[711],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[712],t2);
t4=(C_word)C_a_i_list(&a,3,lf[713],lf[714],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k22820 in k22816 in k22805 in k22802 in a28999 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22822,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22798,2,t0,t1);}
t2=C_mutate((C_word*)lf[577]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22942,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23671,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23690,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24141,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24160,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24889,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[588]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24908,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25637,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[591]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25656,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26107,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26126,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[594]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26577,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26596,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27066,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27084,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27099,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27114,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27133,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27148,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27167,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[603]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27186,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27209,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[605]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27228,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[606]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27251,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[608]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27298,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[610]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27353,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[611]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27372,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[612]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27395,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[613]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27423,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[614]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27451,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[615]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27479,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[616]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27507,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[617]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27535,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[618]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27563,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[619]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27591,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[620]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27619,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[621]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27647,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[622]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27662,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27720,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t41=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[709],lf[710]);}

/* k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27723,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[707],lf[708]);}

/* k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27726,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[705],lf[706]);}

/* k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27729,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[703],lf[704]);}

/* k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27732,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[701],lf[702]);}

/* k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27735,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[699],lf[700]);}

/* k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27738,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[697],lf[698]);}

/* k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27741,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[695],lf[696]);}

/* k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27744,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[693],lf[694]);}

/* k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27747,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[691],lf[692]);}

/* k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27750,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[689],lf[690]);}

/* k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27750,2,t0,t1);}
t2=C_mutate((C_word*)lf[629]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27752,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[630]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27809,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[631]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27866,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27875,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t6=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[687],lf[688]);}

/* k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27878,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[685],lf[686]);}

/* k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27881,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[682]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[683],lf[684]);}

/* k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27881,2,t0,t1);}
t2=C_mutate((C_word*)lf[632]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27883,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[361]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28073,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[350]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28087,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[640]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28101,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[641]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28104,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[642],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28116,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28125,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[645],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28169,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[372]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28191,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[646]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28210,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[649]+1,C_retrieve(lf[641]));
t13=C_mutate((C_word*)lf[650]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28378,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28441,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28450,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28456,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[659]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28465,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[661]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28523,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28533,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28994,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 547  ##sys#register-macro");
t21=C_retrieve(lf[680]);
((C_proc4)C_retrieve_proc(t21))(4,t21,t19,lf[681],t20);}

/* a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_28994r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28994r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28994r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28548,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_28548(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 556  error");
t14=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[679],t2);}}

/* k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 560  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[677]);}
else{
t3=t2;
f_28551(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 558  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[678],((C_word*)t0)[8]);}}

/* k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28554,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li465),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28829(t6,t2,((C_word*)t0)[2]);}

/* do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28829(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28829,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28839,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28849,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28937,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 564  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_28849(t6,C_SCHEME_FALSE);}}}

/* k28935 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_28849(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_28849(t2,C_SCHEME_FALSE);}}

/* k28847 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28849,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28858,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_28858(t9,lf[675]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_28858(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 577  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[676],t2);}}

/* k28856 in k28847 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28858,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 572  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k28860 in k28856 in k28847 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28862,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 573  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k28864 in k28860 in k28856 in k28847 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28866,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28870,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28874,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[675]);
if(C_truep(t5)){
t6=t4;
f_28874(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_28874(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k28872 in k28864 in k28860 in k28856 in k28847 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28874(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 574  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28868 in k28864 in k28860 in k28856 in k28847 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28839(2,t3,t2);}

/* k28837 in do5260 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28829(t3,((C_word*)t0)[2],t2);}

/* k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 579  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 580  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 581  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 582  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28566,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28722,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28823,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 588  caar");
t10=*((C_word*)lf[672]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_28722(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_28722(t8,C_SCHEME_FALSE);}}

/* k28821 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28722(t2,(C_word)C_eqp(t1,lf[674]));}

/* k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28722,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 589  cdar");
t3=*((C_word*)lf[670]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_28569(2,t2,C_SCHEME_UNDEFINED);}}

/* k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28729,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28731,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li464),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_28731(t5,((C_word*)t0)[2],t1);}

/* do5276 in k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28731(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28731,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28745,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28755,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28803,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 593  cdar");
t7=*((C_word*)lf[670]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_28755(t6,C_SCHEME_FALSE);}}}

/* k28801 in do5276 in k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28755(t2,(C_word)C_i_pairp(t1));}

/* k28753 in do5276 in k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28755(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28755,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 594  caar");
t3=*((C_word*)lf[672]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 600  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[673],t2);}}

/* k28756 in k28753 in do5276 in k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28758,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[669]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 596  cdar");
t4=*((C_word*)lf[670]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 599  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[671],t3);}}

/* k28777 in k28756 in k28753 in do5276 in k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_28745(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_28745(2,t3,t2);}}

/* k28743 in do5276 in k28727 in k28720 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28731(t3,((C_word*)t0)[2],t2);}

/* k28567 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28569,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 551  ##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k28709 in k28567 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28711,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28695,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28699,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 551  ##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k28697 in k28709 in k28567 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 551  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28693 in k28709 in k28567 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28695,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28576,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[466],lf[625]);
t9=(C_word)C_a_i_list(&a,2,lf[466],lf[626]);
t10=(C_word)C_a_i_list(&a,3,lf[624],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[31],lf[668],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[350],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[664],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[664],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[627],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[664],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[628],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_28576(t21,t20);}
else{
t6=t5;
f_28576(t6,C_SCHEME_UNDEFINED);}}

/* k28574 in k28693 in k28709 in k28567 in k28564 in k28561 in k28558 in k28555 in k28552 in k28549 in k28546 in a28993 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28576,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[664],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[665],t4);
t6=(C_word)C_a_i_list(&a,1,lf[666]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],lf[666]);
t8=(C_word)C_a_i_list(&a,3,lf[664],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[667],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[2],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[664],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[664],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k28531 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28992,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 645  return-to-host");
t3=C_retrieve(lf[662]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28990 in k28531 in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28527,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28186,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28184 in hush in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28186,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5186,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28525 in hush in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 541  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28465(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_28465r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28465r(t0,t1,t2);}}

static void C_ccall f_28465r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28469,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 531  scheduler-stop");
f_28169(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28483,a[2]=t5,a[3]=((C_word)li460),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_28483(t7,t3,t2);}}

/* do5244 in stop in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28483(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28483,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28493,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 535  scheduler-stop");
f_28169(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 536  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[660],t5);}}}

/* k28491 in do5244 in stop in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28483(t3,((C_word*)t0)[2],t2);}

/* k28467 in stop in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 537  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28460,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28164,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28162 in cont in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28164,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5176,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28458 in cont in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 527  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28146,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k28144 in paused? in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28146,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5168,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28445,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28155,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28153 in pause in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28155,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5172,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28443 in pause in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 520  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28378(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_28378r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_28378r(t0,t1,t2);}}

static void C_ccall f_28378r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28391,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28111,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[652]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28403,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_28403(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_28403(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[655])));}}}

/* k28401 in time-format in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[649]+1,C_retrieve(lf[641]));
C_trace("ChickenBridge.scm: 509  scheduler-set-time-milliseconds");
f_28116(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[653]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[649]+1,C_retrieve(lf[640]));
C_trace("ChickenBridge.scm: 513  scheduler-set-time-milliseconds");
f_28116(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 516  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[654],t4);}}}

/* k28109 in time-format in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28111,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5148,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28389 in time-format in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[651]));}

/* sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28210(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_28210r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_28210r(t0,t1,t2,t3);}}

static void C_ccall f_28210r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28212,a[2]=t2,a[3]=((C_word)li448),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28324,a[2]=t4,a[3]=((C_word)li449),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28329,a[2]=t5,a[3]=((C_word)li450),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start52035224");
t7=t6;
f_28329(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id52045222");
t9=t5;
f_28324(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body52015206");
t11=t4;
f_28212(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[647]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[648],t10);}}}}

/* def-start5203 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28329(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28329,NULL,2,t0,t1);}
C_trace("def-id52045222");
t2=((C_word*)t0)[2];
f_28324(t2,t1,C_fix(0));}

/* def-id5204 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28324(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28324,NULL,3,t0,t1,t2);}
C_trace("body52015206");
t3=((C_word*)t0)[2];
f_28212(t3,t1,t2,C_fix(-1));}

/* body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28212(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28212,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28214,a[2]=t4,a[3]=((C_word)li445),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28242,a[2]=t5,a[3]=((C_word)li446),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28272,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28283,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li447),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_28283(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28315,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28319,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 493  nextstart");
t11=t6;
f_28214(t11,t10);}}

/* k28317 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28323,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 493  nextid");
t3=((C_word*)t0)[2];
f_28242(t3,t2);}

/* k28321 in k28317 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 493  scheduler-sprout");
f_28125(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28313 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28272(2,t2,((C_word*)t0)[2]);}

/* do5215 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28283(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28283,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28293,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28308,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextstart");
t6=((C_word*)t0)[2];
f_28214(t6,t5);}}

/* k28306 in do5215 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28312,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextid");
t3=((C_word*)t0)[2];
f_28242(t3,t2);}

/* k28310 in k28306 in do5215 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 491  scheduler-sprout");
f_28125(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28291 in do5215 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28283(t3,((C_word*)t0)[2],t2);}

/* k28270 in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 497  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28242,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5201 in sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28214(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28214,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28191(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28191,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28196,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_28196 in load-sal-file in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28196(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28196,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28201,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28201(2,t4,C_SCHEME_FALSE);}}

/* k28199 */
static void C_ccall f_28201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5192(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28169(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28169,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28173,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28171 in scheduler-stop in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28173,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5181,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28125(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28125,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28129,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k28127 in scheduler-sprout in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28129,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5161,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28116(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28116,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28120,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[643]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28118 in scheduler-set-time-milliseconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28120,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5153,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28104,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5145(t2));}

/* current-time-milliseconds in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28101,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5142(t2));}

/* print-error in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28087(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28087,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28092,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28092(2,t4,C_SCHEME_FALSE);}}

/* k28090 in print-error in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5137(C_SCHEME_UNDEFINED,t1));}

/* print-message in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28073(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28073,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28078,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28078(2,t4,C_SCHEME_FALSE);}}

/* k28076 in print-message in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5131(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27883(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27883,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27937,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27944,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 388  make-string");
t5=*((C_word*)lf[352]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27944,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27946,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li431),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27946(t5,((C_word*)t0)[2],lf[639],t1,C_fix(0));}

/* do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_27946(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27946,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27956,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 391  printf");
t6=C_retrieve(lf[328]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_27956(2,t6,C_SCHEME_UNDEFINED);}}}

/* k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27973,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27975,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li430),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27975(t7,t3,C_fix(0));}

/* do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_27975(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27975,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27995,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27930,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 380  floor");
t14=*((C_word*)lf[150]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 396  string-append");
t3=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[638]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28012,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28015,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 398  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k28013 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28015,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_28012(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 399  modulo");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k28055 in k28013 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28057,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_28012(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 401  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k28025 in k28055 in k28013 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_28027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28027,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_28012(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_28012(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k28010 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_28012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28012,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27975(t4,((C_word*)t0)[2],t3);}

/* k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27930,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27895,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  modulo");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k27893 in k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27895,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27922,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 382  floor");
t5=*((C_word*)lf[150]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27920 in k27893 in k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27922,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27903,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 383  modulo");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k27901 in k27920 in k27893 in k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27903,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 384  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27908 in k27901 in k27920 in k27893 in k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27914,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 385  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27912 in k27908 in k27901 in k27920 in k27893 in k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27918,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 386  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27916 in k27912 in k27908 in k27901 in k27920 in k27893 in k27928 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 384  string-append");
t2=*((C_word*)lf[142]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[635],((C_word*)t0)[3],lf[636],((C_word*)t0)[2],lf[637],t1);}

/* k27993 in do5119 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 395  string-append");
t2=*((C_word*)lf[142]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[633],t1,lf[634]);}

/* k27971 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 392  printf");
t2=C_retrieve(lf[328]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27957 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 404  printf");
t3=C_retrieve(lf[328]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27960 in k27957 in k27954 in do5105 in k27942 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27962,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27946(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27935 in cm-logo in k27879 in k27876 in k27873 in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27871,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_27871 in cs:clear in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27871,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5097(C_SCHEME_UNDEFINED));}

/* cs:f in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27809(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27809r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27809r(t0,t1,t2);}}

static void C_ccall f_27809r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27813,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27813(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27822,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27842,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27842(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27842(t8,C_SCHEME_FALSE);}}}

/* k27840 in cs:f in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_27842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27822(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27822(t2,C_SCHEME_UNDEFINED);}}

/* k27820 in cs:f in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_27822(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27822,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27830,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27830 in k27820 in cs:f in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27830,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5090(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27811 in cs:f in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27752(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27752r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27752r(t0,t1,t2);}}

static void C_ccall f_27752r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27756,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27756(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27765,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27785,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27785(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27785(t8,C_SCHEME_FALSE);}}}

/* k27783 in cs:i in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_27785(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27765(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27765(t2,C_SCHEME_UNDEFINED);}}

/* k27763 in cs:i in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_27765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27765,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27773,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27773 in k27763 in cs:i in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27773,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5079(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27754 in cs:i in k27748 in k27745 in k27742 in k27739 in k27736 in k27733 in k27730 in k27727 in k27724 in k27721 in k27718 in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27662,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27674,a[2]=t2,a[3]=((C_word)li420),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27711,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27716,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_27716 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27716(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27716,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5023(C_SCHEME_UNDEFINED,t2));}

/* f_27711 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27711,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5014(C_SCHEME_UNDEFINED,t2));}

/* a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27674(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27674,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27680,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li419),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  call-with-current-continuation");
t4=*((C_word*)lf[628]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27680(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27680,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27686,a[2]=t2,a[3]=((C_word)li417),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27706,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li418),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  with-exception-handler");
t5=C_retrieve(lf[627]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a27705 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27710,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27708 in a27705 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a27685 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27686(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27686,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27690,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27697,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27701,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27704,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 371  condition-property-accessor");
t7=C_retrieve(lf[624]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[625],lf[626]);}

/* k27702 in a27685 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27699 in a27685 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[623],t1);}

/* k27695 in a27685 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  print-error");
t2=C_retrieve(lf[350]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27688 in a27685 in a27679 in a27673 in mp:inhook in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27647(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27647,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27652,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27652 in mp:mm in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27652(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27652,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5007(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27619,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27624,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_27624 in mp:bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27624(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27624,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4998(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27591(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27591,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27596,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_27596 in mp:press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27596,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4983(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27563,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27568,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_27568 in mp:prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27568,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4968(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27535(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27535,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27540,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_27540 in mp:ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27540,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4953(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27507,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27512,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_27512 in mp:touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27512,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4937(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27479,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27484,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_27484 in mp:on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27484,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4921(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27451,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27456,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_27456 in mp:off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27456,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4905(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27423,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27428,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27428 in mp:midi in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27428,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4890(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27395(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27395,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27400,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27400 in mp:note in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27400,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4873(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27372,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27376,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27377,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27377 in mm:num-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27377,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4855(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27374 in mm:num-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27353(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27353,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27358,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27358 in mm:num in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27358,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4844(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27298,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27302,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27305,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  mm:type?");
t6=C_retrieve(lf[607]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k27303 in mm:val-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_27308(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 371  mm:type?");
t3=C_retrieve(lf[607]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k27306 in k27303 in mm:val-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27308,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27312,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27332,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[609]));}}

/* f_27332 in k27306 in k27303 in mm:val-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27332(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27332,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4833(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_27312 in k27306 in k27303 in mm:val-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27312(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27312,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4823(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27300 in mm:val-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27251(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27251,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27258,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 371  mm:type?");
t4=C_retrieve(lf[607]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k27256 in mm:val in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_27261(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 371  mm:type?");
t3=C_retrieve(lf[607]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k27259 in k27256 in mm:val in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27261,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27265,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27281,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_27281 in k27259 in k27256 in mm:val in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27281,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4810(C_SCHEME_UNDEFINED,t4,t5));}

/* f_27265 in k27259 in k27256 in mm:val in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27265(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27265,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4802(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27228(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27228,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27232,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27233,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_27233 in mm:vel-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27233,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4789(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27230 in mm:vel-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27209,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27214,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_27214 in mm:vel in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27214,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4778(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27186,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27190,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27191,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27191 in mm:key-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27191,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4767(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27188 in mm:key-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27167(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27167,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27172,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27172 in mm:key in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27172,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4756(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27148(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27148,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27152,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27153,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_27153 in mm:chan-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27153,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4746(C_SCHEME_UNDEFINED,t4,t5));}

/* k27150 in mm:chan-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27133(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27133,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27138,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27138 in mm:chan in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27138(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27138,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4737(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27114,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27118,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27119,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_27119 in mm:time-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27119,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4728(C_SCHEME_UNDEFINED,t4,t5));}

/* k27116 in mm:time-set! in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27099(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27099,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27104,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27104 in mm:time in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27104(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27104,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4718(t3,t4));}

/* mm:copy in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27084,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27089,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27089 in mm:copy in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27089(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27089,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4710(t3,t4));}

/* mm:free in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27066(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27066,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27070,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27074,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_27074 in mm:free in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27074(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27074,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4702(C_SCHEME_UNDEFINED,t3));}

/* k27068 in mm:free in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26596(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26596r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26596r(t0,t1,t2);}}

static void C_ccall f_26596r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26600,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26600(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[578]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26925,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[578]);}
else{
t23=t22;
f_26925(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[586]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26960,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[586]);}
else{
t24=t23;
f_26960(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[581]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26995,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[581]);}
else{
t25=t24;
f_26995(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27024,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_27024(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k27022 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27024,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27039,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27037 in k27022 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27031(2,t2,C_SCHEME_UNDEFINED);}}

/* k27029 in k27022 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_27031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26600(t5,t4);}

/* k26993 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26999(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26997 in k26993 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26600(t7,t6);}

/* k26958 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26964(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26962 in k26958 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26600(t7,t6);}

/* k26923 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26929,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26929(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26927 in k26923 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26600(t7,t6);}

/* k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_26600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26600,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26603(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26790,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_26790(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26825,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[586]);}
else{
t7=t6;
f_26825(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26860,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_26860(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26889,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26889(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26887 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26889,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26896,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26904,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26902 in k26887 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26896(2,t2,C_SCHEME_UNDEFINED);}}

/* k26894 in k26887 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26603(t5,t4);}

/* k26858 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26864,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26864(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26862 in k26858 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26603(t7,t6);}

/* k26823 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26829(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26827 in k26823 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26603(t7,t6);}

/* k26788 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26794,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26794(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26792 in k26788 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26603(t7,t6);}

/* k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_26603(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26603,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26606,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26606(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26655,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_26655(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26690,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[586]);}
else{
t7=t6;
f_26690(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26725,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_26725(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26754,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26754(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26752 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26754,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26769,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26767 in k26752 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26761(2,t2,C_SCHEME_UNDEFINED);}}

/* k26759 in k26752 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26606(t5,t4);}

/* k26723 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26729(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26727 in k26723 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26606(t7,t6);}

/* k26688 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26694(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26692 in k26688 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26606(t7,t6);}

/* k26653 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26659(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26657 in k26653 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26606(t7,t6);}

/* k26604 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_26606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26606,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26609,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26609(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26607 in k26604 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26613,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26613 in k26607 in k26604 in k26601 in k26598 in mm:make-bend in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26613,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4679(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26577(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26577,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26582,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_26582 in mm:press? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26582(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26582,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4600(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26126(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26126r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26126r(t0,t1,t2);}}

static void C_ccall f_26126r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26130,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26130(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[578]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26455,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[578]);}
else{
t23=t22;
f_26455(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[586]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26490,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[586]);}
else{
t24=t23;
f_26490(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[581]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26525,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[581]);}
else{
t25=t24;
f_26525(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26554,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26554(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26552 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26554,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26569,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26567 in k26552 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26561(2,t2,C_SCHEME_UNDEFINED);}}

/* k26559 in k26552 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26130(t5,t4);}

/* k26523 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26529(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26527 in k26523 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26130(t7,t6);}

/* k26488 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26492 in k26488 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26130(t7,t6);}

/* k26453 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26457 in k26453 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26130(t7,t6);}

/* k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_26130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26130,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26133(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26320,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_26320(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26355,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[586]);}
else{
t7=t6;
f_26355(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26390,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_26390(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26419,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26419(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26417 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26419,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26434,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26432 in k26417 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26426(2,t2,C_SCHEME_UNDEFINED);}}

/* k26424 in k26417 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26133(t5,t4);}

/* k26388 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26394,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26394(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26392 in k26388 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26133(t7,t6);}

/* k26353 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26359(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26357 in k26353 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26133(t7,t6);}

/* k26318 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26324(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26322 in k26318 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26133(t7,t6);}

/* k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_26133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26133,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26136,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26136(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26185,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_26185(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26220,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[586]);}
else{
t7=t6;
f_26220(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26255,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_26255(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26284,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26284(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26282 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26284,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26299,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26297 in k26282 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26291(2,t2,C_SCHEME_UNDEFINED);}}

/* k26289 in k26282 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26136(t5,t4);}

/* k26253 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26259(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26257 in k26253 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26136(t7,t6);}

/* k26218 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26224(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26222 in k26218 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26136(t7,t6);}

/* k26183 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26189(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26187 in k26183 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26136(t7,t6);}

/* k26134 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_26136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26136,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26139,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26139(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26137 in k26134 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26143,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26143 in k26137 in k26134 in k26131 in k26128 in mm:make-press in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26143,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4585(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26107(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26107,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26112,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_26112 in mm:prog? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26112(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26112,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4506(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25656(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25656r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25656r(t0,t1,t2);}}

static void C_ccall f_25656r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25660,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25660(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[578]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25985,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[578]);}
else{
t23=t22;
f_25985(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[586]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26020,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[586]);}
else{
t24=t23;
f_26020(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[581]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26055,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[581]);}
else{
t25=t24;
f_26055(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26084,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26084(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26082 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26084,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26091,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26099,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26097 in k26082 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26091(2,t2,C_SCHEME_UNDEFINED);}}

/* k26089 in k26082 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25660(t5,t4);}

/* k26053 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26059,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26059(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26057 in k26053 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25660(t7,t6);}

/* k26018 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26024,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26024(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26022 in k26018 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_26024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25660(t7,t6);}

/* k25983 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25987 in k25983 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25660(t7,t6);}

/* k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_25660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25660,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25663(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25850,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_25850(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25885,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[586]);}
else{
t7=t6;
f_25885(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25920,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_25920(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25949,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25949(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25947 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25949,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25964,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25962 in k25947 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25956(2,t2,C_SCHEME_UNDEFINED);}}

/* k25954 in k25947 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25663(t5,t4);}

/* k25918 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25924,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25924(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25922 in k25918 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25663(t7,t6);}

/* k25883 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25889(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25887 in k25883 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25663(t7,t6);}

/* k25848 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25854(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25852 in k25848 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25663(t7,t6);}

/* k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_25663(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25663,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25666,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25666(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25715,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_25715(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25750,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[586]);}
else{
t7=t6;
f_25750(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25785,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_25785(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25814,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25814(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25812 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25814,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25829,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25827 in k25812 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25821(2,t2,C_SCHEME_UNDEFINED);}}

/* k25819 in k25812 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25666(t5,t4);}

/* k25783 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25789(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25787 in k25783 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25666(t7,t6);}

/* k25748 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25754(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25752 in k25748 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25666(t7,t6);}

/* k25713 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25719,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25719(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25717 in k25713 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25666(t7,t6);}

/* k25664 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_25666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25666,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25669,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25669(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25667 in k25664 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25673,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25673 in k25667 in k25664 in k25661 in k25658 in mm:make-prog in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25673,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4491(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25637(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25637,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25642,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_25642 in mm:ctrl? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25642,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4412(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24908(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24908r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24908r(t0,t1,t2);}}

static void C_ccall f_24908r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24912,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24912(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25480,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[578]);}
else{
t27=t26;
f_25480(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[589]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25515,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[589]);}
else{
t28=t27;
f_25515(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[586]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25550,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[586]);}
else{
t29=t28;
f_25550(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[581]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25585,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[581]);}
else{
t30=t29;
f_25585(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25614,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_25614(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25612 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25614,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25629,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25627 in k25612 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25621(2,t2,C_SCHEME_UNDEFINED);}}

/* k25619 in k25612 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24912(t5,t4);}

/* k25583 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25589,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25589(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25587 in k25583 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24912(t7,t6);}

/* k25548 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25554,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25554(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25552 in k25548 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24912(t7,t6);}

/* k25513 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25519(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25517 in k25513 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24912(t7,t6);}

/* k25478 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25482 in k25478 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24912(t7,t6);}

/* k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24912(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24912,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24915,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24915(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25310,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_25310(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[589]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25345,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[589]);}
else{
t7=t6;
f_25345(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25380,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_25380(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25415,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_25415(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25444,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25444(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25442 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25444,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25459,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25457 in k25442 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25451(2,t2,C_SCHEME_UNDEFINED);}}

/* k25449 in k25442 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24915(t5,t4);}

/* k25413 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25419(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25417 in k25413 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24915(t7,t6);}

/* k25378 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25384(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25382 in k25378 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24915(t7,t6);}

/* k25343 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25347 in k25343 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24915(t7,t6);}

/* k25308 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25314(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25312 in k25308 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24915(t7,t6);}

/* k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24915(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24915,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24918(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25140,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_25140(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[589]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25175,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[589]);}
else{
t7=t6;
f_25175(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25210,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_25210(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25245,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_25245(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25274,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25274(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25272 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25274,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25289,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25287 in k25272 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25281(2,t2,C_SCHEME_UNDEFINED);}}

/* k25279 in k25272 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24918(t5,t4);}

/* k25243 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25249(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25247 in k25243 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24918(t7,t6);}

/* k25208 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25212 in k25208 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24918(t7,t6);}

/* k25173 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25177 in k25173 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24918(t7,t6);}

/* k25138 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25142 in k25138 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24918(t7,t6);}

/* k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24918,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24921,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24921(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24970,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_24970(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[589]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25005,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[589]);}
else{
t7=t6;
f_25005(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25040,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_25040(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25075,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_25075(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25104,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25104(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25102 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25104,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25119,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25117 in k25102 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25111(2,t2,C_SCHEME_UNDEFINED);}}

/* k25109 in k25102 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24921(t5,t4);}

/* k25073 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25077 in k25073 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24921(t7,t6);}

/* k25038 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25042 in k25038 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24921(t7,t6);}

/* k25003 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25007 in k25003 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_25009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24921(t7,t6);}

/* k24968 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24972 in k24968 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24921(t7,t6);}

/* k24919 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24921(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24921,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24924,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24924(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24922 in k24919 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24928,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24928 in k24922 in k24919 in k24916 in k24913 in k24910 in mm:make-ctrl in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24928(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24928,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4396(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24889(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24889,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24894,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_24894 in mm:touch? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24894,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4280(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24160(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24160r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24160r(t0,t1,t2);}}

static void C_ccall f_24160r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24164,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24164(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24732,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[578]);}
else{
t27=t26;
f_24732(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[579]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24767,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[579]);}
else{
t28=t27;
f_24767(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[586]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24802,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[586]);}
else{
t29=t28;
f_24802(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[581]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24837,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[581]);}
else{
t30=t29;
f_24837(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24866,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_24866(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k24864 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24866,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24881,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24879 in k24864 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24873(2,t2,C_SCHEME_UNDEFINED);}}

/* k24871 in k24864 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24164(t5,t4);}

/* k24835 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24841(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24839 in k24835 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24164(t7,t6);}

/* k24800 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24806,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24806(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24804 in k24800 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24164(t7,t6);}

/* k24765 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24771(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24769 in k24765 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24164(t7,t6);}

/* k24730 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24736,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24736(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24734 in k24730 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24164(t7,t6);}

/* k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24164,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24167(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24562,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_24562(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24597,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_24597(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24632,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_24632(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24667,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_24667(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24696,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24696(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24694 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24696,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24703,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24711,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24709 in k24694 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24703(2,t2,C_SCHEME_UNDEFINED);}}

/* k24701 in k24694 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24167(t5,t4);}

/* k24665 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24671(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24669 in k24665 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24167(t7,t6);}

/* k24630 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24636(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24634 in k24630 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24167(t7,t6);}

/* k24595 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24601(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24599 in k24595 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24167(t7,t6);}

/* k24560 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24566(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24564 in k24560 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24167(t7,t6);}

/* k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24167,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24170(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24392,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_24392(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24427,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_24427(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24462,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_24462(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24497,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_24497(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24526,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24526(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24524 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24526,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24541,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24539 in k24524 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24533(2,t2,C_SCHEME_UNDEFINED);}}

/* k24531 in k24524 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24170(t5,t4);}

/* k24495 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24501(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24499 in k24495 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24170(t7,t6);}

/* k24460 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24466(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24464 in k24460 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24170(t7,t6);}

/* k24425 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24431(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24429 in k24425 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24170(t7,t6);}

/* k24390 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24396,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24396(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24394 in k24390 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24170(t7,t6);}

/* k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24170,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24173,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24173(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24222,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_24222(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24257,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_24257(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24292,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_24292(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24327,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_24327(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24356,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24356(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24354 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24356,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24371,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24369 in k24354 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24363(2,t2,C_SCHEME_UNDEFINED);}}

/* k24361 in k24354 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24173(t5,t4);}

/* k24325 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24331,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24331(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24329 in k24325 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24173(t7,t6);}

/* k24290 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24296(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24294 in k24290 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24173(t7,t6);}

/* k24255 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24261(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24259 in k24255 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24173(t7,t6);}

/* k24220 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24226,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24226(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24224 in k24220 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24173(t7,t6);}

/* k24171 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_24173(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24173,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24176,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24176(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24174 in k24171 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24180,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24180 in k24174 in k24171 in k24168 in k24165 in k24162 in mm:make-touch in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24180(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24180,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4264(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24141(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24141,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24146,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_24146 in mm:off? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24146,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4148(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23690(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_23690r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23690r(t0,t1,t2);}}

static void C_ccall f_23690r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23694,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_23694(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[578]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24019,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[578]);}
else{
t23=t22;
f_24019(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[579]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24054,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[579]);}
else{
t24=t23;
f_24054(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[581]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24089,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[581]);}
else{
t25=t24;
f_24089(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24118,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_24118(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k24116 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24118,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24133,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24131 in k24116 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24125(2,t2,C_SCHEME_UNDEFINED);}}

/* k24123 in k24116 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23694(t5,t4);}

/* k24087 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24093,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24093(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24091 in k24087 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23694(t7,t6);}

/* k24052 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24058(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24056 in k24052 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23694(t7,t6);}

/* k24017 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24023(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24021 in k24017 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_24023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23694(t7,t6);}

/* k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_23694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23694,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23697(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23884,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_23884(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23919,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_23919(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23954,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_23954(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23983,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_23983(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23981 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23983,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23998,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23996 in k23981 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23990(2,t2,C_SCHEME_UNDEFINED);}}

/* k23988 in k23981 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23697(t5,t4);}

/* k23952 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23958(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23956 in k23952 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23697(t7,t6);}

/* k23917 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23923(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23921 in k23917 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23697(t7,t6);}

/* k23882 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23886 in k23882 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23697(t7,t6);}

/* k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_23697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23697,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23700,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23700(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23749,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_23749(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23784,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_23784(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23819,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[581]);}
else{
t8=t7;
f_23819(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23848,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_23848(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23846 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23848,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23863,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23861 in k23846 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23855(2,t2,C_SCHEME_UNDEFINED);}}

/* k23853 in k23846 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23700(t5,t4);}

/* k23817 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23821 in k23817 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23700(t7,t6);}

/* k23782 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23788(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23786 in k23782 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23700(t7,t6);}

/* k23747 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23751 in k23747 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23700(t7,t6);}

/* k23698 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_23700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23700,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23703,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23703(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k23701 in k23698 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23707,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_23707 in k23701 in k23698 in k23695 in k23692 in mm:make-off in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23707,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4133(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23671(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23671,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23676,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_23676 in mm:on? in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23676,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4054(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22942(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_22942r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22942r(t0,t1,t2);}}

static void C_ccall f_22942r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22946,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_22946(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23514,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[578]);}
else{
t27=t26;
f_23514(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[579]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23549,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[579]);}
else{
t28=t27;
f_23549(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23584,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[580]);}
else{
t29=t28;
f_23584(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[581]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23619,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[581]);}
else{
t30=t29;
f_23619(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23648,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_23648(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23646 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23648,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23663,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23661 in k23646 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23655(2,t2,C_SCHEME_UNDEFINED);}}

/* k23653 in k23646 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22946(t5,t4);}

/* k23617 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23623(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23621 in k23617 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22946(t7,t6);}

/* k23582 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23588(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23586 in k23582 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22946(t7,t6);}

/* k23547 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23553(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23551 in k23547 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22946(t7,t6);}

/* k23512 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23518,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23518(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23516 in k23512 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22946(t7,t6);}

/* k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22946,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22949(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23344,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_23344(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23379,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_23379(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23414,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23414(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23449,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_23449(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23478,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23478(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23476 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23478,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23493,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23491 in k23476 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23485(2,t2,C_SCHEME_UNDEFINED);}}

/* k23483 in k23476 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22949(t5,t4);}

/* k23447 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23451 in k23447 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22949(t7,t6);}

/* k23412 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23416 in k23412 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22949(t7,t6);}

/* k23377 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23383,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23383(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23381 in k23377 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22949(t7,t6);}

/* k23342 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23348,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23348(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23346 in k23342 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22949(t7,t6);}

/* k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22949,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22952(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23174,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_23174(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23209,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_23209(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23244,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23244(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23279,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_23279(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23308,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23308(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23306 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23308,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23315,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23323,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23321 in k23306 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23315(2,t2,C_SCHEME_UNDEFINED);}}

/* k23313 in k23306 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22952(t5,t4);}

/* k23277 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23283(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23281 in k23277 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22952(t7,t6);}

/* k23242 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23248(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23246 in k23242 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22952(t7,t6);}

/* k23207 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23213(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23211 in k23207 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22952(t7,t6);}

/* k23172 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23178,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23178(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23176 in k23172 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22952(t7,t6);}

/* k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22952,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22955,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22955(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23004,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[578]);}
else{
t6=t5;
f_23004(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23039,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[579]);}
else{
t7=t6;
f_23039(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23074,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23074(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[581]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23109,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[581]);}
else{
t9=t8;
f_23109(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23138,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23138(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23136 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23138,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23153,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23151 in k23136 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23145(2,t2,C_SCHEME_UNDEFINED);}}

/* k23143 in k23136 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22955(t5,t4);}

/* k23107 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23113(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23111 in k23107 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22955(t7,t6);}

/* k23072 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23078(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23076 in k23072 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22955(t7,t6);}

/* k23037 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23043(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23041 in k23037 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22955(t7,t6);}

/* k23002 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23008(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23006 in k23002 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_23008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22955(t7,t6);}

/* k22953 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22955,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22958,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22958(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k22956 in k22953 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22962,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_22962 in k22956 in k22953 in k22950 in k22947 in k22944 in mm:make-on in k22796 in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22962,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4038(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22604(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22604,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22612,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22444,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_22444(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_22444(t12,(C_word)C_i_not(t11));}}

/* k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22444,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22451,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(t2,(C_word)C_a_i_list(&a,4,lf[394],lf[567],lf[399],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22452,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22477,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22479,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li339),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_22479(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22479(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22479,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22489,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[311]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_22489(t16,t13);}
else{
t13=t10;
f_22489(t13,C_SCHEME_UNDEFINED);}}}

/* k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22489(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22489,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t2,t3,((C_word*)t0)[3]);}

/* k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22493,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_22496(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[572],t5,lf[573]));}}

/* k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22548,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li337),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22557,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li338),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22556 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22557,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22547 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22548,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22497 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22502,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  op-type?");
f_22452(t3,((C_word*)((C_word*)t0)[6])[1],lf[558]);}

/* k22516 in k22497 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22518,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_22502(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  op-type?");
f_22452(t2,((C_word*)((C_word*)t0)[6])[1],lf[571]);}}

/* k22523 in k22516 in k22497 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22525,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_22502(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[568],t2,lf[569],t3,lf[570]));}}
else{
t2=((C_word*)t0)[5];
f_22502(2,t2,C_SCHEME_UNDEFINED);}}

/* k22500 in k22497 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22502,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k22506 in k22500 in k22497 in k22494 in k22491 in k22487 in do3836 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_22479(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22475 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_22612(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22452(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22452,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k22449 in k22442 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22451,2,t0,t1);}
t2=((C_word*)t0)[2];
f_22612(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k22610 in parse-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22612(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19539(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22190,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[561],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22212,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[564],t8,lf[565]));}
else{
t19=t17;
f_22212(2,t19,C_SCHEME_UNDEFINED);}}

/* k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22212,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[563]));}
else{
t9=t8;
f_22227(2,t9,C_SCHEME_UNDEFINED);}}

/* k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22230,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[313],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_22230(t6,t5);}
else{
t4=t2;
f_22230(t4,C_SCHEME_UNDEFINED);}}

/* k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22230,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22400,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li333),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22406,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li334),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22405 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22406(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22406,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22399 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22400,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  parse-then-else-dependents");
f_22059(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_22236(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22382,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19539(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k22380 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22236(t3,t2);}

/* k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  loop-operator-set!");
f_19286(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22375,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[388],"loop-looping");
f_19340(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k22373 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22375,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[337],t1);
C_trace("ChickenBridge.scm: 370  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22363,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22246,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_22259(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_22259(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22259,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[562]));}
else{
t5=t4;
f_22266(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_22246(t2,C_SCHEME_UNDEFINED);}}

/* k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22269,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li331),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22336,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li332),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22335 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22336,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22321 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22330,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k22328 in a22321 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  parse-then-else-dependents");
f_22059(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_22272(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22308,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19539(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k22306 in k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22272(t3,t2);}

/* k22270 in k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22272(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22272,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[388],"loop-looping");
f_19340(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22299 in k22270 in k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22301,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[337],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22278,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19346(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k22276 in k22299 in k22270 in k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19346(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k22279 in k22276 in k22299 in k22270 in k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19539(t2,lf[20],t3);}

/* k22283 in k22279 in k22276 in k22299 in k22270 in k22267 in k22264 in k22257 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22246(t3,t2);}

/* k22244 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22246(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22246,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19346(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k22247 in k22244 in k22361 in k22237 in k22234 in k22231 in k22228 in k22225 in k22210 in parse-conditional in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22059(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22059,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22063,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22068,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li329),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_22068(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22068(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22068,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t12,t10,t11);}}

/* k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22022,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_22022(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[558]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[559]);
t8=t2;
f_22022(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_22022(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_22022(t3,C_SCHEME_FALSE);}}

/* k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_22022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22022,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22085,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_22085(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[556],t6,lf[557]));}}

/* k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22158,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li327),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22171,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li328),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22170 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22171,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22157 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22166,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22164 in a22157 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k22086 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k22090 in k22086 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22092,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22097,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_22097(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[311]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[555]));}
else{
t10=t5;
f_22097(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_22097(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22135,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t10,t11,((C_word*)t0)[3]);}}}}

/* k22133 in k22090 in k22086 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_22097(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_22097(2,t2,C_SCHEME_UNDEFINED);}}

/* k22095 in k22090 in k22086 in k22083 in k22020 in k22014 in do3769 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_22068(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22061 in parse-then-else-dependents in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_22063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21958,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21965,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[552],t13,lf[553]));}
else{
t13=t11;
f_21965(2,t13,C_SCHEME_UNDEFINED);}}

/* k21963 in parse-return in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21965,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21996,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21994 in k21963 in parse-return in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21996,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21992,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21990 in k21994 in k21963 in parse-return in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21992,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[394],lf[538],lf[399],t2));}

/* k21982 in k21994 in k21963 in parse-return in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21867,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21874,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[549],t15,lf[550]));}
else{
t15=t13;
f_21874(2,t15,C_SCHEME_UNDEFINED);}}

/* k21872 in parse-thereis in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21874,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21940 in k21872 in parse-thereis in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21942,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21885,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[546]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_21885(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[547]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[313],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_21885(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[548]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_21885(t9,t8);}
else{
t8=t4;
f_21885(t8,C_SCHEME_UNDEFINED);}}}}

/* k21883 in k21940 in k21872 in parse-thereis in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21885(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21885,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21896,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21912,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k21910 in k21883 in k21940 in k21872 in parse-thereis in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21912,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[394],lf[546],lf[399],t3,lf[402],t4));}

/* k21894 in k21883 in k21940 in k21872 in parse-thereis in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21801,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21812,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[543],t7,lf[544]));}
else{
t13=t12;
f_21812(2,t13,C_SCHEME_UNDEFINED);}}

/* k21810 in parse-while-until in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21815,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[541]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_21815(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[542]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[313],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_21815(t10,t9);}
else{
t5=t2;
f_21815(t5,C_SCHEME_UNDEFINED);}}}

/* k21813 in k21810 in parse-while-until in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21815,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21822,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[540]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(t2,(C_word)C_a_i_list(&a,4,lf[394],((C_word*)t0)[2],lf[399],t4));}

/* k21820 in k21813 in k21810 in parse-while-until in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21795(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21795,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[538],t2));}

/* parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21249,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21258,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21263,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21268,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21280,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[535],t7,lf[536]));}
else{
t30=t29;
f_21280(2,t30,C_SCHEME_UNDEFINED);}}

/* k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21280,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_21291(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[531]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21744,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[534]));}
else{
t11=t9;
f_21744(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_21291(2,t9,C_SCHEME_UNDEFINED);}}}

/* k21742 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19616(t2,t3);}

/* k21748 in k21742 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21750,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_21291(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[532],t2,lf[533]));}}

/* k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_21295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21176,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li321),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_21176(t9,t2,C_SCHEME_FALSE);}

/* do3591 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21176(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21176,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21190,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21201,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  loop-collectors");
t9=C_retrieve2(lf[385],"loop-collectors");
f_19304(3,t9,t7,t8);}}

/* k21199 in do3591 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21201,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21136,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li320),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_21136(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3583 in k21199 in do3591 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21136(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21136,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21149,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_21149(t12,t11);}
else{
t10=t6;
f_21149(t10,C_SCHEME_UNDEFINED);}}}

/* k21147 in do3583 in k21199 in do3591 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_21136(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21188 in do3591 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_21176(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21295,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_21298,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21728,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21732,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-type");
f_21263(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_21298(2,t6,t5);}}

/* k21730 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[528];
t3=lf[529];
t4=lf[530];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_21728(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_21728(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_21728(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_21728(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k21726 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21728,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_21298(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21724,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  collector-type");
f_21263(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21722 in k21726 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21724,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[525],t1,lf[526],((C_word*)t0)[2],lf[527]));}

/* k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21301,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[509]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[510]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21344,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21382,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_21382(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 370  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[511]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21411,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_21268(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[512]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[513]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[515]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_21518(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[519]);
t10=t8;
f_21518(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[524])));}}}}

/* k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21518(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21518,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21521,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21634,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21692,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t9,((C_word*)((C_word*)t0)[13])[1],lf[523]);}
else{
t9=t8;
f_21634(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21627,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_21268(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_21301(t2,C_SCHEME_UNDEFINED);}}

/* k21625 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21521(t6,t5);}

/* k21690 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21692,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21634(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21632 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21634(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21634,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21638,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[522]);}

/* k21636 in k21632 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21638,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[521]);}

/* k21640 in k21636 in k21632 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21642,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21684,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,((C_word*)((C_word*)t0)[11])[1],lf[520]);}

/* k21682 in k21640 in k21636 in k21632 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21684,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k21678 in k21682 in k21640 in k21636 in k21632 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21680,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21658,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_21258(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k21656 in k21678 in k21682 in k21640 in k21636 in k21632 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21658,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21521(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21521(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21519 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21521(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21521,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21524,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[516]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[517],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[518],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21524(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[519]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[516],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[517],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21524(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[517],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[518],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_21524(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21522 in k21519 in k21516 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21524(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21524,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21301(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_21301(t2,C_SCHEME_UNDEFINED);}}

/* k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21423,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[512]);
t3=(C_truep(t2)?lf[342]:lf[340]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21429,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21473,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_21473(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 370  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[514]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21506,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_21268(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21504 in k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21429(t3,t2);}

/* k21471 in k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21473,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k21497 in k21471 in k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21499,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21481,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_21258(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21479 in k21497 in k21471 in k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21481,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21429(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21429(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21427 in k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21429,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k21467 in k21427 in k21421 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21469,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[313],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[312],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[337],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_21301(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k21409 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21344(t3,t2);}

/* k21380 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21382,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k21402 in k21380 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21404,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21390,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_21258(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21388 in k21402 in k21380 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21390,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21344(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_21344(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21342 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21344,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[509]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21301(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_21301(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k21299 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21301(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21301,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21308,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21310 in k21299 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21314 in k21310 in k21299 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21320,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21318 in k21314 in k21310 in k21299 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21324,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21322 in k21318 in k21314 in k21310 in k21299 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21324,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[394],((C_word*)t0)[5],lf[395],((C_word*)t0)[4],lf[397],((C_word*)t0)[3],lf[399],((C_word*)t0)[2],lf[402],t1,lf[396],t2,lf[398],C_SCHEME_END_OF_LIST));}

/* k21306 in k21299 in k21296 in k21293 in k21289 in k21278 in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21268(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21268,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21263(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21263,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21258(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21258,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21090,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21101,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[506],t6,lf[507]));}
else{
t12=t11;
f_21101(2,t12,C_SCHEME_UNDEFINED);}}

/* k21099 in parse-initially in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21101,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21116,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(t6,(C_word)C_a_i_list(&a,4,lf[394],((C_word*)t0)[2],lf[397],t7));}

/* k21114 in k21099 in parse-initially in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21052,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21063,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[503],t6,lf[504]));}
else{
t12=t11;
f_21063(2,t12,C_SCHEME_UNDEFINED);}}

/* k21061 in parse-finally in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21063,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21078,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(t6,(C_word)C_a_i_list(&a,4,lf[394],((C_word*)t0)[2],lf[401],t7));}

/* k21076 in k21061 in parse-finally in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20985,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20996,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21005,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li313),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_21005(t16,t12);}

/* do3540 in parse-do in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_21005(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21005,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_21015(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t3,t4,((C_word*)t0)[5]);}}

/* k21013 in do3540 in parse-do in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21015,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[500],((C_word*)t0)[4],lf[501]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21028,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_21005(t7,((C_word*)t0)[7]);}}

/* k21026 in k21013 in do3540 in parse-do in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k20994 in parse-do in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21003,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(t2,(C_word)C_a_i_list(&a,4,lf[394],((C_word*)t0)[3],lf[399],((C_word*)((C_word*)t0)[2])[1]));}

/* k21001 in k20994 in parse-do in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_21003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20792,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20799,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20852,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li311),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_20852(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20852(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20852,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_20862(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t7,t8,((C_word*)t0)[5]);}}

/* k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20862,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20873,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20976,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19616(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k20974 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20976,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20882,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[490],((C_word*)((C_word*)t0)[10])[1],lf[491]));}
else{
t4=t3;
f_20882(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[311]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20904,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[492]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20933,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20941,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[493]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[478]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[494]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_20873(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[495],((C_word*)((C_word*)t0)[10])[1],lf[496]));}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[497],((C_word*)((C_word*)t0)[10])[1],lf[498]));}}}}}

/* k20939 in k20974 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20941,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20904(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20931 in k20974 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20933,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20904(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20902 in k20974 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_20873(2,t6,t5);}

/* k20880 in k20974 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20885,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[488],((C_word*)((C_word*)t0)[8])[1],lf[489]));}
else{
t3=t2;
f_20885(2,t3,C_SCHEME_UNDEFINED);}}

/* k20883 in k20880 in k20974 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_20873(2,t6,t5);}

/* k20871 in k20860 in do3496 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_20852(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20802,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[487]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20842,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20850,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_20802(2,t3,C_SCHEME_UNDEFINED);}}}

/* k20848 in k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20850,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20802(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20840 in k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20842,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20802(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20800 in k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20809,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20813,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20811 in k20800 in k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20817,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20815 in k20811 in k20800 in k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20817,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[394],lf[486],lf[395],((C_word*)t0)[2],lf[397],t1));}

/* k20807 in k20800 in k20797 in parse-with in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20650,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20660,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20698,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li309),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_20698(t22,t18,C_SCHEME_FALSE);}

/* do3458 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20698(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20698,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20708(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t5,t6,((C_word*)t0)[5]);}}

/* k20706 in do3458 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20708,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[484]));}
else{
t7=t6;
f_20719(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20717 in k20706 in do3458 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20719,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20722,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[478]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20731,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[479]));}
else{
t6=t5;
f_20731(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[480]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20756,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[481]));}
else{
t7=t6;
f_20756(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[482],((C_word*)((C_word*)t0)[12])[1],lf[483]));}}}

/* k20754 in k20717 in k20706 in do3458 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20756,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_20722(2,t10,t9);}

/* k20729 in k20717 in k20706 in do3458 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20731,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_20722(2,t8,t7);}

/* k20720 in k20717 in k20706 in do3458 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20698(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20658 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20667,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20696,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k20694 in k20658 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20696,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[394],lf[426],lf[395],t2,lf[397],t3,lf[399],t4,lf[400],t5));}

/* k20665 in k20658 in parse-general-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20299(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20299,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20306,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[476]);}

/* k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20306,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20312,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20540,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li307),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_20540(t25,t21,C_SCHEME_FALSE);}

/* do3391 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20540,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20550(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t5,t6,((C_word*)t0)[4]);}}

/* k20548 in do3391 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20550,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[475]));}
else{
t7=t6;
f_20561(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20559 in k20548 in do3391 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20561,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20564,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[465]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20573,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20573(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[474]);
if(C_truep(t6)){
t7=t5;
f_20573(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[459]);
t8=t5;
f_20573(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[464])));}}}

/* k20571 in k20559 in k20548 in do3391 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20573,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20576,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[467],((C_word*)((C_word*)t0)[9])[1],lf[468],((C_word*)((C_word*)t0)[10])[1],lf[469]));}
else{
t3=t2;
f_20576(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[450]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[470]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[459]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[471]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_20564(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[472],((C_word*)((C_word*)t0)[9])[1],lf[473]));}}}

/* k20574 in k20571 in k20559 in k20548 in do3391 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20564(2,t7,t6);}

/* k20562 in k20559 in k20548 in do3391 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20540(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20538,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20534,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20534,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20323,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[459]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20340,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[463]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[464]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20416,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[207],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_20416(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[207],((C_word*)t0)[4]);
t9=t7;
f_20416(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20445,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20480,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_20480(t10,(C_word)C_eqp(t9,lf[466]));}
else{
t9=t8;
f_20480(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_20445(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k20478 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20480(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20480,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20445(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20445(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20443 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20461,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[465]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_20461(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_20461(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k20459 in k20443 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20461(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20461,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20323(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20414 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20416(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20416,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[205],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[337],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20323(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k20338 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[462]);}

/* k20341 in k20338 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t2,((C_word*)t0)[7],C_fix(0));}

/* k20405 in k20341 in k20338 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20407,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k20401 in k20405 in k20341 in k20338 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20403,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[460],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[92],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[461],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[342],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[313],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_20323(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k20321 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20323(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20323,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20330,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20332 in k20321 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20334,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[394],lf[426],lf[395],t1,lf[398],((C_word*)((C_word*)t0)[5])[1],lf[397],((C_word*)((C_word*)t0)[4])[1],lf[399],((C_word*)((C_word*)t0)[3])[1],lf[400],((C_word*)((C_word*)t0)[2])[1]));}

/* k20328 in k20321 in k20532 in k20536 in k20310 in k20304 in parse-sequence-iteration in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20252(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20252,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[456]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20267,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li304),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20285,a[2]=t2,a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a20284 in parse-repeat in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20285,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,t1,t2,t4);}

/* a20266 in parse-repeat in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[457]);}

/* k20277 in a20266 in parse-repeat in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20279,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[426],t1,lf[431],t2);
C_trace("ChickenBridge.scm: 370  parse-numerical-for");
t4=C_retrieve2(lf[425],"parse-numerical-for");
f_19870(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19870(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19870,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19880,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20079,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li302),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_20079(t31,t27,C_SCHEME_FALSE);}

/* do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20079(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20079,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20089(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t5,t6,((C_word*)t0)[6]);}}

/* k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20089,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20100,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[454]));}
else{
t7=t6;
f_20100(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20100,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20103,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[433]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[429]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20115,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[434],((C_word*)((C_word*)t0)[12])[1],lf[435],((C_word*)((C_word*)t0)[9])[1],lf[436]));}
else{
t7=t6;
f_20115(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[431]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20136,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[437],((C_word*)((C_word*)t0)[12])[1],lf[438],((C_word*)((C_word*)t0)[3])[1],lf[439]));}
else{
t8=t7;
f_20136(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[440]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20157,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[441],((C_word*)((C_word*)t0)[12])[1],lf[442],((C_word*)((C_word*)t0)[3])[1],lf[443]));}
else{
t9=t8;
f_20157(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[430]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20178,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[444],((C_word*)((C_word*)t0)[12])[1],lf[445],((C_word*)((C_word*)t0)[3])[1],lf[446]));}
else{
t10=t9;
f_20178(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[432]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20199,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[447],((C_word*)((C_word*)t0)[12])[1],lf[448],((C_word*)((C_word*)t0)[3])[1],lf[449]));}
else{
t11=t10;
f_20199(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[450]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20220,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[451]));}
else{
t12=t11;
f_20220(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[452],((C_word*)((C_word*)t0)[12])[1],lf[453]));}}}}}}}

/* k20218 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_20103(2,t6,t5);}

/* k20197 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20103(2,t7,t6);}

/* k20176 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20103(2,t7,t6);}

/* k20155 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20103(2,t7,t6);}

/* k20134 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20103(2,t7,t6);}

/* k20113 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20103(2,t7,t6);}

/* k20101 in k20098 in k20087 in do3292 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20079(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_19883(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[433]);
t5=t2;
f_19883(t5,t4);}}

/* k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19883(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19883,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19886,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[429]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20046,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_20046(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[432]);
t6=t4;
f_20046(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[430])));}}

/* k20044 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_20046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[94]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[430]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[341]);
t5=((C_word*)t0)[2];
f_19886(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[342]);
t5=((C_word*)t0)[2];
f_19886(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[92]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[431]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[334]);
t5=((C_word*)t0)[2];
f_19886(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[340]);
t5=((C_word*)t0)[2];
f_19886(t5,t4);}}}

/* k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19886(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19886,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20017,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20037,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k20035 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20037,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19889(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20015 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_20017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20017,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19889(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19889(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19889,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_19892(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19982,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[428]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_19892(t5,t4);}}

/* k19980 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t2,t1,C_SCHEME_FALSE);}

/* k19997 in k19980 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19999,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_19892(t8,t7);}

/* k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19892,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19931,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[427]);}
else{
t6=t5;
f_19899(t6,C_SCHEME_UNDEFINED);}}

/* k19929 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19934,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19949,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19965,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19622(t3,t1,C_SCHEME_FALSE);}}

/* k19963 in k19929 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19965,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19934(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19947 in k19929 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19949,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19934(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19932 in k19929 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19934,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19899(t4,t3);}

/* k19897 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19899,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19906,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19910,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19908 in k19897 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19914,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19912 in k19908 in k19897 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19914,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[394],lf[426],lf[395],((C_word*)t0)[2],lf[397],t1,lf[400],t2,lf[398],t4));}

/* k19904 in k19897 in k19890 in k19887 in k19884 in k19881 in k19878 in parse-numerical-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19788(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19788,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19792,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t5,t6,t4);}

/* k19790 in parse-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19792,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[418]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19810,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19616(t4,t3);}}

/* k19808 in k19790 in parse-for in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19810,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[419]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[420],t6,lf[421],lf[422]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19628(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[423],t2,lf[424]));}}

/* loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19628(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19628,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19684,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19636,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li299),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19636(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3243 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19636(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19636,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19646,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_19646(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_19646(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19610(t6,t8,((C_word*)t0)[2]);}}}

/* k19644 in do3243 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19646,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 370  reverse");
t2=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_19636(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19687,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[409]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[416]);}

/* k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19765,a[2]=t4,a[3]=((C_word)li298),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_19765(t6,t2,((C_word*)t0)[2]);}

/* do3253 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19765(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19765,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19775,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 370  display");
t5=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k19773 in do3253 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19765(t3,((C_word*)t0)[2],t2);}

/* k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[409]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[415]);}

/* k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19702,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[411]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19719,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li297),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19719(t6,t2,((C_word*)t0)[2]);}}

/* do3258 in k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19719(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19719,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19729,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 370  display");
t5=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[414]);}
else{
t5=t3;
f_19729(2,t5,C_SCHEME_UNDEFINED);}}}

/* k19727 in do3258 in k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 370  display");
t4=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k19730 in k19727 in do3258 in k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[412]:lf[413]);
C_trace("ChickenBridge.scm: 370  display");
t6=*((C_word*)lf[410]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k19733 in k19730 in k19727 in do3258 in k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19719(t3,((C_word*)t0)[2],t2);}

/* k19700 in k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19705,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[409]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19703 in k19700 in k19697 in k19694 in k19691 in k19688 in k19685 in k19682 in loop-error in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[408]);}

/* make-binding in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19622(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19622,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19616(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19616,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19610(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19610,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19539(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19539,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19541,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19580,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t5,t3,C_retrieve2(lf[384],"loop-bindings"));}

/* k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[385],"loop-collectors"));}

/* k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19588,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[386],"loop-initially"));}

/* k19586 in k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[387],"loop-end-tests"));}

/* k19590 in k19586 in k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[388],"loop-looping"));}

/* k19594 in k19590 in k19586 in k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[390],"loop-stepping"));}

/* k19598 in k19594 in k19590 in k19586 in k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[391],"loop-finally"));}

/* k19602 in k19598 in k19594 in k19590 in k19586 in k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19608,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19541(t2,((C_word*)t0)[2],C_retrieve2(lf[392],"loop-returning"));}

/* k19606 in k19602 in k19598 in k19594 in k19590 in k19586 in k19582 in k19578 in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19608,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19388(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[394],((C_word*)t0)[9],lf[395],((C_word*)t0)[8],lf[396],((C_word*)t0)[7],lf[397],((C_word*)t0)[6],lf[398],((C_word*)t0)[5],lf[399],((C_word*)t0)[4],lf[400],((C_word*)t0)[3],lf[401],((C_word*)t0)[2],lf[402],t1));}

/* gather-clause in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19541(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19541,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19547,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li291),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_19547(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3226 in gather-clause in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19547(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19547,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19558,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19569,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k19567 in do3226 in gather-clause in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19556 in do3226 in gather-clause in gather-clauses in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_19547(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19388(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19388,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19403,a[2]=t5,a[3]=t3,a[4]=((C_word)li289),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_19403(t7,t1,t2);}}

/* do3214 in make-loop-clause in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19403(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19403,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19416,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[394]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 370  loop-operator-set!");
f_19286(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[395]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_19416(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[396]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_19416(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[397]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_19416(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[398]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_19416(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[399]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19346(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[400]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_19416(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[401]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_19416(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[402]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_19416(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_19416(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k19414 in do3214 in make-loop-clause in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19403(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19376(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19376,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19364(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19364,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19352(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19352,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19346(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19346,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19340(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19340,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19328(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19328,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19316(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19316,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19304(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19304,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19292(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19292,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k19276 in k19273 in k19270 in k19267 in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19286(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19286,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19250(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19250,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[350]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[382]);}

/* sal:open in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19244(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19244,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[350]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[380]);}

/* sal:load in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19197(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19197,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19201,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  file-exists?");
t4=C_retrieve(lf[378]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k19199 in sal:load in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19201,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19204,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19226,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[374]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[375],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_19226(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19217,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t4=*((C_word*)lf[142]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[376],((C_word*)t0)[2],lf[377]);}}

/* k19215 in k19199 in sal:load in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[350]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19224 in k19199 in sal:load in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  load-sal-file");
t2=C_retrieve(lf[372]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  load");
t2=C_retrieve(lf[373]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k19202 in k19199 in sal:load in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19188(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19188,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19192,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k19190 in sal:chdir in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19035(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_19035r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_19035r(t0,t1,t2);}}

static void C_ccall f_19035r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19038,a[2]=t4,a[3]=((C_word)li272),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19157,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19162,a[2]=t4,a[3]=t8,a[4]=((C_word)li273),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19162(t10,t6,t2);}

/* do3042 in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19162(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19162,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t3=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[369]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19175,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_19038(t5,t3,t4,C_fix(0));}}

/* k19173 in do3042 in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19162(t3,((C_word*)t0)[2],t2);}

/* k19155 in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19038(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19038,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t5=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[362]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19066,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[365]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[366]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19138,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19154,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[367],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 369  print-message");
t5=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[368]);}}

/* k19152 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19136 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19064 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19069,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li271),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_19074(t6,t2,((C_word*)t0)[2]);}

/* do3034 in k19064 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19074(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19074,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19084,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 369  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_19038(t6,t3,t4,t5);}}

/* k19082 in do3034 in k19064 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19087(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  print-message");
t4=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[364]);}}

/* k19085 in k19082 in do3034 in k19064 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19074(t3,((C_word*)t0)[2],t2);}

/* k19067 in k19064 in printer in sal:print in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_19069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[361]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[363]);}

/* sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_18864,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[346],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18870,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[274],"list->token"),t4);}

/* k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18870,2,t0,t1);}
t2=C_mutate(&lf[347],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_18873(t5,t4);}
else{
t4=t3;
f_18873(t4,C_SCHEME_FALSE);}}

/* k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18873,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[347],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16673,a[2]=t4,a[3]=t3,a[4]=((C_word)li269),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call/cc");
t7=*((C_word*)lf[359]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a16672 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16673(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16673,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16679,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li267),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16686,a[2]=t2,a[3]=((C_word)li268),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a16685 in a16672 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16686(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16686,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16693,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_16693(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_16693(t6,C_SCHEME_FALSE);}}

/* k16691 in a16685 in a16672 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16693,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16330(t2,lf[356],lf[357],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16150(((C_word*)t0)[4],lf[358],C_retrieve2(lf[322],"*maxtokpos*"));}}

/* k16698 in k16691 in a16685 in a16672 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16678 in a16672 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16679,2,t0,t1);}
t2=lf[322]=C_fix(0);;
C_trace("ChickenBridge.scm: 369  parser");
f_16711(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18877,2,t0,t1);}
t2=C_mutate(&lf[348],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18880,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[348],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[290]))){
t5=C_retrieve2(lf[346],"*sal-string*");
t6=C_retrieve2(lf[348],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18911,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-position");
f_16189(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 369  pp");
t5=C_retrieve(lf[354]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[348],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 369  eval");
t5=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[348],"*sal-output*"));}}}

/* k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18911,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19004,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li266),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19004(t11,t7,C_SCHEME_FALSE);}

/* do3007 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19004(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19004,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19014,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_19014(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_19014(t11,t10);}}}

/* k19012 in do3007 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_19014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19004(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18917,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18974,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li265),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_18974(t9,t5,C_SCHEME_FALSE);}

/* do3014 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18974(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18974,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18984,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18984(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_18984(t11,t10);}}}

/* k18982 in do3014 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18974(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18928,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18935,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-string");
f_16171(t4,((C_word*)t0)[2]);}

/* k18937 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  make-string");
t3=*((C_word*)lf[352]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18941 in k18937 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18947,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  substring");
t3=*((C_word*)lf[353]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18945 in k18941 in k18937 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18951,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  make-string");
t3=*((C_word*)lf[352]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18949 in k18945 in k18941 in k18937 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18951,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18958,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 369  make-string");
t5=*((C_word*)lf[352]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k18956 in k18949 in k18945 in k18941 in k18937 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18958,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 369  string-append");
t5=*((C_word*)lf[142]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[351],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18933 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[350]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18926 in k18923 in k18915 in k18909 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k18878 in k18875 in k18871 in k18868 in sal in k18856 in k18853 in k18850 in k18847 in k18844 in k18322 in k18319 in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17800,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17807,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_17813,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t33,t34,C_fix(23296));}

/* k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17813,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17817,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_17863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,t3,C_fix(10756));}}

/* k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17863,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17867,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_17960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,t3,C_fix(22784));}}

/* k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17960,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17964,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18028,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18028,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18035,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18285,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_18035(t8,t7);}}

/* k18283 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18035(t3,t2);}

/* k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18035(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18035,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18038,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18224,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18273,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k18271 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18038(t3,t2);}

/* k18222 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18224,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18228 in k18222 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18230,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18254,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_18038(t4,t3);}}

/* k18252 in k18228 in k18222 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18254,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18238,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18250,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k18248 in k18252 in k18228 in k18222 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k18236 in k18252 in k18228 in k18222 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18038(t3,t2);}

/* k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18038(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18038,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18041,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_18041(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18200,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[345]);}}

/* k18198 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18204,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18202 in k18198 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18041(t4,t3);}

/* k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18041(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18041,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18044(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18177,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[344]);}}

/* k18175 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18181,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18179 in k18175 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18044(t4,t3);}

/* k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18044,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_18047(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18154,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[343]);}}
else{
t3=t2;
f_18047(t3,C_SCHEME_UNDEFINED);}}

/* k18152 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18158,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18156 in k18152 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18047(t4,t3);}

/* k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18047,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18050,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18079,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_18050(t7,t6);}}

/* k18077 in k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18079,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[334],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18050(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18097,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k18095 in k18077 in k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18097,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[340],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18050(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k18113 in k18095 in k18077 in k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18115,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[341],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18050(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k18131 in k18113 in k18095 in k18077 in k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18133,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[342],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18050(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_18050(t2,C_SCHEME_UNDEFINED);}}

/* k18048 in k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_18050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18054,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k18052 in k18048 in k18045 in k18042 in k18039 in k18036 in k18033 in k18026 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_18054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17807(t3,t2);}

/* k17962 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17964,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17968,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17966 in k17962 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17968,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[339]);}

/* k17970 in k17966 in k17962 in k17958 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17972,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17807(t12,t11);}

/* k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17867,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k17869 in k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17871,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17875,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17873 in k17869 in k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17875,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17878,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17894,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_17878(t6,t5);}}

/* k17892 in k17873 in k17869 in k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17894,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[338]);}

/* k17896 in k17892 in k17873 in k17869 in k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17898,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[337],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17878(t12,t11);}

/* k17876 in k17873 in k17869 in k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17878(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17878,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k17880 in k17876 in k17873 in k17869 in k17865 in k17861 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17807(t3,t2);}

/* k17815 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17817,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[336]);}

/* k17819 in k17815 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17821,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[335]);}

/* k17823 in k17819 in k17815 in k17811 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17825,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[334],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_17807(t10,t9);}

/* k17805 in sal-parse-stepping in k17796 in k17793 in k17790 in k17787 in k17784 in k17781 in k17778 in k17775 in k17772 in k17769 in k17766 in k17763 in k17760 in k17757 in k17754 in k17751 in k17748 in k17745 in k17742 in k17739 in k17736 in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17807(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17622(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17622,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17634,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li262),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_17634(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17634(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17634,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17653,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17601(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17653,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17656,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17671,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li261),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_17671(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_17656(2,t5,t4);}}

/* do2646 in k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17671(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17671,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17685,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17699,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t12=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17703,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17601(t10,t11);}}

/* k17701 in do2646 in k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17703,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17706,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_17706(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_17706(t10,t9);}}

/* k17704 in k17701 in do2646 in k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17706(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_17671(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17697 in do2646 in k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  inf->pre");
f_17622(((C_word*)t0)[2],t1);}

/* k17683 in do2646 in k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17685,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17654 in k17651 in do2644 in inf->pre in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17634(t2,((C_word*)t0)[2]);}

/* is-op? in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17601(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17601,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17608,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_16270(t3,t2);}

/* k17606 in is-op? in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17608,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17611,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k17609 in k17606 in is-op? in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17617,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  SalOpType?");
f_17378(t2,t1);}

/* k17615 in k17609 in k17606 in is-op? in k17597 in k17594 in k17591 in k17588 in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17617,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17536(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17536,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17545,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li258),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_17545(t10,t1,t2);}

/* do2610 in remove-token-type in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17545(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17545,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17558,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17568,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16286(t4,t5,((C_word*)t0)[2]);}}

/* k17566 in do2610 in remove-token-type in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17568,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17558(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_17558(t7,t6);}}

/* k17556 in do2610 in remove-token-type in k17532 in k17529 in k17526 in k17523 in k17520 in k17517 in k17514 in k17511 in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17545(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17492(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17492,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17480(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17480,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17378(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17378,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17330(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17330,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16711(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16711,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16715,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 369  printf");
t10=C_retrieve(lf[328]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[329],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_16715(2,t10,C_SCHEME_UNDEFINED);}}

/* k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15890(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_16721(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17136,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17140,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17144,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  first-token");
f_15878(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k17142 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  token-position");
f_15837(((C_word*)t0)[2],t1);}

/* k17138 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  max");
t2=*((C_word*)lf[213]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[322],"*maxtokpos*"),t1);}

/* k17134 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[322],t1);
t3=((C_word*)t0)[2];
f_16721(t3,t2);}

/* k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16721(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16721,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-value");
t4=C_retrieve2(lf[186],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16844,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_16032(t3,((C_word*)t0)[8]);}}

/* k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16844,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16077,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_16032(t4,t3);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[327],((C_word*)t0)[2]);}}

/* k16075 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16850(t3,(C_word)C_eqp(t2,lf[311]));}
else{
t2=((C_word*)t0)[2];
f_16850(t2,C_SCHEME_FALSE);}}

/* k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16850,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  pattern-nsubs");
f_16050(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16093,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_16032(t5,t4);}}

/* k16091 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16938(t3,(C_word)C_eqp(t2,lf[312]));}
else{
t2=((C_word*)t0)[2];
f_16938(t2,C_SCHEME_FALSE);}}

/* k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16938(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16938,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  pattern-nsubs");
f_16050(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  pattern-zero-or-more?");
f_16118(t2,((C_word*)t0)[2]);}}

/* k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17011,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_17011(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16109,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_16032(t4,t3);}}

/* k16107 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17011(t3,(C_word)C_eqp(t2,lf[92]));}
else{
t2=((C_word*)t0)[2];
f_17011(t2,C_SCHEME_FALSE);}}

/* k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17011(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17011,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17017,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li250),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_17040(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16141,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_16032(t4,t3);}}

/* k16139 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17089(t3,(C_word)C_eqp(t2,lf[326]));}
else{
t2=((C_word*)t0)[2];
f_17089(t2,C_SCHEME_FALSE);}}

/* k17087 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17089,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17098,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17109,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li251),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17115,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li252),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[325],t3);}}

/* a17114 in k17087 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17115,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17108 in k17087 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17109,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parser");
f_16711(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17096 in k17087 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17040,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_17050(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15890(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k17048 in do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17050,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17053,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li248),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17076,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li249),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a17075 in k17048 in do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17076,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17069 in k17048 in do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17070,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parser");
f_16711(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17051 in k17048 in do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17056,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17063,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_17056(t3,C_SCHEME_UNDEFINED);}}

/* k17061 in k17051 in k17048 in do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17063,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_17056(t6,t5);}

/* k17054 in k17051 in k17048 in do2347 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17040(t2,((C_word*)t0)[2]);}

/* k17015 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17020,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17026,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  pattern-zero-or-more?");
f_16118(t3,((C_word*)t0)[2]);}

/* k17024 in k17015 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_17026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_17020(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_17020(t5,t4);}}

/* k17018 in k17015 in k17009 in k17006 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_17020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16947,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16962,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li247),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_16962(t6,t2,C_fix(0));}

/* do2327 in k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16962(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16962,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16972,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16981,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li245),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li246),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16994 in do2327 in k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16995(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16995,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16980 in do2327 in k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16989,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-sub");
f_16060(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16987 in a16980 in do2327 in k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16989,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16711(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16970 in do2327 in k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16972,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16962(t3,((C_word*)t0)[2],t2);}

/* k16945 in k16942 in k16936 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16859,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16862,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16881,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li244),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_16881(t8,t4,C_fix(0));}

/* do2305 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16881(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16881,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16894,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16914,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li242),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16928,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li243),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16927 in do2305 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16928(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16928,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16913 in do2305 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16922,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-sub");
f_16060(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16920 in a16913 in do2305 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16922,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16711(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16892 in do2305 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16897,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_16897(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_16897(t5,t4);}}

/* k16895 in k16892 in do2305 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16897(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16897,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16881(t3,((C_word*)t0)[2],t2);}

/* k16860 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16865,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_16865(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16879,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t5=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k16877 in k16860 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16865(t3,t2);}

/* k16863 in k16860 in k16857 in k16848 in k16842 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  SalTokenType?");
f_17330(t2,t1);}

/* k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16736,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16742,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15890(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16794,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17480(t2,((C_word*)t0)[5]);}}

/* k16792 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16794,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  get-rule");
f_16008(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[324],((C_word*)t0)[2]);}}

/* k16795 in k16792 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16797,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[280]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16808,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li240),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16818,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li241),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a16817 in k16795 in k16792 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16818,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16829,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 369  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_16829(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k16827 in a16817 in k16795 in k16792 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16807 in k16795 in k16792 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16808,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16711(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16742,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16752,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  first-token");
f_15878(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16758,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16788,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15801(t3,t1);}

/* k16786 in k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k16756 in k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16758,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16773,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15801(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k16771 in k16756 in k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16777,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-string");
f_15819(t2,((C_word*)t0)[2]);}

/* k16775 in k16771 in k16756 in k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16781,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-position");
f_15837(t2,((C_word*)t0)[2]);}

/* k16779 in k16775 in k16771 in k16756 in k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16763 in k16756 in k16750 in k16740 in k16734 in k16728 in k16719 in k16716 in k16713 in parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16607(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16607,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16609,a[2]=t2,a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp));}

/* f_16609 in simple-unit-emitter in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16609,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16613,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16657,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t6,t2);}

/* k16655 */
static void C_ccall f_16657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16611 */
static void C_ccall f_16613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16613,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16616,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_16616(t9,t8);}
else{
t6=t5;
f_16616(t6,C_SCHEME_UNDEFINED);}}

/* k16614 in k16611 */
static void C_fcall f_16616(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16616,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16621,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li237),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16621(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2262 in k16614 in k16611 */
static void C_fcall f_16621(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16621,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16642,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16640 in do2262 in k16614 in k16611 */
static void C_ccall f_16642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16621(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16599(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16599,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16601,a[2]=t2,a[3]=((C_word)li235),tmp=(C_word)a,a+=4,tmp));}

/* f_16601 in simple-unit-parser in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16601(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16601,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16201(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16391(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16391,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16408,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16358(t5,t6,t3,t4);}}

/* k16406 in emit-list in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16412,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit-list");
f_16391(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16410 in k16406 in emit-list in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16412,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16358(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16358,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16365,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_16270(t5,t2);}

/* k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16365,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16436,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16309,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit?");
f_16207(t4,t3);}}

/* k16307 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16309,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16316,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16374(2,t2,C_SCHEME_FALSE);}}

/* k16314 in k16307 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17480(((C_word*)t0)[2],t1);}

/* k16372 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16374,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16574,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16597,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 369  emit-list");
f_16391(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[318],((C_word*)t0)[4]);}}}

/* k16595 in k16372 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  get-rule");
f_16008(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16572 in k16372 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16574,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[280]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 369  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16590,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t4,((C_word*)t0)[4]);}}

/* k16588 in k16572 in k16372 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16358(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16240(t2,((C_word*)t0)[2]);}

/* k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16439,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 369  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t8=*((C_word*)lf[308]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16463,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalOpType?");
f_17378(t8,((C_word*)t0)[4]);}}}

/* k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16463,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16514,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k16518 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16520,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k16524 in k16518 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16526,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k16533 in k16524 in k16518 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16535,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k16542 in k16533 in k16524 in k16518 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16544,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[308]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k16551 in k16542 in k16533 in k16524 in k16518 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16553,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[314],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16562,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k16560 in k16551 in k16542 in k16533 in k16524 in k16518 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[308]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[315],((C_word*)t0)[2]);}}

/* k16512 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k16467 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16469,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[115]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k16473 in k16467 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16475,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[309]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k16479 in k16473 in k16467 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16481,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[310]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k16485 in k16479 in k16473 in k16467 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16487,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[311]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k16491 in k16485 in k16479 in k16473 in k16467 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16493,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[312]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k16497 in k16491 in k16485 in k16479 in k16473 in k16467 in k16461 in k16437 in k16434 in k16363 in emit in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[313]);}
else{
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[308]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16340(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16340,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16347,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_16347(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[306],t2);}}

/* k16345 in set-emit-info! in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16330(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16330,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16318(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16318,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16286(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16286,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16293,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_16270(t4,t2);}

/* k16291 in token-unit-type=? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16293,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16298 in k16291 in token-unit-type=? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17492(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16270(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16270,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16277,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit?");
f_16207(t3,t2);}

/* k16275 in token-unit? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16277,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16284,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16222(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16282 in k16275 in token-unit? in k16266 in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalTokenType?");
f_17330(((C_word*)t0)[2],t1);}

/* parse-unit-position in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16258(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16258,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[294]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16240(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16240,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[294]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16222(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16222,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[294]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16207(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16207,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[294]));}

/* make-parse-unit in k16197 in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16201(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16201,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[294],t2,t3,t4));}

/* parse-error-position in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16189(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16189,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16171(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16171,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16150(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16150,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[290],t2,t3));}

/* pattern-zero-or-more? in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16118(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16118,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16125,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_16032(t3,t2);}

/* k16123 in pattern-zero-or-more? in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[96]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16060(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16060,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16068,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-subs");
f_16044(t4,t2);}

/* k16066 in pattern-sub in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16050(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16050,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16058,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  pattern-subs");
f_16044(t3,t2);}

/* k16056 in pattern-nsubs in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16044(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16044,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16032(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16032,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_16029(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16029,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k16004 in k16001 in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_16008(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16008,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 369  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[278],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 369  hash-table-ref/default");
t4=C_retrieve(lf[283]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[278],"*rules*"),t3);}}

/* rule-name in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15921(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15921,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[280]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k15896 in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15900(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15900,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[280],t2,t3,t4,t5,t6));}

/* null-tokens? in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15890(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15890,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15878(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15878,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k15845 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15849(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15849,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[275]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[269],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[269],"make-token"),t2);}}

/* token-position in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15837(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15837,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15819(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15819,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15801(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15801,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15780(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15780,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[270],t2,t3,t4));}

/* next-in-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15686(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15686,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15690,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t3,t2);}

/* k15688 in next-in-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15690,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15719,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[261]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_15105(((C_word*)t0)[2],t6);}}

/* k15717 in k15688 in next-in-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15719,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15724,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li202),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_15724(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2023 in k15717 in k15688 in next-in-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15724(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15724,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15734,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_15734(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[268],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15749,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[261]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_15749(t12,t11);}
else{
t10=t5;
f_15749(t10,C_SCHEME_UNDEFINED);}}}

/* k15747 in do2023 in k15717 in k15688 in next-in-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15749(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15724(t3,((C_word*)t0)[2],t2);}

/* k15732 in do2023 in k15717 in k15688 in next-in-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_15105(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15168(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_15168r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15168r(t0,t1,t2,t3);}}

static void C_ccall f_15168r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15172,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15430,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15439,a[2]=t9,a[3]=((C_word)li200),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[267],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15439(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15439,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15443,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_15443(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[266],t2);}}

/* k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15448,a[2]=((C_word*)t0)[4],a[3]=((C_word)li199),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15448(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_15448r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15448r(t0,t1,t2,t3);}}

static void C_ccall f_15448r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_15452,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_15452(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[264]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15590,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[264]);}
else{
t20=t19;
f_15590(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[265]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15625,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[265]);}
else{
t21=t20;
f_15625(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15654,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_15654(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k15652 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15654,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15669,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15667 in k15652 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15661(2,t2,C_SCHEME_UNDEFINED);}}

/* k15659 in k15652 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15452(t5,t4);}

/* k15623 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15627 in k15623 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15452(t7,t6);}

/* k15588 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15592 in k15588 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15452(t7,t6);}

/* k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15452,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15455,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15455(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[264]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15490,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[264]);}
else{
t6=t5;
f_15490(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[265]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[265]);}
else{
t7=t6;
f_15525(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15554,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15554(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15552 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15554,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15569,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15567 in k15552 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15561(2,t2,C_SCHEME_UNDEFINED);}}

/* k15559 in k15552 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15455(t5,t4);}

/* k15523 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15529(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15527 in k15523 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15455(t7,t6);}

/* k15488 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15492 in k15488 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15455(t7,t6);}

/* k15453 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15455(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15455,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15458(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15456 in k15453 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_15461(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_15461(t4,t3);}}

/* k15459 in k15456 in k15453 in k15450 in a15447 in k15441 in parse-graph-item in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15461(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15461,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[261],t5,t6,t7));}

/* k15428 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15172(2,t3,t2);}

/* k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15172,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15175,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15175(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15335,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[217]);}
else{
t18=t17;
f_15335(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[218]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15370,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[218]);}
else{
t19=t18;
f_15370(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15399,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15399(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15397 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15399,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15414,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15412 in k15397 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15406(2,t2,C_SCHEME_UNDEFINED);}}

/* k15404 in k15397 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15175(t5,t4);}

/* k15368 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15374(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15372 in k15368 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15175(t7,t6);}

/* k15333 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15337 in k15333 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15175(t7,t6);}

/* k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15175(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15175,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15178,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15178(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15235,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_15235(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15270,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_15270(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15299,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15299(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15297 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15299,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15314,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15312 in k15297 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15306(2,t2,C_SCHEME_UNDEFINED);}}

/* k15304 in k15297 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15178(t5,t4);}

/* k15268 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15274(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15272 in k15268 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15178(t7,t6);}

/* k15233 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15237 in k15233 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15178(t7,t6);}

/* k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15178(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15178,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15181,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15181(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15179 in k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k15182 in k15179 in k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15184,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15190,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15196,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[263],"next-in-graph"),t5);}

/* a15195 in k15182 in k15179 in k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15196,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15202,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15214,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t5,t3);}

/* k15212 in a15195 in k15182 in k15179 in k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15201 in a15195 in k15182 in k15179 in k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15202(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15202,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_15105(t1,t2);}

/* k15188 in k15182 in k15179 in k15176 in k15173 in k15170 in make-graph in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_15105(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15105,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[261]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14765(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14765,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14768,a[2]=t4,a[3]=((C_word)li191),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14947,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t6,t2);}

/* k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14951,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9497(t2,((C_word*)t0)[4]);}

/* k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14951,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14953,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li194),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_14953(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14953(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14953,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14963,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_14963(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_14963(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14878,a[2]=t13,a[3]=((C_word)li193),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_14878(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1849 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14878(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14878,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14888,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_14888(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_14888(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k14886 in do1849 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14888(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14888,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[96]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14895,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_14895(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_14895(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_14895(t9,(C_word)C_eqp(t8,lf[96]));}}}}

/* k14893 in k14886 in do1849 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14895(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14878(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k14961 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14963,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[259],((C_word*)t0)[6]);}
else{
t3=t2;
f_14966(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_14953(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k14964 in k14961 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14970,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 368  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_14768(t7,t2,t4,t6);}

/* k14968 in k14964 in k14961 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14970,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14973,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_14973(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_14973(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14990,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li192),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_14990(t8,t3,((C_word*)t0)[3]);}}}

/* do1873 in k14968 in k14964 in k14961 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14990(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14990,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15006,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9488(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k15004 in do1873 in k14968 in k14964 in k14961 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_15006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k14971 in k14968 in k14964 in k14961 in do1864 in k14949 in k14945 in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14768(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14768,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14836,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  tb:ranf");
f_6633(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14780,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li190),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_14780(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1833 in select-output in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14780(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14780,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_14768(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14816,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_14816(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t9,t11);}}}

/* k14814 in do1833 in select-output in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14816,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_14780(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k14834 in select-output in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14836,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14841,a[2]=t3,a[3]=t1,a[4]=((C_word)li189),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14841(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1843 in k14834 in select-output in next-in-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14841(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14841,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14278(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_14278r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14278r(t0,t1,t2,t3);}}

static void C_ccall f_14278r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14282,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14759,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14205,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li187),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_14205(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[258],((C_word*)t4)[1]);}}

/* do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14205(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14205,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14050,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_14050(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[257],((C_word*)t11)[1]);}}}

/* k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14050,2,t0,t1);}
t2=(C_word)C_i_member(lf[253],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14056,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_14056(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[255],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_14056(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 368  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[256],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14056,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14068,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14141,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li186),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_14141(t17,t13);}

/* do1712 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14141(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14141,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_14071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14084,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li185),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a14083 in k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14084,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14088,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_14088(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_14088(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_14088(t13,t12);}}

/* k14086 in a14083 in k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14088,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_14091(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_14091(t5,t4);}}

/* k14089 in k14086 in a14083 in k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14091,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k14069 in k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  reverse");
t3=*((C_word*)lf[165]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k14080 in k14069 in k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14082,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_14222(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[254],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14222(2,t10,t9);}}

/* k14220 in k14080 in k14069 in k14066 in k14054 in k14048 in do1734 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14222,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_14205(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k14757 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14282(2,t3,t2);}

/* k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14282,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14285,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14285(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14629,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[217]);}
else{
t22=t21;
f_14629(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[218]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14664,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[218]);}
else{
t23=t22;
f_14664(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[252]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14699,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[252]);}
else{
t24=t23;
f_14699(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14728,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14728(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14726 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14728,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14743,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14741 in k14726 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14735(2,t2,C_SCHEME_UNDEFINED);}}

/* k14733 in k14726 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14285(t5,t4);}

/* k14697 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14703,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14703(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14701 in k14697 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14285(t7,t6);}

/* k14662 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14668(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14666 in k14662 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14285(t7,t6);}

/* k14627 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14631 in k14627 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14285(t7,t6);}

/* k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14285,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14288(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14494,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_14494(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14529,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_14529(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[252]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14564,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[252]);}
else{
t8=t7;
f_14564(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14593,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14593(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14591 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14593,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14608,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14606 in k14591 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14600(2,t2,C_SCHEME_UNDEFINED);}}

/* k14598 in k14591 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14288(t5,t4);}

/* k14562 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14568(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14566 in k14562 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14288(t7,t6);}

/* k14527 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14533(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14531 in k14527 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14288(t7,t6);}

/* k14492 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14498(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14496 in k14492 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14288(t7,t6);}

/* k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14291,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14291(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14359,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_14359(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14394,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_14394(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[252]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14429,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[252]);}
else{
t8=t7;
f_14429(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14458,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14458(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14456 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14458,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14473,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14471 in k14456 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14465(2,t2,C_SCHEME_UNDEFINED);}}

/* k14463 in k14456 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14291(t5,t4);}

/* k14427 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14433(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14431 in k14427 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14291(t7,t6);}

/* k14392 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14398(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14396 in k14392 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14291(t7,t6);}

/* k14357 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14363,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14363(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14361 in k14357 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14291(t7,t6);}

/* k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14291,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14294,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14294(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14297,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14303,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14330,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[251],"next-in-markov"),t4);}

/* a14329 in k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14330,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14338,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t3);}

/* k14336 in a14329 in k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14301 in k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14306(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14316,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 368  make-list");
t7=C_retrieve(lf[61]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[96]);}}

/* k14314 in k14301 in k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14306(t3,t2);}

/* k14304 in k14301 in k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_14306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14306,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9488(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k14307 in k14304 in k14301 in k14295 in k14292 in k14289 in k14286 in k14283 in k14280 in make-markov in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13845(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13845,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13849,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t3,t2);}

/* k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t2,((C_word*)t0)[2]);}

/* k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13855,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9263(t2,((C_word*)t0)[2]);}

/* k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13855,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t4,t1,C_fix(4));}

/* k14022 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14024,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_13861(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9113(t2,((C_word*)t0)[2]);}}

/* k14035 in k14022 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_9131(t2,((C_word*)t0)[2]);}

/* k14039 in k14035 in k14022 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 368  recalc-weightings");
f_13733(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_13861(2,t2,C_SCHEME_UNDEFINED);}}

/* k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_13867(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13998,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14017,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12883(t4,((C_word*)t0)[4]);}}

/* k14015 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14017,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 368  random-item-count-set!");
f_12874(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13996 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12883(t2,((C_word*)t0)[2]);}

/* k14003 in k13996 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14009,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-min");
f_12847(t2,((C_word*)t0)[2]);}

/* k14007 in k14003 in k13996 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_14009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13867(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13867,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12793(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13873,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9497(t2,((C_word*)t0)[2]);}}

/* k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13873,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13877,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13915,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13957,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pick");
f_13877(t7,t2,t1);}

/* k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13957,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li182),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_13959(t5,((C_word*)t0)[2],t1);}

/* do1686 in k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13959(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13959,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13978,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13981,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12865(t4,t2);}

/* k13979 in do1686 in k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13981,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12883(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13978(t2,C_SCHEME_FALSE);}}

/* k13986 in k13979 in do1686 in k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13992,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12865(t2,((C_word*)t0)[2]);}

/* k13990 in k13986 in k13979 in do1686 in k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13978(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k13976 in do1686 in k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13978,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13974,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pick");
f_13877(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k13972 in k13976 in do1686 in k13955 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13959(t2,((C_word*)t0)[2],t1);}

/* k13913 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13918,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_13918(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13932,a[2]=t5,a[3]=((C_word)li181),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_13932(t7,t2,((C_word*)t0)[2]);}}

/* do1690 in k13913 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13932(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13932,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13942,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-count-set!");
f_12874(t3,t4,C_fix(0));}}

/* k13940 in do1690 in k13913 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13932(t3,((C_word*)t0)[2],t2);}

/* k13916 in k13913 in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12793(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13877(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13877,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13885,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  tb:ranf");
f_6633(t4,t3);}

/* k13883 in pick in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13885,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13887,a[2]=t3,a[3]=((C_word)li179),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_13887(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1681 in k13883 in pick in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13887(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13887,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13908,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-index");
f_12811(t4,t5);}

/* k13906 in do1681 in k13883 in pick in k13871 in k13865 in k13859 in k13853 in k13850 in k13847 in next-in-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_13887(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13733(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13733,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13843,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t2);}

/* k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13843,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[249];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13740,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13802,a[2]=t7,a[3]=t4,a[4]=((C_word)li177),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_13802(t9,t5,t2);}

/* do1653 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13802(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13802,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13831,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13835,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-weight");
f_12829(t4,t5);}}

/* k13833 in do1653 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(((C_word*)t0)[2],t1);}

/* k13829 in do1653 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13831,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  random-item-index-set!");
f_12802(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k13814 in k13829 in do1653 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13802(t3,((C_word*)t0)[2],t2);}

/* k13738 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13740,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13748,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li176),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13748(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9488(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1659 in k13738 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13748(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13748,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9488(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13781,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13793,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-index");
f_12811(t8,t9);}}

/* k13791 in do1659 in k13738 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13793,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 368  floor");
t4=*((C_word*)lf[150]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k13779 in do1659 in k13738 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13781,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  random-item-index-set!");
f_12802(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k13763 in k13779 in do1659 in k13738 in k13841 in recalc-weightings in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13748(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12966(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_12966r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12966r(t0,t1,t2,t3);}}

static void C_ccall f_12966r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12970,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13283,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13283(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13283,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13290,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_13290(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_13290(t9,t8);}}

/* k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13290,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13293,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13293(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[246]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13596,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[246]);}
else{
t22=t21;
f_13596(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[247]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13631,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[247]);}
else{
t23=t22;
f_13631(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[248]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13666,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[248]);}
else{
t24=t23;
f_13666(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13695,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_13695(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13693 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13695,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13710,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13708 in k13693 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13702(2,t2,C_SCHEME_UNDEFINED);}}

/* k13700 in k13693 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13293(t5,t4);}

/* k13664 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13670,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13670(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13668 in k13664 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13293(t7,t6);}

/* k13629 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13635,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13635(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13633 in k13629 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13293(t7,t6);}

/* k13594 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13600,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13600(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13598 in k13594 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13293(t7,t6);}

/* k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13293,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13296(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13461,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[246]);}
else{
t6=t5;
f_13461(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13496,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[247]);}
else{
t7=t6;
f_13496(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13531,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[248]);}
else{
t8=t7;
f_13531(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13560,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13560(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13558 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13560,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13567,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13575,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13573 in k13558 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13567(2,t2,C_SCHEME_UNDEFINED);}}

/* k13565 in k13558 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13296(t5,t4);}

/* k13529 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13535(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13533 in k13529 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13296(t7,t6);}

/* k13494 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13500(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13498 in k13494 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13296(t7,t6);}

/* k13459 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13465(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13463 in k13459 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13296(t7,t6);}

/* k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13296,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13299,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13299(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13326,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[246]);}
else{
t6=t5;
f_13326(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13361,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[247]);}
else{
t7=t6;
f_13361(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[248]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13396,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[248]);}
else{
t8=t7;
f_13396(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13425,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13425(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13423 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13425,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13432,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13440,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13438 in k13423 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13432(2,t2,C_SCHEME_UNDEFINED);}}

/* k13430 in k13423 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13299(t5,t4);}

/* k13394 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13400(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13398 in k13394 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13299(t7,t6);}

/* k13359 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13365(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13363 in k13359 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13299(t7,t6);}

/* k13324 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13330,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13330(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13328 in k13324 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13299(t7,t6);}

/* k13297 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13299(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13299,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13302,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13302(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k13300 in k13297 in k13294 in k13291 in k13288 in %make-random-item in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13302,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[235],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12973,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12979,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13247,a[2]=t8,a[3]=t6,a[4]=((C_word)li173),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13247(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13247,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13251,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-min");
f_12847(t3,t2);}

/* k13249 in a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13254,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12865(t2,((C_word*)t0)[2]);}

/* k13252 in k13249 in a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-weight");
f_12829(t2,((C_word*)t0)[2]);}

/* k13255 in k13252 in k13249 in a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12793(t2,((C_word*)t0)[2]);}

/* k13258 in k13255 in k13252 in k13249 in a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13273,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t3,t1);}

/* k13271 in k13258 in k13255 in k13252 in k13249 in a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13273,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_13263(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_13263(t2,C_SCHEME_UNDEFINED);}}

/* k13261 in k13258 in k13255 in k13252 in k13249 in a13246 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_13263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12979,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12986,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_12986(t8,t7);}
else{
t6=t5;
f_12986(t6,C_SCHEME_UNDEFINED);}}

/* k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12986(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12986,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_12989,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_12989(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13153,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[217]);}
else{
t18=t17;
f_13153(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[218]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13188,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[218]);}
else{
t19=t18;
f_13188(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13217,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_13217(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13215 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13217,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13224,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13232,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13230 in k13215 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13224(2,t2,C_SCHEME_UNDEFINED);}}

/* k13222 in k13215 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12989(t5,t4);}

/* k13186 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13192(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13190 in k13186 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12989(t7,t6);}

/* k13151 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13157,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13157(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13155 in k13151 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12989(t7,t6);}

/* k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12989(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12989,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12992,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_12992(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13053,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_13053(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13088,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_13088(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13117,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_13117(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13115 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13117,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13132,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13130 in k13115 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13124(2,t2,C_SCHEME_UNDEFINED);}}

/* k13122 in k13115 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12992(t5,t4);}

/* k13086 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13092(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13090 in k13086 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12992(t7,t6);}

/* k13051 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13057,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13057(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13055 in k13051 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12992(t7,t6);}

/* k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12992,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12995,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12995(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12998,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13010,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[245],"next-in-weighting"),t4);}

/* a13009 in k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13010(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13010,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13016,a[2]=t2,a[3]=((C_word)li171),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13032,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t5,t3);}

/* k13030 in a13009 in k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a13015 in a13009 in k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13016(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13016,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13024,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12793(t3,t2);}

/* k13022 in a13015 in a13009 in k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12996 in k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  recalc-weightings");
f_13733(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_13001(2,t3,C_SCHEME_UNDEFINED);}}

/* k12999 in k12996 in k12993 in k12990 in k12987 in k12984 in k12977 in k12971 in k12968 in make-weighting in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_13001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12883(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12883,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[235]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12874(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12874,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[235]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12865(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12865,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[235]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12847(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12847,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[235]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12829(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12829,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[235]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12811(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12811,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[235]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12802(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12802,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[235]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12793(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12793,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[235]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12571(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12571,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12574,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12621,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t2);}

/* k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12624,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12647,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12766,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9497(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_12624(t4,C_SCHEME_UNDEFINED);}}

/* k12764 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(((C_word*)t0)[2],t1);}

/* k12645 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12647,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12654,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12701,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9299(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12728,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9299(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12747,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9299(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12762,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9299(t3,((C_word*)t0)[2]);}}

/* k12760 in k12645 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12762,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[5];
f_12574(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12745 in k12645 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12747,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[5];
f_12574(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12726 in k12645 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12728,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[6];
f_12574(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k12699 in k12645 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12701,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 368  rotate-items");
t4=((C_word*)t0)[7];
f_12574(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12652 in k12645 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12624(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k12622 in k12619 in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12624(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12574,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12580,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li160),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_12580(t10,t1,t3);}

/* do1421 in rotate-items in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12580(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12580,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12596,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k12594 in do1421 in rotate-items in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12599,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k12597 in k12594 in do1421 in rotate-items in next-in-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12599,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12580(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12097(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_12097r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12097r(t0,t1,t2,t3);}}

static void C_ccall f_12097r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12101,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12561,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_12101(t8,t7);}}

/* k12559 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12101(t3,t2);}

/* k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12101,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12104,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12104(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12434,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[217]);}
else{
t22=t21;
f_12434(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[218]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12469,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[218]);}
else{
t23=t22;
f_12469(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[233]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12504,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[233]);}
else{
t24=t23;
f_12504(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12533,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_12533(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12531 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12533,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12548,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12546 in k12531 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12540(2,t2,C_SCHEME_UNDEFINED);}}

/* k12538 in k12531 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12104(t5,t4);}

/* k12502 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12508,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12508(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12506 in k12502 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12104(t7,t6);}

/* k12467 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12473(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12471 in k12467 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12104(t7,t6);}

/* k12432 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12436 in k12432 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12104(t7,t6);}

/* k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12104(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12104,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12107(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12299,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_12299(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12334,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_12334(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12369,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[233]);}
else{
t8=t7;
f_12369(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12398,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12398(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12396 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12398,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12413,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12411 in k12396 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12405(2,t2,C_SCHEME_UNDEFINED);}}

/* k12403 in k12396 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12107(t5,t4);}

/* k12367 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12373,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12373(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12371 in k12367 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12107(t7,t6);}

/* k12332 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12338(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12336 in k12332 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12107(t7,t6);}

/* k12297 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12303(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12301 in k12297 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12107(t7,t6);}

/* k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12107,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12110,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12110(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12164,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_12164(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12199,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_12199(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[233]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12234,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[233]);}
else{
t8=t7;
f_12234(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12263,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12263(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12261 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12263,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12278,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12276 in k12261 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12270(2,t2,C_SCHEME_UNDEFINED);}}

/* k12268 in k12261 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12110(t5,t4);}

/* k12232 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12238(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12236 in k12232 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12110(t7,t6);}

/* k12197 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12201 in k12197 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12110(t7,t6);}

/* k12162 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12168(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12166 in k12162 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12110(t7,t6);}

/* k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12110,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12113,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12113(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12111 in k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k12114 in k12111 in k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12116,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12122,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12131,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[232],"next-in-rotation"),t5);}

/* a12130 in k12114 in k12111 in k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12131(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12131,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12143,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t3);}

/* k12141 in a12130 in k12114 in k12111 in k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12120 in k12114 in k12111 in k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9488(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12123 in k12120 in k12114 in k12111 in k12108 in k12105 in k12102 in k12099 in make-rotation in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12021(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12021,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12025,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t3,t2);}

/* k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12028,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12044,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9299(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_12028(2,t4,C_SCHEME_UNDEFINED);}}

/* k12042 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12044,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12054,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  tb:rani");
f_6626(t3,t1);}

/* k12052 in k12042 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12054,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12056,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li156),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_12056(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1321 in k12052 in k12042 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_12056(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12056,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12073,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 368  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k12071 in do1321 in k12052 in k12042 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12076,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k12074 in k12071 in do1321 in k12052 in k12042 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12076,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12087,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  tb:rani");
f_6626(t3,((C_word*)t0)[2]);}

/* k12085 in k12074 in k12071 in do1321 in k12052 in k12042 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_12056(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k12026 in k12023 in next-in-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11758(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11758r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11758r(t0,t1,t2,t3);}}

static void C_ccall f_11758r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11762,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12011,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11762(t8,t7);}}

/* k12009 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_12011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11762(t3,t2);}

/* k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11762(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11762,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11765,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11765(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11919,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[217]);}
else{
t18=t17;
f_11919(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[218]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11954,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[218]);}
else{
t19=t18;
f_11954(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11983,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11983(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11981 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11983,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11998,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11996 in k11981 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11990(2,t2,C_SCHEME_UNDEFINED);}}

/* k11988 in k11981 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11765(t5,t4);}

/* k11952 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11958(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11956 in k11952 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11765(t7,t6);}

/* k11917 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11923(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11921 in k11917 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11765(t7,t6);}

/* k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11765,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11768,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11768(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11819,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_11819(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11854,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_11854(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11883,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11883(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11881 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11883,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11898,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11896 in k11881 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11890(2,t2,C_SCHEME_UNDEFINED);}}

/* k11888 in k11881 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11768(t5,t4);}

/* k11852 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11858(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11856 in k11852 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11768(t7,t6);}

/* k11817 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11821 in k11817 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11768(t7,t6);}

/* k11766 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11768,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11771,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11771(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11769 in k11766 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k11772 in k11769 in k11766 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11774,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11780,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11786,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[230],"next-in-heap"),t5);}

/* a11785 in k11772 in k11769 in k11766 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11786,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11798,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t3);}

/* k11796 in a11785 in k11772 in k11769 in k11766 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11778 in k11772 in k11769 in k11766 in k11763 in k11760 in make-heap in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11722(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11722,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11726,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t3,t2);}

/* k11724 in next-in-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11726,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11735,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11742,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11748,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 368  pattern-data-set!");
f_9272(t4,((C_word*)t0)[2],t5);}}

/* k11746 in k11724 in next-in-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k11740 in k11724 in next-in-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[2],t1,C_fix(1));}

/* k11733 in k11724 in next-in-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11475(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11475r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11475r(t0,t1,t2,t3);}}

static void C_ccall f_11475r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11479,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11479(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11479(t8,t7);}}

/* k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11479(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11479,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11482,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11482(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11628,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[217]);}
else{
t18=t17;
f_11628(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[218]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11663,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[218]);}
else{
t19=t18;
f_11663(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11692,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11692(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11690 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11692,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11707,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11705 in k11690 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11699(2,t2,C_SCHEME_UNDEFINED);}}

/* k11697 in k11690 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11482(t5,t4);}

/* k11661 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11665 in k11661 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11482(t7,t6);}

/* k11626 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11630 in k11626 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11482(t7,t6);}

/* k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11482(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11482,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11485,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11485(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11528,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_11528(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11563,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_11563(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11592,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11592(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11590 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11592,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11599,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11607,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11605 in k11590 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11599(2,t2,C_SCHEME_UNDEFINED);}}

/* k11597 in k11590 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11485(t5,t4);}

/* k11561 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11567,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11567(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11565 in k11561 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11485(t7,t6);}

/* k11526 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11532(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11530 in k11526 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11485(t7,t6);}

/* k11483 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11485(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11485,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11488,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11488(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11486 in k11483 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k11489 in k11486 in k11483 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11491,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11497,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11499,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[228],"next-in-line"),t4);}

/* a11498 in k11489 in k11486 in k11483 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11499(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11499,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11507,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t3);}

/* k11505 in a11498 in k11489 in k11486 in k11483 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11495 in k11489 in k11486 in k11483 in k11480 in k11477 in make-line in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11260(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11260,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11264,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9497(t3,t2);}

/* k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11264,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11270,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11294,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[220]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11473,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  palin-len");
f_10701(t8,t1);}}

/* k11471 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11473,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  palin-inc-set!");
f_10710(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_11270(2,t2,C_SCHEME_UNDEFINED);}}

/* k11424 in k11471 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11426,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_11438(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_11438(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_11438(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_11438(t7,C_SCHEME_FALSE);}}}

/* k11436 in k11424 in k11471 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11438,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11270(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11270(2,t4,t3);}}

/* k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  palin-len");
f_10701(t2,((C_word*)t0)[2]);}

/* k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11297,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[220]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t7=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  palin-inc-set!");
f_10710(t2,((C_word*)t0)[2],C_fix(1));}

/* k11304 in k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11394,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_11394(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_11394(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_11394(t5,C_SCHEME_FALSE);}}}

/* k11392 in k11304 in k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_11309(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_11309(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_11309(t3,t2);}}

/* k11307 in k11304 in k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_11309(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11309,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11315,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11388,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9263(t3,((C_word*)t0)[2]);}

/* k11386 in k11307 in k11304 in k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(((C_word*)t0)[2],t1,C_fix(2));}

/* k11313 in k11307 in k11304 in k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11315,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_11270(2,t2,C_SCHEME_UNDEFINED);}}

/* k11316 in k11313 in k11307 in k11304 in k11301 in k11295 in k11292 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11318,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[225]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[226]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],t1,t2);}}}}

/* k11268 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[220]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[220]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t9=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k11271 in k11268 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t2,((C_word*)t0)[2]);}

/* k11278 in k11271 in k11268 in k11262 in next-in-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10790(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10790r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10790r(t0,t1,t2,t3);}}

static void C_ccall f_10790r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10794,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10794(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10794(t8,t7);}}

/* k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10794(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10794,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10797,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_10797(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11131,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[217]);}
else{
t22=t21;
f_11131(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[218]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11166,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[218]);}
else{
t23=t22;
f_11166(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[224]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11201,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[224]);}
else{
t24=t23;
f_11201(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11230,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_11230(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k11228 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11230,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11245,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11243 in k11228 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11237(2,t2,C_SCHEME_UNDEFINED);}}

/* k11235 in k11228 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10797(t5,t4);}

/* k11199 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11201,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11205(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11203 in k11199 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10797(t7,t6);}

/* k11164 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11170,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11170(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11168 in k11164 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10797(t7,t6);}

/* k11129 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11135,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11135(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11133 in k11129 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10797(t7,t6);}

/* k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10797(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10797,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10800,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10800(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10996,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_10996(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11031,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_11031(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11066,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[224]);}
else{
t8=t7;
f_11066(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11095,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_11095(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11093 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11095,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11102,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11110,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11108 in k11093 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11102(2,t2,C_SCHEME_UNDEFINED);}}

/* k11100 in k11093 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10800(t5,t4);}

/* k11064 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11070(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11068 in k11064 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10800(t7,t6);}

/* k11029 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11035,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11035(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11033 in k11029 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10800(t7,t6);}

/* k10994 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11000(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10998 in k10994 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_11000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10800(t7,t6);}

/* k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10800(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10800,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10803,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10803(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10861,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_10861(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10896,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_10896(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10931,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[224]);}
else{
t8=t7;
f_10931(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10960,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_10960(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10958 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10960,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10975,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10973 in k10958 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10967(2,t2,C_SCHEME_UNDEFINED);}}

/* k10965 in k10958 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10803(t5,t4);}

/* k10929 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10935,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10935(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10933 in k10929 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10803(t7,t6);}

/* k10894 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10900,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10900(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10898 in k10894 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10803(t7,t6);}

/* k10859 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10865(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10863 in k10859 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10803(t7,t6);}

/* k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10803,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10806,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10806(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10804 in k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k10807 in k10804 in k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10809,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10815,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10832,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[223],"next-in-palindrome"),t5);}

/* a10831 in k10807 in k10804 in k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10832,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10840,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t3);}

/* k10838 in a10831 in k10807 in k10804 in k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10813 in k10807 in k10804 in k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[220],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9488(t2,((C_word*)t0)[4],t5);}

/* k10816 in k10813 in k10807 in k10804 in k10801 in k10798 in k10795 in k10792 in make-palindrome in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10710(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10710,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[220]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10701(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10701,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10629(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10629,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10633,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t3,t2);}

/* k10631 in next-in-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10636,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_10636(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_10636(t4,C_SCHEME_UNDEFINED);}}

/* k10634 in k10631 in next-in-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10636(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10374(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10374r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10374r(t0,t1,t2,t3);}}

static void C_ccall f_10374r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10378,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10378(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10378(t8,t7);}}

/* k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10378,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10381,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10381(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10535,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[217]);}
else{
t18=t17;
f_10535(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[218]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10570,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[218]);}
else{
t19=t18;
f_10570(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10599,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_10599(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10597 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10599,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10614,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10612 in k10597 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10606(2,t2,C_SCHEME_UNDEFINED);}}

/* k10604 in k10597 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10381(t5,t4);}

/* k10568 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10574(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10572 in k10568 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10381(t7,t6);}

/* k10533 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10539,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10539(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10537 in k10533 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10381(t7,t6);}

/* k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10381,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10384,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10384(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10435,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[217]);}
else{
t6=t5;
f_10435(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10470,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_10470(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10499,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_10499(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10497 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10499,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10514,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10512 in k10497 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10506(2,t2,C_SCHEME_UNDEFINED);}}

/* k10504 in k10497 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10384(t5,t4);}

/* k10468 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10472 in k10468 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10384(t7,t6);}

/* k10433 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10439(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10437 in k10433 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10384(t7,t6);}

/* k10382 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10384,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10387,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10387(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10385 in k10382 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9552(t2);}

/* k10388 in k10385 in k10382 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10390,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10396,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10402,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9562(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[216],"next-in-cycle"),t5);}

/* a10401 in k10388 in k10385 in k10382 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10402(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10402,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10414,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9281(t4,t3);}

/* k10412 in a10401 in k10388 in k10385 in k10382 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[215]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10394 in k10388 in k10385 in k10382 in k10379 in k10376 in make-cycle in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10259(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10259,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10372,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t3,t2);}

/* k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10372,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10269,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10272,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10357,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-stream");
f_9149(t7,t1);}

/* k10355 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10357,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10368,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  period-stream");
f_9149(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_10272(2,t2,C_SCHEME_UNDEFINED);}}

/* k10366 in k10355 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(((C_word*)t0)[2],t1);}

/* k10362 in k10355 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[167]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t4=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_9131(t2,((C_word*)t0)[3]);}

/* k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10354,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10280,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[167]);
t7=t4;
f_10280(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 368  period-length");
f_9131(t4,((C_word*)t0)[3]);}}

/* k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10280,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10283,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10289,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10344,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9263(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_10289(2,t5,C_SCHEME_FALSE);}}

/* k10342 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(((C_word*)t0)[2],t1,C_fix(8));}

/* k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10289,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10308,a[2]=t3,a[3]=((C_word)li141),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  map-pattern-data");
f_10213(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10283(t2,C_SCHEME_UNDEFINED);}}

/* a10307 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10308(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10308,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10337,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  reset-period");
f_10259(t3,t2);}

/* k10335 in a10307 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10337,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k10316 in k10335 in a10307 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10321,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10333,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_9185(t3,t1);}

/* k10331 in k10316 in k10335 in a10307 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10333,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-omit-set!");
f_9176(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10319 in k10316 in k10335 in a10307 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10321,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k10290 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10292,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10302,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 368  max");
t4=*((C_word*)lf[213]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_10283(t2,C_SCHEME_UNDEFINED);}}

/* k10300 in k10290 in k10287 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10283(t3,t2);}

/* k10281 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10283,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k10284 in k10281 in k10278 in k10352 in k10270 in k10267 in k10370 in reset-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10213(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10213,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[177]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10204(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10204,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[177]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9903(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9903,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9910,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t3,t2);}

/* k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9910,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 368  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  promise?");
t3=C_retrieve(lf[212]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k10197 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  force");
t2=C_retrieve(lf[211]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9913,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9916,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10184,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9113(t5,t1);}

/* k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10184,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10176,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-reps");
f_9203(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_9916(2,t2,C_SCHEME_UNDEFINED);}}

/* k10174 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10176,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10168,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9344(t5,((C_word*)t0)[4],lf[206]);}
else{
t5=((C_word*)t0)[2];
f_10139(t5,C_SCHEME_UNDEFINED);}}

/* k10166 in k10174 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9362(t2,((C_word*)t0)[2],lf[204]);}

/* k10169 in k10166 in k10174 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[206]);
t3=((C_word*)t0)[2];
f_10139(t3,t2);}

/* k10137 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10139(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10139,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_10145(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10162,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  reset-period");
f_10259(t4,((C_word*)t0)[2]);}}

/* k10160 in k10137 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10145(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k10143 in k10137 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10145,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[192]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9344(t3,((C_word*)t0)[2],lf[192]);}
else{
t2=((C_word*)t0)[3];
f_9916(2,t2,C_SCHEME_UNDEFINED);}}

/* k10147 in k10143 in k10137 in k10182 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9362(((C_word*)t0)[3],((C_word*)t0)[2],lf[204]);}

/* k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9916,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9263(t2,((C_word*)t0)[3]);}}

/* k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9922,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9928,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10014,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t10,t1,C_fix(1));}

/* k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10014,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10017,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10030,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_10204(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10037,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10126,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t3,((C_word*)t0)[2],C_fix(8));}}

/* k10124 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10126,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10133,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_9131(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10037(t2,C_SCHEME_FALSE);}}

/* k10131 in k10124 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10037(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10037(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10037,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li137),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_10039(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10039(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10039,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10088,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li136),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10088(t9,t5);}}

/* do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10088,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9317(t2,((C_word*)t0)[3]);}

/* k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10123,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[192]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10098,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10105,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10112,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_10204(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_10204(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k10110 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10257,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t2,t1);}

/* k10255 in k10110 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10257,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9335(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10105(2,t2,((C_word*)t0)[2]);}}

/* k10230 in k10255 in k10110 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10253,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_9185(t2,t1);}

/* k10251 in k10230 in k10255 in k10110 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10253,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10241,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10249,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_9185(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_10105(2,t2,((C_word*)t0)[2]);}}

/* k10247 in k10251 in k10230 in k10255 in k10110 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10249,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-omit-set!");
f_9176(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10239 in k10251 in k10230 in k10255 in k10110 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10105(2,t2,lf[192]);}

/* k10103 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9308(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10096 in k10121 in do973 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_10088(t2,((C_word*)t0)[2]);}

/* k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10086,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9317(t3,((C_word*)t0)[3]);}

/* k10084 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(((C_word*)t0)[2],t1);}

/* k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10050,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10053,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10069,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10082,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9317(t5,((C_word*)t0)[3]);}

/* k10080 in k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(((C_word*)t0)[2],t1);}

/* k10067 in k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10069,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10073,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10077,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9317(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[204]);
t3=((C_word*)t0)[3];
f_10053(t3,t2);}}

/* k10075 in k10067 in k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-state");
f_9371(((C_word*)t0)[2],t1);}

/* k10071 in k10067 in k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10053(t3,t2);}

/* k10051 in k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_10053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10053,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10056,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[192]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9308(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_10056(2,t5,t4);}}

/* k10054 in k10051 in k10048 in k10044 in do969 in k10035 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10039(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10028 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9308(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10015 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10026,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9317(t3,((C_word*)t0)[2]);}

/* k10024 in k10015 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(((C_word*)t0)[2],t1);}

/* k10019 in k10015 in k10012 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[204]);
t4=((C_word*)t0)[2];
f_9928(2,t4,t3);}

/* k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[204]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9973,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9985,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9113(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10008,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t5,((C_word*)t0)[2],C_fix(64));}}

/* k10006 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9308(((C_word*)t0)[3],((C_word*)t0)[2],lf[192]);}
else{
t2=((C_word*)t0)[3];
f_9988(2,t2,C_SCHEME_UNDEFINED);}}

/* k9986 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t2,((C_word*)t0)[2],C_fix(16));}

/* k9992 in k9986 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9994,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9113(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9931(2,t2,C_SCHEME_UNDEFINED);}}

/* k10003 in k9992 in k9986 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_10005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10005,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9983 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9985,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9104(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9971 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9976,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9308(t2,((C_word*)t0)[2],lf[192]);}

/* k9974 in k9971 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_9931(2,t3,t2);}

/* k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9967,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9113(t3,((C_word*)t0)[2]);}

/* k9965 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9967,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[204]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-reps");
f_9203(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_9934(2,t3,t2);}}

/* k9960 in k9965 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9962,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[167]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k9932 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9947,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_9937(t3,C_SCHEME_UNDEFINED);}}

/* k9945 in k9932 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9937(t3,t2);}

/* k9935 in k9932 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9937(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9937,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9940,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9362(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9938 in k9935 in k9932 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9344(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9941 in k9938 in k9935 in k9932 in k9929 in k9926 in k9920 in k9914 in k9911 in k9908 in next-1 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9780(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_9780r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_9780r(t0,t1,t2,t3);}}

static void C_ccall f_9780r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9801,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li133),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_9801(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9839,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t1,t2);}}

/* k9837 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9839,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9849,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k9847 in k9837 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9849,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9851,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li134),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9851(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do945 in k9847 in k9837 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9851(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9851,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[206]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9870,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9880,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  eop?");
t13=C_retrieve(lf[203]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k9878 in do945 in k9847 in k9837 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9880,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_9870(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9885,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t2,((C_word*)t0)[2]);}}

/* k9883 in k9878 in do945 in k9847 in k9837 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9870(t3,t2);}

/* k9868 in do945 in k9847 in k9837 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9870(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_9851(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do938 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9801(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9801,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9833,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9903(t4,((C_word*)t0)[2]);}}

/* k9831 in do938 in next in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9833,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_9801(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9761(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9761,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9768,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t3,t2);}

/* k9766 in eod? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9768,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9775,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value");
t3=C_retrieve2(lf[186],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[206]));}}

/* k9773 in k9766 in eod? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  eod?");
t2=C_retrieve(lf[205]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9742,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9749,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t3,t2);}

/* k9747 in eop? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9749,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9756,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state");
f_9371(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[204]));}}

/* k9754 in k9747 in eop? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  eop?");
t2=C_retrieve(lf[203]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9562(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9562,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9566,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data-set!");
f_9272(t12,t2,t3);}

/* k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9575,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9578,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9732,a[2]=t3,a[3]=((C_word)li129),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  map-pattern-data");
f_10213(t4,t5,((C_word*)t0)[7]);}

/* a9731 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9732(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9732,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9739,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9248(t3,t2);}

/* k9737 in a9731 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9581,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_9581(t5,t4);}
else{
t3=t2;
f_9581(t3,C_SCHEME_UNDEFINED);}}

/* k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9581(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9581,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[193]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9587(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[200]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9587(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[201],t4);}}}

/* k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9587,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[194]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9593(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[198]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9593(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[199],t4);}}}

/* k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9656,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k9654 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9656,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[196]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9596(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6449(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k9668 in k9654 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9670,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[197]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9596(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9596(t4,t3);}}

/* k9594 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9596,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t8=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k9597 in k9594 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9599,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9605,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_9605(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_9605(t8,t7);}}

/* k9603 in k9597 in k9594 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9605(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9605,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9608,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9618,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 368  make-period");
f_9092(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 368  make-period");
f_9092(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k9616 in k9603 in k9597 in k9594 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t4=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k9606 in k9603 in k9597 in k9594 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9611,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k9609 in k9606 in k9603 in k9597 in k9594 in k9591 in k9585 in k9579 in k9576 in k9573 in k9570 in k9567 in k9564 in initialize-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9552(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9552,NULL,1,t1);}
t2=lf[192];
t3=lf[192];
t4=lf[192];
t5=lf[193];
t6=lf[194];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[177],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9497(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9497,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9488(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9488,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9371(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9371,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9362(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9362,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_9353 in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_9353(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9353,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9344(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9344,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9335(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9335,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9317(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9317,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9308(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9308,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9299(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9299,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9281(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9281,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9272(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9272,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[177]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9263(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9263,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[177]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9248(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9248,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[177]));}

/* period-reps in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9203(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9203,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[167]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9185(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9185,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[167]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9176(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9176,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[167]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9149(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9149,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[167]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9131(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9131,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[167]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9113(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9113,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[167]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9104(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9104,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[167]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[169]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_9092(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9092,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[167],t2,t3,t4,t5,t6,t7));}

/* transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8784,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 367  modulo");
t7=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8830,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8837,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8885,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_8885(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 367  key");
t6=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[163],t2);}}}

/* k8883 in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8885,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8902,a[2]=t1,a[3]=((C_word)li104),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 367  transpkeys");
f_8837(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8930,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8934,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k8932 in k8883 in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  transpkeys");
f_8837(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k8928 in k8883 in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  note");
t2=C_retrieve(lf[152]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8901 in k8883 in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8902(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8902,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8837(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8837,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8846,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li102),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8846(t8,t1,t2,t4);}

/* do644 in transpkeys in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8846(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8846,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k8828 in transpose in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8830,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 367  note");
t3=C_retrieve(lf[152]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8649(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8649,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[160],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8679,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8749,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 367  invkeys");
f_8679(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8771,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8775,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  key");
t7=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[161],t2);}}}

/* k8773 in invert in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  invkeys");
f_8679(((C_word*)t0)[2],t1);}

/* k8769 in invert in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  note");
t2=C_retrieve(lf[152]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8748 in invert in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8749,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8679(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8679,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8695,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li98),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8695(t9,t1,t5,t4);}

/* do629 in invkeys in invert in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8695(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8695,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8604(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8604,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 367  modulo");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[158]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8636,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8647,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  key");
t4=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k8645 in pc in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  modulo");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k8634 in pc in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[158]),t1);}

/* hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8488(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8488,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8503,a[2]=t5,a[3]=t3,a[4]=((C_word)li95),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8503(t7,t1,t2,lf[157],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6602(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8602,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8216(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8600 in hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do609 in hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8503(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8503,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8516,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8533,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8533(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8533(t14,(C_word)C_i_listp(t13));}}}

/* k8531 in do609 in hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8533,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8537,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  hz");
t4=C_retrieve(lf[156]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8552,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8216(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8550 in k8531 in do609 in hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8552,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8516(t9,t8);}

/* k8535 in k8531 in do609 in hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8537,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8516(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8514 in do609 in hz in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8503(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8366(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8366,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8381,a[2]=t5,a[3]=t3,a[4]=((C_word)li93),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8381(t7,t1,t2,lf[155],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub243(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8486,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8216(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8484 in key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do593 in key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8381(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8381,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8394,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8411,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8411(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8411(t14,(C_word)C_i_numberp(t13));}}}

/* k8409 in do593 in key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8411,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8415,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  key");
t4=C_retrieve(lf[154]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8430,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8216(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8428 in k8409 in do593 in key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8430,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8394(t9,t8);}

/* k8413 in k8409 in do593 in key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8415,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8394(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8392 in do593 in key in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8381(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8269(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8269,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8284,a[2]=t5,a[3]=t3,a[4]=((C_word)li91),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8284(t7,t1,t2,lf[153],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8364,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8216(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k8362 in note in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do579 in note in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8284(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8284,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8297,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8315,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  note");
t13=C_retrieve(lf[152]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8330,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8216(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k8328 in do579 in note in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8330,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_8297(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k8313 in do579 in note in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8315,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8297(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8295 in do579 in note in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8297(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8284(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8216(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8216,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8166,a[2]=t6,a[3]=t7,a[4]=((C_word)li88),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[139],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8214,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  floor");
t9=*((C_word*)lf[150]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8239,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_8114(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8254,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k8252 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8254,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[151],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k8259 in k8252 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_8114(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8237 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_8114(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8212 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8214,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8186,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[147]))){
t5=t4;
f_8186(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[148]);
t6=t4;
f_8186(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[149]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k8184 in k8212 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8186(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8186,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li89),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[139],"*notes*"),t1,t2);}

/* a8187 in k8184 in k8212 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8188,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[146],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a8165 in note-aux in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8166,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[145],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_8114(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8114,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8118,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8151,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[139],"*notes*"),t2,t6);}

/* a8150 in string->note-entry in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8151,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k8116 in string->note-entry in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8118,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8134,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[142]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[143],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k8132 in k8116 in string->note-entry in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li85),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[139],"*notes*"),t1,t2);}

/* a8135 in k8132 in k8116 in string->note-entry in k8110 in k8107 in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8136,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[141],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* rangamma in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8086(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8086r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8086r(t0,t1,t2);}}

static void C_ccall f_8086r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 367  tb:rangamma");
f_6700(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:rangamma");
f_6700(t1,t3);}}

/* ranpoisson in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8067(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8067r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8067r(t0,t1,t2);}}

static void C_ccall f_8067r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[135])))){
C_trace("ChickenBridge.scm: 367  tb:ranpoisson");
f_6710(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:ranpoisson");
f_6710(t1,t3);}}

/* rangauss in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8026(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8026r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8026r(t0,t1,t2);}}

static void C_ccall f_8026r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6671(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6671(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6671(t1,t4,t5);}}}

/* ranexp in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_8007(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8007r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8007r(t0,t1,t2);}}

static void C_ccall f_8007r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 367  tb:ranexp");
f_6682(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:ranexp");
f_6682(t1,t3);}}

/* ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7779(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_7779r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7779r(t0,t1,t2);}}

static void C_ccall f_7779r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[128];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7783,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_7783(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[129]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7920,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[129]);}
else{
t19=t18;
f_7920(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[130]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7955,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[130]);}
else{
t20=t19;
f_7955(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7984,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_7984(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k7982 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7984,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7999,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7997 in k7982 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7991(2,t2,C_SCHEME_UNDEFINED);}}

/* k7989 in k7982 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7783(t5,t4);}

/* k7953 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7959(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7957 in k7953 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7783(t7,t6);}

/* k7918 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7924,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7924(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7922 in k7918 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7783(t7,t6);}

/* k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7783(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7783,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7786,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7786(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[129]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7820,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[129]);}
else{
t6=t5;
f_7820(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[130]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7855,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[130]);}
else{
t7=t6;
f_7855(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7884,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7884(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7882 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7884,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7899,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7897 in k7882 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7891(2,t2,C_SCHEME_UNDEFINED);}}

/* k7889 in k7882 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7786(t5,t4);}

/* k7853 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7859,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7859(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7857 in k7853 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7786(t7,t6);}

/* k7818 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7824,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7824(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7822 in k7818 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7786(t7,t6);}

/* k7784 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7786(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7786,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7789,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7789(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7787 in k7784 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_7792(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_7792(t5,t4);}}

/* k7790 in k7787 in k7784 in k7781 in ranbeta in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7792,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub296(t5,t6,t7));}

/* odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7548(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7548r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7548r(t0,t1,t2,t3);}}

static void C_ccall f_7548r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7552,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7552(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[122]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7689,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[122]);}
else{
t20=t19;
f_7689(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[123]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7724,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[123]);}
else{
t21=t20;
f_7724(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7753,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7753(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7751 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7753,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7768,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7766 in k7751 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7760(2,t2,C_SCHEME_UNDEFINED);}}

/* k7758 in k7751 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7552(t5,t4);}

/* k7722 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7726 in k7722 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7552(t7,t6);}

/* k7687 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7693(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7691 in k7687 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7552(t7,t6);}

/* k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7552(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7552,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7555,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7555(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[122]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7589,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[122]);}
else{
t6=t5;
f_7589(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[123]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7624,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[123]);}
else{
t7=t6;
f_7624(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7653,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7653(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7651 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7653,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7668,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7666 in k7651 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7660(2,t2,C_SCHEME_UNDEFINED);}}

/* k7658 in k7651 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7555(t5,t4);}

/* k7622 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7628,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7628(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7626 in k7622 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7555(t7,t6);}

/* k7587 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7591 in k7587 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7555(t7,t6);}

/* k7553 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7555(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7555,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7558,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7558(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7556 in k7553 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6633(t2,lf[121]);}

/* k7566 in k7556 in k7553 in k7550 in odds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7505(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_7505r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7505r(t0,t1,t2);}}

static void C_ccall f_7505r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7523,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6626(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7538,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6626(t4,t5);}}

/* k7536 in pick in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k7521 in pick in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7484,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub262(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub268(t9,t10,t11));}}

/* ran in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7453(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_7453r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7453r(t0,t1,t2);}}

static void C_ccall f_7453r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7457,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_7457(t6,t5);}
else{
t5=t4;
f_7457(t5,C_SCHEME_UNDEFINED);}}

/* k7455 in ran in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6626(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6633(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6633(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4r,(void*)f_7379r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7379r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7379r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7386,a[2]=t3,a[3]=t1,a[4]=t6,a[5]=t2,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t5,0,t9);
t11=t7;
f_7386(t11,t10);}
else{
t9=t7;
f_7386(t9,C_SCHEME_UNDEFINED);}}

/* k7384 in scale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7386,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7395,a[2]=((C_word*)t0)[4],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word)li74),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_7395(t6,((C_word*)t0)[3],C_fix(0),((C_word*)t0)[2],t2,((C_word*)t0)[4]);}

/* do419 in k7384 in scale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7395(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7395,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7431,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t13=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k7429 in do419 in k7384 in scale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7431,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_7395(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7352(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7352r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7352r(t0,t1,t2,t3);}}

static void C_ccall f_7352r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
t4=(C_word)C_i_car(t3);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(6,0,t1,C_retrieve(lf[108]),t2,t5,t6);}
else{
C_trace("ChickenBridge.scm: 367  interpl");
t5=C_retrieve(lf[108]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t2,t3);}}

/* interpl in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_7257r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_7257r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7257r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7261,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[112],t3);}
else{
t6=t5;
f_7261(2,t6,(C_word)C_i_car(t3));}}

/* k7259 in interpl in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7261,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 367  err");
t6=C_retrieve(lf[110]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[111],((C_word*)t0)[4]);}
else{
t6=t4;
f_7264(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k7262 in k7259 in interpl in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7264,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7276,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li71),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_7276(t14,((C_word*)t0)[2],t10);}

/* do403 in k7262 in k7259 in interpl in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_7276(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7276,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6490(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7298,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 367  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[109],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_7298(2,t13,t12);}}}

/* k7296 in do403 in k7262 in k7259 in interpl in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7276(t3,((C_word*)t0)[2],t2);}

/* scaler->cents in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7242(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7242,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_6595(3,t3,t1,t2);}}

/* cents->scaler in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7227(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7227,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_6588(3,t3,t1,t2);}}

/* rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6991(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_6991r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6991r(t0,t1,t2,t3);}}

static void C_ccall f_6991r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[102];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[103];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6995,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_6995(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[104]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7140,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[104]);}
else{
t20=t19;
f_7140(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[105]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7175,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[105]);}
else{
t21=t20;
f_7175(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7204,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7204(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7202 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7204,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7219,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7217 in k7202 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7211(2,t2,C_SCHEME_UNDEFINED);}}

/* k7209 in k7202 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_6995(t5,t4);}

/* k7173 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7177 in k7173 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6995(t7,t6);}

/* k7138 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7142 in k7138 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6995(t7,t6);}

/* k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6995,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6998,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_6998(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7040,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[104]);}
else{
t6=t5;
f_7040(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[105]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7075,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[105]);}
else{
t7=t6;
f_7075(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7104,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7104(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7102 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7104,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7119,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7117 in k7102 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7111(2,t2,C_SCHEME_UNDEFINED);}}

/* k7109 in k7102 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_6998(t5,t4);}

/* k7073 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7077 in k7073 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6998(t7,t6);}

/* k7038 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7042 in k7038 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6998(t7,t6);}

/* k6996 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6998,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7001,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7001(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k6999 in k6996 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7001,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7012,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li67),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 367  tb:rhythm->seconds");
f_6573(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7011 in k6999 in k6996 in k6993 in rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_7012(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7012,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:rhythm->seconds");
f_6573(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6972(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6972r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6972r(t0,t1,t2,t3);}}

static void C_ccall f_6972r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 367  tb:decimals");
f_6551(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:decimals");
f_6551(t1,t2,t4);}}

/* quantize in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6951,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6963,a[2]=t3,a[3]=((C_word)li64),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:quantize");
f_6562(t1,t2,t3);}}

/* a6962 in quantize in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6963,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:quantize");
f_6562(t1,t2,((C_word*)t0)[2]);}

/* minus in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6925(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6925r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6925r(t0,t1,t2,t3);}}

static void C_ccall f_6925r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[94]+1),t2);}
else{
C_trace("ChickenBridge.scm: 367  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[94]+1),t2,t3);}}

/* plus in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6883(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6883r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6883r(t0,t1,t2);}}

static void C_ccall f_6883r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[92]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[92]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[92]+1),t2);}}}

/* int in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6868(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6868,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[67],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:int");
t3=C_retrieve2(lf[67],"tb:int");
f_6544(3,t3,t1,t2);}}

/* discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_6757r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6757r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6757r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6761,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_6761(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6832,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 367  not?");
t20=C_retrieve(lf[89]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_6761(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_6761(t19,t18);}}}

/* k6830 in discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_6761(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_6761(t2,C_SCHEME_UNDEFINED);}}

/* k6759 in discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6761(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6761,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6775,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li58),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6790,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6517(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6801,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li59),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6517(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a6800 in k6759 in discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6801(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6801,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6517(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k6788 in k6759 in discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a6774 in k6759 in discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6775(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6775,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6783,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6517(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k6781 in a6774 in k6759 in discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_6723r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_6723r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6723r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6735,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li56),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6490(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6490(t1,t2,t3,t4,t5,t6,t8);}}}

/* a6734 in rescale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6735(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6735,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[87]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6720,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub316(t2));}

/* tb:ranpink in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6717,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub313(t2));}

/* tb:ranpoisson in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6710(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6710,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub310(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6707,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub306(t2));}

/* tb:rangamma in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6700(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6700,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub302(t3,t4));}

/* tb:ranexp in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6682(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6682,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub290(t3,t4));}

/* tb:rangauss in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6671(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6671,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub284(t4,t5,t6));}

/* tb:ranmiddle in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6668,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub279(t2));}

/* tb:ranhigh in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6665,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub276(t2));}

/* tb:ranlow in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6662,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub273(t2));}

/* tb:ranf in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6633(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6633,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub256(t3,t4));}

/* tb:rani in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6626(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6626,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub252(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6623,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub248(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6602(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6602,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub234(t3,t4));}

/* tb:scaler->cents in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6595(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6595,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub230(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6588(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6588,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub225(t3,t4));}

/* tb:rhythm->seconds in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6573(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6573,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub218(t5,t6,t7,t8));}

/* tb:quantize in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6562(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6562,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub210(t4,t5,t6));}

/* tb:decimals in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6551(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6551,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub203(t4,t5,t6));}

/* tb:int in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6544(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6544,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub198(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6517(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6517,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub189(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6490(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6490,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub174(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6449(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6449,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6455,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li32),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6455(t9,t1,C_SCHEME_FALSE);}

/* do143 in bitwise-test in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6455(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6455,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6465,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6465(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6465(t7,t6);}}
else{
t5=t4;
f_6465(t5,C_SCHEME_UNDEFINED);}}}

/* k6463 in do143 in bitwise-test in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6465(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6465,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6455(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6363r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6363r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6363r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[63],"list-prop"),t7,t3,t4);}}}

/* make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6268(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6268r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6268r(t0,t1,t2,t3);}}

static void C_ccall f_6268r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6272,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 366  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[62],t2);}
else{
t5=t4;
f_6272(2,t5,C_SCHEME_UNDEFINED);}}

/* k6270 in make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6272,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6274,a[2]=t3,a[3]=((C_word)li28),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6297,a[2]=t5,a[3]=((C_word)li29),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_vemptyp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 366  l1");
t8=((C_word*)t3)[1];
f_6274(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_vector_ref(((C_word*)t0)[4],C_fix(0));
if(C_truep((C_word)C_i_closurep(t8))){
t9=(C_word)C_i_vector_ref(((C_word*)t0)[4],C_fix(0));
C_trace("ChickenBridge.scm: 366  l2");
t10=((C_word*)t5)[1];
f_6297(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}
else{
t9=(C_word)C_i_vector_ref(((C_word*)t0)[4],C_fix(0));
C_trace("ChickenBridge.scm: 366  l1");
t10=((C_word*)t3)[1];
f_6274(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k6270 in make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6297(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6297,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6314,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 366  b");
t5=t3;
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k6312 in l2 in k6270 in make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6318,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 366  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_6297(t4,t2,t3,((C_word*)t0)[2]);}

/* k6316 in k6312 in l2 in k6270 in make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6318,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k6270 in make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_6274(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6274,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6291,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 366  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6289 in l1 in k6270 in make-list in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6291,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* list-set! in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6258,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6218(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6218r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6218r(t0,t1,t2);}}

static void C_ccall f_6218r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6248,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6246 in list* in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6248,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6080(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6080,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6114,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6112 in butlast in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6114,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6057(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6057,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6051(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6051,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6036(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6036,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6022(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6022,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6012(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6012,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_6002(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6002,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5992(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5992,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5982(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5982,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5953(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_5953r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_5953r(t0,t1,t2);}}

static void C_ccall f_5953r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5962,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_5962 in chdir in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5962(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5962,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5967,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_5967(2,t4,C_SCHEME_FALSE);}}

/* k5965 */
static void C_ccall f_5967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5947,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5947 in cwd in k5938 in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5947,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5649(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5649,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5929,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5918,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5927,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5659,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 272  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5659(2,t11,t2);}}

/* k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5662,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5910,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 273  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a5909 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5910,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5665(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 274  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5665,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5680,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5680(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_5680(t9,C_SCHEME_FALSE);}}

/* k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_5680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5680,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5690,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 288  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5690,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5692(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_5692(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5692,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5704,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5704(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5745,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5751(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 303  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5751,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5745(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5805,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5878,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 324  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5761,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 314  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5761(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5759 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5761,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5745(t9,t8);}

/* k5876 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5878,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5851,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 329  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5805(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5864,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5866,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 325  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5865 in k5876 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5866(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5866,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 333  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5862 in k5876 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 331  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5849 in k5876 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 328  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k5803 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5805,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5811,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5811(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5832,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 340  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5830 in k5803 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 339  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k5809 in k5803 in k5749 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5745(t6,t5);}

/* k5743 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_5745(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5692(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_5704(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5704,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5717,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5717(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5717(t5,C_SCHEME_UNDEFINED);}}}

/* k5715 in do69 in do63 in k5688 in k5678 in k5663 in k5660 in k5657 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_fcall f_5717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5704(t3,((C_word*)t0)[2],t2);}

/* f_5927 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5927(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5927,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5918 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5918(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5918,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5926,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 270  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5924 */
static void C_ccall f_5926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 270  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_5929 in expand-send in k5645 in k5642 in k5638 in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5929(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5929r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5929r(t0,t1,t2,t3);}}

static void C_ccall f_5929r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5937,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k5935 */
static void C_ccall f_5937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5351,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5512,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5604,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5603 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5604(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5604,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5618,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5622,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 218  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5633,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5637,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 219  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5635 in a5603 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 219  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5631 in a5603 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5633,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5620 in a5603 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 218  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5616 in a5603 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5618,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5515,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 221  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 222  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5521,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5598,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5597 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5598(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5598,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5364,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5423,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 182  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5421 in a5597 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 182  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5362 in a5597 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5364,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5528,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5574,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5588,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5587 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5588(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5588,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5572 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5574,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 228  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5538 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5544,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5548,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5565 in k5538 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5566(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5566,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5501,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5499 in a5565 in k5538 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5501,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k5546 in k5538 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5548,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5542 in k5538 in k5526 in k5519 in k5516 in k5513 in k5510 in expand-optkeys in k5347 in k5344 in k5341 in k5338 */
static void C_ccall f_5544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5544,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2261] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5340ChickenBridge.scm",(void*)f_5340},
{"f_5343ChickenBridge.scm",(void*)f_5343},
{"f_5346ChickenBridge.scm",(void*)f_5346},
{"f_5349ChickenBridge.scm",(void*)f_5349},
{"f_33828ChickenBridge.scm",(void*)f_33828},
{"f_5640ChickenBridge.scm",(void*)f_5640},
{"f_5644ChickenBridge.scm",(void*)f_5644},
{"f_33776ChickenBridge.scm",(void*)f_33776},
{"f_33823ChickenBridge.scm",(void*)f_33823},
{"f_33813ChickenBridge.scm",(void*)f_33813},
{"f_33780ChickenBridge.scm",(void*)f_33780},
{"f_5647ChickenBridge.scm",(void*)f_5647},
{"f_33770ChickenBridge.scm",(void*)f_33770},
{"f_5940ChickenBridge.scm",(void*)f_5940},
{"f_8109ChickenBridge.scm",(void*)f_8109},
{"f_33554ChickenBridge.scm",(void*)f_33554},
{"f_33768ChickenBridge.scm",(void*)f_33768},
{"f_33588ChickenBridge.scm",(void*)f_33588},
{"f_33600ChickenBridge.scm",(void*)f_33600},
{"f_33604ChickenBridge.scm",(void*)f_33604},
{"f_33608ChickenBridge.scm",(void*)f_33608},
{"f_33752ChickenBridge.scm",(void*)f_33752},
{"f_33614ChickenBridge.scm",(void*)f_33614},
{"f_33634ChickenBridge.scm",(void*)f_33634},
{"f_33637ChickenBridge.scm",(void*)f_33637},
{"f_33645ChickenBridge.scm",(void*)f_33645},
{"f_33652ChickenBridge.scm",(void*)f_33652},
{"f_33655ChickenBridge.scm",(void*)f_33655},
{"f_33659ChickenBridge.scm",(void*)f_33659},
{"f_33666ChickenBridge.scm",(void*)f_33666},
{"f_33669ChickenBridge.scm",(void*)f_33669},
{"f_33673ChickenBridge.scm",(void*)f_33673},
{"f_33680ChickenBridge.scm",(void*)f_33680},
{"f_33624ChickenBridge.scm",(void*)f_33624},
{"f_33577ChickenBridge.scm",(void*)f_33577},
{"f_33567ChickenBridge.scm",(void*)f_33567},
{"f_33570ChickenBridge.scm",(void*)f_33570},
{"f_8112ChickenBridge.scm",(void*)f_8112},
{"f_33540ChickenBridge.scm",(void*)f_33540},
{"f_33548ChickenBridge.scm",(void*)f_33548},
{"f_33552ChickenBridge.scm",(void*)f_33552},
{"f_15847ChickenBridge.scm",(void*)f_15847},
{"f_15898ChickenBridge.scm",(void*)f_15898},
{"f_33530ChickenBridge.scm",(void*)f_33530},
{"f_33538ChickenBridge.scm",(void*)f_33538},
{"f_16003ChickenBridge.scm",(void*)f_16003},
{"f_33427ChickenBridge.scm",(void*)f_33427},
{"f_33490ChickenBridge.scm",(void*)f_33490},
{"f_33494ChickenBridge.scm",(void*)f_33494},
{"f_33508ChickenBridge.scm",(void*)f_33508},
{"f_33430ChickenBridge.scm",(void*)f_33430},
{"f_33450ChickenBridge.scm",(void*)f_33450},
{"f_33454ChickenBridge.scm",(void*)f_33454},
{"f_16006ChickenBridge.scm",(void*)f_16006},
{"f_33413ChickenBridge.scm",(void*)f_33413},
{"f_33421ChickenBridge.scm",(void*)f_33421},
{"f_33425ChickenBridge.scm",(void*)f_33425},
{"f_16199ChickenBridge.scm",(void*)f_16199},
{"f_33387ChickenBridge.scm",(void*)f_33387},
{"f_33391ChickenBridge.scm",(void*)f_33391},
{"f_33397ChickenBridge.scm",(void*)f_33397},
{"f_33408ChickenBridge.scm",(void*)f_33408},
{"f_33404ChickenBridge.scm",(void*)f_33404},
{"f_16268ChickenBridge.scm",(void*)f_16268},
{"f_33365ChickenBridge.scm",(void*)f_33365},
{"f_17513ChickenBridge.scm",(void*)f_17513},
{"f_33345ChickenBridge.scm",(void*)f_33345},
{"f_17516ChickenBridge.scm",(void*)f_17516},
{"f_33305ChickenBridge.scm",(void*)f_33305},
{"f_17519ChickenBridge.scm",(void*)f_17519},
{"f_33211ChickenBridge.scm",(void*)f_33211},
{"f_33215ChickenBridge.scm",(void*)f_33215},
{"f_33218ChickenBridge.scm",(void*)f_33218},
{"f_33236ChickenBridge.scm",(void*)f_33236},
{"f_33239ChickenBridge.scm",(void*)f_33239},
{"f_33270ChickenBridge.scm",(void*)f_33270},
{"f_33242ChickenBridge.scm",(void*)f_33242},
{"f_33248ChickenBridge.scm",(void*)f_33248},
{"f_33201ChickenBridge.scm",(void*)f_33201},
{"f_33195ChickenBridge.scm",(void*)f_33195},
{"f_17522ChickenBridge.scm",(void*)f_17522},
{"f_33103ChickenBridge.scm",(void*)f_33103},
{"f_33105ChickenBridge.scm",(void*)f_33105},
{"f_33109ChickenBridge.scm",(void*)f_33109},
{"f_33112ChickenBridge.scm",(void*)f_33112},
{"f_33115ChickenBridge.scm",(void*)f_33115},
{"f_33155ChickenBridge.scm",(void*)f_33155},
{"f_33147ChickenBridge.scm",(void*)f_33147},
{"f_33118ChickenBridge.scm",(void*)f_33118},
{"f_33121ChickenBridge.scm",(void*)f_33121},
{"f_33124ChickenBridge.scm",(void*)f_33124},
{"f_33095ChickenBridge.scm",(void*)f_33095},
{"f_17525ChickenBridge.scm",(void*)f_17525},
{"f_33067ChickenBridge.scm",(void*)f_33067},
{"f_17528ChickenBridge.scm",(void*)f_17528},
{"f_33031ChickenBridge.scm",(void*)f_33031},
{"f_33043ChickenBridge.scm",(void*)f_33043},
{"f_33039ChickenBridge.scm",(void*)f_33039},
{"f_33013ChickenBridge.scm",(void*)f_33013},
{"f_33007ChickenBridge.scm",(void*)f_33007},
{"f_17531ChickenBridge.scm",(void*)f_17531},
{"f_32921ChickenBridge.scm",(void*)f_32921},
{"f_32925ChickenBridge.scm",(void*)f_32925},
{"f_32928ChickenBridge.scm",(void*)f_32928},
{"f_32931ChickenBridge.scm",(void*)f_32931},
{"f_32944ChickenBridge.scm",(void*)f_32944},
{"f_32890ChickenBridge.scm",(void*)f_32890},
{"f_32894ChickenBridge.scm",(void*)f_32894},
{"f_32909ChickenBridge.scm",(void*)f_32909},
{"f_32884ChickenBridge.scm",(void*)f_32884},
{"f_17534ChickenBridge.scm",(void*)f_17534},
{"f_32770ChickenBridge.scm",(void*)f_32770},
{"f_32786ChickenBridge.scm",(void*)f_32786},
{"f_32797ChickenBridge.scm",(void*)f_32797},
{"f_32764ChickenBridge.scm",(void*)f_32764},
{"f_17590ChickenBridge.scm",(void*)f_17590},
{"f_32631ChickenBridge.scm",(void*)f_32631},
{"f_32654ChickenBridge.scm",(void*)f_32654},
{"f_32651ChickenBridge.scm",(void*)f_32651},
{"f_32625ChickenBridge.scm",(void*)f_32625},
{"f_17593ChickenBridge.scm",(void*)f_17593},
{"f_32479ChickenBridge.scm",(void*)f_32479},
{"f_32497ChickenBridge.scm",(void*)f_32497},
{"f_32506ChickenBridge.scm",(void*)f_32506},
{"f_32473ChickenBridge.scm",(void*)f_32473},
{"f_17596ChickenBridge.scm",(void*)f_17596},
{"f_32426ChickenBridge.scm",(void*)f_32426},
{"f_32430ChickenBridge.scm",(void*)f_32430},
{"f_32433ChickenBridge.scm",(void*)f_32433},
{"f_32449ChickenBridge.scm",(void*)f_32449},
{"f_32408ChickenBridge.scm",(void*)f_32408},
{"f_32402ChickenBridge.scm",(void*)f_32402},
{"f_17599ChickenBridge.scm",(void*)f_17599},
{"f_32326ChickenBridge.scm",(void*)f_32326},
{"f_17738ChickenBridge.scm",(void*)f_17738},
{"f_32252ChickenBridge.scm",(void*)f_32252},
{"f_32259ChickenBridge.scm",(void*)f_32259},
{"f_32246ChickenBridge.scm",(void*)f_32246},
{"f_17741ChickenBridge.scm",(void*)f_17741},
{"f_32142ChickenBridge.scm",(void*)f_32142},
{"f_32150ChickenBridge.scm",(void*)f_32150},
{"f_32116ChickenBridge.scm",(void*)f_32116},
{"f_32133ChickenBridge.scm",(void*)f_32133},
{"f_32124ChickenBridge.scm",(void*)f_32124},
{"f_32110ChickenBridge.scm",(void*)f_32110},
{"f_17744ChickenBridge.scm",(void*)f_17744},
{"f_32066ChickenBridge.scm",(void*)f_32066},
{"f_17747ChickenBridge.scm",(void*)f_17747},
{"f_31984ChickenBridge.scm",(void*)f_31984},
{"f_31995ChickenBridge.scm",(void*)f_31995},
{"f_31997ChickenBridge.scm",(void*)f_31997},
{"f_32026ChickenBridge.scm",(void*)f_32026},
{"f_31962ChickenBridge.scm",(void*)f_31962},
{"f_31978ChickenBridge.scm",(void*)f_31978},
{"f_31956ChickenBridge.scm",(void*)f_31956},
{"f_17750ChickenBridge.scm",(void*)f_17750},
{"f_31909ChickenBridge.scm",(void*)f_31909},
{"f_31913ChickenBridge.scm",(void*)f_31913},
{"f_31920ChickenBridge.scm",(void*)f_31920},
{"f_31887ChickenBridge.scm",(void*)f_31887},
{"f_31903ChickenBridge.scm",(void*)f_31903},
{"f_31881ChickenBridge.scm",(void*)f_31881},
{"f_17753ChickenBridge.scm",(void*)f_17753},
{"f_31749ChickenBridge.scm",(void*)f_31749},
{"f_31789ChickenBridge.scm",(void*)f_31789},
{"f_31753ChickenBridge.scm",(void*)f_31753},
{"f_31769ChickenBridge.scm",(void*)f_31769},
{"f_31781ChickenBridge.scm",(void*)f_31781},
{"f_31785ChickenBridge.scm",(void*)f_31785},
{"f_31777ChickenBridge.scm",(void*)f_31777},
{"f_31688ChickenBridge.scm",(void*)f_31688},
{"f_31735ChickenBridge.scm",(void*)f_31735},
{"f_31695ChickenBridge.scm",(void*)f_31695},
{"f_31706ChickenBridge.scm",(void*)f_31706},
{"f_31682ChickenBridge.scm",(void*)f_31682},
{"f_17756ChickenBridge.scm",(void*)f_17756},
{"f_31662ChickenBridge.scm",(void*)f_31662},
{"f_31656ChickenBridge.scm",(void*)f_31656},
{"f_17759ChickenBridge.scm",(void*)f_17759},
{"f_31636ChickenBridge.scm",(void*)f_31636},
{"f_31640ChickenBridge.scm",(void*)f_31640},
{"f_31628ChickenBridge.scm",(void*)f_31628},
{"f_17762ChickenBridge.scm",(void*)f_17762},
{"f_31608ChickenBridge.scm",(void*)f_31608},
{"f_31612ChickenBridge.scm",(void*)f_31612},
{"f_31600ChickenBridge.scm",(void*)f_31600},
{"f_17765ChickenBridge.scm",(void*)f_17765},
{"f_31580ChickenBridge.scm",(void*)f_31580},
{"f_31584ChickenBridge.scm",(void*)f_31584},
{"f_31572ChickenBridge.scm",(void*)f_31572},
{"f_17768ChickenBridge.scm",(void*)f_17768},
{"f_31552ChickenBridge.scm",(void*)f_31552},
{"f_31556ChickenBridge.scm",(void*)f_31556},
{"f_31544ChickenBridge.scm",(void*)f_31544},
{"f_17771ChickenBridge.scm",(void*)f_17771},
{"f_31443ChickenBridge.scm",(void*)f_31443},
{"f_31413ChickenBridge.scm",(void*)f_31413},
{"f_31437ChickenBridge.scm",(void*)f_31437},
{"f_31407ChickenBridge.scm",(void*)f_31407},
{"f_17774ChickenBridge.scm",(void*)f_17774},
{"f_31357ChickenBridge.scm",(void*)f_31357},
{"f_31359ChickenBridge.scm",(void*)f_31359},
{"f_31363ChickenBridge.scm",(void*)f_31363},
{"f_31391ChickenBridge.scm",(void*)f_31391},
{"f_31383ChickenBridge.scm",(void*)f_31383},
{"f_31379ChickenBridge.scm",(void*)f_31379},
{"f_31366ChickenBridge.scm",(void*)f_31366},
{"f_31349ChickenBridge.scm",(void*)f_31349},
{"f_17777ChickenBridge.scm",(void*)f_17777},
{"f_31296ChickenBridge.scm",(void*)f_31296},
{"f_31298ChickenBridge.scm",(void*)f_31298},
{"f_31302ChickenBridge.scm",(void*)f_31302},
{"f_31333ChickenBridge.scm",(void*)f_31333},
{"f_31325ChickenBridge.scm",(void*)f_31325},
{"f_31321ChickenBridge.scm",(void*)f_31321},
{"f_31305ChickenBridge.scm",(void*)f_31305},
{"f_31308ChickenBridge.scm",(void*)f_31308},
{"f_31288ChickenBridge.scm",(void*)f_31288},
{"f_17780ChickenBridge.scm",(void*)f_17780},
{"f_31238ChickenBridge.scm",(void*)f_31238},
{"f_31252ChickenBridge.scm",(void*)f_31252},
{"f_31244ChickenBridge.scm",(void*)f_31244},
{"f_31203ChickenBridge.scm",(void*)f_31203},
{"f_31236ChickenBridge.scm",(void*)f_31236},
{"f_31197ChickenBridge.scm",(void*)f_31197},
{"f_17783ChickenBridge.scm",(void*)f_17783},
{"f_31144ChickenBridge.scm",(void*)f_31144},
{"f_31148ChickenBridge.scm",(void*)f_31148},
{"f_31161ChickenBridge.scm",(void*)f_31161},
{"f_31153ChickenBridge.scm",(void*)f_31153},
{"f_31101ChickenBridge.scm",(void*)f_31101},
{"f_31134ChickenBridge.scm",(void*)f_31134},
{"f_31095ChickenBridge.scm",(void*)f_31095},
{"f_17786ChickenBridge.scm",(void*)f_17786},
{"f_31015ChickenBridge.scm",(void*)f_31015},
{"f_31009ChickenBridge.scm",(void*)f_31009},
{"f_17789ChickenBridge.scm",(void*)f_17789},
{"f_30778ChickenBridge.scm",(void*)f_30778},
{"f_30782ChickenBridge.scm",(void*)f_30782},
{"f_30790ChickenBridge.scm",(void*)f_30790},
{"f_30813ChickenBridge.scm",(void*)f_30813},
{"f_30816ChickenBridge.scm",(void*)f_30816},
{"f_30819ChickenBridge.scm",(void*)f_30819},
{"f_30822ChickenBridge.scm",(void*)f_30822},
{"f_30882ChickenBridge.scm",(void*)f_30882},
{"f_30889ChickenBridge.scm",(void*)f_30889},
{"f_30899ChickenBridge.scm",(void*)f_30899},
{"f_30909ChickenBridge.scm",(void*)f_30909},
{"f_30923ChickenBridge.scm",(void*)f_30923},
{"f_30933ChickenBridge.scm",(void*)f_30933},
{"f_30943ChickenBridge.scm",(void*)f_30943},
{"f_30953ChickenBridge.scm",(void*)f_30953},
{"f_30825ChickenBridge.scm",(void*)f_30825},
{"f_30849ChickenBridge.scm",(void*)f_30849},
{"f_30828ChickenBridge.scm",(void*)f_30828},
{"f_30735ChickenBridge.scm",(void*)f_30735},
{"f_30768ChickenBridge.scm",(void*)f_30768},
{"f_30729ChickenBridge.scm",(void*)f_30729},
{"f_17792ChickenBridge.scm",(void*)f_17792},
{"f_30647ChickenBridge.scm",(void*)f_30647},
{"f_30651ChickenBridge.scm",(void*)f_30651},
{"f_30657ChickenBridge.scm",(void*)f_30657},
{"f_30677ChickenBridge.scm",(void*)f_30677},
{"f_30621ChickenBridge.scm",(void*)f_30621},
{"f_30631ChickenBridge.scm",(void*)f_30631},
{"f_30615ChickenBridge.scm",(void*)f_30615},
{"f_17795ChickenBridge.scm",(void*)f_17795},
{"f_30492ChickenBridge.scm",(void*)f_30492},
{"f_30496ChickenBridge.scm",(void*)f_30496},
{"f_30424ChickenBridge.scm",(void*)f_30424},
{"f_30443ChickenBridge.scm",(void*)f_30443},
{"f_30478ChickenBridge.scm",(void*)f_30478},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30453ChickenBridge.scm",(void*)f_30453},
{"f_30467ChickenBridge.scm",(void*)f_30467},
{"f_30456ChickenBridge.scm",(void*)f_30456},
{"f_30437ChickenBridge.scm",(void*)f_30437},
{"f_30418ChickenBridge.scm",(void*)f_30418},
{"f_17798ChickenBridge.scm",(void*)f_17798},
{"f_30146ChickenBridge.scm",(void*)f_30146},
{"f_18321ChickenBridge.scm",(void*)f_18321},
{"f_30098ChickenBridge.scm",(void*)f_30098},
{"f_30090ChickenBridge.scm",(void*)f_30090},
{"f_18324ChickenBridge.scm",(void*)f_18324},
{"f_29970ChickenBridge.scm",(void*)f_29970},
{"f_18330ChickenBridge.scm",(void*)f_18330},
{"f_18805ChickenBridge.scm",(void*)f_18805},
{"f_18839ChickenBridge.scm",(void*)f_18839},
{"f_18831ChickenBridge.scm",(void*)f_18831},
{"f_18827ChickenBridge.scm",(void*)f_18827},
{"f_18812ChickenBridge.scm",(void*)f_18812},
{"f_18816ChickenBridge.scm",(void*)f_18816},
{"f_18809ChickenBridge.scm",(void*)f_18809},
{"f_18348ChickenBridge.scm",(void*)f_18348},
{"f_18798ChickenBridge.scm",(void*)f_18798},
{"f_18794ChickenBridge.scm",(void*)f_18794},
{"f_18355ChickenBridge.scm",(void*)f_18355},
{"f_18669ChickenBridge.scm",(void*)f_18669},
{"f_18690ChickenBridge.scm",(void*)f_18690},
{"f_18692ChickenBridge.scm",(void*)f_18692},
{"f_18706ChickenBridge.scm",(void*)f_18706},
{"f_18759ChickenBridge.scm",(void*)f_18759},
{"f_18709ChickenBridge.scm",(void*)f_18709},
{"f_18744ChickenBridge.scm",(void*)f_18744},
{"f_18712ChickenBridge.scm",(void*)f_18712},
{"f_18725ChickenBridge.scm",(void*)f_18725},
{"f_18737ChickenBridge.scm",(void*)f_18737},
{"f_18729ChickenBridge.scm",(void*)f_18729},
{"f_18715ChickenBridge.scm",(void*)f_18715},
{"f_18679ChickenBridge.scm",(void*)f_18679},
{"f_18358ChickenBridge.scm",(void*)f_18358},
{"f_18633ChickenBridge.scm",(void*)f_18633},
{"f_18659ChickenBridge.scm",(void*)f_18659},
{"f_18644ChickenBridge.scm",(void*)f_18644},
{"f_18361ChickenBridge.scm",(void*)f_18361},
{"f_18365ChickenBridge.scm",(void*)f_18365},
{"f_18577ChickenBridge.scm",(void*)f_18577},
{"f_18587ChickenBridge.scm",(void*)f_18587},
{"f_18590ChickenBridge.scm",(void*)f_18590},
{"f_18611ChickenBridge.scm",(void*)f_18611},
{"f_18593ChickenBridge.scm",(void*)f_18593},
{"f_18597ChickenBridge.scm",(void*)f_18597},
{"f_18368ChickenBridge.scm",(void*)f_18368},
{"f_18371ChickenBridge.scm",(void*)f_18371},
{"f_18540ChickenBridge.scm",(void*)f_18540},
{"f_18548ChickenBridge.scm",(void*)f_18548},
{"f_18544ChickenBridge.scm",(void*)f_18544},
{"f_18374ChickenBridge.scm",(void*)f_18374},
{"f_18402ChickenBridge.scm",(void*)f_18402},
{"f_18405ChickenBridge.scm",(void*)f_18405},
{"f_18408ChickenBridge.scm",(void*)f_18408},
{"f_18411ChickenBridge.scm",(void*)f_18411},
{"f_18414ChickenBridge.scm",(void*)f_18414},
{"f_18473ChickenBridge.scm",(void*)f_18473},
{"f_29924ChickenBridge.scm",(void*)f_29924},
{"f_29940ChickenBridge.scm",(void*)f_29940},
{"f_29943ChickenBridge.scm",(void*)f_29943},
{"f_29946ChickenBridge.scm",(void*)f_29946},
{"f_29949ChickenBridge.scm",(void*)f_29949},
{"f_29960ChickenBridge.scm",(void*)f_29960},
{"f_29918ChickenBridge.scm",(void*)f_29918},
{"f_18846ChickenBridge.scm",(void*)f_18846},
{"f_29779ChickenBridge.scm",(void*)f_29779},
{"f_29818ChickenBridge.scm",(void*)f_29818},
{"f_29792ChickenBridge.scm",(void*)f_29792},
{"f_29773ChickenBridge.scm",(void*)f_29773},
{"f_18849ChickenBridge.scm",(void*)f_18849},
{"f_29361ChickenBridge.scm",(void*)f_29361},
{"f_29365ChickenBridge.scm",(void*)f_29365},
{"f_29377ChickenBridge.scm",(void*)f_29377},
{"f_29435ChickenBridge.scm",(void*)f_29435},
{"f_29438ChickenBridge.scm",(void*)f_29438},
{"f_29441ChickenBridge.scm",(void*)f_29441},
{"f_29653ChickenBridge.scm",(void*)f_29653},
{"f_29591ChickenBridge.scm",(void*)f_29591},
{"f_29625ChickenBridge.scm",(void*)f_29625},
{"f_29600ChickenBridge.scm",(void*)f_29600},
{"f_29611ChickenBridge.scm",(void*)f_29611},
{"f_29607ChickenBridge.scm",(void*)f_29607},
{"f_29450ChickenBridge.scm",(void*)f_29450},
{"f_29528ChickenBridge.scm",(void*)f_29528},
{"f_29569ChickenBridge.scm",(void*)f_29569},
{"f_29573ChickenBridge.scm",(void*)f_29573},
{"f_29577ChickenBridge.scm",(void*)f_29577},
{"f_29532ChickenBridge.scm",(void*)f_29532},
{"f_29536ChickenBridge.scm",(void*)f_29536},
{"f_29563ChickenBridge.scm",(void*)f_29563},
{"f_29539ChickenBridge.scm",(void*)f_29539},
{"f_29453ChickenBridge.scm",(void*)f_29453},
{"f_29525ChickenBridge.scm",(void*)f_29525},
{"f_29467ChickenBridge.scm",(void*)f_29467},
{"f_29469ChickenBridge.scm",(void*)f_29469},
{"f_29517ChickenBridge.scm",(void*)f_29517},
{"f_29488ChickenBridge.scm",(void*)f_29488},
{"f_29505ChickenBridge.scm",(void*)f_29505},
{"f_29491ChickenBridge.scm",(void*)f_29491},
{"f_29484ChickenBridge.scm",(void*)f_29484},
{"f_29456ChickenBridge.scm",(void*)f_29456},
{"f_29386ChickenBridge.scm",(void*)f_29386},
{"f_29396ChickenBridge.scm",(void*)f_29396},
{"f_29402ChickenBridge.scm",(void*)f_29402},
{"f_29374ChickenBridge.scm",(void*)f_29374},
{"f_29322ChickenBridge.scm",(void*)f_29322},
{"f_29339ChickenBridge.scm",(void*)f_29339},
{"f_29355ChickenBridge.scm",(void*)f_29355},
{"f_29333ChickenBridge.scm",(void*)f_29333},
{"f_29316ChickenBridge.scm",(void*)f_29316},
{"f_18852ChickenBridge.scm",(void*)f_18852},
{"f_29240ChickenBridge.scm",(void*)f_29240},
{"f_18855ChickenBridge.scm",(void*)f_18855},
{"f_29216ChickenBridge.scm",(void*)f_29216},
{"f_29228ChickenBridge.scm",(void*)f_29228},
{"f_29224ChickenBridge.scm",(void*)f_29224},
{"f_29202ChickenBridge.scm",(void*)f_29202},
{"f_29210ChickenBridge.scm",(void*)f_29210},
{"f_29196ChickenBridge.scm",(void*)f_29196},
{"f_18858ChickenBridge.scm",(void*)f_18858},
{"f_29188ChickenBridge.scm",(void*)f_29188},
{"f_22622ChickenBridge.scm",(void*)f_22622},
{"f_22625ChickenBridge.scm",(void*)f_22625},
{"f_22791ChickenBridge.scm",(void*)f_22791},
{"f_22787ChickenBridge.scm",(void*)f_22787},
{"f_22777ChickenBridge.scm",(void*)f_22777},
{"f_22632ChickenBridge.scm",(void*)f_22632},
{"f_22636ChickenBridge.scm",(void*)f_22636},
{"f_22639ChickenBridge.scm",(void*)f_22639},
{"f_22650ChickenBridge.scm",(void*)f_22650},
{"f_22658ChickenBridge.scm",(void*)f_22658},
{"f_22730ChickenBridge.scm",(void*)f_22730},
{"f_22738ChickenBridge.scm",(void*)f_22738},
{"f_22734ChickenBridge.scm",(void*)f_22734},
{"f_22726ChickenBridge.scm",(void*)f_22726},
{"f_22722ChickenBridge.scm",(void*)f_22722},
{"f_22694ChickenBridge.scm",(void*)f_22694},
{"f_22690ChickenBridge.scm",(void*)f_22690},
{"f_22654ChickenBridge.scm",(void*)f_22654},
{"f_19269ChickenBridge.scm",(void*)f_19269},
{"f_29174ChickenBridge.scm",(void*)f_29174},
{"f_19272ChickenBridge.scm",(void*)f_19272},
{"f_29145ChickenBridge.scm",(void*)f_29145},
{"f_29149ChickenBridge.scm",(void*)f_29149},
{"f_19275ChickenBridge.scm",(void*)f_19275},
{"f_29142ChickenBridge.scm",(void*)f_29142},
{"f_19278ChickenBridge.scm",(void*)f_19278},
{"f_29000ChickenBridge.scm",(void*)f_29000},
{"f_22804ChickenBridge.scm",(void*)f_22804},
{"f_22936ChickenBridge.scm",(void*)f_22936},
{"f_22807ChickenBridge.scm",(void*)f_22807},
{"f_22818ChickenBridge.scm",(void*)f_22818},
{"f_22826ChickenBridge.scm",(void*)f_22826},
{"f_22850ChickenBridge.scm",(void*)f_22850},
{"f_22853ChickenBridge.scm",(void*)f_22853},
{"f_22861ChickenBridge.scm",(void*)f_22861},
{"f_22869ChickenBridge.scm",(void*)f_22869},
{"f_22889ChickenBridge.scm",(void*)f_22889},
{"f_22885ChickenBridge.scm",(void*)f_22885},
{"f_22865ChickenBridge.scm",(void*)f_22865},
{"f_22857ChickenBridge.scm",(void*)f_22857},
{"f_22846ChickenBridge.scm",(void*)f_22846},
{"f_22822ChickenBridge.scm",(void*)f_22822},
{"f_22798ChickenBridge.scm",(void*)f_22798},
{"f_27720ChickenBridge.scm",(void*)f_27720},
{"f_27723ChickenBridge.scm",(void*)f_27723},
{"f_27726ChickenBridge.scm",(void*)f_27726},
{"f_27729ChickenBridge.scm",(void*)f_27729},
{"f_27732ChickenBridge.scm",(void*)f_27732},
{"f_27735ChickenBridge.scm",(void*)f_27735},
{"f_27738ChickenBridge.scm",(void*)f_27738},
{"f_27741ChickenBridge.scm",(void*)f_27741},
{"f_27744ChickenBridge.scm",(void*)f_27744},
{"f_27747ChickenBridge.scm",(void*)f_27747},
{"f_27750ChickenBridge.scm",(void*)f_27750},
{"f_27875ChickenBridge.scm",(void*)f_27875},
{"f_27878ChickenBridge.scm",(void*)f_27878},
{"f_27881ChickenBridge.scm",(void*)f_27881},
{"f_28994ChickenBridge.scm",(void*)f_28994},
{"f_28548ChickenBridge.scm",(void*)f_28548},
{"f_28551ChickenBridge.scm",(void*)f_28551},
{"f_28829ChickenBridge.scm",(void*)f_28829},
{"f_28937ChickenBridge.scm",(void*)f_28937},
{"f_28849ChickenBridge.scm",(void*)f_28849},
{"f_28858ChickenBridge.scm",(void*)f_28858},
{"f_28862ChickenBridge.scm",(void*)f_28862},
{"f_28866ChickenBridge.scm",(void*)f_28866},
{"f_28874ChickenBridge.scm",(void*)f_28874},
{"f_28870ChickenBridge.scm",(void*)f_28870},
{"f_28839ChickenBridge.scm",(void*)f_28839},
{"f_28554ChickenBridge.scm",(void*)f_28554},
{"f_28557ChickenBridge.scm",(void*)f_28557},
{"f_28560ChickenBridge.scm",(void*)f_28560},
{"f_28563ChickenBridge.scm",(void*)f_28563},
{"f_28566ChickenBridge.scm",(void*)f_28566},
{"f_28823ChickenBridge.scm",(void*)f_28823},
{"f_28722ChickenBridge.scm",(void*)f_28722},
{"f_28729ChickenBridge.scm",(void*)f_28729},
{"f_28731ChickenBridge.scm",(void*)f_28731},
{"f_28803ChickenBridge.scm",(void*)f_28803},
{"f_28755ChickenBridge.scm",(void*)f_28755},
{"f_28758ChickenBridge.scm",(void*)f_28758},
{"f_28779ChickenBridge.scm",(void*)f_28779},
{"f_28745ChickenBridge.scm",(void*)f_28745},
{"f_28569ChickenBridge.scm",(void*)f_28569},
{"f_28711ChickenBridge.scm",(void*)f_28711},
{"f_28699ChickenBridge.scm",(void*)f_28699},
{"f_28695ChickenBridge.scm",(void*)f_28695},
{"f_28576ChickenBridge.scm",(void*)f_28576},
{"f_28533ChickenBridge.scm",(void*)f_28533},
{"f_28992ChickenBridge.scm",(void*)f_28992},
{"f_28523ChickenBridge.scm",(void*)f_28523},
{"f_28186ChickenBridge.scm",(void*)f_28186},
{"f_28527ChickenBridge.scm",(void*)f_28527},
{"f_28465ChickenBridge.scm",(void*)f_28465},
{"f_28483ChickenBridge.scm",(void*)f_28483},
{"f_28493ChickenBridge.scm",(void*)f_28493},
{"f_28469ChickenBridge.scm",(void*)f_28469},
{"f_28456ChickenBridge.scm",(void*)f_28456},
{"f_28164ChickenBridge.scm",(void*)f_28164},
{"f_28460ChickenBridge.scm",(void*)f_28460},
{"f_28450ChickenBridge.scm",(void*)f_28450},
{"f_28146ChickenBridge.scm",(void*)f_28146},
{"f_28441ChickenBridge.scm",(void*)f_28441},
{"f_28155ChickenBridge.scm",(void*)f_28155},
{"f_28445ChickenBridge.scm",(void*)f_28445},
{"f_28378ChickenBridge.scm",(void*)f_28378},
{"f_28403ChickenBridge.scm",(void*)f_28403},
{"f_28111ChickenBridge.scm",(void*)f_28111},
{"f_28391ChickenBridge.scm",(void*)f_28391},
{"f_28210ChickenBridge.scm",(void*)f_28210},
{"f_28329ChickenBridge.scm",(void*)f_28329},
{"f_28324ChickenBridge.scm",(void*)f_28324},
{"f_28212ChickenBridge.scm",(void*)f_28212},
{"f_28319ChickenBridge.scm",(void*)f_28319},
{"f_28323ChickenBridge.scm",(void*)f_28323},
{"f_28315ChickenBridge.scm",(void*)f_28315},
{"f_28283ChickenBridge.scm",(void*)f_28283},
{"f_28308ChickenBridge.scm",(void*)f_28308},
{"f_28312ChickenBridge.scm",(void*)f_28312},
{"f_28293ChickenBridge.scm",(void*)f_28293},
{"f_28272ChickenBridge.scm",(void*)f_28272},
{"f_28242ChickenBridge.scm",(void*)f_28242},
{"f_28214ChickenBridge.scm",(void*)f_28214},
{"f_28191ChickenBridge.scm",(void*)f_28191},
{"f_28196ChickenBridge.scm",(void*)f_28196},
{"f_28201ChickenBridge.scm",(void*)f_28201},
{"f_28169ChickenBridge.scm",(void*)f_28169},
{"f_28173ChickenBridge.scm",(void*)f_28173},
{"f_28125ChickenBridge.scm",(void*)f_28125},
{"f_28129ChickenBridge.scm",(void*)f_28129},
{"f_28116ChickenBridge.scm",(void*)f_28116},
{"f_28120ChickenBridge.scm",(void*)f_28120},
{"f_28104ChickenBridge.scm",(void*)f_28104},
{"f_28101ChickenBridge.scm",(void*)f_28101},
{"f_28087ChickenBridge.scm",(void*)f_28087},
{"f_28092ChickenBridge.scm",(void*)f_28092},
{"f_28073ChickenBridge.scm",(void*)f_28073},
{"f_28078ChickenBridge.scm",(void*)f_28078},
{"f_27883ChickenBridge.scm",(void*)f_27883},
{"f_27944ChickenBridge.scm",(void*)f_27944},
{"f_27946ChickenBridge.scm",(void*)f_27946},
{"f_27956ChickenBridge.scm",(void*)f_27956},
{"f_27975ChickenBridge.scm",(void*)f_27975},
{"f_28015ChickenBridge.scm",(void*)f_28015},
{"f_28057ChickenBridge.scm",(void*)f_28057},
{"f_28027ChickenBridge.scm",(void*)f_28027},
{"f_28012ChickenBridge.scm",(void*)f_28012},
{"f_27930ChickenBridge.scm",(void*)f_27930},
{"f_27895ChickenBridge.scm",(void*)f_27895},
{"f_27922ChickenBridge.scm",(void*)f_27922},
{"f_27903ChickenBridge.scm",(void*)f_27903},
{"f_27910ChickenBridge.scm",(void*)f_27910},
{"f_27914ChickenBridge.scm",(void*)f_27914},
{"f_27918ChickenBridge.scm",(void*)f_27918},
{"f_27995ChickenBridge.scm",(void*)f_27995},
{"f_27973ChickenBridge.scm",(void*)f_27973},
{"f_27959ChickenBridge.scm",(void*)f_27959},
{"f_27962ChickenBridge.scm",(void*)f_27962},
{"f_27937ChickenBridge.scm",(void*)f_27937},
{"f_27866ChickenBridge.scm",(void*)f_27866},
{"f_27871ChickenBridge.scm",(void*)f_27871},
{"f_27809ChickenBridge.scm",(void*)f_27809},
{"f_27842ChickenBridge.scm",(void*)f_27842},
{"f_27822ChickenBridge.scm",(void*)f_27822},
{"f_27830ChickenBridge.scm",(void*)f_27830},
{"f_27813ChickenBridge.scm",(void*)f_27813},
{"f_27752ChickenBridge.scm",(void*)f_27752},
{"f_27785ChickenBridge.scm",(void*)f_27785},
{"f_27765ChickenBridge.scm",(void*)f_27765},
{"f_27773ChickenBridge.scm",(void*)f_27773},
{"f_27756ChickenBridge.scm",(void*)f_27756},
{"f_27662ChickenBridge.scm",(void*)f_27662},
{"f_27716ChickenBridge.scm",(void*)f_27716},
{"f_27711ChickenBridge.scm",(void*)f_27711},
{"f_27674ChickenBridge.scm",(void*)f_27674},
{"f_27680ChickenBridge.scm",(void*)f_27680},
{"f_27706ChickenBridge.scm",(void*)f_27706},
{"f_27710ChickenBridge.scm",(void*)f_27710},
{"f_27686ChickenBridge.scm",(void*)f_27686},
{"f_27704ChickenBridge.scm",(void*)f_27704},
{"f_27701ChickenBridge.scm",(void*)f_27701},
{"f_27697ChickenBridge.scm",(void*)f_27697},
{"f_27690ChickenBridge.scm",(void*)f_27690},
{"f_27647ChickenBridge.scm",(void*)f_27647},
{"f_27652ChickenBridge.scm",(void*)f_27652},
{"f_27619ChickenBridge.scm",(void*)f_27619},
{"f_27624ChickenBridge.scm",(void*)f_27624},
{"f_27591ChickenBridge.scm",(void*)f_27591},
{"f_27596ChickenBridge.scm",(void*)f_27596},
{"f_27563ChickenBridge.scm",(void*)f_27563},
{"f_27568ChickenBridge.scm",(void*)f_27568},
{"f_27535ChickenBridge.scm",(void*)f_27535},
{"f_27540ChickenBridge.scm",(void*)f_27540},
{"f_27507ChickenBridge.scm",(void*)f_27507},
{"f_27512ChickenBridge.scm",(void*)f_27512},
{"f_27479ChickenBridge.scm",(void*)f_27479},
{"f_27484ChickenBridge.scm",(void*)f_27484},
{"f_27451ChickenBridge.scm",(void*)f_27451},
{"f_27456ChickenBridge.scm",(void*)f_27456},
{"f_27423ChickenBridge.scm",(void*)f_27423},
{"f_27428ChickenBridge.scm",(void*)f_27428},
{"f_27395ChickenBridge.scm",(void*)f_27395},
{"f_27400ChickenBridge.scm",(void*)f_27400},
{"f_27372ChickenBridge.scm",(void*)f_27372},
{"f_27377ChickenBridge.scm",(void*)f_27377},
{"f_27376ChickenBridge.scm",(void*)f_27376},
{"f_27353ChickenBridge.scm",(void*)f_27353},
{"f_27358ChickenBridge.scm",(void*)f_27358},
{"f_27298ChickenBridge.scm",(void*)f_27298},
{"f_27305ChickenBridge.scm",(void*)f_27305},
{"f_27308ChickenBridge.scm",(void*)f_27308},
{"f_27332ChickenBridge.scm",(void*)f_27332},
{"f_27312ChickenBridge.scm",(void*)f_27312},
{"f_27302ChickenBridge.scm",(void*)f_27302},
{"f_27251ChickenBridge.scm",(void*)f_27251},
{"f_27258ChickenBridge.scm",(void*)f_27258},
{"f_27261ChickenBridge.scm",(void*)f_27261},
{"f_27281ChickenBridge.scm",(void*)f_27281},
{"f_27265ChickenBridge.scm",(void*)f_27265},
{"f_27228ChickenBridge.scm",(void*)f_27228},
{"f_27233ChickenBridge.scm",(void*)f_27233},
{"f_27232ChickenBridge.scm",(void*)f_27232},
{"f_27209ChickenBridge.scm",(void*)f_27209},
{"f_27214ChickenBridge.scm",(void*)f_27214},
{"f_27186ChickenBridge.scm",(void*)f_27186},
{"f_27191ChickenBridge.scm",(void*)f_27191},
{"f_27190ChickenBridge.scm",(void*)f_27190},
{"f_27167ChickenBridge.scm",(void*)f_27167},
{"f_27172ChickenBridge.scm",(void*)f_27172},
{"f_27148ChickenBridge.scm",(void*)f_27148},
{"f_27153ChickenBridge.scm",(void*)f_27153},
{"f_27152ChickenBridge.scm",(void*)f_27152},
{"f_27133ChickenBridge.scm",(void*)f_27133},
{"f_27138ChickenBridge.scm",(void*)f_27138},
{"f_27114ChickenBridge.scm",(void*)f_27114},
{"f_27119ChickenBridge.scm",(void*)f_27119},
{"f_27118ChickenBridge.scm",(void*)f_27118},
{"f_27099ChickenBridge.scm",(void*)f_27099},
{"f_27104ChickenBridge.scm",(void*)f_27104},
{"f_27084ChickenBridge.scm",(void*)f_27084},
{"f_27089ChickenBridge.scm",(void*)f_27089},
{"f_27066ChickenBridge.scm",(void*)f_27066},
{"f_27074ChickenBridge.scm",(void*)f_27074},
{"f_27070ChickenBridge.scm",(void*)f_27070},
{"f_26596ChickenBridge.scm",(void*)f_26596},
{"f_27024ChickenBridge.scm",(void*)f_27024},
{"f_27039ChickenBridge.scm",(void*)f_27039},
{"f_27031ChickenBridge.scm",(void*)f_27031},
{"f_26995ChickenBridge.scm",(void*)f_26995},
{"f_26999ChickenBridge.scm",(void*)f_26999},
{"f_26960ChickenBridge.scm",(void*)f_26960},
{"f_26964ChickenBridge.scm",(void*)f_26964},
{"f_26925ChickenBridge.scm",(void*)f_26925},
{"f_26929ChickenBridge.scm",(void*)f_26929},
{"f_26600ChickenBridge.scm",(void*)f_26600},
{"f_26889ChickenBridge.scm",(void*)f_26889},
{"f_26904ChickenBridge.scm",(void*)f_26904},
{"f_26896ChickenBridge.scm",(void*)f_26896},
{"f_26860ChickenBridge.scm",(void*)f_26860},
{"f_26864ChickenBridge.scm",(void*)f_26864},
{"f_26825ChickenBridge.scm",(void*)f_26825},
{"f_26829ChickenBridge.scm",(void*)f_26829},
{"f_26790ChickenBridge.scm",(void*)f_26790},
{"f_26794ChickenBridge.scm",(void*)f_26794},
{"f_26603ChickenBridge.scm",(void*)f_26603},
{"f_26754ChickenBridge.scm",(void*)f_26754},
{"f_26769ChickenBridge.scm",(void*)f_26769},
{"f_26761ChickenBridge.scm",(void*)f_26761},
{"f_26725ChickenBridge.scm",(void*)f_26725},
{"f_26729ChickenBridge.scm",(void*)f_26729},
{"f_26690ChickenBridge.scm",(void*)f_26690},
{"f_26694ChickenBridge.scm",(void*)f_26694},
{"f_26655ChickenBridge.scm",(void*)f_26655},
{"f_26659ChickenBridge.scm",(void*)f_26659},
{"f_26606ChickenBridge.scm",(void*)f_26606},
{"f_26609ChickenBridge.scm",(void*)f_26609},
{"f_26613ChickenBridge.scm",(void*)f_26613},
{"f_26577ChickenBridge.scm",(void*)f_26577},
{"f_26582ChickenBridge.scm",(void*)f_26582},
{"f_26126ChickenBridge.scm",(void*)f_26126},
{"f_26554ChickenBridge.scm",(void*)f_26554},
{"f_26569ChickenBridge.scm",(void*)f_26569},
{"f_26561ChickenBridge.scm",(void*)f_26561},
{"f_26525ChickenBridge.scm",(void*)f_26525},
{"f_26529ChickenBridge.scm",(void*)f_26529},
{"f_26490ChickenBridge.scm",(void*)f_26490},
{"f_26494ChickenBridge.scm",(void*)f_26494},
{"f_26455ChickenBridge.scm",(void*)f_26455},
{"f_26459ChickenBridge.scm",(void*)f_26459},
{"f_26130ChickenBridge.scm",(void*)f_26130},
{"f_26419ChickenBridge.scm",(void*)f_26419},
{"f_26434ChickenBridge.scm",(void*)f_26434},
{"f_26426ChickenBridge.scm",(void*)f_26426},
{"f_26390ChickenBridge.scm",(void*)f_26390},
{"f_26394ChickenBridge.scm",(void*)f_26394},
{"f_26355ChickenBridge.scm",(void*)f_26355},
{"f_26359ChickenBridge.scm",(void*)f_26359},
{"f_26320ChickenBridge.scm",(void*)f_26320},
{"f_26324ChickenBridge.scm",(void*)f_26324},
{"f_26133ChickenBridge.scm",(void*)f_26133},
{"f_26284ChickenBridge.scm",(void*)f_26284},
{"f_26299ChickenBridge.scm",(void*)f_26299},
{"f_26291ChickenBridge.scm",(void*)f_26291},
{"f_26255ChickenBridge.scm",(void*)f_26255},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_26220ChickenBridge.scm",(void*)f_26220},
{"f_26224ChickenBridge.scm",(void*)f_26224},
{"f_26185ChickenBridge.scm",(void*)f_26185},
{"f_26189ChickenBridge.scm",(void*)f_26189},
{"f_26136ChickenBridge.scm",(void*)f_26136},
{"f_26139ChickenBridge.scm",(void*)f_26139},
{"f_26143ChickenBridge.scm",(void*)f_26143},
{"f_26107ChickenBridge.scm",(void*)f_26107},
{"f_26112ChickenBridge.scm",(void*)f_26112},
{"f_25656ChickenBridge.scm",(void*)f_25656},
{"f_26084ChickenBridge.scm",(void*)f_26084},
{"f_26099ChickenBridge.scm",(void*)f_26099},
{"f_26091ChickenBridge.scm",(void*)f_26091},
{"f_26055ChickenBridge.scm",(void*)f_26055},
{"f_26059ChickenBridge.scm",(void*)f_26059},
{"f_26020ChickenBridge.scm",(void*)f_26020},
{"f_26024ChickenBridge.scm",(void*)f_26024},
{"f_25985ChickenBridge.scm",(void*)f_25985},
{"f_25989ChickenBridge.scm",(void*)f_25989},
{"f_25660ChickenBridge.scm",(void*)f_25660},
{"f_25949ChickenBridge.scm",(void*)f_25949},
{"f_25964ChickenBridge.scm",(void*)f_25964},
{"f_25956ChickenBridge.scm",(void*)f_25956},
{"f_25920ChickenBridge.scm",(void*)f_25920},
{"f_25924ChickenBridge.scm",(void*)f_25924},
{"f_25885ChickenBridge.scm",(void*)f_25885},
{"f_25889ChickenBridge.scm",(void*)f_25889},
{"f_25850ChickenBridge.scm",(void*)f_25850},
{"f_25854ChickenBridge.scm",(void*)f_25854},
{"f_25663ChickenBridge.scm",(void*)f_25663},
{"f_25814ChickenBridge.scm",(void*)f_25814},
{"f_25829ChickenBridge.scm",(void*)f_25829},
{"f_25821ChickenBridge.scm",(void*)f_25821},
{"f_25785ChickenBridge.scm",(void*)f_25785},
{"f_25789ChickenBridge.scm",(void*)f_25789},
{"f_25750ChickenBridge.scm",(void*)f_25750},
{"f_25754ChickenBridge.scm",(void*)f_25754},
{"f_25715ChickenBridge.scm",(void*)f_25715},
{"f_25719ChickenBridge.scm",(void*)f_25719},
{"f_25666ChickenBridge.scm",(void*)f_25666},
{"f_25669ChickenBridge.scm",(void*)f_25669},
{"f_25673ChickenBridge.scm",(void*)f_25673},
{"f_25637ChickenBridge.scm",(void*)f_25637},
{"f_25642ChickenBridge.scm",(void*)f_25642},
{"f_24908ChickenBridge.scm",(void*)f_24908},
{"f_25614ChickenBridge.scm",(void*)f_25614},
{"f_25629ChickenBridge.scm",(void*)f_25629},
{"f_25621ChickenBridge.scm",(void*)f_25621},
{"f_25585ChickenBridge.scm",(void*)f_25585},
{"f_25589ChickenBridge.scm",(void*)f_25589},
{"f_25550ChickenBridge.scm",(void*)f_25550},
{"f_25554ChickenBridge.scm",(void*)f_25554},
{"f_25515ChickenBridge.scm",(void*)f_25515},
{"f_25519ChickenBridge.scm",(void*)f_25519},
{"f_25480ChickenBridge.scm",(void*)f_25480},
{"f_25484ChickenBridge.scm",(void*)f_25484},
{"f_24912ChickenBridge.scm",(void*)f_24912},
{"f_25444ChickenBridge.scm",(void*)f_25444},
{"f_25459ChickenBridge.scm",(void*)f_25459},
{"f_25451ChickenBridge.scm",(void*)f_25451},
{"f_25415ChickenBridge.scm",(void*)f_25415},
{"f_25419ChickenBridge.scm",(void*)f_25419},
{"f_25380ChickenBridge.scm",(void*)f_25380},
{"f_25384ChickenBridge.scm",(void*)f_25384},
{"f_25345ChickenBridge.scm",(void*)f_25345},
{"f_25349ChickenBridge.scm",(void*)f_25349},
{"f_25310ChickenBridge.scm",(void*)f_25310},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_24915ChickenBridge.scm",(void*)f_24915},
{"f_25274ChickenBridge.scm",(void*)f_25274},
{"f_25289ChickenBridge.scm",(void*)f_25289},
{"f_25281ChickenBridge.scm",(void*)f_25281},
{"f_25245ChickenBridge.scm",(void*)f_25245},
{"f_25249ChickenBridge.scm",(void*)f_25249},
{"f_25210ChickenBridge.scm",(void*)f_25210},
{"f_25214ChickenBridge.scm",(void*)f_25214},
{"f_25175ChickenBridge.scm",(void*)f_25175},
{"f_25179ChickenBridge.scm",(void*)f_25179},
{"f_25140ChickenBridge.scm",(void*)f_25140},
{"f_25144ChickenBridge.scm",(void*)f_25144},
{"f_24918ChickenBridge.scm",(void*)f_24918},
{"f_25104ChickenBridge.scm",(void*)f_25104},
{"f_25119ChickenBridge.scm",(void*)f_25119},
{"f_25111ChickenBridge.scm",(void*)f_25111},
{"f_25075ChickenBridge.scm",(void*)f_25075},
{"f_25079ChickenBridge.scm",(void*)f_25079},
{"f_25040ChickenBridge.scm",(void*)f_25040},
{"f_25044ChickenBridge.scm",(void*)f_25044},
{"f_25005ChickenBridge.scm",(void*)f_25005},
{"f_25009ChickenBridge.scm",(void*)f_25009},
{"f_24970ChickenBridge.scm",(void*)f_24970},
{"f_24974ChickenBridge.scm",(void*)f_24974},
{"f_24921ChickenBridge.scm",(void*)f_24921},
{"f_24924ChickenBridge.scm",(void*)f_24924},
{"f_24928ChickenBridge.scm",(void*)f_24928},
{"f_24889ChickenBridge.scm",(void*)f_24889},
{"f_24894ChickenBridge.scm",(void*)f_24894},
{"f_24160ChickenBridge.scm",(void*)f_24160},
{"f_24866ChickenBridge.scm",(void*)f_24866},
{"f_24881ChickenBridge.scm",(void*)f_24881},
{"f_24873ChickenBridge.scm",(void*)f_24873},
{"f_24837ChickenBridge.scm",(void*)f_24837},
{"f_24841ChickenBridge.scm",(void*)f_24841},
{"f_24802ChickenBridge.scm",(void*)f_24802},
{"f_24806ChickenBridge.scm",(void*)f_24806},
{"f_24767ChickenBridge.scm",(void*)f_24767},
{"f_24771ChickenBridge.scm",(void*)f_24771},
{"f_24732ChickenBridge.scm",(void*)f_24732},
{"f_24736ChickenBridge.scm",(void*)f_24736},
{"f_24164ChickenBridge.scm",(void*)f_24164},
{"f_24696ChickenBridge.scm",(void*)f_24696},
{"f_24711ChickenBridge.scm",(void*)f_24711},
{"f_24703ChickenBridge.scm",(void*)f_24703},
{"f_24667ChickenBridge.scm",(void*)f_24667},
{"f_24671ChickenBridge.scm",(void*)f_24671},
{"f_24632ChickenBridge.scm",(void*)f_24632},
{"f_24636ChickenBridge.scm",(void*)f_24636},
{"f_24597ChickenBridge.scm",(void*)f_24597},
{"f_24601ChickenBridge.scm",(void*)f_24601},
{"f_24562ChickenBridge.scm",(void*)f_24562},
{"f_24566ChickenBridge.scm",(void*)f_24566},
{"f_24167ChickenBridge.scm",(void*)f_24167},
{"f_24526ChickenBridge.scm",(void*)f_24526},
{"f_24541ChickenBridge.scm",(void*)f_24541},
{"f_24533ChickenBridge.scm",(void*)f_24533},
{"f_24497ChickenBridge.scm",(void*)f_24497},
{"f_24501ChickenBridge.scm",(void*)f_24501},
{"f_24462ChickenBridge.scm",(void*)f_24462},
{"f_24466ChickenBridge.scm",(void*)f_24466},
{"f_24427ChickenBridge.scm",(void*)f_24427},
{"f_24431ChickenBridge.scm",(void*)f_24431},
{"f_24392ChickenBridge.scm",(void*)f_24392},
{"f_24396ChickenBridge.scm",(void*)f_24396},
{"f_24170ChickenBridge.scm",(void*)f_24170},
{"f_24356ChickenBridge.scm",(void*)f_24356},
{"f_24371ChickenBridge.scm",(void*)f_24371},
{"f_24363ChickenBridge.scm",(void*)f_24363},
{"f_24327ChickenBridge.scm",(void*)f_24327},
{"f_24331ChickenBridge.scm",(void*)f_24331},
{"f_24292ChickenBridge.scm",(void*)f_24292},
{"f_24296ChickenBridge.scm",(void*)f_24296},
{"f_24257ChickenBridge.scm",(void*)f_24257},
{"f_24261ChickenBridge.scm",(void*)f_24261},
{"f_24222ChickenBridge.scm",(void*)f_24222},
{"f_24226ChickenBridge.scm",(void*)f_24226},
{"f_24173ChickenBridge.scm",(void*)f_24173},
{"f_24176ChickenBridge.scm",(void*)f_24176},
{"f_24180ChickenBridge.scm",(void*)f_24180},
{"f_24141ChickenBridge.scm",(void*)f_24141},
{"f_24146ChickenBridge.scm",(void*)f_24146},
{"f_23690ChickenBridge.scm",(void*)f_23690},
{"f_24118ChickenBridge.scm",(void*)f_24118},
{"f_24133ChickenBridge.scm",(void*)f_24133},
{"f_24125ChickenBridge.scm",(void*)f_24125},
{"f_24089ChickenBridge.scm",(void*)f_24089},
{"f_24093ChickenBridge.scm",(void*)f_24093},
{"f_24054ChickenBridge.scm",(void*)f_24054},
{"f_24058ChickenBridge.scm",(void*)f_24058},
{"f_24019ChickenBridge.scm",(void*)f_24019},
{"f_24023ChickenBridge.scm",(void*)f_24023},
{"f_23694ChickenBridge.scm",(void*)f_23694},
{"f_23983ChickenBridge.scm",(void*)f_23983},
{"f_23998ChickenBridge.scm",(void*)f_23998},
{"f_23990ChickenBridge.scm",(void*)f_23990},
{"f_23954ChickenBridge.scm",(void*)f_23954},
{"f_23958ChickenBridge.scm",(void*)f_23958},
{"f_23919ChickenBridge.scm",(void*)f_23919},
{"f_23923ChickenBridge.scm",(void*)f_23923},
{"f_23884ChickenBridge.scm",(void*)f_23884},
{"f_23888ChickenBridge.scm",(void*)f_23888},
{"f_23697ChickenBridge.scm",(void*)f_23697},
{"f_23848ChickenBridge.scm",(void*)f_23848},
{"f_23863ChickenBridge.scm",(void*)f_23863},
{"f_23855ChickenBridge.scm",(void*)f_23855},
{"f_23819ChickenBridge.scm",(void*)f_23819},
{"f_23823ChickenBridge.scm",(void*)f_23823},
{"f_23784ChickenBridge.scm",(void*)f_23784},
{"f_23788ChickenBridge.scm",(void*)f_23788},
{"f_23749ChickenBridge.scm",(void*)f_23749},
{"f_23753ChickenBridge.scm",(void*)f_23753},
{"f_23700ChickenBridge.scm",(void*)f_23700},
{"f_23703ChickenBridge.scm",(void*)f_23703},
{"f_23707ChickenBridge.scm",(void*)f_23707},
{"f_23671ChickenBridge.scm",(void*)f_23671},
{"f_23676ChickenBridge.scm",(void*)f_23676},
{"f_22942ChickenBridge.scm",(void*)f_22942},
{"f_23648ChickenBridge.scm",(void*)f_23648},
{"f_23663ChickenBridge.scm",(void*)f_23663},
{"f_23655ChickenBridge.scm",(void*)f_23655},
{"f_23619ChickenBridge.scm",(void*)f_23619},
{"f_23623ChickenBridge.scm",(void*)f_23623},
{"f_23584ChickenBridge.scm",(void*)f_23584},
{"f_23588ChickenBridge.scm",(void*)f_23588},
{"f_23549ChickenBridge.scm",(void*)f_23549},
{"f_23553ChickenBridge.scm",(void*)f_23553},
{"f_23514ChickenBridge.scm",(void*)f_23514},
{"f_23518ChickenBridge.scm",(void*)f_23518},
{"f_22946ChickenBridge.scm",(void*)f_22946},
{"f_23478ChickenBridge.scm",(void*)f_23478},
{"f_23493ChickenBridge.scm",(void*)f_23493},
{"f_23485ChickenBridge.scm",(void*)f_23485},
{"f_23449ChickenBridge.scm",(void*)f_23449},
{"f_23453ChickenBridge.scm",(void*)f_23453},
{"f_23414ChickenBridge.scm",(void*)f_23414},
{"f_23418ChickenBridge.scm",(void*)f_23418},
{"f_23379ChickenBridge.scm",(void*)f_23379},
{"f_23383ChickenBridge.scm",(void*)f_23383},
{"f_23344ChickenBridge.scm",(void*)f_23344},
{"f_23348ChickenBridge.scm",(void*)f_23348},
{"f_22949ChickenBridge.scm",(void*)f_22949},
{"f_23308ChickenBridge.scm",(void*)f_23308},
{"f_23323ChickenBridge.scm",(void*)f_23323},
{"f_23315ChickenBridge.scm",(void*)f_23315},
{"f_23279ChickenBridge.scm",(void*)f_23279},
{"f_23283ChickenBridge.scm",(void*)f_23283},
{"f_23244ChickenBridge.scm",(void*)f_23244},
{"f_23248ChickenBridge.scm",(void*)f_23248},
{"f_23209ChickenBridge.scm",(void*)f_23209},
{"f_23213ChickenBridge.scm",(void*)f_23213},
{"f_23174ChickenBridge.scm",(void*)f_23174},
{"f_23178ChickenBridge.scm",(void*)f_23178},
{"f_22952ChickenBridge.scm",(void*)f_22952},
{"f_23138ChickenBridge.scm",(void*)f_23138},
{"f_23153ChickenBridge.scm",(void*)f_23153},
{"f_23145ChickenBridge.scm",(void*)f_23145},
{"f_23109ChickenBridge.scm",(void*)f_23109},
{"f_23113ChickenBridge.scm",(void*)f_23113},
{"f_23074ChickenBridge.scm",(void*)f_23074},
{"f_23078ChickenBridge.scm",(void*)f_23078},
{"f_23039ChickenBridge.scm",(void*)f_23039},
{"f_23043ChickenBridge.scm",(void*)f_23043},
{"f_23004ChickenBridge.scm",(void*)f_23004},
{"f_23008ChickenBridge.scm",(void*)f_23008},
{"f_22955ChickenBridge.scm",(void*)f_22955},
{"f_22958ChickenBridge.scm",(void*)f_22958},
{"f_22962ChickenBridge.scm",(void*)f_22962},
{"f_22604ChickenBridge.scm",(void*)f_22604},
{"f_22444ChickenBridge.scm",(void*)f_22444},
{"f_22479ChickenBridge.scm",(void*)f_22479},
{"f_22489ChickenBridge.scm",(void*)f_22489},
{"f_22493ChickenBridge.scm",(void*)f_22493},
{"f_22496ChickenBridge.scm",(void*)f_22496},
{"f_22557ChickenBridge.scm",(void*)f_22557},
{"f_22548ChickenBridge.scm",(void*)f_22548},
{"f_22499ChickenBridge.scm",(void*)f_22499},
{"f_22518ChickenBridge.scm",(void*)f_22518},
{"f_22525ChickenBridge.scm",(void*)f_22525},
{"f_22502ChickenBridge.scm",(void*)f_22502},
{"f_22508ChickenBridge.scm",(void*)f_22508},
{"f_22477ChickenBridge.scm",(void*)f_22477},
{"f_22452ChickenBridge.scm",(void*)f_22452},
{"f_22451ChickenBridge.scm",(void*)f_22451},
{"f_22612ChickenBridge.scm",(void*)f_22612},
{"f_22190ChickenBridge.scm",(void*)f_22190},
{"f_22212ChickenBridge.scm",(void*)f_22212},
{"f_22227ChickenBridge.scm",(void*)f_22227},
{"f_22230ChickenBridge.scm",(void*)f_22230},
{"f_22406ChickenBridge.scm",(void*)f_22406},
{"f_22400ChickenBridge.scm",(void*)f_22400},
{"f_22233ChickenBridge.scm",(void*)f_22233},
{"f_22382ChickenBridge.scm",(void*)f_22382},
{"f_22236ChickenBridge.scm",(void*)f_22236},
{"f_22239ChickenBridge.scm",(void*)f_22239},
{"f_22375ChickenBridge.scm",(void*)f_22375},
{"f_22363ChickenBridge.scm",(void*)f_22363},
{"f_22259ChickenBridge.scm",(void*)f_22259},
{"f_22266ChickenBridge.scm",(void*)f_22266},
{"f_22336ChickenBridge.scm",(void*)f_22336},
{"f_22322ChickenBridge.scm",(void*)f_22322},
{"f_22330ChickenBridge.scm",(void*)f_22330},
{"f_22269ChickenBridge.scm",(void*)f_22269},
{"f_22308ChickenBridge.scm",(void*)f_22308},
{"f_22272ChickenBridge.scm",(void*)f_22272},
{"f_22301ChickenBridge.scm",(void*)f_22301},
{"f_22278ChickenBridge.scm",(void*)f_22278},
{"f_22281ChickenBridge.scm",(void*)f_22281},
{"f_22285ChickenBridge.scm",(void*)f_22285},
{"f_22246ChickenBridge.scm",(void*)f_22246},
{"f_22249ChickenBridge.scm",(void*)f_22249},
{"f_22059ChickenBridge.scm",(void*)f_22059},
{"f_22068ChickenBridge.scm",(void*)f_22068},
{"f_22016ChickenBridge.scm",(void*)f_22016},
{"f_22022ChickenBridge.scm",(void*)f_22022},
{"f_22085ChickenBridge.scm",(void*)f_22085},
{"f_22171ChickenBridge.scm",(void*)f_22171},
{"f_22158ChickenBridge.scm",(void*)f_22158},
{"f_22166ChickenBridge.scm",(void*)f_22166},
{"f_22088ChickenBridge.scm",(void*)f_22088},
{"f_22092ChickenBridge.scm",(void*)f_22092},
{"f_22135ChickenBridge.scm",(void*)f_22135},
{"f_22097ChickenBridge.scm",(void*)f_22097},
{"f_22063ChickenBridge.scm",(void*)f_22063},
{"f_21958ChickenBridge.scm",(void*)f_21958},
{"f_21965ChickenBridge.scm",(void*)f_21965},
{"f_21996ChickenBridge.scm",(void*)f_21996},
{"f_21992ChickenBridge.scm",(void*)f_21992},
{"f_21984ChickenBridge.scm",(void*)f_21984},
{"f_21867ChickenBridge.scm",(void*)f_21867},
{"f_21874ChickenBridge.scm",(void*)f_21874},
{"f_21942ChickenBridge.scm",(void*)f_21942},
{"f_21885ChickenBridge.scm",(void*)f_21885},
{"f_21912ChickenBridge.scm",(void*)f_21912},
{"f_21896ChickenBridge.scm",(void*)f_21896},
{"f_21801ChickenBridge.scm",(void*)f_21801},
{"f_21812ChickenBridge.scm",(void*)f_21812},
{"f_21815ChickenBridge.scm",(void*)f_21815},
{"f_21822ChickenBridge.scm",(void*)f_21822},
{"f_21795ChickenBridge.scm",(void*)f_21795},
{"f_21249ChickenBridge.scm",(void*)f_21249},
{"f_21280ChickenBridge.scm",(void*)f_21280},
{"f_21744ChickenBridge.scm",(void*)f_21744},
{"f_21750ChickenBridge.scm",(void*)f_21750},
{"f_21291ChickenBridge.scm",(void*)f_21291},
{"f_21176ChickenBridge.scm",(void*)f_21176},
{"f_21201ChickenBridge.scm",(void*)f_21201},
{"f_21136ChickenBridge.scm",(void*)f_21136},
{"f_21149ChickenBridge.scm",(void*)f_21149},
{"f_21190ChickenBridge.scm",(void*)f_21190},
{"f_21295ChickenBridge.scm",(void*)f_21295},
{"f_21732ChickenBridge.scm",(void*)f_21732},
{"f_21728ChickenBridge.scm",(void*)f_21728},
{"f_21724ChickenBridge.scm",(void*)f_21724},
{"f_21298ChickenBridge.scm",(void*)f_21298},
{"f_21518ChickenBridge.scm",(void*)f_21518},
{"f_21627ChickenBridge.scm",(void*)f_21627},
{"f_21692ChickenBridge.scm",(void*)f_21692},
{"f_21634ChickenBridge.scm",(void*)f_21634},
{"f_21638ChickenBridge.scm",(void*)f_21638},
{"f_21642ChickenBridge.scm",(void*)f_21642},
{"f_21684ChickenBridge.scm",(void*)f_21684},
{"f_21680ChickenBridge.scm",(void*)f_21680},
{"f_21658ChickenBridge.scm",(void*)f_21658},
{"f_21521ChickenBridge.scm",(void*)f_21521},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_21423ChickenBridge.scm",(void*)f_21423},
{"f_21506ChickenBridge.scm",(void*)f_21506},
{"f_21473ChickenBridge.scm",(void*)f_21473},
{"f_21499ChickenBridge.scm",(void*)f_21499},
{"f_21481ChickenBridge.scm",(void*)f_21481},
{"f_21429ChickenBridge.scm",(void*)f_21429},
{"f_21469ChickenBridge.scm",(void*)f_21469},
{"f_21411ChickenBridge.scm",(void*)f_21411},
{"f_21382ChickenBridge.scm",(void*)f_21382},
{"f_21404ChickenBridge.scm",(void*)f_21404},
{"f_21390ChickenBridge.scm",(void*)f_21390},
{"f_21344ChickenBridge.scm",(void*)f_21344},
{"f_21301ChickenBridge.scm",(void*)f_21301},
{"f_21312ChickenBridge.scm",(void*)f_21312},
{"f_21316ChickenBridge.scm",(void*)f_21316},
{"f_21320ChickenBridge.scm",(void*)f_21320},
{"f_21324ChickenBridge.scm",(void*)f_21324},
{"f_21308ChickenBridge.scm",(void*)f_21308},
{"f_21268ChickenBridge.scm",(void*)f_21268},
{"f_21263ChickenBridge.scm",(void*)f_21263},
{"f_21258ChickenBridge.scm",(void*)f_21258},
{"f_21090ChickenBridge.scm",(void*)f_21090},
{"f_21101ChickenBridge.scm",(void*)f_21101},
{"f_21116ChickenBridge.scm",(void*)f_21116},
{"f_21052ChickenBridge.scm",(void*)f_21052},
{"f_21063ChickenBridge.scm",(void*)f_21063},
{"f_21078ChickenBridge.scm",(void*)f_21078},
{"f_20985ChickenBridge.scm",(void*)f_20985},
{"f_21005ChickenBridge.scm",(void*)f_21005},
{"f_21015ChickenBridge.scm",(void*)f_21015},
{"f_21028ChickenBridge.scm",(void*)f_21028},
{"f_20996ChickenBridge.scm",(void*)f_20996},
{"f_21003ChickenBridge.scm",(void*)f_21003},
{"f_20792ChickenBridge.scm",(void*)f_20792},
{"f_20852ChickenBridge.scm",(void*)f_20852},
{"f_20862ChickenBridge.scm",(void*)f_20862},
{"f_20976ChickenBridge.scm",(void*)f_20976},
{"f_20941ChickenBridge.scm",(void*)f_20941},
{"f_20933ChickenBridge.scm",(void*)f_20933},
{"f_20904ChickenBridge.scm",(void*)f_20904},
{"f_20882ChickenBridge.scm",(void*)f_20882},
{"f_20885ChickenBridge.scm",(void*)f_20885},
{"f_20873ChickenBridge.scm",(void*)f_20873},
{"f_20799ChickenBridge.scm",(void*)f_20799},
{"f_20850ChickenBridge.scm",(void*)f_20850},
{"f_20842ChickenBridge.scm",(void*)f_20842},
{"f_20802ChickenBridge.scm",(void*)f_20802},
{"f_20813ChickenBridge.scm",(void*)f_20813},
{"f_20817ChickenBridge.scm",(void*)f_20817},
{"f_20809ChickenBridge.scm",(void*)f_20809},
{"f_20650ChickenBridge.scm",(void*)f_20650},
{"f_20698ChickenBridge.scm",(void*)f_20698},
{"f_20708ChickenBridge.scm",(void*)f_20708},
{"f_20719ChickenBridge.scm",(void*)f_20719},
{"f_20756ChickenBridge.scm",(void*)f_20756},
{"f_20731ChickenBridge.scm",(void*)f_20731},
{"f_20722ChickenBridge.scm",(void*)f_20722},
{"f_20660ChickenBridge.scm",(void*)f_20660},
{"f_20696ChickenBridge.scm",(void*)f_20696},
{"f_20667ChickenBridge.scm",(void*)f_20667},
{"f_20299ChickenBridge.scm",(void*)f_20299},
{"f_20306ChickenBridge.scm",(void*)f_20306},
{"f_20540ChickenBridge.scm",(void*)f_20540},
{"f_20550ChickenBridge.scm",(void*)f_20550},
{"f_20561ChickenBridge.scm",(void*)f_20561},
{"f_20573ChickenBridge.scm",(void*)f_20573},
{"f_20576ChickenBridge.scm",(void*)f_20576},
{"f_20564ChickenBridge.scm",(void*)f_20564},
{"f_20312ChickenBridge.scm",(void*)f_20312},
{"f_20538ChickenBridge.scm",(void*)f_20538},
{"f_20534ChickenBridge.scm",(void*)f_20534},
{"f_20480ChickenBridge.scm",(void*)f_20480},
{"f_20445ChickenBridge.scm",(void*)f_20445},
{"f_20461ChickenBridge.scm",(void*)f_20461},
{"f_20416ChickenBridge.scm",(void*)f_20416},
{"f_20340ChickenBridge.scm",(void*)f_20340},
{"f_20343ChickenBridge.scm",(void*)f_20343},
{"f_20407ChickenBridge.scm",(void*)f_20407},
{"f_20403ChickenBridge.scm",(void*)f_20403},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20334ChickenBridge.scm",(void*)f_20334},
{"f_20330ChickenBridge.scm",(void*)f_20330},
{"f_20252ChickenBridge.scm",(void*)f_20252},
{"f_20285ChickenBridge.scm",(void*)f_20285},
{"f_20267ChickenBridge.scm",(void*)f_20267},
{"f_20279ChickenBridge.scm",(void*)f_20279},
{"f_19870ChickenBridge.scm",(void*)f_19870},
{"f_20079ChickenBridge.scm",(void*)f_20079},
{"f_20089ChickenBridge.scm",(void*)f_20089},
{"f_20100ChickenBridge.scm",(void*)f_20100},
{"f_20220ChickenBridge.scm",(void*)f_20220},
{"f_20199ChickenBridge.scm",(void*)f_20199},
{"f_20178ChickenBridge.scm",(void*)f_20178},
{"f_20157ChickenBridge.scm",(void*)f_20157},
{"f_20136ChickenBridge.scm",(void*)f_20136},
{"f_20115ChickenBridge.scm",(void*)f_20115},
{"f_20103ChickenBridge.scm",(void*)f_20103},
{"f_19880ChickenBridge.scm",(void*)f_19880},
{"f_19883ChickenBridge.scm",(void*)f_19883},
{"f_20046ChickenBridge.scm",(void*)f_20046},
{"f_19886ChickenBridge.scm",(void*)f_19886},
{"f_20037ChickenBridge.scm",(void*)f_20037},
{"f_20017ChickenBridge.scm",(void*)f_20017},
{"f_19889ChickenBridge.scm",(void*)f_19889},
{"f_19982ChickenBridge.scm",(void*)f_19982},
{"f_19999ChickenBridge.scm",(void*)f_19999},
{"f_19892ChickenBridge.scm",(void*)f_19892},
{"f_19931ChickenBridge.scm",(void*)f_19931},
{"f_19965ChickenBridge.scm",(void*)f_19965},
{"f_19949ChickenBridge.scm",(void*)f_19949},
{"f_19934ChickenBridge.scm",(void*)f_19934},
{"f_19899ChickenBridge.scm",(void*)f_19899},
{"f_19910ChickenBridge.scm",(void*)f_19910},
{"f_19914ChickenBridge.scm",(void*)f_19914},
{"f_19906ChickenBridge.scm",(void*)f_19906},
{"f_19788ChickenBridge.scm",(void*)f_19788},
{"f_19792ChickenBridge.scm",(void*)f_19792},
{"f_19810ChickenBridge.scm",(void*)f_19810},
{"f_19628ChickenBridge.scm",(void*)f_19628},
{"f_19636ChickenBridge.scm",(void*)f_19636},
{"f_19646ChickenBridge.scm",(void*)f_19646},
{"f_19684ChickenBridge.scm",(void*)f_19684},
{"f_19687ChickenBridge.scm",(void*)f_19687},
{"f_19690ChickenBridge.scm",(void*)f_19690},
{"f_19765ChickenBridge.scm",(void*)f_19765},
{"f_19775ChickenBridge.scm",(void*)f_19775},
{"f_19693ChickenBridge.scm",(void*)f_19693},
{"f_19696ChickenBridge.scm",(void*)f_19696},
{"f_19699ChickenBridge.scm",(void*)f_19699},
{"f_19719ChickenBridge.scm",(void*)f_19719},
{"f_19729ChickenBridge.scm",(void*)f_19729},
{"f_19732ChickenBridge.scm",(void*)f_19732},
{"f_19735ChickenBridge.scm",(void*)f_19735},
{"f_19702ChickenBridge.scm",(void*)f_19702},
{"f_19705ChickenBridge.scm",(void*)f_19705},
{"f_19622ChickenBridge.scm",(void*)f_19622},
{"f_19616ChickenBridge.scm",(void*)f_19616},
{"f_19610ChickenBridge.scm",(void*)f_19610},
{"f_19539ChickenBridge.scm",(void*)f_19539},
{"f_19580ChickenBridge.scm",(void*)f_19580},
{"f_19584ChickenBridge.scm",(void*)f_19584},
{"f_19588ChickenBridge.scm",(void*)f_19588},
{"f_19592ChickenBridge.scm",(void*)f_19592},
{"f_19596ChickenBridge.scm",(void*)f_19596},
{"f_19600ChickenBridge.scm",(void*)f_19600},
{"f_19604ChickenBridge.scm",(void*)f_19604},
{"f_19608ChickenBridge.scm",(void*)f_19608},
{"f_19541ChickenBridge.scm",(void*)f_19541},
{"f_19547ChickenBridge.scm",(void*)f_19547},
{"f_19569ChickenBridge.scm",(void*)f_19569},
{"f_19558ChickenBridge.scm",(void*)f_19558},
{"f_19388ChickenBridge.scm",(void*)f_19388},
{"f_19403ChickenBridge.scm",(void*)f_19403},
{"f_19416ChickenBridge.scm",(void*)f_19416},
{"f_19376ChickenBridge.scm",(void*)f_19376},
{"f_19364ChickenBridge.scm",(void*)f_19364},
{"f_19352ChickenBridge.scm",(void*)f_19352},
{"f_19346ChickenBridge.scm",(void*)f_19346},
{"f_19340ChickenBridge.scm",(void*)f_19340},
{"f_19328ChickenBridge.scm",(void*)f_19328},
{"f_19316ChickenBridge.scm",(void*)f_19316},
{"f_19304ChickenBridge.scm",(void*)f_19304},
{"f_19292ChickenBridge.scm",(void*)f_19292},
{"f_19286ChickenBridge.scm",(void*)f_19286},
{"f_19250ChickenBridge.scm",(void*)f_19250},
{"f_19244ChickenBridge.scm",(void*)f_19244},
{"f_19197ChickenBridge.scm",(void*)f_19197},
{"f_19201ChickenBridge.scm",(void*)f_19201},
{"f_19217ChickenBridge.scm",(void*)f_19217},
{"f_19226ChickenBridge.scm",(void*)f_19226},
{"f_19204ChickenBridge.scm",(void*)f_19204},
{"f_19188ChickenBridge.scm",(void*)f_19188},
{"f_19192ChickenBridge.scm",(void*)f_19192},
{"f_19035ChickenBridge.scm",(void*)f_19035},
{"f_19162ChickenBridge.scm",(void*)f_19162},
{"f_19175ChickenBridge.scm",(void*)f_19175},
{"f_19157ChickenBridge.scm",(void*)f_19157},
{"f_19038ChickenBridge.scm",(void*)f_19038},
{"f_19154ChickenBridge.scm",(void*)f_19154},
{"f_19138ChickenBridge.scm",(void*)f_19138},
{"f_19066ChickenBridge.scm",(void*)f_19066},
{"f_19074ChickenBridge.scm",(void*)f_19074},
{"f_19084ChickenBridge.scm",(void*)f_19084},
{"f_19087ChickenBridge.scm",(void*)f_19087},
{"f_19069ChickenBridge.scm",(void*)f_19069},
{"f_18864ChickenBridge.scm",(void*)f_18864},
{"f_18870ChickenBridge.scm",(void*)f_18870},
{"f_18873ChickenBridge.scm",(void*)f_18873},
{"f_16673ChickenBridge.scm",(void*)f_16673},
{"f_16686ChickenBridge.scm",(void*)f_16686},
{"f_16693ChickenBridge.scm",(void*)f_16693},
{"f_16700ChickenBridge.scm",(void*)f_16700},
{"f_16679ChickenBridge.scm",(void*)f_16679},
{"f_18877ChickenBridge.scm",(void*)f_18877},
{"f_18911ChickenBridge.scm",(void*)f_18911},
{"f_19004ChickenBridge.scm",(void*)f_19004},
{"f_19014ChickenBridge.scm",(void*)f_19014},
{"f_18917ChickenBridge.scm",(void*)f_18917},
{"f_18974ChickenBridge.scm",(void*)f_18974},
{"f_18984ChickenBridge.scm",(void*)f_18984},
{"f_18925ChickenBridge.scm",(void*)f_18925},
{"f_18939ChickenBridge.scm",(void*)f_18939},
{"f_18943ChickenBridge.scm",(void*)f_18943},
{"f_18947ChickenBridge.scm",(void*)f_18947},
{"f_18951ChickenBridge.scm",(void*)f_18951},
{"f_18958ChickenBridge.scm",(void*)f_18958},
{"f_18935ChickenBridge.scm",(void*)f_18935},
{"f_18928ChickenBridge.scm",(void*)f_18928},
{"f_18880ChickenBridge.scm",(void*)f_18880},
{"f_17800ChickenBridge.scm",(void*)f_17800},
{"f_17813ChickenBridge.scm",(void*)f_17813},
{"f_17863ChickenBridge.scm",(void*)f_17863},
{"f_17960ChickenBridge.scm",(void*)f_17960},
{"f_18028ChickenBridge.scm",(void*)f_18028},
{"f_18285ChickenBridge.scm",(void*)f_18285},
{"f_18035ChickenBridge.scm",(void*)f_18035},
{"f_18273ChickenBridge.scm",(void*)f_18273},
{"f_18224ChickenBridge.scm",(void*)f_18224},
{"f_18230ChickenBridge.scm",(void*)f_18230},
{"f_18254ChickenBridge.scm",(void*)f_18254},
{"f_18250ChickenBridge.scm",(void*)f_18250},
{"f_18238ChickenBridge.scm",(void*)f_18238},
{"f_18038ChickenBridge.scm",(void*)f_18038},
{"f_18200ChickenBridge.scm",(void*)f_18200},
{"f_18204ChickenBridge.scm",(void*)f_18204},
{"f_18041ChickenBridge.scm",(void*)f_18041},
{"f_18177ChickenBridge.scm",(void*)f_18177},
{"f_18181ChickenBridge.scm",(void*)f_18181},
{"f_18044ChickenBridge.scm",(void*)f_18044},
{"f_18154ChickenBridge.scm",(void*)f_18154},
{"f_18158ChickenBridge.scm",(void*)f_18158},
{"f_18047ChickenBridge.scm",(void*)f_18047},
{"f_18079ChickenBridge.scm",(void*)f_18079},
{"f_18097ChickenBridge.scm",(void*)f_18097},
{"f_18115ChickenBridge.scm",(void*)f_18115},
{"f_18133ChickenBridge.scm",(void*)f_18133},
{"f_18050ChickenBridge.scm",(void*)f_18050},
{"f_18054ChickenBridge.scm",(void*)f_18054},
{"f_17964ChickenBridge.scm",(void*)f_17964},
{"f_17968ChickenBridge.scm",(void*)f_17968},
{"f_17972ChickenBridge.scm",(void*)f_17972},
{"f_17867ChickenBridge.scm",(void*)f_17867},
{"f_17871ChickenBridge.scm",(void*)f_17871},
{"f_17875ChickenBridge.scm",(void*)f_17875},
{"f_17894ChickenBridge.scm",(void*)f_17894},
{"f_17898ChickenBridge.scm",(void*)f_17898},
{"f_17878ChickenBridge.scm",(void*)f_17878},
{"f_17882ChickenBridge.scm",(void*)f_17882},
{"f_17817ChickenBridge.scm",(void*)f_17817},
{"f_17821ChickenBridge.scm",(void*)f_17821},
{"f_17825ChickenBridge.scm",(void*)f_17825},
{"f_17807ChickenBridge.scm",(void*)f_17807},
{"f_17622ChickenBridge.scm",(void*)f_17622},
{"f_17634ChickenBridge.scm",(void*)f_17634},
{"f_17653ChickenBridge.scm",(void*)f_17653},
{"f_17671ChickenBridge.scm",(void*)f_17671},
{"f_17703ChickenBridge.scm",(void*)f_17703},
{"f_17706ChickenBridge.scm",(void*)f_17706},
{"f_17699ChickenBridge.scm",(void*)f_17699},
{"f_17685ChickenBridge.scm",(void*)f_17685},
{"f_17656ChickenBridge.scm",(void*)f_17656},
{"f_17601ChickenBridge.scm",(void*)f_17601},
{"f_17608ChickenBridge.scm",(void*)f_17608},
{"f_17611ChickenBridge.scm",(void*)f_17611},
{"f_17617ChickenBridge.scm",(void*)f_17617},
{"f_17536ChickenBridge.scm",(void*)f_17536},
{"f_17545ChickenBridge.scm",(void*)f_17545},
{"f_17568ChickenBridge.scm",(void*)f_17568},
{"f_17558ChickenBridge.scm",(void*)f_17558},
{"f_17492ChickenBridge.scm",(void*)f_17492},
{"f_17480ChickenBridge.scm",(void*)f_17480},
{"f_17378ChickenBridge.scm",(void*)f_17378},
{"f_17330ChickenBridge.scm",(void*)f_17330},
{"f_16711ChickenBridge.scm",(void*)f_16711},
{"f_16715ChickenBridge.scm",(void*)f_16715},
{"f_16718ChickenBridge.scm",(void*)f_16718},
{"f_17144ChickenBridge.scm",(void*)f_17144},
{"f_17140ChickenBridge.scm",(void*)f_17140},
{"f_17136ChickenBridge.scm",(void*)f_17136},
{"f_16721ChickenBridge.scm",(void*)f_16721},
{"f_16844ChickenBridge.scm",(void*)f_16844},
{"f_16077ChickenBridge.scm",(void*)f_16077},
{"f_16850ChickenBridge.scm",(void*)f_16850},
{"f_16093ChickenBridge.scm",(void*)f_16093},
{"f_16938ChickenBridge.scm",(void*)f_16938},
{"f_17008ChickenBridge.scm",(void*)f_17008},
{"f_16109ChickenBridge.scm",(void*)f_16109},
{"f_17011ChickenBridge.scm",(void*)f_17011},
{"f_16141ChickenBridge.scm",(void*)f_16141},
{"f_17089ChickenBridge.scm",(void*)f_17089},
{"f_17115ChickenBridge.scm",(void*)f_17115},
{"f_17109ChickenBridge.scm",(void*)f_17109},
{"f_17098ChickenBridge.scm",(void*)f_17098},
{"f_17040ChickenBridge.scm",(void*)f_17040},
{"f_17050ChickenBridge.scm",(void*)f_17050},
{"f_17076ChickenBridge.scm",(void*)f_17076},
{"f_17070ChickenBridge.scm",(void*)f_17070},
{"f_17053ChickenBridge.scm",(void*)f_17053},
{"f_17063ChickenBridge.scm",(void*)f_17063},
{"f_17056ChickenBridge.scm",(void*)f_17056},
{"f_17017ChickenBridge.scm",(void*)f_17017},
{"f_17026ChickenBridge.scm",(void*)f_17026},
{"f_17020ChickenBridge.scm",(void*)f_17020},
{"f_16944ChickenBridge.scm",(void*)f_16944},
{"f_16962ChickenBridge.scm",(void*)f_16962},
{"f_16995ChickenBridge.scm",(void*)f_16995},
{"f_16981ChickenBridge.scm",(void*)f_16981},
{"f_16989ChickenBridge.scm",(void*)f_16989},
{"f_16972ChickenBridge.scm",(void*)f_16972},
{"f_16947ChickenBridge.scm",(void*)f_16947},
{"f_16859ChickenBridge.scm",(void*)f_16859},
{"f_16881ChickenBridge.scm",(void*)f_16881},
{"f_16928ChickenBridge.scm",(void*)f_16928},
{"f_16914ChickenBridge.scm",(void*)f_16914},
{"f_16922ChickenBridge.scm",(void*)f_16922},
{"f_16894ChickenBridge.scm",(void*)f_16894},
{"f_16897ChickenBridge.scm",(void*)f_16897},
{"f_16862ChickenBridge.scm",(void*)f_16862},
{"f_16879ChickenBridge.scm",(void*)f_16879},
{"f_16865ChickenBridge.scm",(void*)f_16865},
{"f_16730ChickenBridge.scm",(void*)f_16730},
{"f_16736ChickenBridge.scm",(void*)f_16736},
{"f_16794ChickenBridge.scm",(void*)f_16794},
{"f_16797ChickenBridge.scm",(void*)f_16797},
{"f_16818ChickenBridge.scm",(void*)f_16818},
{"f_16829ChickenBridge.scm",(void*)f_16829},
{"f_16808ChickenBridge.scm",(void*)f_16808},
{"f_16742ChickenBridge.scm",(void*)f_16742},
{"f_16752ChickenBridge.scm",(void*)f_16752},
{"f_16788ChickenBridge.scm",(void*)f_16788},
{"f_16758ChickenBridge.scm",(void*)f_16758},
{"f_16773ChickenBridge.scm",(void*)f_16773},
{"f_16777ChickenBridge.scm",(void*)f_16777},
{"f_16781ChickenBridge.scm",(void*)f_16781},
{"f_16765ChickenBridge.scm",(void*)f_16765},
{"f_16607ChickenBridge.scm",(void*)f_16607},
{"f_16609ChickenBridge.scm",(void*)f_16609},
{"f_16657ChickenBridge.scm",(void*)f_16657},
{"f_16613ChickenBridge.scm",(void*)f_16613},
{"f_16616ChickenBridge.scm",(void*)f_16616},
{"f_16621ChickenBridge.scm",(void*)f_16621},
{"f_16642ChickenBridge.scm",(void*)f_16642},
{"f_16599ChickenBridge.scm",(void*)f_16599},
{"f_16601ChickenBridge.scm",(void*)f_16601},
{"f_16391ChickenBridge.scm",(void*)f_16391},
{"f_16408ChickenBridge.scm",(void*)f_16408},
{"f_16412ChickenBridge.scm",(void*)f_16412},
{"f_16358ChickenBridge.scm",(void*)f_16358},
{"f_16365ChickenBridge.scm",(void*)f_16365},
{"f_16309ChickenBridge.scm",(void*)f_16309},
{"f_16316ChickenBridge.scm",(void*)f_16316},
{"f_16374ChickenBridge.scm",(void*)f_16374},
{"f_16597ChickenBridge.scm",(void*)f_16597},
{"f_16574ChickenBridge.scm",(void*)f_16574},
{"f_16590ChickenBridge.scm",(void*)f_16590},
{"f_16436ChickenBridge.scm",(void*)f_16436},
{"f_16439ChickenBridge.scm",(void*)f_16439},
{"f_16463ChickenBridge.scm",(void*)f_16463},
{"f_16520ChickenBridge.scm",(void*)f_16520},
{"f_16526ChickenBridge.scm",(void*)f_16526},
{"f_16535ChickenBridge.scm",(void*)f_16535},
{"f_16544ChickenBridge.scm",(void*)f_16544},
{"f_16553ChickenBridge.scm",(void*)f_16553},
{"f_16562ChickenBridge.scm",(void*)f_16562},
{"f_16514ChickenBridge.scm",(void*)f_16514},
{"f_16469ChickenBridge.scm",(void*)f_16469},
{"f_16475ChickenBridge.scm",(void*)f_16475},
{"f_16481ChickenBridge.scm",(void*)f_16481},
{"f_16487ChickenBridge.scm",(void*)f_16487},
{"f_16493ChickenBridge.scm",(void*)f_16493},
{"f_16499ChickenBridge.scm",(void*)f_16499},
{"f_16340ChickenBridge.scm",(void*)f_16340},
{"f_16347ChickenBridge.scm",(void*)f_16347},
{"f_16330ChickenBridge.scm",(void*)f_16330},
{"f_16318ChickenBridge.scm",(void*)f_16318},
{"f_16286ChickenBridge.scm",(void*)f_16286},
{"f_16293ChickenBridge.scm",(void*)f_16293},
{"f_16300ChickenBridge.scm",(void*)f_16300},
{"f_16270ChickenBridge.scm",(void*)f_16270},
{"f_16277ChickenBridge.scm",(void*)f_16277},
{"f_16284ChickenBridge.scm",(void*)f_16284},
{"f_16258ChickenBridge.scm",(void*)f_16258},
{"f_16240ChickenBridge.scm",(void*)f_16240},
{"f_16222ChickenBridge.scm",(void*)f_16222},
{"f_16207ChickenBridge.scm",(void*)f_16207},
{"f_16201ChickenBridge.scm",(void*)f_16201},
{"f_16189ChickenBridge.scm",(void*)f_16189},
{"f_16171ChickenBridge.scm",(void*)f_16171},
{"f_16150ChickenBridge.scm",(void*)f_16150},
{"f_16118ChickenBridge.scm",(void*)f_16118},
{"f_16125ChickenBridge.scm",(void*)f_16125},
{"f_16060ChickenBridge.scm",(void*)f_16060},
{"f_16068ChickenBridge.scm",(void*)f_16068},
{"f_16050ChickenBridge.scm",(void*)f_16050},
{"f_16058ChickenBridge.scm",(void*)f_16058},
{"f_16044ChickenBridge.scm",(void*)f_16044},
{"f_16032ChickenBridge.scm",(void*)f_16032},
{"f_16029ChickenBridge.scm",(void*)f_16029},
{"f_16008ChickenBridge.scm",(void*)f_16008},
{"f_15921ChickenBridge.scm",(void*)f_15921},
{"f_15900ChickenBridge.scm",(void*)f_15900},
{"f_15890ChickenBridge.scm",(void*)f_15890},
{"f_15878ChickenBridge.scm",(void*)f_15878},
{"f_15849ChickenBridge.scm",(void*)f_15849},
{"f_15837ChickenBridge.scm",(void*)f_15837},
{"f_15819ChickenBridge.scm",(void*)f_15819},
{"f_15801ChickenBridge.scm",(void*)f_15801},
{"f_15780ChickenBridge.scm",(void*)f_15780},
{"f_15686ChickenBridge.scm",(void*)f_15686},
{"f_15690ChickenBridge.scm",(void*)f_15690},
{"f_15719ChickenBridge.scm",(void*)f_15719},
{"f_15724ChickenBridge.scm",(void*)f_15724},
{"f_15749ChickenBridge.scm",(void*)f_15749},
{"f_15734ChickenBridge.scm",(void*)f_15734},
{"f_15168ChickenBridge.scm",(void*)f_15168},
{"f_15439ChickenBridge.scm",(void*)f_15439},
{"f_15443ChickenBridge.scm",(void*)f_15443},
{"f_15448ChickenBridge.scm",(void*)f_15448},
{"f_15654ChickenBridge.scm",(void*)f_15654},
{"f_15669ChickenBridge.scm",(void*)f_15669},
{"f_15661ChickenBridge.scm",(void*)f_15661},
{"f_15625ChickenBridge.scm",(void*)f_15625},
{"f_15629ChickenBridge.scm",(void*)f_15629},
{"f_15590ChickenBridge.scm",(void*)f_15590},
{"f_15594ChickenBridge.scm",(void*)f_15594},
{"f_15452ChickenBridge.scm",(void*)f_15452},
{"f_15554ChickenBridge.scm",(void*)f_15554},
{"f_15569ChickenBridge.scm",(void*)f_15569},
{"f_15561ChickenBridge.scm",(void*)f_15561},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15529ChickenBridge.scm",(void*)f_15529},
{"f_15490ChickenBridge.scm",(void*)f_15490},
{"f_15494ChickenBridge.scm",(void*)f_15494},
{"f_15455ChickenBridge.scm",(void*)f_15455},
{"f_15458ChickenBridge.scm",(void*)f_15458},
{"f_15461ChickenBridge.scm",(void*)f_15461},
{"f_15430ChickenBridge.scm",(void*)f_15430},
{"f_15172ChickenBridge.scm",(void*)f_15172},
{"f_15399ChickenBridge.scm",(void*)f_15399},
{"f_15414ChickenBridge.scm",(void*)f_15414},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_15370ChickenBridge.scm",(void*)f_15370},
{"f_15374ChickenBridge.scm",(void*)f_15374},
{"f_15335ChickenBridge.scm",(void*)f_15335},
{"f_15339ChickenBridge.scm",(void*)f_15339},
{"f_15175ChickenBridge.scm",(void*)f_15175},
{"f_15299ChickenBridge.scm",(void*)f_15299},
{"f_15314ChickenBridge.scm",(void*)f_15314},
{"f_15306ChickenBridge.scm",(void*)f_15306},
{"f_15270ChickenBridge.scm",(void*)f_15270},
{"f_15274ChickenBridge.scm",(void*)f_15274},
{"f_15235ChickenBridge.scm",(void*)f_15235},
{"f_15239ChickenBridge.scm",(void*)f_15239},
{"f_15178ChickenBridge.scm",(void*)f_15178},
{"f_15181ChickenBridge.scm",(void*)f_15181},
{"f_15184ChickenBridge.scm",(void*)f_15184},
{"f_15196ChickenBridge.scm",(void*)f_15196},
{"f_15214ChickenBridge.scm",(void*)f_15214},
{"f_15202ChickenBridge.scm",(void*)f_15202},
{"f_15190ChickenBridge.scm",(void*)f_15190},
{"f_15105ChickenBridge.scm",(void*)f_15105},
{"f_14765ChickenBridge.scm",(void*)f_14765},
{"f_14947ChickenBridge.scm",(void*)f_14947},
{"f_14951ChickenBridge.scm",(void*)f_14951},
{"f_14953ChickenBridge.scm",(void*)f_14953},
{"f_14878ChickenBridge.scm",(void*)f_14878},
{"f_14888ChickenBridge.scm",(void*)f_14888},
{"f_14895ChickenBridge.scm",(void*)f_14895},
{"f_14963ChickenBridge.scm",(void*)f_14963},
{"f_14966ChickenBridge.scm",(void*)f_14966},
{"f_14970ChickenBridge.scm",(void*)f_14970},
{"f_14990ChickenBridge.scm",(void*)f_14990},
{"f_15006ChickenBridge.scm",(void*)f_15006},
{"f_14973ChickenBridge.scm",(void*)f_14973},
{"f_14768ChickenBridge.scm",(void*)f_14768},
{"f_14780ChickenBridge.scm",(void*)f_14780},
{"f_14816ChickenBridge.scm",(void*)f_14816},
{"f_14836ChickenBridge.scm",(void*)f_14836},
{"f_14841ChickenBridge.scm",(void*)f_14841},
{"f_14278ChickenBridge.scm",(void*)f_14278},
{"f_14205ChickenBridge.scm",(void*)f_14205},
{"f_14050ChickenBridge.scm",(void*)f_14050},
{"f_14056ChickenBridge.scm",(void*)f_14056},
{"f_14141ChickenBridge.scm",(void*)f_14141},
{"f_14068ChickenBridge.scm",(void*)f_14068},
{"f_14084ChickenBridge.scm",(void*)f_14084},
{"f_14088ChickenBridge.scm",(void*)f_14088},
{"f_14091ChickenBridge.scm",(void*)f_14091},
{"f_14071ChickenBridge.scm",(void*)f_14071},
{"f_14082ChickenBridge.scm",(void*)f_14082},
{"f_14222ChickenBridge.scm",(void*)f_14222},
{"f_14759ChickenBridge.scm",(void*)f_14759},
{"f_14282ChickenBridge.scm",(void*)f_14282},
{"f_14728ChickenBridge.scm",(void*)f_14728},
{"f_14743ChickenBridge.scm",(void*)f_14743},
{"f_14735ChickenBridge.scm",(void*)f_14735},
{"f_14699ChickenBridge.scm",(void*)f_14699},
{"f_14703ChickenBridge.scm",(void*)f_14703},
{"f_14664ChickenBridge.scm",(void*)f_14664},
{"f_14668ChickenBridge.scm",(void*)f_14668},
{"f_14629ChickenBridge.scm",(void*)f_14629},
{"f_14633ChickenBridge.scm",(void*)f_14633},
{"f_14285ChickenBridge.scm",(void*)f_14285},
{"f_14593ChickenBridge.scm",(void*)f_14593},
{"f_14608ChickenBridge.scm",(void*)f_14608},
{"f_14600ChickenBridge.scm",(void*)f_14600},
{"f_14564ChickenBridge.scm",(void*)f_14564},
{"f_14568ChickenBridge.scm",(void*)f_14568},
{"f_14529ChickenBridge.scm",(void*)f_14529},
{"f_14533ChickenBridge.scm",(void*)f_14533},
{"f_14494ChickenBridge.scm",(void*)f_14494},
{"f_14498ChickenBridge.scm",(void*)f_14498},
{"f_14288ChickenBridge.scm",(void*)f_14288},
{"f_14458ChickenBridge.scm",(void*)f_14458},
{"f_14473ChickenBridge.scm",(void*)f_14473},
{"f_14465ChickenBridge.scm",(void*)f_14465},
{"f_14429ChickenBridge.scm",(void*)f_14429},
{"f_14433ChickenBridge.scm",(void*)f_14433},
{"f_14394ChickenBridge.scm",(void*)f_14394},
{"f_14398ChickenBridge.scm",(void*)f_14398},
{"f_14359ChickenBridge.scm",(void*)f_14359},
{"f_14363ChickenBridge.scm",(void*)f_14363},
{"f_14291ChickenBridge.scm",(void*)f_14291},
{"f_14294ChickenBridge.scm",(void*)f_14294},
{"f_14297ChickenBridge.scm",(void*)f_14297},
{"f_14330ChickenBridge.scm",(void*)f_14330},
{"f_14338ChickenBridge.scm",(void*)f_14338},
{"f_14303ChickenBridge.scm",(void*)f_14303},
{"f_14316ChickenBridge.scm",(void*)f_14316},
{"f_14306ChickenBridge.scm",(void*)f_14306},
{"f_14309ChickenBridge.scm",(void*)f_14309},
{"f_13845ChickenBridge.scm",(void*)f_13845},
{"f_13849ChickenBridge.scm",(void*)f_13849},
{"f_13852ChickenBridge.scm",(void*)f_13852},
{"f_13855ChickenBridge.scm",(void*)f_13855},
{"f_14024ChickenBridge.scm",(void*)f_14024},
{"f_14037ChickenBridge.scm",(void*)f_14037},
{"f_14041ChickenBridge.scm",(void*)f_14041},
{"f_13861ChickenBridge.scm",(void*)f_13861},
{"f_14017ChickenBridge.scm",(void*)f_14017},
{"f_13998ChickenBridge.scm",(void*)f_13998},
{"f_14005ChickenBridge.scm",(void*)f_14005},
{"f_14009ChickenBridge.scm",(void*)f_14009},
{"f_13867ChickenBridge.scm",(void*)f_13867},
{"f_13873ChickenBridge.scm",(void*)f_13873},
{"f_13957ChickenBridge.scm",(void*)f_13957},
{"f_13959ChickenBridge.scm",(void*)f_13959},
{"f_13981ChickenBridge.scm",(void*)f_13981},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_13992ChickenBridge.scm",(void*)f_13992},
{"f_13978ChickenBridge.scm",(void*)f_13978},
{"f_13974ChickenBridge.scm",(void*)f_13974},
{"f_13915ChickenBridge.scm",(void*)f_13915},
{"f_13932ChickenBridge.scm",(void*)f_13932},
{"f_13942ChickenBridge.scm",(void*)f_13942},
{"f_13918ChickenBridge.scm",(void*)f_13918},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13885ChickenBridge.scm",(void*)f_13885},
{"f_13887ChickenBridge.scm",(void*)f_13887},
{"f_13908ChickenBridge.scm",(void*)f_13908},
{"f_13733ChickenBridge.scm",(void*)f_13733},
{"f_13843ChickenBridge.scm",(void*)f_13843},
{"f_13802ChickenBridge.scm",(void*)f_13802},
{"f_13835ChickenBridge.scm",(void*)f_13835},
{"f_13831ChickenBridge.scm",(void*)f_13831},
{"f_13816ChickenBridge.scm",(void*)f_13816},
{"f_13740ChickenBridge.scm",(void*)f_13740},
{"f_13748ChickenBridge.scm",(void*)f_13748},
{"f_13793ChickenBridge.scm",(void*)f_13793},
{"f_13781ChickenBridge.scm",(void*)f_13781},
{"f_13765ChickenBridge.scm",(void*)f_13765},
{"f_12966ChickenBridge.scm",(void*)f_12966},
{"f_13283ChickenBridge.scm",(void*)f_13283},
{"f_13290ChickenBridge.scm",(void*)f_13290},
{"f_13695ChickenBridge.scm",(void*)f_13695},
{"f_13710ChickenBridge.scm",(void*)f_13710},
{"f_13702ChickenBridge.scm",(void*)f_13702},
{"f_13666ChickenBridge.scm",(void*)f_13666},
{"f_13670ChickenBridge.scm",(void*)f_13670},
{"f_13631ChickenBridge.scm",(void*)f_13631},
{"f_13635ChickenBridge.scm",(void*)f_13635},
{"f_13596ChickenBridge.scm",(void*)f_13596},
{"f_13600ChickenBridge.scm",(void*)f_13600},
{"f_13293ChickenBridge.scm",(void*)f_13293},
{"f_13560ChickenBridge.scm",(void*)f_13560},
{"f_13575ChickenBridge.scm",(void*)f_13575},
{"f_13567ChickenBridge.scm",(void*)f_13567},
{"f_13531ChickenBridge.scm",(void*)f_13531},
{"f_13535ChickenBridge.scm",(void*)f_13535},
{"f_13496ChickenBridge.scm",(void*)f_13496},
{"f_13500ChickenBridge.scm",(void*)f_13500},
{"f_13461ChickenBridge.scm",(void*)f_13461},
{"f_13465ChickenBridge.scm",(void*)f_13465},
{"f_13296ChickenBridge.scm",(void*)f_13296},
{"f_13425ChickenBridge.scm",(void*)f_13425},
{"f_13440ChickenBridge.scm",(void*)f_13440},
{"f_13432ChickenBridge.scm",(void*)f_13432},
{"f_13396ChickenBridge.scm",(void*)f_13396},
{"f_13400ChickenBridge.scm",(void*)f_13400},
{"f_13361ChickenBridge.scm",(void*)f_13361},
{"f_13365ChickenBridge.scm",(void*)f_13365},
{"f_13326ChickenBridge.scm",(void*)f_13326},
{"f_13330ChickenBridge.scm",(void*)f_13330},
{"f_13299ChickenBridge.scm",(void*)f_13299},
{"f_13302ChickenBridge.scm",(void*)f_13302},
{"f_12970ChickenBridge.scm",(void*)f_12970},
{"f_12973ChickenBridge.scm",(void*)f_12973},
{"f_13247ChickenBridge.scm",(void*)f_13247},
{"f_13251ChickenBridge.scm",(void*)f_13251},
{"f_13254ChickenBridge.scm",(void*)f_13254},
{"f_13257ChickenBridge.scm",(void*)f_13257},
{"f_13260ChickenBridge.scm",(void*)f_13260},
{"f_13273ChickenBridge.scm",(void*)f_13273},
{"f_13263ChickenBridge.scm",(void*)f_13263},
{"f_12979ChickenBridge.scm",(void*)f_12979},
{"f_12986ChickenBridge.scm",(void*)f_12986},
{"f_13217ChickenBridge.scm",(void*)f_13217},
{"f_13232ChickenBridge.scm",(void*)f_13232},
{"f_13224ChickenBridge.scm",(void*)f_13224},
{"f_13188ChickenBridge.scm",(void*)f_13188},
{"f_13192ChickenBridge.scm",(void*)f_13192},
{"f_13153ChickenBridge.scm",(void*)f_13153},
{"f_13157ChickenBridge.scm",(void*)f_13157},
{"f_12989ChickenBridge.scm",(void*)f_12989},
{"f_13117ChickenBridge.scm",(void*)f_13117},
{"f_13132ChickenBridge.scm",(void*)f_13132},
{"f_13124ChickenBridge.scm",(void*)f_13124},
{"f_13088ChickenBridge.scm",(void*)f_13088},
{"f_13092ChickenBridge.scm",(void*)f_13092},
{"f_13053ChickenBridge.scm",(void*)f_13053},
{"f_13057ChickenBridge.scm",(void*)f_13057},
{"f_12992ChickenBridge.scm",(void*)f_12992},
{"f_12995ChickenBridge.scm",(void*)f_12995},
{"f_13010ChickenBridge.scm",(void*)f_13010},
{"f_13032ChickenBridge.scm",(void*)f_13032},
{"f_13016ChickenBridge.scm",(void*)f_13016},
{"f_13024ChickenBridge.scm",(void*)f_13024},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_13001ChickenBridge.scm",(void*)f_13001},
{"f_12883ChickenBridge.scm",(void*)f_12883},
{"f_12874ChickenBridge.scm",(void*)f_12874},
{"f_12865ChickenBridge.scm",(void*)f_12865},
{"f_12847ChickenBridge.scm",(void*)f_12847},
{"f_12829ChickenBridge.scm",(void*)f_12829},
{"f_12811ChickenBridge.scm",(void*)f_12811},
{"f_12802ChickenBridge.scm",(void*)f_12802},
{"f_12793ChickenBridge.scm",(void*)f_12793},
{"f_12571ChickenBridge.scm",(void*)f_12571},
{"f_12621ChickenBridge.scm",(void*)f_12621},
{"f_12766ChickenBridge.scm",(void*)f_12766},
{"f_12647ChickenBridge.scm",(void*)f_12647},
{"f_12762ChickenBridge.scm",(void*)f_12762},
{"f_12747ChickenBridge.scm",(void*)f_12747},
{"f_12728ChickenBridge.scm",(void*)f_12728},
{"f_12701ChickenBridge.scm",(void*)f_12701},
{"f_12654ChickenBridge.scm",(void*)f_12654},
{"f_12624ChickenBridge.scm",(void*)f_12624},
{"f_12574ChickenBridge.scm",(void*)f_12574},
{"f_12580ChickenBridge.scm",(void*)f_12580},
{"f_12596ChickenBridge.scm",(void*)f_12596},
{"f_12599ChickenBridge.scm",(void*)f_12599},
{"f_12097ChickenBridge.scm",(void*)f_12097},
{"f_12561ChickenBridge.scm",(void*)f_12561},
{"f_12101ChickenBridge.scm",(void*)f_12101},
{"f_12533ChickenBridge.scm",(void*)f_12533},
{"f_12548ChickenBridge.scm",(void*)f_12548},
{"f_12540ChickenBridge.scm",(void*)f_12540},
{"f_12504ChickenBridge.scm",(void*)f_12504},
{"f_12508ChickenBridge.scm",(void*)f_12508},
{"f_12469ChickenBridge.scm",(void*)f_12469},
{"f_12473ChickenBridge.scm",(void*)f_12473},
{"f_12434ChickenBridge.scm",(void*)f_12434},
{"f_12438ChickenBridge.scm",(void*)f_12438},
{"f_12104ChickenBridge.scm",(void*)f_12104},
{"f_12398ChickenBridge.scm",(void*)f_12398},
{"f_12413ChickenBridge.scm",(void*)f_12413},
{"f_12405ChickenBridge.scm",(void*)f_12405},
{"f_12369ChickenBridge.scm",(void*)f_12369},
{"f_12373ChickenBridge.scm",(void*)f_12373},
{"f_12334ChickenBridge.scm",(void*)f_12334},
{"f_12338ChickenBridge.scm",(void*)f_12338},
{"f_12299ChickenBridge.scm",(void*)f_12299},
{"f_12303ChickenBridge.scm",(void*)f_12303},
{"f_12107ChickenBridge.scm",(void*)f_12107},
{"f_12263ChickenBridge.scm",(void*)f_12263},
{"f_12278ChickenBridge.scm",(void*)f_12278},
{"f_12270ChickenBridge.scm",(void*)f_12270},
{"f_12234ChickenBridge.scm",(void*)f_12234},
{"f_12238ChickenBridge.scm",(void*)f_12238},
{"f_12199ChickenBridge.scm",(void*)f_12199},
{"f_12203ChickenBridge.scm",(void*)f_12203},
{"f_12164ChickenBridge.scm",(void*)f_12164},
{"f_12168ChickenBridge.scm",(void*)f_12168},
{"f_12110ChickenBridge.scm",(void*)f_12110},
{"f_12113ChickenBridge.scm",(void*)f_12113},
{"f_12116ChickenBridge.scm",(void*)f_12116},
{"f_12131ChickenBridge.scm",(void*)f_12131},
{"f_12143ChickenBridge.scm",(void*)f_12143},
{"f_12122ChickenBridge.scm",(void*)f_12122},
{"f_12125ChickenBridge.scm",(void*)f_12125},
{"f_12021ChickenBridge.scm",(void*)f_12021},
{"f_12025ChickenBridge.scm",(void*)f_12025},
{"f_12044ChickenBridge.scm",(void*)f_12044},
{"f_12054ChickenBridge.scm",(void*)f_12054},
{"f_12056ChickenBridge.scm",(void*)f_12056},
{"f_12073ChickenBridge.scm",(void*)f_12073},
{"f_12076ChickenBridge.scm",(void*)f_12076},
{"f_12087ChickenBridge.scm",(void*)f_12087},
{"f_12028ChickenBridge.scm",(void*)f_12028},
{"f_11758ChickenBridge.scm",(void*)f_11758},
{"f_12011ChickenBridge.scm",(void*)f_12011},
{"f_11762ChickenBridge.scm",(void*)f_11762},
{"f_11983ChickenBridge.scm",(void*)f_11983},
{"f_11998ChickenBridge.scm",(void*)f_11998},
{"f_11990ChickenBridge.scm",(void*)f_11990},
{"f_11954ChickenBridge.scm",(void*)f_11954},
{"f_11958ChickenBridge.scm",(void*)f_11958},
{"f_11919ChickenBridge.scm",(void*)f_11919},
{"f_11923ChickenBridge.scm",(void*)f_11923},
{"f_11765ChickenBridge.scm",(void*)f_11765},
{"f_11883ChickenBridge.scm",(void*)f_11883},
{"f_11898ChickenBridge.scm",(void*)f_11898},
{"f_11890ChickenBridge.scm",(void*)f_11890},
{"f_11854ChickenBridge.scm",(void*)f_11854},
{"f_11858ChickenBridge.scm",(void*)f_11858},
{"f_11819ChickenBridge.scm",(void*)f_11819},
{"f_11823ChickenBridge.scm",(void*)f_11823},
{"f_11768ChickenBridge.scm",(void*)f_11768},
{"f_11771ChickenBridge.scm",(void*)f_11771},
{"f_11774ChickenBridge.scm",(void*)f_11774},
{"f_11786ChickenBridge.scm",(void*)f_11786},
{"f_11798ChickenBridge.scm",(void*)f_11798},
{"f_11780ChickenBridge.scm",(void*)f_11780},
{"f_11722ChickenBridge.scm",(void*)f_11722},
{"f_11726ChickenBridge.scm",(void*)f_11726},
{"f_11748ChickenBridge.scm",(void*)f_11748},
{"f_11742ChickenBridge.scm",(void*)f_11742},
{"f_11735ChickenBridge.scm",(void*)f_11735},
{"f_11475ChickenBridge.scm",(void*)f_11475},
{"f_11479ChickenBridge.scm",(void*)f_11479},
{"f_11692ChickenBridge.scm",(void*)f_11692},
{"f_11707ChickenBridge.scm",(void*)f_11707},
{"f_11699ChickenBridge.scm",(void*)f_11699},
{"f_11663ChickenBridge.scm",(void*)f_11663},
{"f_11667ChickenBridge.scm",(void*)f_11667},
{"f_11628ChickenBridge.scm",(void*)f_11628},
{"f_11632ChickenBridge.scm",(void*)f_11632},
{"f_11482ChickenBridge.scm",(void*)f_11482},
{"f_11592ChickenBridge.scm",(void*)f_11592},
{"f_11607ChickenBridge.scm",(void*)f_11607},
{"f_11599ChickenBridge.scm",(void*)f_11599},
{"f_11563ChickenBridge.scm",(void*)f_11563},
{"f_11567ChickenBridge.scm",(void*)f_11567},
{"f_11528ChickenBridge.scm",(void*)f_11528},
{"f_11532ChickenBridge.scm",(void*)f_11532},
{"f_11485ChickenBridge.scm",(void*)f_11485},
{"f_11488ChickenBridge.scm",(void*)f_11488},
{"f_11491ChickenBridge.scm",(void*)f_11491},
{"f_11499ChickenBridge.scm",(void*)f_11499},
{"f_11507ChickenBridge.scm",(void*)f_11507},
{"f_11497ChickenBridge.scm",(void*)f_11497},
{"f_11260ChickenBridge.scm",(void*)f_11260},
{"f_11264ChickenBridge.scm",(void*)f_11264},
{"f_11473ChickenBridge.scm",(void*)f_11473},
{"f_11426ChickenBridge.scm",(void*)f_11426},
{"f_11438ChickenBridge.scm",(void*)f_11438},
{"f_11294ChickenBridge.scm",(void*)f_11294},
{"f_11297ChickenBridge.scm",(void*)f_11297},
{"f_11303ChickenBridge.scm",(void*)f_11303},
{"f_11306ChickenBridge.scm",(void*)f_11306},
{"f_11394ChickenBridge.scm",(void*)f_11394},
{"f_11309ChickenBridge.scm",(void*)f_11309},
{"f_11388ChickenBridge.scm",(void*)f_11388},
{"f_11315ChickenBridge.scm",(void*)f_11315},
{"f_11318ChickenBridge.scm",(void*)f_11318},
{"f_11270ChickenBridge.scm",(void*)f_11270},
{"f_11273ChickenBridge.scm",(void*)f_11273},
{"f_11280ChickenBridge.scm",(void*)f_11280},
{"f_10790ChickenBridge.scm",(void*)f_10790},
{"f_10794ChickenBridge.scm",(void*)f_10794},
{"f_11230ChickenBridge.scm",(void*)f_11230},
{"f_11245ChickenBridge.scm",(void*)f_11245},
{"f_11237ChickenBridge.scm",(void*)f_11237},
{"f_11201ChickenBridge.scm",(void*)f_11201},
{"f_11205ChickenBridge.scm",(void*)f_11205},
{"f_11166ChickenBridge.scm",(void*)f_11166},
{"f_11170ChickenBridge.scm",(void*)f_11170},
{"f_11131ChickenBridge.scm",(void*)f_11131},
{"f_11135ChickenBridge.scm",(void*)f_11135},
{"f_10797ChickenBridge.scm",(void*)f_10797},
{"f_11095ChickenBridge.scm",(void*)f_11095},
{"f_11110ChickenBridge.scm",(void*)f_11110},
{"f_11102ChickenBridge.scm",(void*)f_11102},
{"f_11066ChickenBridge.scm",(void*)f_11066},
{"f_11070ChickenBridge.scm",(void*)f_11070},
{"f_11031ChickenBridge.scm",(void*)f_11031},
{"f_11035ChickenBridge.scm",(void*)f_11035},
{"f_10996ChickenBridge.scm",(void*)f_10996},
{"f_11000ChickenBridge.scm",(void*)f_11000},
{"f_10800ChickenBridge.scm",(void*)f_10800},
{"f_10960ChickenBridge.scm",(void*)f_10960},
{"f_10975ChickenBridge.scm",(void*)f_10975},
{"f_10967ChickenBridge.scm",(void*)f_10967},
{"f_10931ChickenBridge.scm",(void*)f_10931},
{"f_10935ChickenBridge.scm",(void*)f_10935},
{"f_10896ChickenBridge.scm",(void*)f_10896},
{"f_10900ChickenBridge.scm",(void*)f_10900},
{"f_10861ChickenBridge.scm",(void*)f_10861},
{"f_10865ChickenBridge.scm",(void*)f_10865},
{"f_10803ChickenBridge.scm",(void*)f_10803},
{"f_10806ChickenBridge.scm",(void*)f_10806},
{"f_10809ChickenBridge.scm",(void*)f_10809},
{"f_10832ChickenBridge.scm",(void*)f_10832},
{"f_10840ChickenBridge.scm",(void*)f_10840},
{"f_10815ChickenBridge.scm",(void*)f_10815},
{"f_10818ChickenBridge.scm",(void*)f_10818},
{"f_10710ChickenBridge.scm",(void*)f_10710},
{"f_10701ChickenBridge.scm",(void*)f_10701},
{"f_10629ChickenBridge.scm",(void*)f_10629},
{"f_10633ChickenBridge.scm",(void*)f_10633},
{"f_10636ChickenBridge.scm",(void*)f_10636},
{"f_10374ChickenBridge.scm",(void*)f_10374},
{"f_10378ChickenBridge.scm",(void*)f_10378},
{"f_10599ChickenBridge.scm",(void*)f_10599},
{"f_10614ChickenBridge.scm",(void*)f_10614},
{"f_10606ChickenBridge.scm",(void*)f_10606},
{"f_10570ChickenBridge.scm",(void*)f_10570},
{"f_10574ChickenBridge.scm",(void*)f_10574},
{"f_10535ChickenBridge.scm",(void*)f_10535},
{"f_10539ChickenBridge.scm",(void*)f_10539},
{"f_10381ChickenBridge.scm",(void*)f_10381},
{"f_10499ChickenBridge.scm",(void*)f_10499},
{"f_10514ChickenBridge.scm",(void*)f_10514},
{"f_10506ChickenBridge.scm",(void*)f_10506},
{"f_10470ChickenBridge.scm",(void*)f_10470},
{"f_10474ChickenBridge.scm",(void*)f_10474},
{"f_10435ChickenBridge.scm",(void*)f_10435},
{"f_10439ChickenBridge.scm",(void*)f_10439},
{"f_10384ChickenBridge.scm",(void*)f_10384},
{"f_10387ChickenBridge.scm",(void*)f_10387},
{"f_10390ChickenBridge.scm",(void*)f_10390},
{"f_10402ChickenBridge.scm",(void*)f_10402},
{"f_10414ChickenBridge.scm",(void*)f_10414},
{"f_10396ChickenBridge.scm",(void*)f_10396},
{"f_10259ChickenBridge.scm",(void*)f_10259},
{"f_10372ChickenBridge.scm",(void*)f_10372},
{"f_10269ChickenBridge.scm",(void*)f_10269},
{"f_10357ChickenBridge.scm",(void*)f_10357},
{"f_10368ChickenBridge.scm",(void*)f_10368},
{"f_10364ChickenBridge.scm",(void*)f_10364},
{"f_10272ChickenBridge.scm",(void*)f_10272},
{"f_10354ChickenBridge.scm",(void*)f_10354},
{"f_10280ChickenBridge.scm",(void*)f_10280},
{"f_10344ChickenBridge.scm",(void*)f_10344},
{"f_10289ChickenBridge.scm",(void*)f_10289},
{"f_10308ChickenBridge.scm",(void*)f_10308},
{"f_10337ChickenBridge.scm",(void*)f_10337},
{"f_10318ChickenBridge.scm",(void*)f_10318},
{"f_10333ChickenBridge.scm",(void*)f_10333},
{"f_10321ChickenBridge.scm",(void*)f_10321},
{"f_10292ChickenBridge.scm",(void*)f_10292},
{"f_10302ChickenBridge.scm",(void*)f_10302},
{"f_10283ChickenBridge.scm",(void*)f_10283},
{"f_10286ChickenBridge.scm",(void*)f_10286},
{"f_10213ChickenBridge.scm",(void*)f_10213},
{"f_10204ChickenBridge.scm",(void*)f_10204},
{"f_9903ChickenBridge.scm",(void*)f_9903},
{"f_9910ChickenBridge.scm",(void*)f_9910},
{"f_10199ChickenBridge.scm",(void*)f_10199},
{"f_9913ChickenBridge.scm",(void*)f_9913},
{"f_10184ChickenBridge.scm",(void*)f_10184},
{"f_10176ChickenBridge.scm",(void*)f_10176},
{"f_10168ChickenBridge.scm",(void*)f_10168},
{"f_10171ChickenBridge.scm",(void*)f_10171},
{"f_10139ChickenBridge.scm",(void*)f_10139},
{"f_10162ChickenBridge.scm",(void*)f_10162},
{"f_10145ChickenBridge.scm",(void*)f_10145},
{"f_10149ChickenBridge.scm",(void*)f_10149},
{"f_9916ChickenBridge.scm",(void*)f_9916},
{"f_9922ChickenBridge.scm",(void*)f_9922},
{"f_10014ChickenBridge.scm",(void*)f_10014},
{"f_10126ChickenBridge.scm",(void*)f_10126},
{"f_10133ChickenBridge.scm",(void*)f_10133},
{"f_10037ChickenBridge.scm",(void*)f_10037},
{"f_10039ChickenBridge.scm",(void*)f_10039},
{"f_10088ChickenBridge.scm",(void*)f_10088},
{"f_10123ChickenBridge.scm",(void*)f_10123},
{"f_10112ChickenBridge.scm",(void*)f_10112},
{"f_10257ChickenBridge.scm",(void*)f_10257},
{"f_10232ChickenBridge.scm",(void*)f_10232},
{"f_10253ChickenBridge.scm",(void*)f_10253},
{"f_10249ChickenBridge.scm",(void*)f_10249},
{"f_10241ChickenBridge.scm",(void*)f_10241},
{"f_10105ChickenBridge.scm",(void*)f_10105},
{"f_10098ChickenBridge.scm",(void*)f_10098},
{"f_10046ChickenBridge.scm",(void*)f_10046},
{"f_10086ChickenBridge.scm",(void*)f_10086},
{"f_10050ChickenBridge.scm",(void*)f_10050},
{"f_10082ChickenBridge.scm",(void*)f_10082},
{"f_10069ChickenBridge.scm",(void*)f_10069},
{"f_10077ChickenBridge.scm",(void*)f_10077},
{"f_10073ChickenBridge.scm",(void*)f_10073},
{"f_10053ChickenBridge.scm",(void*)f_10053},
{"f_10056ChickenBridge.scm",(void*)f_10056},
{"f_10030ChickenBridge.scm",(void*)f_10030},
{"f_10017ChickenBridge.scm",(void*)f_10017},
{"f_10026ChickenBridge.scm",(void*)f_10026},
{"f_10021ChickenBridge.scm",(void*)f_10021},
{"f_9928ChickenBridge.scm",(void*)f_9928},
{"f_10008ChickenBridge.scm",(void*)f_10008},
{"f_9988ChickenBridge.scm",(void*)f_9988},
{"f_9994ChickenBridge.scm",(void*)f_9994},
{"f_10005ChickenBridge.scm",(void*)f_10005},
{"f_9985ChickenBridge.scm",(void*)f_9985},
{"f_9973ChickenBridge.scm",(void*)f_9973},
{"f_9976ChickenBridge.scm",(void*)f_9976},
{"f_9931ChickenBridge.scm",(void*)f_9931},
{"f_9967ChickenBridge.scm",(void*)f_9967},
{"f_9962ChickenBridge.scm",(void*)f_9962},
{"f_9934ChickenBridge.scm",(void*)f_9934},
{"f_9947ChickenBridge.scm",(void*)f_9947},
{"f_9937ChickenBridge.scm",(void*)f_9937},
{"f_9940ChickenBridge.scm",(void*)f_9940},
{"f_9943ChickenBridge.scm",(void*)f_9943},
{"f_9780ChickenBridge.scm",(void*)f_9780},
{"f_9839ChickenBridge.scm",(void*)f_9839},
{"f_9849ChickenBridge.scm",(void*)f_9849},
{"f_9851ChickenBridge.scm",(void*)f_9851},
{"f_9880ChickenBridge.scm",(void*)f_9880},
{"f_9885ChickenBridge.scm",(void*)f_9885},
{"f_9870ChickenBridge.scm",(void*)f_9870},
{"f_9801ChickenBridge.scm",(void*)f_9801},
{"f_9833ChickenBridge.scm",(void*)f_9833},
{"f_9761ChickenBridge.scm",(void*)f_9761},
{"f_9768ChickenBridge.scm",(void*)f_9768},
{"f_9775ChickenBridge.scm",(void*)f_9775},
{"f_9742ChickenBridge.scm",(void*)f_9742},
{"f_9749ChickenBridge.scm",(void*)f_9749},
{"f_9756ChickenBridge.scm",(void*)f_9756},
{"f_9562ChickenBridge.scm",(void*)f_9562},
{"f_9566ChickenBridge.scm",(void*)f_9566},
{"f_9569ChickenBridge.scm",(void*)f_9569},
{"f_9572ChickenBridge.scm",(void*)f_9572},
{"f_9575ChickenBridge.scm",(void*)f_9575},
{"f_9732ChickenBridge.scm",(void*)f_9732},
{"f_9739ChickenBridge.scm",(void*)f_9739},
{"f_9578ChickenBridge.scm",(void*)f_9578},
{"f_9581ChickenBridge.scm",(void*)f_9581},
{"f_9587ChickenBridge.scm",(void*)f_9587},
{"f_9593ChickenBridge.scm",(void*)f_9593},
{"f_9656ChickenBridge.scm",(void*)f_9656},
{"f_9670ChickenBridge.scm",(void*)f_9670},
{"f_9596ChickenBridge.scm",(void*)f_9596},
{"f_9599ChickenBridge.scm",(void*)f_9599},
{"f_9605ChickenBridge.scm",(void*)f_9605},
{"f_9618ChickenBridge.scm",(void*)f_9618},
{"f_9608ChickenBridge.scm",(void*)f_9608},
{"f_9611ChickenBridge.scm",(void*)f_9611},
{"f_9552ChickenBridge.scm",(void*)f_9552},
{"f_9497ChickenBridge.scm",(void*)f_9497},
{"f_9488ChickenBridge.scm",(void*)f_9488},
{"f_9371ChickenBridge.scm",(void*)f_9371},
{"f_9362ChickenBridge.scm",(void*)f_9362},
{"f_9353ChickenBridge.scm",(void*)f_9353},
{"f_9344ChickenBridge.scm",(void*)f_9344},
{"f_9335ChickenBridge.scm",(void*)f_9335},
{"f_9317ChickenBridge.scm",(void*)f_9317},
{"f_9308ChickenBridge.scm",(void*)f_9308},
{"f_9299ChickenBridge.scm",(void*)f_9299},
{"f_9281ChickenBridge.scm",(void*)f_9281},
{"f_9272ChickenBridge.scm",(void*)f_9272},
{"f_9263ChickenBridge.scm",(void*)f_9263},
{"f_9248ChickenBridge.scm",(void*)f_9248},
{"f_9203ChickenBridge.scm",(void*)f_9203},
{"f_9185ChickenBridge.scm",(void*)f_9185},
{"f_9176ChickenBridge.scm",(void*)f_9176},
{"f_9149ChickenBridge.scm",(void*)f_9149},
{"f_9131ChickenBridge.scm",(void*)f_9131},
{"f_9113ChickenBridge.scm",(void*)f_9113},
{"f_9104ChickenBridge.scm",(void*)f_9104},
{"f_9092ChickenBridge.scm",(void*)f_9092},
{"f_8784ChickenBridge.scm",(void*)f_8784},
{"f_8885ChickenBridge.scm",(void*)f_8885},
{"f_8934ChickenBridge.scm",(void*)f_8934},
{"f_8930ChickenBridge.scm",(void*)f_8930},
{"f_8902ChickenBridge.scm",(void*)f_8902},
{"f_8837ChickenBridge.scm",(void*)f_8837},
{"f_8846ChickenBridge.scm",(void*)f_8846},
{"f_8830ChickenBridge.scm",(void*)f_8830},
{"f_8649ChickenBridge.scm",(void*)f_8649},
{"f_8775ChickenBridge.scm",(void*)f_8775},
{"f_8771ChickenBridge.scm",(void*)f_8771},
{"f_8749ChickenBridge.scm",(void*)f_8749},
{"f_8679ChickenBridge.scm",(void*)f_8679},
{"f_8695ChickenBridge.scm",(void*)f_8695},
{"f_8604ChickenBridge.scm",(void*)f_8604},
{"f_8647ChickenBridge.scm",(void*)f_8647},
{"f_8636ChickenBridge.scm",(void*)f_8636},
{"f_8488ChickenBridge.scm",(void*)f_8488},
{"f_8602ChickenBridge.scm",(void*)f_8602},
{"f_8503ChickenBridge.scm",(void*)f_8503},
{"f_8533ChickenBridge.scm",(void*)f_8533},
{"f_8552ChickenBridge.scm",(void*)f_8552},
{"f_8537ChickenBridge.scm",(void*)f_8537},
{"f_8516ChickenBridge.scm",(void*)f_8516},
{"f_8366ChickenBridge.scm",(void*)f_8366},
{"f_8486ChickenBridge.scm",(void*)f_8486},
{"f_8381ChickenBridge.scm",(void*)f_8381},
{"f_8411ChickenBridge.scm",(void*)f_8411},
{"f_8430ChickenBridge.scm",(void*)f_8430},
{"f_8415ChickenBridge.scm",(void*)f_8415},
{"f_8394ChickenBridge.scm",(void*)f_8394},
{"f_8269ChickenBridge.scm",(void*)f_8269},
{"f_8364ChickenBridge.scm",(void*)f_8364},
{"f_8284ChickenBridge.scm",(void*)f_8284},
{"f_8330ChickenBridge.scm",(void*)f_8330},
{"f_8315ChickenBridge.scm",(void*)f_8315},
{"f_8297ChickenBridge.scm",(void*)f_8297},
{"f_8216ChickenBridge.scm",(void*)f_8216},
{"f_8254ChickenBridge.scm",(void*)f_8254},
{"f_8261ChickenBridge.scm",(void*)f_8261},
{"f_8239ChickenBridge.scm",(void*)f_8239},
{"f_8214ChickenBridge.scm",(void*)f_8214},
{"f_8186ChickenBridge.scm",(void*)f_8186},
{"f_8188ChickenBridge.scm",(void*)f_8188},
{"f_8166ChickenBridge.scm",(void*)f_8166},
{"f_8114ChickenBridge.scm",(void*)f_8114},
{"f_8151ChickenBridge.scm",(void*)f_8151},
{"f_8118ChickenBridge.scm",(void*)f_8118},
{"f_8134ChickenBridge.scm",(void*)f_8134},
{"f_8136ChickenBridge.scm",(void*)f_8136},
{"f_8086ChickenBridge.scm",(void*)f_8086},
{"f_8067ChickenBridge.scm",(void*)f_8067},
{"f_8026ChickenBridge.scm",(void*)f_8026},
{"f_8007ChickenBridge.scm",(void*)f_8007},
{"f_7779ChickenBridge.scm",(void*)f_7779},
{"f_7984ChickenBridge.scm",(void*)f_7984},
{"f_7999ChickenBridge.scm",(void*)f_7999},
{"f_7991ChickenBridge.scm",(void*)f_7991},
{"f_7955ChickenBridge.scm",(void*)f_7955},
{"f_7959ChickenBridge.scm",(void*)f_7959},
{"f_7920ChickenBridge.scm",(void*)f_7920},
{"f_7924ChickenBridge.scm",(void*)f_7924},
{"f_7783ChickenBridge.scm",(void*)f_7783},
{"f_7884ChickenBridge.scm",(void*)f_7884},
{"f_7899ChickenBridge.scm",(void*)f_7899},
{"f_7891ChickenBridge.scm",(void*)f_7891},
{"f_7855ChickenBridge.scm",(void*)f_7855},
{"f_7859ChickenBridge.scm",(void*)f_7859},
{"f_7820ChickenBridge.scm",(void*)f_7820},
{"f_7824ChickenBridge.scm",(void*)f_7824},
{"f_7786ChickenBridge.scm",(void*)f_7786},
{"f_7789ChickenBridge.scm",(void*)f_7789},
{"f_7792ChickenBridge.scm",(void*)f_7792},
{"f_7548ChickenBridge.scm",(void*)f_7548},
{"f_7753ChickenBridge.scm",(void*)f_7753},
{"f_7768ChickenBridge.scm",(void*)f_7768},
{"f_7760ChickenBridge.scm",(void*)f_7760},
{"f_7724ChickenBridge.scm",(void*)f_7724},
{"f_7728ChickenBridge.scm",(void*)f_7728},
{"f_7689ChickenBridge.scm",(void*)f_7689},
{"f_7693ChickenBridge.scm",(void*)f_7693},
{"f_7552ChickenBridge.scm",(void*)f_7552},
{"f_7653ChickenBridge.scm",(void*)f_7653},
{"f_7668ChickenBridge.scm",(void*)f_7668},
{"f_7660ChickenBridge.scm",(void*)f_7660},
{"f_7624ChickenBridge.scm",(void*)f_7624},
{"f_7628ChickenBridge.scm",(void*)f_7628},
{"f_7589ChickenBridge.scm",(void*)f_7589},
{"f_7593ChickenBridge.scm",(void*)f_7593},
{"f_7555ChickenBridge.scm",(void*)f_7555},
{"f_7558ChickenBridge.scm",(void*)f_7558},
{"f_7568ChickenBridge.scm",(void*)f_7568},
{"f_7505ChickenBridge.scm",(void*)f_7505},
{"f_7538ChickenBridge.scm",(void*)f_7538},
{"f_7523ChickenBridge.scm",(void*)f_7523},
{"f_7484ChickenBridge.scm",(void*)f_7484},
{"f_7453ChickenBridge.scm",(void*)f_7453},
{"f_7457ChickenBridge.scm",(void*)f_7457},
{"f_7379ChickenBridge.scm",(void*)f_7379},
{"f_7386ChickenBridge.scm",(void*)f_7386},
{"f_7395ChickenBridge.scm",(void*)f_7395},
{"f_7431ChickenBridge.scm",(void*)f_7431},
{"f_7352ChickenBridge.scm",(void*)f_7352},
{"f_7257ChickenBridge.scm",(void*)f_7257},
{"f_7261ChickenBridge.scm",(void*)f_7261},
{"f_7264ChickenBridge.scm",(void*)f_7264},
{"f_7276ChickenBridge.scm",(void*)f_7276},
{"f_7298ChickenBridge.scm",(void*)f_7298},
{"f_7242ChickenBridge.scm",(void*)f_7242},
{"f_7227ChickenBridge.scm",(void*)f_7227},
{"f_6991ChickenBridge.scm",(void*)f_6991},
{"f_7204ChickenBridge.scm",(void*)f_7204},
{"f_7219ChickenBridge.scm",(void*)f_7219},
{"f_7211ChickenBridge.scm",(void*)f_7211},
{"f_7175ChickenBridge.scm",(void*)f_7175},
{"f_7179ChickenBridge.scm",(void*)f_7179},
{"f_7140ChickenBridge.scm",(void*)f_7140},
{"f_7144ChickenBridge.scm",(void*)f_7144},
{"f_6995ChickenBridge.scm",(void*)f_6995},
{"f_7104ChickenBridge.scm",(void*)f_7104},
{"f_7119ChickenBridge.scm",(void*)f_7119},
{"f_7111ChickenBridge.scm",(void*)f_7111},
{"f_7075ChickenBridge.scm",(void*)f_7075},
{"f_7079ChickenBridge.scm",(void*)f_7079},
{"f_7040ChickenBridge.scm",(void*)f_7040},
{"f_7044ChickenBridge.scm",(void*)f_7044},
{"f_6998ChickenBridge.scm",(void*)f_6998},
{"f_7001ChickenBridge.scm",(void*)f_7001},
{"f_7012ChickenBridge.scm",(void*)f_7012},
{"f_6972ChickenBridge.scm",(void*)f_6972},
{"f_6951ChickenBridge.scm",(void*)f_6951},
{"f_6963ChickenBridge.scm",(void*)f_6963},
{"f_6925ChickenBridge.scm",(void*)f_6925},
{"f_6883ChickenBridge.scm",(void*)f_6883},
{"f_6868ChickenBridge.scm",(void*)f_6868},
{"f_6757ChickenBridge.scm",(void*)f_6757},
{"f_6832ChickenBridge.scm",(void*)f_6832},
{"f_6761ChickenBridge.scm",(void*)f_6761},
{"f_6801ChickenBridge.scm",(void*)f_6801},
{"f_6790ChickenBridge.scm",(void*)f_6790},
{"f_6775ChickenBridge.scm",(void*)f_6775},
{"f_6783ChickenBridge.scm",(void*)f_6783},
{"f_6723ChickenBridge.scm",(void*)f_6723},
{"f_6735ChickenBridge.scm",(void*)f_6735},
{"f_6720ChickenBridge.scm",(void*)f_6720},
{"f_6717ChickenBridge.scm",(void*)f_6717},
{"f_6710ChickenBridge.scm",(void*)f_6710},
{"f_6707ChickenBridge.scm",(void*)f_6707},
{"f_6700ChickenBridge.scm",(void*)f_6700},
{"f_6682ChickenBridge.scm",(void*)f_6682},
{"f_6671ChickenBridge.scm",(void*)f_6671},
{"f_6668ChickenBridge.scm",(void*)f_6668},
{"f_6665ChickenBridge.scm",(void*)f_6665},
{"f_6662ChickenBridge.scm",(void*)f_6662},
{"f_6633ChickenBridge.scm",(void*)f_6633},
{"f_6626ChickenBridge.scm",(void*)f_6626},
{"f_6623ChickenBridge.scm",(void*)f_6623},
{"f_6602ChickenBridge.scm",(void*)f_6602},
{"f_6595ChickenBridge.scm",(void*)f_6595},
{"f_6588ChickenBridge.scm",(void*)f_6588},
{"f_6573ChickenBridge.scm",(void*)f_6573},
{"f_6562ChickenBridge.scm",(void*)f_6562},
{"f_6551ChickenBridge.scm",(void*)f_6551},
{"f_6544ChickenBridge.scm",(void*)f_6544},
{"f_6517ChickenBridge.scm",(void*)f_6517},
{"f_6490ChickenBridge.scm",(void*)f_6490},
{"f_6449ChickenBridge.scm",(void*)f_6449},
{"f_6455ChickenBridge.scm",(void*)f_6455},
{"f_6465ChickenBridge.scm",(void*)f_6465},
{"f_6363ChickenBridge.scm",(void*)f_6363},
{"f_6268ChickenBridge.scm",(void*)f_6268},
{"f_6272ChickenBridge.scm",(void*)f_6272},
{"f_6297ChickenBridge.scm",(void*)f_6297},
{"f_6314ChickenBridge.scm",(void*)f_6314},
{"f_6318ChickenBridge.scm",(void*)f_6318},
{"f_6274ChickenBridge.scm",(void*)f_6274},
{"f_6291ChickenBridge.scm",(void*)f_6291},
{"f_6258ChickenBridge.scm",(void*)f_6258},
{"f_6218ChickenBridge.scm",(void*)f_6218},
{"f_6248ChickenBridge.scm",(void*)f_6248},
{"f_6080ChickenBridge.scm",(void*)f_6080},
{"f_6114ChickenBridge.scm",(void*)f_6114},
{"f_6057ChickenBridge.scm",(void*)f_6057},
{"f_6051ChickenBridge.scm",(void*)f_6051},
{"f_6036ChickenBridge.scm",(void*)f_6036},
{"f_6022ChickenBridge.scm",(void*)f_6022},
{"f_6012ChickenBridge.scm",(void*)f_6012},
{"f_6002ChickenBridge.scm",(void*)f_6002},
{"f_5992ChickenBridge.scm",(void*)f_5992},
{"f_5982ChickenBridge.scm",(void*)f_5982},
{"f_5953ChickenBridge.scm",(void*)f_5953},
{"f_5962ChickenBridge.scm",(void*)f_5962},
{"f_5967ChickenBridge.scm",(void*)f_5967},
{"f_5942ChickenBridge.scm",(void*)f_5942},
{"f_5947ChickenBridge.scm",(void*)f_5947},
{"f_5649ChickenBridge.scm",(void*)f_5649},
{"f_5659ChickenBridge.scm",(void*)f_5659},
{"f_5910ChickenBridge.scm",(void*)f_5910},
{"f_5662ChickenBridge.scm",(void*)f_5662},
{"f_5665ChickenBridge.scm",(void*)f_5665},
{"f_5680ChickenBridge.scm",(void*)f_5680},
{"f_5690ChickenBridge.scm",(void*)f_5690},
{"f_5692ChickenBridge.scm",(void*)f_5692},
{"f_5751ChickenBridge.scm",(void*)f_5751},
{"f_5761ChickenBridge.scm",(void*)f_5761},
{"f_5878ChickenBridge.scm",(void*)f_5878},
{"f_5866ChickenBridge.scm",(void*)f_5866},
{"f_5864ChickenBridge.scm",(void*)f_5864},
{"f_5851ChickenBridge.scm",(void*)f_5851},
{"f_5805ChickenBridge.scm",(void*)f_5805},
{"f_5832ChickenBridge.scm",(void*)f_5832},
{"f_5811ChickenBridge.scm",(void*)f_5811},
{"f_5745ChickenBridge.scm",(void*)f_5745},
{"f_5704ChickenBridge.scm",(void*)f_5704},
{"f_5717ChickenBridge.scm",(void*)f_5717},
{"f_5927ChickenBridge.scm",(void*)f_5927},
{"f_5918ChickenBridge.scm",(void*)f_5918},
{"f_5926ChickenBridge.scm",(void*)f_5926},
{"f_5929ChickenBridge.scm",(void*)f_5929},
{"f_5937ChickenBridge.scm",(void*)f_5937},
{"f_5351ChickenBridge.scm",(void*)f_5351},
{"f_5604ChickenBridge.scm",(void*)f_5604},
{"f_5637ChickenBridge.scm",(void*)f_5637},
{"f_5633ChickenBridge.scm",(void*)f_5633},
{"f_5622ChickenBridge.scm",(void*)f_5622},
{"f_5618ChickenBridge.scm",(void*)f_5618},
{"f_5512ChickenBridge.scm",(void*)f_5512},
{"f_5515ChickenBridge.scm",(void*)f_5515},
{"f_5518ChickenBridge.scm",(void*)f_5518},
{"f_5598ChickenBridge.scm",(void*)f_5598},
{"f_5423ChickenBridge.scm",(void*)f_5423},
{"f_5364ChickenBridge.scm",(void*)f_5364},
{"f_5521ChickenBridge.scm",(void*)f_5521},
{"f_5528ChickenBridge.scm",(void*)f_5528},
{"f_5588ChickenBridge.scm",(void*)f_5588},
{"f_5574ChickenBridge.scm",(void*)f_5574},
{"f_5540ChickenBridge.scm",(void*)f_5540},
{"f_5566ChickenBridge.scm",(void*)f_5566},
{"f_5501ChickenBridge.scm",(void*)f_5501},
{"f_5548ChickenBridge.scm",(void*)f_5548},
{"f_5544ChickenBridge.scm",(void*)f_5544},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
