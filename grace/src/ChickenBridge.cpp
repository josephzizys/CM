/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-24 06:07
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[821];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,52,57,54,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,53,49,56,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,53,50,56,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,53,51,52,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,56,54,48,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,56,52,57,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,56,53,56,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,55,57,54,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,56,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,56,55,56,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,53,56,57,51,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,48,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,49,48,32,112,111,115,49,49,49,32,118,97,108,49,49,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,109,107,32,97,49,49,55,32,98,49,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,49,52,32,46,32,111,98,106,49,49,53,41,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,50,48,32,112,114,111,112,49,50,49,32,46,32,100,101,102,49,50,50,41,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,12),40,100,111,49,50,56,32,102,49,51,48,41,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,50,54,32,98,49,50,55,41};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,53,54,49,53,57,32,97,49,53,53,49,54,48,32,97,49,53,52,49,54,49,32,97,49,53,51,49,54,50,32,97,49,53,50,49,54,51,32,97,49,53,49,49,54,52,41,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,55,49,49,55,52,32,97,49,55,48,49,55,53,32,97,49,54,57,49,55,54,32,97,49,54,56,49,55,55,32,97,49,54,55,49,55,56,32,97,49,54,54,49,55,57,41,0,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,49,56,53,49,56,56,32,97,49,56,52,49,56,57,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,49,57,50,49,57,53,32,97,49,57,49,49,57,54,41,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,48,55,50,49,48,41,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,49,50,50,49,53,41,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,49,54,50,49,57,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,51,52,50,51,55,41,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,51,56,50,52,49,41,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,54,54,50,54,57,32,97,50,54,53,50,55,48,41,0,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,55,50,50,55,53,41,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,50,56,52,50,56,55,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,50,57,50,50,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,12),40,97,54,53,50,56,32,122,51,48,56,41,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,48,50,32,120,49,51,48,51,32,120,50,51,48,52,32,121,49,51,48,53,32,121,50,51,48,54,32,46,32,98,51,48,55,41,0,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,48,57,32,120,49,51,49,48,32,120,50,51,49,49,32,105,49,51,49,50,32,46,32,97,114,103,115,51,49,51,41,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,49,52,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,12),40,97,54,54,53,57,32,110,51,49,55,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,49,53,32,115,116,101,112,115,51,49,54,41,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,49,56,32,46,32,100,105,103,105,116,115,51,49,57,41,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,26),40,98,111,100,121,51,50,52,32,116,101,109,112,111,51,51,48,32,98,101,97,116,51,51,49,41,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,26),40,100,101,102,45,98,101,97,116,51,50,55,32,37,116,101,109,112,111,51,50,50,51,51,51,41,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,14),40,100,101,102,45,116,101,109,112,111,51,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,50,48,32,46,32,97,114,103,115,51,50,49,41,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,51,52,48,41};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,51,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,15),40,100,111,51,53,48,32,116,97,105,108,51,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,52,50,32,99,111,111,114,100,115,51,52,51,32,46,32,98,97,115,101,51,52,52,41,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,51,54,48,32,46,32,97,114,103,115,51,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,27),40,100,111,51,54,54,32,105,51,54,56,32,107,51,54,57,32,108,51,55,48,32,116,51,55,49,41,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,51,54,50,32,107,101,121,110,117,109,51,54,51,32,46,32,97,114,103,115,51,54,52,41,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,18),40,114,97,110,45,115,101,116,33,32,115,101,101,100,51,55,54,41,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,12),40,114,97,110,32,110,117,109,51,55,55,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,51,55,56,32,98,51,55,57,41,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,14),40,112,105,99,107,32,97,114,103,115,51,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,51,56,49,32,46,32,97,114,103,115,51,56,50,41,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,8),40,114,97,110,108,111,119,41};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,9),40,114,97,110,104,105,103,104,41,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,11),40,114,97,110,109,105,100,100,108,101,41,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,52,50,52,41,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,52,54,55,41,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,52,54,56,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,11),40,114,97,110,99,97,117,99,104,121,41,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,52,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,52,55,48,41,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,10),40,114,97,110,98,114,111,119,110,41,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,9),40,114,97,110,112,105,110,107,41,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,7),40,97,55,54,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,7),40,97,55,54,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,53,49,50,32,111,99,116,53,49,51,32,101,114,114,53,49,52,41,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,7),40,97,55,55,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,7),40,97,55,55,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,53,50,48,32,100,111,99,116,53,50,49,32,101,114,114,63,53,50,50,41,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,39),40,100,111,53,50,53,32,116,97,105,108,53,50,55,32,100,101,102,111,53,50,56,32,116,104,105,115,53,50,57,32,114,101,115,108,53,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,53,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,39),40,100,111,53,51,57,32,116,97,105,108,53,52,49,32,100,101,102,111,53,52,50,32,116,104,105,115,53,52,51,32,114,101,115,108,53,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,53,51,55,41,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,39),40,100,111,53,53,53,32,116,97,105,108,53,53,55,32,100,101,102,111,53,53,56,32,116,104,105,115,53,53,57,32,114,101,115,108,53,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,53,53,51,41,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,53,54,57,41,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,23),40,100,111,53,55,53,32,116,97,105,108,53,55,55,32,108,97,115,116,53,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,53,55,50,41,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,12),40,97,56,50,56,56,32,122,53,56,50,41,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,53,55,48,41,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,23),40,100,111,53,57,48,32,116,97,105,108,53,57,50,32,108,97,115,116,53,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,53,56,55,32,111,114,105,103,53,56,56,41,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,12),40,97,56,52,52,49,32,122,53,57,55,41,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,53,56,51,32,121,53,56,52,41,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,54,54,51,32,108,101,110,103,116,104,54,54,52,32,115,116,114,101,97,109,54,54,53,32,100,101,102,97,117,108,116,54,54,54,32,111,109,105,116,54,54,55,32,114,101,112,115,54,54,56,41,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,54,55,48,32,118,97,108,54,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,54,55,51,41,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,54,55,57,41,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,54,56,53,41,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,54,57,52,32,118,97,108,54,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,54,57,55,41,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,55,48,51,41,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,55,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,55,51,51,41,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,55,51,54,32,118,97,108,55,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,55,51,57,41,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,55,52,53,41,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,55,52,56,32,118,97,108,55,52,57,41};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,55,53,49,41,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,55,53,55,41,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,55,54,48,32,118,97,108,55,54,49,41};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,13),40,102,95,56,55,53,49,32,120,55,54,51,41,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,55,54,54,32,118,97,108,55,54,55,41};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,55,54,57,41,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,56,48,56,32,118,97,108,56,48,57,41};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,56,49,49,41,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,12),40,97,57,49,50,57,32,120,56,52,49,41,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,56,51,49,32,100,97,116,97,56,51,50,32,102,111,114,56,51,51,32,114,101,112,56,51,52,32,102,108,97,103,115,56,51,53,32,108,101,110,56,51,54,32,100,112,101,114,56,51,55,32,103,101,116,114,56,51,56,32,109,97,112,114,56,51,57,41,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,56,54,54,41,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,56,54,55,41,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,17),40,100,111,56,55,50,32,105,56,55,52,32,101,56,55,53,41,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,22),40,100,111,56,55,57,32,110,56,56,49,32,101,56,56,50,32,102,56,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,56,54,56,32,46,32,97,114,103,115,56,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,7),40,100,111,57,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,23),40,100,111,57,48,51,32,100,121,110,63,57,48,53,32,115,116,111,112,57,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,56,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,57,50,55,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,31),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,57,50,56,32,111,98,106,57,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,12),40,97,57,55,48,53,32,120,57,51,56,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,21),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,57,51,51,41,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,97,57,55,57,57,32,102,110,57,57,48,32,111,98,106,57,57,49,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,57,52,55,32,46,32,97,114,103,115,57,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,57,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,48,49,55,41,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,48,50,48,32,118,97,108,49,48,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,23),40,97,49,48,50,50,57,32,102,110,49,49,49,56,32,111,98,106,49,49,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,48,52,54,32,46,32,97,114,103,115,49,48,52,55,41,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,49,50,55,41,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,23),40,97,49,48,56,57,54,32,102,110,49,49,56,57,32,111,98,106,49,49,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,49,52,54,32,46,32,97,114,103,115,49,49,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,49,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,23),40,97,49,49,49,56,51,32,102,110,49,50,52,52,32,111,98,106,49,50,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,50,48,49,32,46,32,97,114,103,115,49,50,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,53,53,32,105,49,50,53,55,32,106,49,50,53,56,32,118,49,50,53,57,41,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,50,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,23),40,97,49,49,53,50,56,32,102,110,49,51,51,57,32,111,98,106,49,51,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,50,54,55,32,46,32,97,114,103,115,49,50,54,56,41,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,53,53,32,105,49,51,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,51,53,48,32,115,116,97,114,116,49,51,53,49,32,115,116,101,112,49,51,53,50,32,119,105,100,116,104,49,51,53,51,32,101,110,100,49,51,53,52,41,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,51,52,56,41,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,51,56,50,41,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,51,56,53,32,118,97,108,49,51,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,51,56,56,41,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,51,57,52,41,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,52,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,52,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,48,57,32,118,97,108,49,52,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,52,49,50,41,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,14),40,97,49,50,52,49,51,32,105,49,52,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,23),40,97,49,50,52,48,55,32,102,110,49,52,57,51,32,111,98,106,49,52,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,17),40,97,49,50,54,52,52,32,105,116,101,109,49,52,52,56,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,53,48,54,41,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,52,51,56,32,46,32,97,114,103,115,49,52,51,57,41,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,37),40,100,111,49,53,57,51,32,116,97,105,108,49,53,57,53,32,105,110,100,101,120,49,53,57,54,32,116,111,116,97,108,49,53,57,55,41,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,56,55,32,116,97,105,108,49,53,56,57,41,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,53,56,51,32,102,105,120,63,49,53,56,52,41,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,27),40,100,111,49,54,49,53,32,116,97,105,108,49,54,49,55,32,105,110,100,101,120,49,54,49,56,41,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,54,49,51,32,114,49,54,49,52,41,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,50,52,32,116,97,105,108,49,54,50,54,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,50,48,32,105,116,101,109,49,54,50,50,41,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,54,48,51,41,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,23),40,97,49,51,55,50,55,32,102,110,49,55,53,50,32,111,98,106,49,55,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,14),40,97,49,51,52,56,49,32,115,49,54,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,8),40,100,111,49,54,52,54,41};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,41),40,100,111,49,54,54,56,32,116,97,105,108,49,54,55,48,32,111,114,100,101,114,49,54,55,49,32,108,105,115,49,54,55,50,32,112,49,54,55,51,41,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,54,56,48,32,46,32,97,114,103,115,49,54,56,49,41,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,55,55,32,116,97,105,108,49,55,55,57,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,33),40,100,111,49,55,54,55,32,116,97,105,108,49,55,54,57,32,111,117,116,49,55,55,48,32,115,117,109,49,55,55,49,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,55,54,53,32,111,117,116,112,117,116,115,49,55,54,54,41,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,48,55,32,108,97,115,116,49,56,48,57,41,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,56,51,32,105,49,55,56,53,32,106,49,55,56,54,32,102,49,55,56,55,41,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,35),40,100,111,49,55,57,56,32,116,97,105,108,49,56,48,48,32,112,97,115,116,49,56,48,49,32,105,116,101,109,49,56,48,50,41,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,55,54,50,41};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,56,50,55,41};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,14),40,97,49,52,53,57,57,32,110,49,56,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,23),40,97,49,52,53,57,51,32,102,110,49,56,57,49,32,111,98,106,49,56,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,28),40,97,49,52,56,52,53,32,105,116,101,109,49,57,48,51,32,46,32,97,114,103,115,49,57,48,52,41,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,57,48,50,41,0,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,56,52,56,32,46,32,97,114,103,115,49,56,52,57,41};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,17),40,100,111,49,57,53,55,32,116,97,105,108,49,57,53,57,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,49,57,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,48,48,52,32,115,116,114,105,110,103,50,48,48,53,32,112,111,115,105,116,105,111,110,50,48,48,54,41,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,48,49,49,41,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,48,49,55,41,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,48,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,48,51,50,41,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,48,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,48,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,48,51,55,32,116,121,112,101,50,48,51,56,32,112,97,116,116,101,114,110,50,48,51,57,32,112,97,114,115,101,114,50,48,52,48,32,101,109,105,116,101,114,50,48,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,48,52,54,41,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,48,57,48,32,100,101,102,50,48,57,49,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,48,57,51,41,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,48,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,48,57,54,41,0,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,48,57,55,41,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,48,57,56,32,105,50,48,57,57,41,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,49,48,53,32,112,111,115,105,116,105,111,110,50,49,48,54,41,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,49,49,49,41,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,49,49,55,41,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,49,50,53,32,112,97,114,115,101,100,50,49,50,54,32,112,111,115,105,116,105,111,110,50,49,50,55,41,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,49,50,56,41,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,49,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,49,51,56,41,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,49,52,52,41,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,49,53,52,41,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,49,53,53,32,116,121,112,50,49,53,54,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,49,53,56,32,105,110,102,111,50,49,53,57,41,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,49,54,49,32,100,97,116,97,50,49,54,50,32,105,110,102,111,50,49,54,51,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,49,54,52,32,100,97,116,97,50,49,54,53,32,105,110,102,111,50,49,54,54,41,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,49,54,57,32,105,110,102,111,50,49,55,48,32,101,114,114,102,50,49,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,49,55,50,32,105,110,102,111,50,49,55,51,32,101,114,114,102,50,49,55,52,41,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,27),40,102,95,49,53,57,57,57,32,97,114,103,115,50,49,56,55,32,101,114,114,102,50,49,56,56,41,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,49,56,54,41,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,57,54,32,116,97,105,108,50,49,57,56,41,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,36),40,102,95,49,54,48,48,55,32,117,110,105,116,50,49,57,48,32,105,110,102,111,50,49,57,49,32,101,114,114,102,50,49,57,50,41,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,8),40,97,49,54,50,48,53,41};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,26),40,97,49,54,50,49,53,32,97,50,50,50,56,32,98,50,50,50,57,32,99,50,50,51,48,41,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,8),40,97,49,54,51,49,49,41};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,26),40,97,49,54,51,50,53,32,97,50,50,52,52,32,98,50,50,52,53,32,99,50,50,52,54,41,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,51,57,32,105,50,50,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,8),40,97,49,54,51,55,56,41};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,26),40,97,49,54,51,57,50,32,97,50,50,54,54,32,98,50,50,54,55,32,99,50,50,54,56,41,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,54,49,32,105,50,50,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,8),40,97,49,54,52,54,55,41};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,26),40,97,49,54,52,55,51,32,97,50,50,56,53,32,98,50,50,56,54,32,99,50,50,56,55,41,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,8),40,100,111,50,50,56,49,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,8),40,97,49,54,53,48,54,41};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,26),40,97,49,54,53,49,50,32,97,50,51,48,51,32,98,50,51,48,52,32,99,50,51,48,53,41,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,50,49,53,32,116,111,107,101,110,115,50,50,49,54,32,102,111,114,99,101,45,97,110,100,50,50,49,55,32,108,101,118,101,108,50,50,49,56,32,116,114,97,99,101,50,50,49,57,32,101,114,114,102,50,50,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,52,56,48,41,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,52,56,52,41,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,52,57,51,41,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,52,57,52,32,116,121,112,50,50,52,57,53,41,0,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,52,32,116,111,107,115,50,53,52,54,41,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,53,52,48,32,116,121,112,50,53,52,49,41,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,53,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,29),40,100,111,50,53,56,48,32,119,50,50,53,56,50,32,111,107,50,53,56,51,32,108,105,50,53,56,52,41,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,55,56,41};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,53,55,51,41,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,55,51,57,32,101,114,114,102,50,55,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,52,56,32,102,50,57,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,52,49,32,102,50,57,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,8),40,97,49,54,48,55,54,41};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,44),40,97,49,54,48,56,51,32,115,117,99,99,101,115,115,50,50,49,48,32,114,101,115,117,108,116,115,50,50,49,49,32,114,101,109,97,105,110,115,50,50,49,50,41,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,17),40,97,49,54,48,55,48,32,101,114,114,102,50,50,48,56,41,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,50,57,50,54,32,114,117,108,101,50,57,50,55,32,116,111,107,101,110,115,50,57,50,56,32,116,114,97,99,101,63,50,57,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,54,55,32,116,97,105,108,50,57,54,57,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,19),40,112,114,105,110,116,101,114,32,116,104,105,110,103,50,57,54,54,41,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,55,53,32,116,97,105,108,50,57,55,55,41,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,50,57,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,50,57,56,50,41,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,50,57,56,52,41,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,50,57,56,56,41,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,50,57,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,49,49,57,32,120,51,49,50,48,41};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,49,50,49,41,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,49,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,49,51,51,41,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,49,51,52,32,120,51,49,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,49,51,54,41,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,49,51,57,41,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,49,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,52,55,32,97,51,49,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,49,52,53,41,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,53,57,32,108,51,49,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,49,53,55,32,97,99,99,101,115,115,111,114,51,49,53,56,41};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,49,53,52,32,99,108,97,117,115,101,115,51,49,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,49,54,53,32,111,112,115,51,49,54,54,41};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,49,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,49,54,56,32,118,97,108,51,49,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,57,49,32,116,97,105,108,51,49,57,51,41,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,56,54,32,116,97,105,108,51,49,56,56,41,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,20),40,100,111,51,49,55,54,32,104,51,49,55,56,32,108,51,49,55,57,41,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,49,55,48,32,102,111,114,109,115,51,49,55,49,32,97,114,103,115,51,49,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,50,48,53,32,99,108,97,117,115,101,115,51,50,48,54,32,111,112,115,51,50,48,55,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,50,53,32,110,101,120,116,51,50,50,55,41,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,50,49,49,32,99,108,97,117,115,101,115,51,50,49,50,32,111,112,115,51,50,49,51,41,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,8),40,97,49,57,54,57,48,41};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,30),40,97,49,57,55,48,56,32,99,108,97,117,115,101,51,51,48,54,32,105,103,110,111,114,101,51,51,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,51,48,51,32,99,108,97,117,115,101,115,51,51,48,52,32,111,112,115,51,51,48,53,41,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,50,52,32,110,101,120,116,51,51,50,54,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,51,48,57,32,99,108,97,117,115,101,115,51,51,49,48,32,111,112,115,51,51,49,49,41};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,57,49,32,110,101,120,116,51,51,57,51,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,51,56,49,32,99,108,97,117,115,101,115,51,51,56,50,32,111,112,115,51,51,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,26),40,100,111,51,52,50,57,32,110,101,101,100,51,52,51,49,32,110,101,120,116,51,52,51,50,41,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,52,49,57,32,99,108,97,117,115,101,115,51,52,50,48,32,111,112,115,51,52,50,49,41,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,8),40,100,111,51,52,55,51,41};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,52,54,52,32,99,108,97,117,115,101,115,51,52,54,53,32,111,112,115,51,52,54,54,41};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,52,56,51,32,99,108,97,117,115,101,115,51,52,56,52,32,111,112,115,51,52,56,53,41,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,52,57,55,32,99,108,97,117,115,101,115,51,52,57,56,32,111,112,115,51,52,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,53,54,52,32,116,121,112,101,51,53,54,53,32,97,99,99,51,53,54,54,32,104,101,97,100,51,53,54,55,41,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,53,54,56,41};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,53,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,49,54,32,97,51,53,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,50,52,32,99,51,53,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,53,52,51,32,99,108,97,117,115,101,115,51,53,52,52,32,111,112,115,51,53,52,53,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,54,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,54,52,53,32,99,108,97,117,115,101,115,51,54,52,54,32,111,112,115,51,54,52,55,41,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,54,54,54,32,99,108,97,117,115,101,115,51,54,54,55,32,111,112,115,51,54,54,56,41,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,54,56,50,32,99,108,97,117,115,101,115,51,54,56,51,32,111,112,115,51,54,56,52,41,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,8),40,97,50,49,53,56,49,41};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,20),40,97,50,49,53,57,52,32,97,51,55,48,57,32,98,51,55,49,48,41,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,38),40,100,111,51,55,48,50,32,111,112,51,55,48,52,32,99,108,97,117,115,101,51,55,48,53,32,114,101,109,97,105,110,115,51,55,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,54,57,54,32,99,108,97,117,115,101,115,51,54,57,55,32,111,112,115,51,54,57,56,41,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,8),40,97,50,49,55,52,53,41};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,20),40,97,50,49,55,53,57,32,97,51,55,51,56,32,98,51,55,51,57,41,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,8),40,97,50,49,56,50,51,41};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,20),40,97,50,49,56,50,57,32,97,51,55,51,53,32,98,51,55,51,54,41,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,55,50,50,32,99,108,97,117,115,101,115,51,55,50,51,32,111,112,115,51,55,50,52,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,55,54,53,32,116,121,112,101,51,55,54,54,41,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,8),40,97,50,49,57,55,49,41};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,20),40,97,50,49,57,56,48,32,97,51,55,55,56,32,98,51,55,55,57,41,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,47),40,100,111,51,55,54,57,32,111,112,51,55,55,49,32,99,108,97,117,115,101,51,55,55,50,32,114,101,109,97,105,110,115,51,55,55,51,32,98,111,100,121,51,55,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,55,57,49,32,102,111,114,109,115,51,55,57,50,32,111,112,115,51,55,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,51,56,54,32,97,51,57,55,48,51,57,55,51,32,97,51,57,54,57,51,57,55,52,32,97,51,57,54,56,51,57,55,53,32,97,51,57,54,55,51,57,55,54,32,97,51,57,54,54,51,57,55,55,41,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,56,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,49,48,48,32,97,51,57,56,54,51,57,57,48,32,97,51,57,56,53,51,57,57,49,41,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,51,57,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,49,51,49,32,97,52,48,54,53,52,48,54,56,32,97,52,48,54,52,52,48,54,57,32,97,52,48,54,51,52,48,55,48,32,97,52,48,54,50,52,48,55,49,32,97,52,48,54,49,52,48,55,50,41,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,51,57,57,51,41};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,53,55,48,32,97,52,48,56,48,52,48,56,52,32,97,52,48,55,57,52,48,56,53,41,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,48,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,54,48,52,32,97,52,49,57,54,52,49,57,57,32,97,52,49,57,53,52,50,48,48,32,97,52,49,57,52,52,50,48,49,32,97,52,49,57,51,52,50,48,50,32,97,52,49,57,50,52,50,48,51,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,48,56,55,41,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,51,49,56,32,97,52,50,49,50,52,50,49,54,32,97,52,50,49,49,52,50,49,55,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,50,49,48,41,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,51,53,50,32,97,52,51,50,56,52,51,51,49,32,97,52,51,50,55,52,51,51,50,32,97,52,51,50,54,52,51,51,51,32,97,52,51,50,53,52,51,51,52,32,97,52,51,50,52,52,51,51,53,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,50,49,57,41,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,48,54,54,32,97,52,51,52,52,52,51,52,56,32,97,52,51,52,51,52,51,52,57,41,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,51,52,50,41};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,48,57,55,32,97,52,52,50,51,52,52,50,54,32,97,52,52,50,50,52,52,50,55,32,97,52,52,50,49,52,52,50,56,32,97,52,52,50,48,52,52,50,57,32,97,52,52,49,57,52,52,51,48,41,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,51,53,49,41,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,53,51,54,32,97,52,52,51,56,52,52,52,50,32,97,52,52,51,55,52,52,52,51,41,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,52,51,54,41};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,53,54,55,32,97,52,53,49,55,52,53,50,48,32,97,52,53,49,54,52,53,50,49,32,97,52,53,49,53,52,53,50,50,32,97,52,53,49,52,52,53,50,51,32,97,52,53,49,51,52,53,50,52,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,52,52,53,41,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,48,48,54,32,97,52,53,51,50,52,53,51,54,32,97,52,53,51,49,52,53,51,55,41,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,53,51,48,41,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,48,51,55,32,97,52,54,49,49,52,54,49,52,32,97,52,54,49,48,52,54,49,53,32,97,52,54,48,57,52,54,49,54,32,97,52,54,48,56,52,54,49,55,32,97,52,54,48,55,52,54,49,56,41,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,53,51,57,41,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,52,57,56,32,97,52,54,51,52,52,54,51,56,41,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,54,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,53,49,51,32,97,52,54,52,50,52,54,52,54,41,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,54,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,53,50,56,32,97,52,54,53,48,52,54,53,52,41,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,54,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,53,52,51,32,97,52,54,54,48,52,54,54,52,32,97,52,54,53,57,52,54,54,53,41,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,54,53,55,32,116,52,54,53,56,41,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,53,54,50,32,97,52,54,54,57,52,54,55,51,41,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,54,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,53,55,55,32,97,52,54,55,56,52,54,56,50,32,97,52,54,55,55,52,54,56,51,41,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,54,55,53,32,99,52,54,55,54,41,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,53,57,54,32,97,52,54,56,56,52,54,57,50,32,97,52,54,56,55,52,54,57,51,41,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,54,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,54,49,53,32,97,52,54,57,57,52,55,48,51,32,97,52,54,57,56,52,55,48,52,32,97,52,54,57,55,52,55,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,54,57,53,32,107,52,54,57,54,41,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,54,51,56,32,97,52,55,49,48,52,55,49,52,32,97,52,55,48,57,52,55,49,53,41,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,55,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,54,53,55,32,97,52,55,50,49,52,55,50,53,32,97,52,55,50,48,52,55,50,54,32,97,52,55,49,57,52,55,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,55,49,55,32,118,52,55,49,56,41,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,54,56,57,32,97,52,55,51,52,52,55,51,56,32,97,52,55,51,51,52,55,51,57,41,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,55,48,53,32,97,52,55,52,50,52,55,52,54,32,97,52,55,52,49,52,55,52,55,41,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,55,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,55,51,54,32,97,52,55,53,53,52,55,53,57,32,97,52,55,53,52,52,55,54,48,32,97,52,55,53,51,52,55,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,55,53,54,32,97,52,55,54,53,52,55,54,57,32,97,52,55,54,52,52,55,55,48,32,97,52,55,54,51,52,55,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,55,52,57,32,118,52,55,53,48,41,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,55,56,50,32,97,52,55,55,54,52,55,56,48,32,97,52,55,55,53,52,55,56,49,41,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,55,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,56,48,49,32,97,52,55,56,55,52,55,57,49,32,97,52,55,56,54,52,55,57,50,32,97,52,55,56,53,52,55,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,55,56,51,32,118,52,55,56,52,41,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,56,50,52,32,97,52,56,48,53,52,56,48,56,32,97,52,56,48,52,52,56,48,57,32,97,52,56,48,51,52,56,49,48,32,97,52,56,48,50,52,56,49,49,32,97,52,56,48,49,52,56,49,50,41,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,55,57,54,32,100,117,114,52,55,57,55,32,107,101,121,52,55,57,56,32,97,109,112,52,55,57,57,32,99,104,97,110,52,56,48,48,41,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,56,53,50,32,97,52,56,50,50,52,56,50,53,32,97,52,56,50,49,52,56,50,54,32,97,52,56,50,48,52,56,50,55,32,97,52,56,49,57,52,56,50,56,32,97,52,56,49,56,52,56,50,57,41,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,56,49,51,32,100,117,114,52,56,49,52,32,107,101,121,52,56,49,53,32,97,109,112,52,56,49,54,32,99,104,97,110,52,56,49,55,41,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,56,56,48,32,97,52,56,51,55,52,56,52,48,32,97,52,56,51,54,52,56,52,49,32,97,52,56,51,53,52,56,52,50,32,97,52,56,51,52,52,56,52,51,32,97,52,56,51,51,52,56,52,52,41,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,56,51,48,32,107,101,121,52,56,51,49,32,99,104,97,110,52,56,51,50,41,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,57,48,56,32,97,52,56,53,51,52,56,53,54,32,97,52,56,53,50,52,56,53,55,32,97,52,56,53,49,52,56,53,56,32,97,52,56,53,48,52,56,53,57,32,97,52,56,52,57,52,56,54,48,41,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,56,52,53,32,107,101,121,52,56,52,54,32,118,101,108,52,56,52,55,32,99,104,97,110,52,56,52,56,41,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,57,51,54,32,97,52,56,54,57,52,56,55,50,32,97,52,56,54,56,52,56,55,51,32,97,52,56,54,55,52,56,55,52,32,97,52,56,54,54,52,56,55,53,32,97,52,56,54,53,52,56,55,54,41,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,56,54,49,32,107,101,121,52,56,54,50,32,118,97,108,52,56,54,51,32,99,104,97,110,52,56,54,52,41,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,57,54,52,32,97,52,56,56,53,52,56,56,56,32,97,52,56,56,52,52,56,56,57,32,97,52,56,56,51,52,56,57,48,32,97,52,56,56,50,52,56,57,49,32,97,52,56,56,49,52,56,57,50,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,56,55,55,32,110,117,109,52,56,55,56,32,118,97,108,52,56,55,57,32,99,104,97,110,52,56,56,48,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,57,57,50,32,97,52,57,48,48,52,57,48,51,32,97,52,56,57,57,52,57,48,52,32,97,52,56,57,56,52,57,48,53,32,97,52,56,57,55,52,57,48,54,32,97,52,56,57,54,52,57,48,55,41,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,56,57,51,32,118,97,108,52,56,57,52,32,99,104,97,110,52,56,57,53,41,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,48,50,48,32,97,52,57,49,53,52,57,49,56,32,97,52,57,49,52,52,57,49,57,32,97,52,57,49,51,52,57,50,48,32,97,52,57,49,50,52,57,50,49,32,97,52,57,49,49,52,57,50,50,41,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,52,57,48,56,32,118,97,108,52,57,48,57,32,99,104,97,110,52,57,49,48,41,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,48,52,56,32,97,52,57,51,48,52,57,51,51,32,97,52,57,50,57,52,57,51,52,32,97,52,57,50,56,52,57,51,53,32,97,52,57,50,55,52,57,51,54,32,97,52,57,50,54,52,57,51,55,41,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,52,57,50,51,32,118,97,108,52,57,50,52,32,99,104,97,110,52,57,50,53,41,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,48,55,54,32,97,52,57,51,57,52,57,52,51,41,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,52,57,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,17),40,97,50,55,49,48,57,32,37,101,114,114,52,57,53,50,41,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,8),40,97,50,55,49,50,57,41};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,18),40,97,50,55,49,48,51,32,37,99,111,110,116,52,57,53,49,41,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,17),40,97,50,55,48,57,55,32,37,109,115,103,52,57,53,48,41,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,49,51,53,32,97,52,57,52,54,52,57,52,57,41,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,49,52,48,32,97,52,57,53,53,52,57,53,56,41,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,52,57,52,53,41,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,49,57,55,32,97,53,48,49,49,53,48,49,52,32,97,53,48,49,48,53,48,49,53,32,97,53,48,48,57,53,48,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,48,48,56,41,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,50,53,52,32,97,53,48,50,50,53,48,50,53,32,97,53,48,50,49,53,48,50,54,32,97,53,48,50,48,53,48,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,48,49,57,41,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,9),40,102,95,50,55,50,57,53,41,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,14),40,100,111,53,48,53,50,32,120,53,48,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,26),40,100,111,53,48,51,56,32,101,53,48,52,57,32,118,53,48,53,48,32,121,53,48,53,49,41,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,48,51,55,41,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,48,54,50,53,48,54,54,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,48,54,56,53,48,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,48,56,52,53,48,56,55,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,48,57,50,53,48,57,53,32,97,53,48,57,49,53,48,57,54,32,97,53,48,57,48,53,48,57,55,41};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,49,49,50,53,49,49,53,41,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,54,49,49,32,97,53,49,50,51,53,49,50,55,41,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,49,50,50,41};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,52,55,32,112,53,49,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,49,51,51,32,115,116,97,114,116,53,49,51,57,32,105,100,53,49,52,48,41,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,49,51,54,32,37,115,116,97,114,116,53,49,51,49,53,49,53,53,41,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,49,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,49,50,57,32,46,32,97,114,103,115,53,49,51,48,41,0,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,49,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,55,53,32,116,97,105,108,53,49,55,55,41,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,49,55,52,41,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,48,55,32,100,101,99,108,53,50,48,57,41,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,57,49,32,116,97,105,108,53,49,57,51,41,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,46),40,97,50,56,52,48,56,32,98,105,110,100,105,110,103,115,53,49,56,50,32,116,101,114,109,105,110,97,116,101,53,49,56,51,32,46,32,98,111,100,121,53,49,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,97,50,56,52,49,52,32,97,114,103,115,51,56,48,52,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,16),40,97,50,56,53,53,54,32,115,121,109,51,49,49,55,41};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,16),40,97,50,56,53,53,57,32,115,121,109,51,49,49,53,41};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,24),40,97,50,56,53,56,56,32,118,97,108,51,49,49,51,32,115,121,109,51,49,49,52,41};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,17),40,97,50,56,54,48,50,32,97,114,103,115,51,49,49,50,41,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,26),40,97,50,56,54,49,54,32,97,114,103,115,50,57,50,49,32,101,114,114,102,50,57,50,50,41,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,35),40,97,50,56,54,51,48,32,117,110,105,116,50,57,50,51,32,105,110,102,111,50,57,50,52,32,101,114,114,102,50,57,50,53,41,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,26),40,97,50,56,55,51,54,32,97,114,103,115,50,56,55,48,32,101,114,114,102,50,56,55,49,41,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,50,32,114,101,115,116,50,56,56,52,41,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,26),40,100,111,50,57,48,56,32,97,114,103,115,50,57,49,48,32,116,97,105,108,50,57,49,49,41,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,35),40,97,50,56,55,55,53,32,117,110,105,116,50,56,55,53,32,105,110,102,111,50,56,55,54,32,101,114,114,102,50,56,55,55,41,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,26),40,97,50,57,49,57,51,32,97,114,103,115,50,56,54,51,32,101,114,114,102,50,56,54,52,41,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,26),40,97,50,57,51,51,56,32,97,114,103,115,50,56,52,57,32,101,114,114,102,50,56,53,48,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,50,54,32,116,97,105,108,50,56,50,56,41,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,50,49,32,116,97,105,108,50,56,50,51,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,49,48,32,99,108,97,117,115,101,115,50,56,49,50,41,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,48,55,32,116,97,105,108,50,56,48,57,41,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,35),40,97,50,57,51,56,52,32,117,110,105,116,50,56,53,57,32,105,110,102,111,50,56,54,48,32,101,114,114,102,50,56,54,49,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,26),40,97,50,57,56,51,56,32,97,114,103,115,50,55,50,51,32,101,114,114,102,50,55,50,52,41,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,35),40,97,50,57,57,48,54,32,117,110,105,116,50,55,51,53,32,105,110,102,111,50,55,51,54,32,101,114,114,102,50,55,51,55,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,51,53,32,97,114,103,115,50,55,49,49,32,101,114,114,102,50,55,49,50,41,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,35),40,97,51,48,48,54,49,32,117,110,105,116,50,55,49,54,32,105,110,102,111,50,55,49,55,32,101,114,114,102,50,55,49,56,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,26),40,97,51,48,49,52,57,32,97,114,103,115,50,54,56,57,32,101,114,114,102,50,54,57,48,41,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,57,55,32,105,116,101,114,50,54,57,57,41,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,35),40,97,51,48,49,57,50,32,117,110,105,116,50,54,57,49,32,105,110,102,111,50,54,57,50,32,101,114,114,102,50,54,57,51,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,26),40,97,51,48,52,50,57,32,97,114,103,115,50,54,56,54,32,101,114,114,102,50,54,56,55,41,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,26),40,97,51,48,53,49,53,32,97,114,103,115,50,54,55,56,32,101,114,114,102,50,54,55,57,41,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,14),40,97,51,48,53,54,55,32,101,50,54,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,35),40,97,51,48,53,53,56,32,117,110,105,116,50,54,56,48,32,105,110,102,111,50,54,56,49,32,101,114,114,102,50,54,56,50,41,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,49,55,32,97,114,103,115,50,54,55,49,32,101,114,114,102,50,54,55,50,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,14),40,97,51,48,54,53,56,32,101,50,54,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,35),40,97,51,48,54,53,50,32,117,110,105,116,50,54,55,51,32,105,110,102,111,50,54,55,52,32,101,114,114,102,50,54,55,53,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,35),40,97,51,48,55,49,50,32,117,110,105,116,50,54,54,52,32,105,110,102,111,50,54,54,53,32,101,114,114,102,50,54,54,54,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,35),40,97,51,48,55,55,51,32,117,110,105,116,50,54,53,56,32,105,110,102,111,50,54,53,57,32,101,114,114,102,50,54,54,48,41,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,26),40,97,51,48,56,50,55,32,97,114,103,115,50,54,53,50,32,101,114,114,102,50,54,53,51,41,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,35),40,97,51,48,56,53,55,32,117,110,105,116,50,54,53,52,32,105,110,102,111,50,54,53,53,32,101,114,114,102,50,54,53,54,41,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,26),40,97,51,49,48,55,54,32,97,114,103,115,50,54,52,53,32,101,114,114,102,50,54,52,54,41,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,26),40,97,51,49,49,48,50,32,97,114,103,115,50,54,51,50,32,101,114,114,102,50,54,51,51,41,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,27),40,97,51,49,49,56,51,32,115,116,114,50,54,52,50,32,46,32,97,114,103,115,50,54,52,51,41,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,54,51,32,117,110,105,116,50,54,51,55,32,105,110,102,111,50,54,51,56,32,101,114,114,102,50,54,51,57,41,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,48,49,32,97,114,103,115,50,54,50,53,32,101,114,114,102,50,54,50,54,41,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,35),40,97,51,49,51,50,51,32,117,110,105,116,50,54,50,55,32,105,110,102,111,50,54,50,56,32,101,114,114,102,50,54,50,57,41,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,55,54,32,97,114,103,115,50,54,49,49,32,101,114,114,102,50,54,49,50,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,49,56,32,97,114,103,115,50,54,50,48,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,35),40,97,51,49,51,57,56,32,117,110,105,116,50,54,49,51,32,105,110,102,111,50,54,49,52,32,101,114,114,102,50,54,49,53,41,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,26),40,97,51,49,53,51,48,32,97,114,103,115,50,54,48,52,32,101,114,114,102,50,54,48,53,41,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,35),40,97,51,49,53,53,54,32,117,110,105,116,50,54,48,54,32,105,110,102,111,50,54,48,55,32,101,114,114,102,50,54,48,56,41,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,54,54,32,97,114,103,115,50,54,48,48,32,101,114,114,102,50,54,48,49,41,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,26),40,97,51,49,56,50,50,32,97,114,103,115,50,53,54,51,32,101,114,114,102,50,53,54,52,41,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,35),40,97,51,49,56,52,48,32,117,110,105,116,50,53,54,53,32,105,110,102,111,50,53,54,54,32,101,114,114,102,50,53,54,55,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,26),40,97,51,49,56,57,51,32,97,114,103,115,50,53,53,55,32,101,114,114,102,50,53,53,56,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,26),40,97,51,50,48,52,53,32,97,114,103,115,50,53,53,52,32,101,114,114,102,50,53,53,53,41,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,97,51,50,49,56,52,32,97,114,103,115,50,53,53,49,32,101,114,114,102,50,53,53,50,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,26),40,97,51,50,51,48,52,32,97,114,103,115,50,53,51,48,32,101,114,114,102,50,53,51,49,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,35),40,97,51,50,51,51,53,32,117,110,105,116,50,53,51,51,32,105,110,102,111,50,53,51,52,32,101,114,114,102,50,53,51,53,41,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,50,55,32,97,114,103,115,50,53,50,52,32,101,114,114,102,50,53,50,53,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,35),40,97,51,50,52,52,53,32,117,110,105,116,50,53,50,54,32,105,110,102,111,50,53,50,55,32,101,114,114,102,50,53,50,56,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,35),40,97,51,50,53,49,57,32,117,110,105,116,50,53,49,51,32,105,110,102,111,50,53,49,52,32,101,114,114,102,50,53,49,53,41,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,26),40,97,51,50,54,49,53,32,97,114,103,115,50,53,48,49,32,101,114,114,102,50,53,48,50,41,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,35),40,97,51,50,54,50,53,32,117,110,105,116,50,53,48,51,32,105,110,102,111,50,53,48,52,32,101,114,114,102,50,53,48,53,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,20),40,97,51,50,56,48,49,32,117,50,49,53,49,32,112,50,49,53,50,41,0,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,20),40,97,51,50,56,50,55,32,101,50,49,50,51,32,112,50,49,50,52,41,0,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,48,56,54,41,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,35),40,97,51,50,56,52,49,32,116,121,112,50,48,56,50,32,112,97,116,50,48,56,51,32,46,32,97,114,103,115,50,48,56,52,41,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,20),40,97,51,50,57,52,52,32,114,50,48,55,57,32,112,50,48,56,48,41,0,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,20),40,97,51,50,57,53,52,32,116,50,48,51,48,32,112,50,48,51,49,41,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,71),40,100,111,52,56,48,32,100,52,56,50,32,107,52,56,51,32,112,52,56,52,32,107,60,52,56,53,32,107,62,52,56,54,32,102,52,56,55,32,102,62,52,56,56,32,102,60,52,56,57,32,111,52,57,48,32,120,52,57,49,32,110,52,57,50,32,101,52,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,52,32,107,101,121,52,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,24),40,97,51,51,49,56,52,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,22),40,97,51,51,49,57,48,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,24),40,97,51,51,50,52,50,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k27614 */
static C_word C_fcall stub5124(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5124(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k27599 in hush in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
C_noret_decl(stub5118)
static void C_ccall stub5118(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5118(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27593 */
C_noret_decl(stub5113)
static void C_ccall stub5113(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5113(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27577 in cont in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
C_noret_decl(stub5108)
static void C_ccall stub5108(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5108(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27568 in pause in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
C_noret_decl(stub5104)
static void C_ccall stub5104(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5104(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27559 in paused? in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
C_noret_decl(stub5100)
static void C_ccall stub5100(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5100(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27553 */
C_noret_decl(stub5093)
static void C_ccall stub5093(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5093(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27533 in scheduler-set-time-milliseconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
C_noret_decl(stub5085)
static void C_ccall stub5085(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5085(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k27524 in time-format in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
C_noret_decl(stub5080)
static void C_ccall stub5080(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5080(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5077(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5077(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5074(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5074(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k27505 in print-error in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static C_word C_fcall stub5069(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5069(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k27491 in print-message in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static C_word C_fcall stub5063(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5063(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_27295 in cs:clear in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static C_word C_fcall stub5030(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5030(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k27261 */
static C_word C_fcall stub5023(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5023(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k27204 */
static C_word C_fcall stub5012(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5012(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_27140 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static C_word C_fcall stub4956(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4956(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_27135 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static C_word C_fcall stub4947(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4947(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k27079 */
static C_word C_fcall stub4940(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4940(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k27067 */
static C_word C_fcall stub4931(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4931(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27039 */
static C_word C_fcall stub4916(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4916(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27011 */
static C_word C_fcall stub4901(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4901(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26983 */
static C_word C_fcall stub4886(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4886(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26955 */
static C_word C_fcall stub4870(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4870(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26927 */
static C_word C_fcall stub4854(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4854(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26899 */
static C_word C_fcall stub4838(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4838(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26871 */
static C_word C_fcall stub4823(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4823(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k26843 */
static C_word C_fcall stub4806(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4806(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k26812 */
static C_word C_fcall stub4788(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4788(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26789 */
static C_word C_fcall stub4777(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4777(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26767 */
static C_word C_fcall stub4766(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4766(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26747 */
static C_word C_fcall stub4756(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4756(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26712 */
static C_word C_fcall stub4743(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4743(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26696 */
static C_word C_fcall stub4735(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4735(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26668 */
static C_word C_fcall stub4722(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4722(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26645 */
static C_word C_fcall stub4711(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4711(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26626 */
static C_word C_fcall stub4700(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4700(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k26603 */
static C_word C_fcall stub4689(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4689(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k26584 */
static C_word C_fcall stub4679(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4679(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k26565 */
static C_word C_fcall stub4670(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4670(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k26550 */
static C_word C_fcall stub4661(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4661(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k26531 */
static C_word C_fcall stub4651(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4651(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k26516 */
static C_word C_fcall stub4643(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4643(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k26501 */
static C_word C_fcall stub4635(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4635(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k26483 */
static C_word C_fcall stub4627(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4627(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26056 */
static C_word C_fcall stub4612(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4612(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26013 */
static C_word C_fcall stub4533(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4533(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25586 */
static C_word C_fcall stub4518(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4518(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25543 */
static C_word C_fcall stub4439(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4439(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25116 */
static C_word C_fcall stub4424(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4424(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25073 */
static C_word C_fcall stub4345(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4345(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24371 */
static C_word C_fcall stub4329(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4329(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24325 */
static C_word C_fcall stub4213(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4213(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23623 */
static C_word C_fcall stub4197(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4197(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23577 */
static C_word C_fcall stub4081(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4081(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23150 */
static C_word C_fcall stub4066(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4066(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23107 */
static C_word C_fcall stub3987(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub3987(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22405 */
static C_word C_fcall stub3971(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub3971(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown */
static C_word C_fcall stub299(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub299(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink */
static C_word C_fcall stub296(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6507 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy */
static C_word C_fcall stub289(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub289(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6497 */
static C_word C_fcall stub285(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub285(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6490 */
static C_word C_fcall stub279(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub279(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6479 */
static C_word C_fcall stub273(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6472 */
static C_word C_fcall stub267(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub267(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle */
static C_word C_fcall stub262(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh */
static C_word C_fcall stub259(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow */
static C_word C_fcall stub256(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6452 */
static C_word C_fcall stub251(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub251(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6441 */
static C_word C_fcall stub245(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub245(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6430 */
static C_word C_fcall stub239(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub239(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6423 */
static C_word C_fcall stub235(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub235(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! */
static C_word C_fcall stub231(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub231(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6413 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6406 */
static C_word C_fcall stub222(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub222(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6399 */
static C_word C_fcall stub217(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub217(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6392 */
static C_word C_fcall stub213(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub213(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6385 */
static C_word C_fcall stub208(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub208(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6378 */
static C_word C_fcall stub201(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub201(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6363 */
static C_word C_fcall stub193(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub193(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6352 */
static C_word C_fcall stub186(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub186(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6341 */
static C_word C_fcall stub181(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub181(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6334 */
static C_word C_fcall stub172(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub172(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6307 */
static C_word C_fcall stub157(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub157(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k5896 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5878 in cwd in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5271)
static void C_ccall f_5271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5274)
static void C_ccall f_5274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5277)
static void C_ccall f_5277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5280)
static void C_ccall f_5280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33243)
static void C_ccall f_33243(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33243)
static void C_ccall f_33243r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5571)
static void C_ccall f_5571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5575)
static void C_ccall f_5575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33191)
static void C_ccall f_33191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33238)
static void C_ccall f_33238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33228)
static void C_ccall f_33228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33195)
static void C_ccall f_33195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5578)
static void C_ccall f_5578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33185)
static void C_ccall f_33185(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33185)
static void C_ccall f_33185r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5871)
static void C_ccall f_5871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7649)
static void C_ccall f_7649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32969)
static void C_fcall f_32969(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33183)
static void C_ccall f_33183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33003)
static void C_ccall f_33003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33015)
static void C_ccall f_33015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33019)
static void C_ccall f_33019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33023)
static void C_ccall f_33023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33167)
static void C_ccall f_33167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33029)
static void C_fcall f_33029(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_33049)
static void C_fcall f_33049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33052)
static void C_fcall f_33052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33060)
static void C_ccall f_33060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33067)
static void C_ccall f_33067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33070)
static void C_ccall f_33070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33074)
static void C_ccall f_33074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33081)
static void C_ccall f_33081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33084)
static void C_ccall f_33084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33088)
static void C_ccall f_33088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33095)
static void C_ccall f_33095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33039)
static void C_ccall f_33039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32992)
static void C_ccall f_32992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32982)
static void C_ccall f_32982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32985)
static void C_ccall f_32985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7652)
static void C_ccall f_7652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32955)
static void C_ccall f_32955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32963)
static void C_ccall f_32963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32967)
static void C_ccall f_32967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15245)
static void C_ccall f_15245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15296)
static void C_ccall f_15296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32945)
static void C_ccall f_32945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32953)
static void C_ccall f_32953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15401)
static void C_ccall f_15401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32842)
static void C_ccall f_32842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_32842)
static void C_ccall f_32842r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_32905)
static void C_ccall f_32905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32909)
static void C_ccall f_32909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32923)
static void C_fcall f_32923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32845)
static void C_fcall f_32845(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32865)
static void C_ccall f_32865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32869)
static void C_ccall f_32869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15404)
static void C_ccall f_15404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32828)
static void C_ccall f_32828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32836)
static void C_ccall f_32836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32840)
static void C_ccall f_32840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15597)
static void C_ccall f_15597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32802)
static void C_ccall f_32802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32806)
static void C_ccall f_32806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32812)
static void C_ccall f_32812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32823)
static void C_ccall f_32823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32819)
static void C_ccall f_32819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15666)
static void C_ccall f_15666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32780)
static void C_ccall f_32780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16911)
static void C_ccall f_16911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32760)
static void C_ccall f_32760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16914)
static void C_ccall f_16914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32720)
static void C_ccall f_32720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16917)
static void C_ccall f_16917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32626)
static void C_ccall f_32626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32630)
static void C_ccall f_32630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32633)
static void C_ccall f_32633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32651)
static void C_ccall f_32651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32654)
static void C_ccall f_32654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32685)
static void C_ccall f_32685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32657)
static void C_fcall f_32657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32663)
static void C_ccall f_32663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32616)
static void C_ccall f_32616(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32610)
static void C_ccall f_32610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16920)
static void C_ccall f_16920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32518)
static void C_ccall f_32518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32520)
static void C_ccall f_32520(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32524)
static void C_ccall f_32524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32527)
static void C_ccall f_32527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32530)
static void C_ccall f_32530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32570)
static void C_ccall f_32570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32562)
static void C_ccall f_32562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32533)
static void C_ccall f_32533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32536)
static void C_ccall f_32536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32539)
static void C_ccall f_32539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32510)
static void C_ccall f_32510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16923)
static void C_ccall f_16923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32482)
static void C_ccall f_32482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16926)
static void C_ccall f_16926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32446)
static void C_ccall f_32446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32458)
static void C_ccall f_32458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32454)
static void C_ccall f_32454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32428)
static void C_ccall f_32428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32422)
static void C_ccall f_32422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16929)
static void C_ccall f_16929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32336)
static void C_ccall f_32336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32340)
static void C_ccall f_32340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32343)
static void C_ccall f_32343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32346)
static void C_ccall f_32346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32359)
static void C_ccall f_32359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32305)
static void C_ccall f_32305(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32309)
static void C_ccall f_32309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32324)
static void C_ccall f_32324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32299)
static void C_ccall f_32299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16932)
static void C_ccall f_16932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32185)
static void C_ccall f_32185(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32201)
static void C_ccall f_32201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32212)
static void C_ccall f_32212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32179)
static void C_ccall f_32179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16988)
static void C_ccall f_16988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32046)
static void C_ccall f_32046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32069)
static void C_ccall f_32069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32066)
static void C_ccall f_32066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32040)
static void C_ccall f_32040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16991)
static void C_ccall f_16991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31894)
static void C_ccall f_31894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31912)
static void C_ccall f_31912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31921)
static void C_ccall f_31921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31888)
static void C_ccall f_31888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16994)
static void C_ccall f_16994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31841)
static void C_ccall f_31841(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31845)
static void C_ccall f_31845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31848)
static void C_ccall f_31848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31864)
static void C_ccall f_31864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31823)
static void C_ccall f_31823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31817)
static void C_ccall f_31817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16997)
static void C_ccall f_16997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31741)
static void C_ccall f_31741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17136)
static void C_ccall f_17136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31667)
static void C_ccall f_31667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31674)
static void C_ccall f_31674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31661)
static void C_ccall f_31661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17139)
static void C_ccall f_17139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31557)
static void C_ccall f_31557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31565)
static void C_ccall f_31565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31531)
static void C_ccall f_31531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31548)
static void C_ccall f_31548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31539)
static void C_fcall f_31539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31525)
static void C_ccall f_31525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17142)
static void C_ccall f_17142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31481)
static void C_ccall f_31481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17145)
static void C_ccall f_17145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31399)
static void C_ccall f_31399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31410)
static void C_ccall f_31410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31412)
static void C_fcall f_31412(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31441)
static void C_ccall f_31441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31377)
static void C_ccall f_31377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31393)
static void C_ccall f_31393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31371)
static void C_ccall f_31371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17148)
static void C_ccall f_17148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31324)
static void C_ccall f_31324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31328)
static void C_ccall f_31328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31335)
static void C_ccall f_31335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31302)
static void C_ccall f_31302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31318)
static void C_ccall f_31318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31296)
static void C_ccall f_31296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17151)
static void C_ccall f_17151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31164)
static void C_ccall f_31164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31204)
static void C_ccall f_31204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31168)
static void C_ccall f_31168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31184)
static void C_ccall f_31184(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31184)
static void C_ccall f_31184r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_31196)
static void C_ccall f_31196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31200)
static void C_ccall f_31200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31192)
static void C_ccall f_31192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31103)
static void C_ccall f_31103(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31150)
static void C_ccall f_31150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31110)
static void C_fcall f_31110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31121)
static void C_ccall f_31121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31097)
static void C_ccall f_31097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17154)
static void C_ccall f_17154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31077)
static void C_ccall f_31077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31071)
static void C_ccall f_31071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17157)
static void C_ccall f_17157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31051)
static void C_ccall f_31051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31055)
static void C_ccall f_31055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31043)
static void C_ccall f_31043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17160)
static void C_ccall f_17160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31023)
static void C_ccall f_31023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31027)
static void C_ccall f_31027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31015)
static void C_ccall f_31015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17163)
static void C_ccall f_17163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30995)
static void C_ccall f_30995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30999)
static void C_ccall f_30999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30987)
static void C_ccall f_30987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17166)
static void C_ccall f_17166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30967)
static void C_ccall f_30967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30971)
static void C_ccall f_30971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30959)
static void C_ccall f_30959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17169)
static void C_ccall f_17169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30858)
static void C_ccall f_30858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30828)
static void C_ccall f_30828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30852)
static void C_ccall f_30852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30822)
static void C_ccall f_30822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17172)
static void C_ccall f_17172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30772)
static void C_ccall f_30772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30774)
static void C_ccall f_30774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30778)
static void C_ccall f_30778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30806)
static void C_ccall f_30806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30798)
static void C_ccall f_30798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30794)
static void C_ccall f_30794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30781)
static void C_ccall f_30781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30764)
static void C_ccall f_30764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17175)
static void C_ccall f_17175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30711)
static void C_ccall f_30711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30713)
static void C_ccall f_30713(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30717)
static void C_ccall f_30717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30748)
static void C_ccall f_30748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30740)
static void C_ccall f_30740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30736)
static void C_ccall f_30736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30720)
static void C_ccall f_30720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30723)
static void C_ccall f_30723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30703)
static void C_ccall f_30703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17178)
static void C_ccall f_17178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30653)
static void C_ccall f_30653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30667)
static void C_ccall f_30667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30659)
static void C_ccall f_30659(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30618)
static void C_ccall f_30618(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30651)
static void C_ccall f_30651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30612)
static void C_ccall f_30612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17181)
static void C_ccall f_17181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30559)
static void C_ccall f_30559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30563)
static void C_ccall f_30563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30576)
static void C_ccall f_30576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30568)
static void C_ccall f_30568(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30516)
static void C_ccall f_30516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30549)
static void C_ccall f_30549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30510)
static void C_ccall f_30510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17184)
static void C_ccall f_17184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30430)
static void C_ccall f_30430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30424)
static void C_ccall f_30424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17187)
static void C_ccall f_17187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30193)
static void C_ccall f_30193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30197)
static void C_ccall f_30197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30205)
static void C_fcall f_30205(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30228)
static void C_ccall f_30228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30231)
static void C_ccall f_30231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30234)
static void C_ccall f_30234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30237)
static void C_ccall f_30237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30297)
static void C_ccall f_30297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30304)
static void C_ccall f_30304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30324)
static void C_ccall f_30324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30338)
static void C_ccall f_30338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30348)
static void C_ccall f_30348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30358)
static void C_ccall f_30358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30368)
static void C_ccall f_30368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30240)
static void C_fcall f_30240(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30264)
static void C_fcall f_30264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30243)
static void C_fcall f_30243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30150)
static void C_ccall f_30150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30183)
static void C_ccall f_30183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30144)
static void C_ccall f_30144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17190)
static void C_ccall f_17190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30062)
static void C_ccall f_30062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30066)
static void C_ccall f_30066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30072)
static void C_ccall f_30072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30092)
static void C_ccall f_30092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30036)
static void C_ccall f_30036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30046)
static void C_fcall f_30046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30030)
static void C_ccall f_30030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17193)
static void C_ccall f_17193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29907)
static void C_ccall f_29907(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29911)
static void C_ccall f_29911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29839)
static void C_ccall f_29839(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29858)
static void C_ccall f_29858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29893)
static void C_ccall f_29893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29864)
static void C_fcall f_29864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29868)
static void C_ccall f_29868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29882)
static void C_ccall f_29882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29871)
static void C_fcall f_29871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29852)
static void C_fcall f_29852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29833)
static void C_ccall f_29833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17196)
static void C_ccall f_17196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29561)
static void C_ccall f_29561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17719)
static void C_ccall f_17719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29513)
static void C_ccall f_29513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29505)
static void C_ccall f_29505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17722)
static void C_ccall f_17722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29385)
static void C_ccall f_29385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17728)
static void C_ccall f_17728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18203)
static void C_ccall f_18203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18237)
static void C_ccall f_18237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18229)
static void C_ccall f_18229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18225)
static void C_ccall f_18225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18210)
static void C_ccall f_18210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18214)
static void C_ccall f_18214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18207)
static void C_ccall f_18207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17746)
static void C_fcall f_17746(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18196)
static void C_ccall f_18196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18192)
static void C_ccall f_18192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17753)
static void C_fcall f_17753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18067)
static void C_fcall f_18067(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18088)
static void C_ccall f_18088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18090)
static void C_fcall f_18090(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18104)
static void C_ccall f_18104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18157)
static void C_ccall f_18157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18107)
static void C_fcall f_18107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18142)
static void C_ccall f_18142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18110)
static void C_fcall f_18110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18123)
static void C_ccall f_18123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18135)
static void C_ccall f_18135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18127)
static void C_ccall f_18127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18113)
static void C_fcall f_18113(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18077)
static void C_ccall f_18077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17756)
static void C_ccall f_17756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18031)
static void C_fcall f_18031(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18057)
static void C_ccall f_18057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18042)
static void C_ccall f_18042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17759)
static void C_ccall f_17759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17763)
static void C_ccall f_17763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17975)
static void C_fcall f_17975(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17985)
static void C_ccall f_17985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17988)
static void C_ccall f_17988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18009)
static void C_ccall f_18009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17991)
static void C_fcall f_17991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17995)
static void C_ccall f_17995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17766)
static void C_ccall f_17766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17769)
static void C_fcall f_17769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17938)
static void C_ccall f_17938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17946)
static void C_ccall f_17946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17942)
static void C_ccall f_17942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17772)
static void C_fcall f_17772(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17800)
static void C_ccall f_17800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17803)
static void C_ccall f_17803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17806)
static void C_ccall f_17806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17809)
static void C_ccall f_17809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17812)
static void C_ccall f_17812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17871)
static void C_ccall f_17871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29339)
static void C_ccall f_29339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29355)
static void C_ccall f_29355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29358)
static void C_ccall f_29358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29361)
static void C_fcall f_29361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29364)
static void C_fcall f_29364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29375)
static void C_ccall f_29375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29333)
static void C_ccall f_29333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18244)
static void C_ccall f_18244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29194)
static void C_ccall f_29194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29233)
static void C_ccall f_29233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29207)
static void C_fcall f_29207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29188)
static void C_ccall f_29188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18247)
static void C_ccall f_18247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28776)
static void C_ccall f_28776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28780)
static void C_ccall f_28780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28792)
static void C_ccall f_28792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28850)
static void C_ccall f_28850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28853)
static void C_ccall f_28853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28856)
static void C_ccall f_28856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29068)
static void C_ccall f_29068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29006)
static void C_ccall f_29006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29040)
static void C_ccall f_29040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29015)
static void C_fcall f_29015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29026)
static void C_ccall f_29026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29022)
static void C_ccall f_29022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28865)
static void C_fcall f_28865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28943)
static void C_ccall f_28943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28984)
static void C_ccall f_28984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28988)
static void C_ccall f_28988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28992)
static void C_ccall f_28992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28947)
static void C_ccall f_28947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28951)
static void C_ccall f_28951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28978)
static void C_ccall f_28978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28954)
static void C_fcall f_28954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28868)
static void C_fcall f_28868(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28940)
static void C_ccall f_28940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28882)
static void C_ccall f_28882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28884)
static void C_fcall f_28884(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28932)
static void C_ccall f_28932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28903)
static void C_ccall f_28903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28920)
static void C_ccall f_28920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28906)
static void C_fcall f_28906(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28899)
static void C_ccall f_28899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28871)
static void C_ccall f_28871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28801)
static void C_fcall f_28801(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28811)
static void C_ccall f_28811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28817)
static void C_ccall f_28817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28789)
static void C_ccall f_28789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28737)
static void C_ccall f_28737(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28754)
static void C_ccall f_28754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28770)
static void C_ccall f_28770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28748)
static void C_fcall f_28748(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28731)
static void C_ccall f_28731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18250)
static void C_ccall f_18250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28655)
static void C_ccall f_28655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18253)
static void C_ccall f_18253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28631)
static void C_ccall f_28631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28643)
static void C_ccall f_28643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28639)
static void C_ccall f_28639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28617)
static void C_ccall f_28617(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28625)
static void C_ccall f_28625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28611)
static void C_ccall f_28611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18256)
static void C_ccall f_18256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28603)
static void C_ccall f_28603(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22046)
static void C_ccall f_22046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22049)
static void C_ccall f_22049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22215)
static void C_ccall f_22215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22211)
static void C_ccall f_22211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22201)
static void C_fcall f_22201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22056)
static void C_ccall f_22056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22060)
static void C_ccall f_22060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22063)
static void C_fcall f_22063(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22074)
static void C_ccall f_22074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22082)
static void C_ccall f_22082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22154)
static void C_ccall f_22154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22162)
static void C_ccall f_22162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22158)
static void C_ccall f_22158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22150)
static void C_ccall f_22150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22146)
static void C_ccall f_22146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22118)
static void C_ccall f_22118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22114)
static void C_ccall f_22114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22078)
static void C_ccall f_22078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18693)
static void C_ccall f_18693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28589)
static void C_ccall f_28589(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18696)
static void C_ccall f_18696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28560)
static void C_ccall f_28560(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28564)
static void C_ccall f_28564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18699)
static void C_ccall f_18699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28557)
static void C_ccall f_28557(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18702)
static void C_ccall f_18702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28415)
static void C_ccall f_28415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22228)
static void C_ccall f_22228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22360)
static void C_ccall f_22360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22231)
static void C_ccall f_22231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22242)
static void C_ccall f_22242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22250)
static void C_ccall f_22250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22274)
static void C_ccall f_22274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22277)
static void C_fcall f_22277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22285)
static void C_ccall f_22285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22293)
static void C_ccall f_22293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22313)
static void C_ccall f_22313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22309)
static void C_ccall f_22309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22289)
static void C_ccall f_22289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22281)
static void C_ccall f_22281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22270)
static void C_ccall f_22270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22246)
static void C_ccall f_22246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22222)
static void C_ccall f_22222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27144)
static void C_ccall f_27144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27147)
static void C_ccall f_27147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27150)
static void C_ccall f_27150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27153)
static void C_ccall f_27153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27156)
static void C_ccall f_27156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27159)
static void C_ccall f_27159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27162)
static void C_ccall f_27162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27165)
static void C_ccall f_27165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27168)
static void C_ccall f_27168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27171)
static void C_ccall f_27171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27174)
static void C_ccall f_27174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27299)
static void C_ccall f_27299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27302)
static void C_ccall f_27302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27305)
static void C_ccall f_27305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28409)
static void C_ccall f_28409(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28409)
static void C_ccall f_28409r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_27963)
static void C_ccall f_27963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27966)
static void C_ccall f_27966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28244)
static void C_fcall f_28244(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28352)
static void C_ccall f_28352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28264)
static void C_fcall f_28264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28273)
static void C_fcall f_28273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28277)
static void C_ccall f_28277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28281)
static void C_ccall f_28281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28289)
static void C_fcall f_28289(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28285)
static void C_ccall f_28285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28254)
static void C_ccall f_28254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27969)
static void C_ccall f_27969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27972)
static void C_ccall f_27972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27975)
static void C_ccall f_27975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27978)
static void C_ccall f_27978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27981)
static void C_ccall f_27981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28238)
static void C_ccall f_28238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28137)
static void C_fcall f_28137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28144)
static void C_ccall f_28144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28146)
static void C_fcall f_28146(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28218)
static void C_ccall f_28218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28170)
static void C_fcall f_28170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28173)
static void C_ccall f_28173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28194)
static void C_ccall f_28194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28160)
static void C_ccall f_28160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27984)
static void C_ccall f_27984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28126)
static void C_ccall f_28126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28114)
static void C_ccall f_28114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28110)
static void C_ccall f_28110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27991)
static void C_fcall f_27991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27948)
static void C_ccall f_27948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28407)
static void C_ccall f_28407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27938)
static void C_ccall f_27938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27601)
static void C_ccall f_27601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27942)
static void C_ccall f_27942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27880)
static void C_ccall f_27880(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27880)
static void C_ccall f_27880r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27898)
static void C_fcall f_27898(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27908)
static void C_ccall f_27908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27884)
static void C_ccall f_27884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27871)
static void C_ccall f_27871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27579)
static void C_ccall f_27579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27875)
static void C_ccall f_27875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27865)
static void C_ccall f_27865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27561)
static void C_ccall f_27561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27856)
static void C_ccall f_27856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27570)
static void C_ccall f_27570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27860)
static void C_ccall f_27860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27793)
static void C_ccall f_27793(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27793)
static void C_ccall f_27793r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27818)
static void C_fcall f_27818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27526)
static void C_ccall f_27526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27806)
static void C_ccall f_27806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27625)
static void C_ccall f_27625(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_27625)
static void C_ccall f_27625r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_27744)
static void C_fcall f_27744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27739)
static void C_fcall f_27739(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27627)
static void C_fcall f_27627(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27734)
static void C_ccall f_27734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27738)
static void C_ccall f_27738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27730)
static void C_ccall f_27730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27698)
static void C_fcall f_27698(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27723)
static void C_ccall f_27723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27727)
static void C_ccall f_27727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27708)
static void C_ccall f_27708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27687)
static void C_ccall f_27687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27657)
static void C_fcall f_27657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27629)
static void C_fcall f_27629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27606)
static void C_ccall f_27606(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27611)
static void C_ccall f_27611(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27616)
static void C_ccall f_27616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27584)
static void C_fcall f_27584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27588)
static void C_ccall f_27588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27540)
static void C_fcall f_27540(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27544)
static void C_ccall f_27544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27531)
static void C_fcall f_27531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27535)
static void C_ccall f_27535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27519)
static void C_ccall f_27519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27516)
static void C_ccall f_27516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27502)
static void C_ccall f_27502(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27507)
static void C_ccall f_27507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27488)
static void C_ccall f_27488(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27493)
static void C_ccall f_27493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27307)
static void C_ccall f_27307(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27368)
static void C_ccall f_27368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27370)
static void C_fcall f_27370(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27396)
static void C_fcall f_27396(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27436)
static void C_ccall f_27436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27478)
static void C_ccall f_27478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27448)
static void C_ccall f_27448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27433)
static void C_fcall f_27433(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27354)
static void C_ccall f_27354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27319)
static void C_ccall f_27319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27346)
static void C_ccall f_27346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27327)
static void C_ccall f_27327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27334)
static void C_ccall f_27334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27338)
static void C_ccall f_27338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27342)
static void C_ccall f_27342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27416)
static void C_ccall f_27416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27394)
static void C_ccall f_27394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27380)
static void C_ccall f_27380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27383)
static void C_ccall f_27383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27361)
static void C_ccall f_27361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27290)
static void C_ccall f_27290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27295)
static void C_ccall f_27295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27233)
static void C_ccall f_27233(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27233)
static void C_ccall f_27233r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27266)
static void C_fcall f_27266(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27246)
static void C_fcall f_27246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27254)
static void C_ccall f_27254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27237)
static void C_ccall f_27237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27176)
static void C_ccall f_27176(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27176)
static void C_ccall f_27176r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27209)
static void C_fcall f_27209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27189)
static void C_fcall f_27189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27197)
static void C_ccall f_27197(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27180)
static void C_ccall f_27180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27086)
static void C_ccall f_27086(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27140)
static void C_ccall f_27140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27135)
static void C_ccall f_27135(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27098)
static void C_ccall f_27098(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27104)
static void C_ccall f_27104(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27130)
static void C_ccall f_27130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27134)
static void C_ccall f_27134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27110)
static void C_ccall f_27110(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27128)
static void C_ccall f_27128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27125)
static void C_ccall f_27125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27121)
static void C_ccall f_27121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27114)
static void C_ccall f_27114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27071)
static void C_ccall f_27071(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27076)
static void C_ccall f_27076(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27043)
static void C_ccall f_27043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27048)
static void C_ccall f_27048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27015)
static void C_ccall f_27015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27020)
static void C_ccall f_27020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26987)
static void C_ccall f_26987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26992)
static void C_ccall f_26992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26959)
static void C_ccall f_26959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26964)
static void C_ccall f_26964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26931)
static void C_ccall f_26931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26936)
static void C_ccall f_26936(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26903)
static void C_ccall f_26903(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26908)
static void C_ccall f_26908(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26875)
static void C_ccall f_26875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26880)
static void C_ccall f_26880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26847)
static void C_ccall f_26847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26852)
static void C_ccall f_26852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26819)
static void C_ccall f_26819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26824)
static void C_ccall f_26824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26796)
static void C_ccall f_26796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26801)
static void C_ccall f_26801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26800)
static void C_ccall f_26800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26777)
static void C_ccall f_26777(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26782)
static void C_ccall f_26782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26722)
static void C_ccall f_26722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26729)
static void C_ccall f_26729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26732)
static void C_ccall f_26732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26756)
static void C_ccall f_26756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26736)
static void C_ccall f_26736(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26726)
static void C_ccall f_26726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26675)
static void C_ccall f_26675(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26682)
static void C_ccall f_26682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26685)
static void C_ccall f_26685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26705)
static void C_ccall f_26705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26689)
static void C_ccall f_26689(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26652)
static void C_ccall f_26652(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26657)
static void C_ccall f_26657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26656)
static void C_ccall f_26656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26633)
static void C_ccall f_26633(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26638)
static void C_ccall f_26638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26610)
static void C_ccall f_26610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26615)
static void C_ccall f_26615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26614)
static void C_ccall f_26614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26591)
static void C_ccall f_26591(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26596)
static void C_ccall f_26596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26572)
static void C_ccall f_26572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26577)
static void C_ccall f_26577(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26576)
static void C_ccall f_26576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26557)
static void C_ccall f_26557(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26562)
static void C_ccall f_26562(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26538)
static void C_ccall f_26538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26543)
static void C_ccall f_26543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26542)
static void C_ccall f_26542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26523)
static void C_ccall f_26523(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26528)
static void C_ccall f_26528(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26508)
static void C_ccall f_26508(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26513)
static void C_ccall f_26513(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26490)
static void C_ccall f_26490(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26494)
static void C_ccall f_26494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26020)
static void C_ccall f_26020(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26020)
static void C_ccall f_26020r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26448)
static void C_ccall f_26448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26463)
static void C_ccall f_26463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26455)
static void C_ccall f_26455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26419)
static void C_ccall f_26419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26423)
static void C_ccall f_26423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26384)
static void C_ccall f_26384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26388)
static void C_ccall f_26388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26349)
static void C_ccall f_26349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26353)
static void C_ccall f_26353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26024)
static void C_fcall f_26024(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26313)
static void C_ccall f_26313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26328)
static void C_ccall f_26328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26320)
static void C_ccall f_26320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26284)
static void C_ccall f_26284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26288)
static void C_ccall f_26288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26249)
static void C_ccall f_26249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26253)
static void C_ccall f_26253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26214)
static void C_ccall f_26214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26218)
static void C_ccall f_26218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26027)
static void C_fcall f_26027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26178)
static void C_ccall f_26178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26193)
static void C_ccall f_26193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26185)
static void C_ccall f_26185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26149)
static void C_ccall f_26149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26153)
static void C_ccall f_26153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26114)
static void C_ccall f_26114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26118)
static void C_ccall f_26118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26079)
static void C_ccall f_26079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26083)
static void C_ccall f_26083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26030)
static void C_fcall f_26030(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26033)
static void C_ccall f_26033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26037)
static void C_ccall f_26037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26001)
static void C_ccall f_26001(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26006)
static void C_ccall f_26006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25550)
static void C_ccall f_25550(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25550)
static void C_ccall f_25550r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25978)
static void C_ccall f_25978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25993)
static void C_ccall f_25993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25985)
static void C_ccall f_25985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25949)
static void C_ccall f_25949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25953)
static void C_ccall f_25953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25914)
static void C_ccall f_25914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25918)
static void C_ccall f_25918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25879)
static void C_ccall f_25879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25883)
static void C_ccall f_25883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25554)
static void C_fcall f_25554(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25843)
static void C_ccall f_25843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25858)
static void C_ccall f_25858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25850)
static void C_ccall f_25850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25814)
static void C_ccall f_25814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25818)
static void C_ccall f_25818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25779)
static void C_ccall f_25779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25783)
static void C_ccall f_25783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25744)
static void C_ccall f_25744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25748)
static void C_ccall f_25748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25557)
static void C_fcall f_25557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25708)
static void C_ccall f_25708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25723)
static void C_ccall f_25723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25715)
static void C_ccall f_25715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25679)
static void C_ccall f_25679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25683)
static void C_ccall f_25683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25644)
static void C_ccall f_25644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25648)
static void C_ccall f_25648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25609)
static void C_ccall f_25609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25613)
static void C_ccall f_25613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25560)
static void C_fcall f_25560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25563)
static void C_ccall f_25563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25567)
static void C_ccall f_25567(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25531)
static void C_ccall f_25531(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25536)
static void C_ccall f_25536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25080)
static void C_ccall f_25080(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25080)
static void C_ccall f_25080r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25508)
static void C_ccall f_25508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25523)
static void C_ccall f_25523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25515)
static void C_ccall f_25515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25479)
static void C_ccall f_25479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25483)
static void C_ccall f_25483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25444)
static void C_ccall f_25444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25448)
static void C_ccall f_25448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25409)
static void C_ccall f_25409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25413)
static void C_ccall f_25413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25084)
static void C_fcall f_25084(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25373)
static void C_ccall f_25373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25388)
static void C_ccall f_25388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25380)
static void C_ccall f_25380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25344)
static void C_ccall f_25344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25348)
static void C_ccall f_25348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25309)
static void C_ccall f_25309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25313)
static void C_ccall f_25313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25274)
static void C_ccall f_25274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25278)
static void C_ccall f_25278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25087)
static void C_fcall f_25087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25238)
static void C_ccall f_25238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25253)
static void C_ccall f_25253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25245)
static void C_ccall f_25245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25209)
static void C_ccall f_25209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25213)
static void C_ccall f_25213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25174)
static void C_ccall f_25174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25178)
static void C_ccall f_25178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25139)
static void C_ccall f_25139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25143)
static void C_ccall f_25143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25090)
static void C_fcall f_25090(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25093)
static void C_ccall f_25093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25097)
static void C_ccall f_25097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25061)
static void C_ccall f_25061(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25066)
static void C_ccall f_25066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24332)
static void C_ccall f_24332(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24332)
static void C_ccall f_24332r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25038)
static void C_ccall f_25038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25053)
static void C_ccall f_25053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25045)
static void C_ccall f_25045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25009)
static void C_ccall f_25009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25013)
static void C_ccall f_25013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24974)
static void C_ccall f_24974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24978)
static void C_ccall f_24978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24939)
static void C_ccall f_24939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24943)
static void C_ccall f_24943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24904)
static void C_ccall f_24904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24908)
static void C_ccall f_24908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24336)
static void C_fcall f_24336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24868)
static void C_ccall f_24868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24883)
static void C_ccall f_24883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24875)
static void C_ccall f_24875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24839)
static void C_ccall f_24839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24843)
static void C_ccall f_24843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24804)
static void C_ccall f_24804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24808)
static void C_ccall f_24808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24769)
static void C_ccall f_24769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24773)
static void C_ccall f_24773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24734)
static void C_ccall f_24734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24738)
static void C_ccall f_24738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24339)
static void C_fcall f_24339(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24698)
static void C_ccall f_24698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24713)
static void C_ccall f_24713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24705)
static void C_ccall f_24705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24669)
static void C_ccall f_24669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24673)
static void C_ccall f_24673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24634)
static void C_ccall f_24634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24638)
static void C_ccall f_24638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24599)
static void C_ccall f_24599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24603)
static void C_ccall f_24603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24564)
static void C_ccall f_24564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24568)
static void C_ccall f_24568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24342)
static void C_fcall f_24342(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24528)
static void C_ccall f_24528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24543)
static void C_ccall f_24543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24535)
static void C_ccall f_24535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24499)
static void C_ccall f_24499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24503)
static void C_ccall f_24503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24464)
static void C_ccall f_24464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24468)
static void C_ccall f_24468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24429)
static void C_ccall f_24429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24433)
static void C_ccall f_24433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24394)
static void C_ccall f_24394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24398)
static void C_ccall f_24398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24345)
static void C_fcall f_24345(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24348)
static void C_ccall f_24348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24352)
static void C_ccall f_24352(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24313)
static void C_ccall f_24313(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24318)
static void C_ccall f_24318(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23584)
static void C_ccall f_23584(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23584)
static void C_ccall f_23584r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24290)
static void C_ccall f_24290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24305)
static void C_ccall f_24305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24297)
static void C_ccall f_24297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24261)
static void C_ccall f_24261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24265)
static void C_ccall f_24265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24226)
static void C_ccall f_24226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24230)
static void C_ccall f_24230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24191)
static void C_ccall f_24191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24195)
static void C_ccall f_24195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24156)
static void C_ccall f_24156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24160)
static void C_ccall f_24160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23588)
static void C_fcall f_23588(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24120)
static void C_ccall f_24120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24135)
static void C_ccall f_24135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24127)
static void C_ccall f_24127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24091)
static void C_ccall f_24091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24095)
static void C_ccall f_24095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24056)
static void C_ccall f_24056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24060)
static void C_ccall f_24060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24021)
static void C_ccall f_24021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24025)
static void C_ccall f_24025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23986)
static void C_ccall f_23986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23990)
static void C_ccall f_23990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23591)
static void C_fcall f_23591(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23950)
static void C_ccall f_23950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23965)
static void C_ccall f_23965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23957)
static void C_ccall f_23957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23921)
static void C_ccall f_23921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23925)
static void C_ccall f_23925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23886)
static void C_ccall f_23886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23890)
static void C_ccall f_23890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23851)
static void C_ccall f_23851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23855)
static void C_ccall f_23855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23816)
static void C_ccall f_23816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23820)
static void C_ccall f_23820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23594)
static void C_fcall f_23594(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23780)
static void C_ccall f_23780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23795)
static void C_ccall f_23795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23787)
static void C_ccall f_23787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23751)
static void C_ccall f_23751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23755)
static void C_ccall f_23755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23716)
static void C_ccall f_23716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23720)
static void C_ccall f_23720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23681)
static void C_ccall f_23681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23685)
static void C_ccall f_23685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23646)
static void C_ccall f_23646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23650)
static void C_ccall f_23650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23597)
static void C_fcall f_23597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23600)
static void C_ccall f_23600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23604)
static void C_ccall f_23604(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23565)
static void C_ccall f_23565(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23570)
static void C_ccall f_23570(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23114)
static void C_ccall f_23114(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23114)
static void C_ccall f_23114r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23542)
static void C_ccall f_23542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23557)
static void C_ccall f_23557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23549)
static void C_ccall f_23549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23513)
static void C_ccall f_23513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23517)
static void C_ccall f_23517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23478)
static void C_ccall f_23478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23482)
static void C_ccall f_23482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23443)
static void C_ccall f_23443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23447)
static void C_ccall f_23447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23118)
static void C_fcall f_23118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23407)
static void C_ccall f_23407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23422)
static void C_ccall f_23422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23414)
static void C_ccall f_23414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23378)
static void C_ccall f_23378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23382)
static void C_ccall f_23382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23343)
static void C_ccall f_23343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23347)
static void C_ccall f_23347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23308)
static void C_ccall f_23308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23312)
static void C_ccall f_23312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23121)
static void C_fcall f_23121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23272)
static void C_ccall f_23272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23287)
static void C_ccall f_23287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23279)
static void C_ccall f_23279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23243)
static void C_ccall f_23243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23247)
static void C_ccall f_23247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23208)
static void C_ccall f_23208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23212)
static void C_ccall f_23212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23173)
static void C_ccall f_23173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23177)
static void C_ccall f_23177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23124)
static void C_fcall f_23124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23127)
static void C_ccall f_23127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23131)
static void C_ccall f_23131(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23095)
static void C_ccall f_23095(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23100)
static void C_ccall f_23100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22366)
static void C_ccall f_22366(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22366)
static void C_ccall f_22366r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23072)
static void C_ccall f_23072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23087)
static void C_ccall f_23087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23079)
static void C_ccall f_23079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23043)
static void C_ccall f_23043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23047)
static void C_ccall f_23047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23008)
static void C_ccall f_23008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23012)
static void C_ccall f_23012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22973)
static void C_ccall f_22973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22977)
static void C_ccall f_22977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22938)
static void C_ccall f_22938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22942)
static void C_ccall f_22942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22370)
static void C_fcall f_22370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22902)
static void C_ccall f_22902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22917)
static void C_ccall f_22917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22909)
static void C_ccall f_22909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22873)
static void C_ccall f_22873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22877)
static void C_ccall f_22877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22838)
static void C_ccall f_22838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22842)
static void C_ccall f_22842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22803)
static void C_ccall f_22803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22807)
static void C_ccall f_22807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22768)
static void C_ccall f_22768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22772)
static void C_ccall f_22772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22373)
static void C_fcall f_22373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22732)
static void C_ccall f_22732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22747)
static void C_ccall f_22747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22739)
static void C_ccall f_22739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22703)
static void C_ccall f_22703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22707)
static void C_ccall f_22707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22668)
static void C_ccall f_22668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22672)
static void C_ccall f_22672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22633)
static void C_ccall f_22633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22637)
static void C_ccall f_22637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22598)
static void C_ccall f_22598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22602)
static void C_ccall f_22602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22376)
static void C_fcall f_22376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22562)
static void C_ccall f_22562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22577)
static void C_ccall f_22577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22569)
static void C_ccall f_22569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22533)
static void C_ccall f_22533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22537)
static void C_ccall f_22537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22498)
static void C_ccall f_22498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22502)
static void C_ccall f_22502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22463)
static void C_ccall f_22463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22467)
static void C_ccall f_22467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22428)
static void C_ccall f_22428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22432)
static void C_ccall f_22432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22379)
static void C_fcall f_22379(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22382)
static void C_ccall f_22382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22386)
static void C_ccall f_22386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22028)
static void C_fcall f_22028(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21868)
static void C_fcall f_21868(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21903)
static void C_fcall f_21903(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21913)
static void C_fcall f_21913(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21917)
static void C_ccall f_21917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21920)
static void C_ccall f_21920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21981)
static void C_ccall f_21981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21972)
static void C_ccall f_21972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21923)
static void C_ccall f_21923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21942)
static void C_ccall f_21942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21949)
static void C_ccall f_21949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21926)
static void C_ccall f_21926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21932)
static void C_ccall f_21932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21901)
static void C_ccall f_21901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21876)
static void C_fcall f_21876(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21875)
static void C_ccall f_21875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22036)
static void C_fcall f_22036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21614)
static void C_ccall f_21614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21636)
static void C_ccall f_21636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21651)
static void C_ccall f_21651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21654)
static void C_fcall f_21654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21830)
static void C_ccall f_21830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21824)
static void C_ccall f_21824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21657)
static void C_ccall f_21657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21806)
static void C_ccall f_21806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21660)
static void C_fcall f_21660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21663)
static void C_ccall f_21663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21799)
static void C_ccall f_21799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21787)
static void C_ccall f_21787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21683)
static void C_fcall f_21683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21690)
static void C_ccall f_21690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21760)
static void C_ccall f_21760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21746)
static void C_ccall f_21746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21754)
static void C_ccall f_21754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21693)
static void C_ccall f_21693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21732)
static void C_ccall f_21732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21696)
static void C_fcall f_21696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21725)
static void C_ccall f_21725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21702)
static void C_ccall f_21702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21705)
static void C_ccall f_21705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21709)
static void C_ccall f_21709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21670)
static void C_fcall f_21670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21673)
static void C_ccall f_21673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21483)
static void C_fcall f_21483(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21492)
static void C_fcall f_21492(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21440)
static void C_ccall f_21440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21446)
static void C_fcall f_21446(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21509)
static void C_ccall f_21509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21595)
static void C_ccall f_21595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21582)
static void C_ccall f_21582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21590)
static void C_ccall f_21590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21512)
static void C_ccall f_21512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21516)
static void C_ccall f_21516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21559)
static void C_ccall f_21559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21521)
static void C_ccall f_21521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21487)
static void C_ccall f_21487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21382)
static void C_ccall f_21382(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21389)
static void C_ccall f_21389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21420)
static void C_ccall f_21420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21416)
static void C_ccall f_21416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21408)
static void C_ccall f_21408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21291)
static void C_ccall f_21291(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21298)
static void C_ccall f_21298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21366)
static void C_ccall f_21366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21309)
static void C_fcall f_21309(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21336)
static void C_ccall f_21336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21320)
static void C_ccall f_21320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21225)
static void C_ccall f_21225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21236)
static void C_ccall f_21236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21239)
static void C_fcall f_21239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21246)
static void C_ccall f_21246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21219)
static void C_ccall f_21219(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20673)
static void C_ccall f_20673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20704)
static void C_ccall f_20704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21168)
static void C_ccall f_21168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21174)
static void C_ccall f_21174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20715)
static void C_ccall f_20715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20600)
static void C_fcall f_20600(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20625)
static void C_ccall f_20625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20560)
static void C_fcall f_20560(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20573)
static void C_fcall f_20573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20614)
static void C_ccall f_20614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20719)
static void C_ccall f_20719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21156)
static void C_ccall f_21156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21152)
static void C_fcall f_21152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21148)
static void C_ccall f_21148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20722)
static void C_ccall f_20722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20942)
static void C_fcall f_20942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21051)
static void C_ccall f_21051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21116)
static void C_ccall f_21116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21058)
static void C_fcall f_21058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21062)
static void C_ccall f_21062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21066)
static void C_ccall f_21066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21108)
static void C_ccall f_21108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21104)
static void C_ccall f_21104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21082)
static void C_ccall f_21082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20945)
static void C_fcall f_20945(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20948)
static void C_fcall f_20948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20847)
static void C_ccall f_20847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20930)
static void C_ccall f_20930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20897)
static void C_ccall f_20897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20923)
static void C_ccall f_20923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20905)
static void C_ccall f_20905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20853)
static void C_fcall f_20853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20893)
static void C_ccall f_20893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20835)
static void C_ccall f_20835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20806)
static void C_ccall f_20806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20828)
static void C_ccall f_20828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20814)
static void C_ccall f_20814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20768)
static void C_fcall f_20768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20725)
static void C_fcall f_20725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20736)
static void C_ccall f_20736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20740)
static void C_ccall f_20740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20744)
static void C_ccall f_20744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20748)
static void C_ccall f_20748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20732)
static void C_ccall f_20732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20692)
static void C_fcall f_20692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20687)
static void C_fcall f_20687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20682)
static void C_fcall f_20682(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20514)
static void C_ccall f_20514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20525)
static void C_ccall f_20525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20540)
static void C_ccall f_20540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20476)
static void C_ccall f_20476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20487)
static void C_ccall f_20487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20502)
static void C_ccall f_20502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20409)
static void C_ccall f_20409(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20429)
static void C_fcall f_20429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20439)
static void C_ccall f_20439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20452)
static void C_ccall f_20452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20420)
static void C_ccall f_20420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20427)
static void C_ccall f_20427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20216)
static void C_ccall f_20216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20276)
static void C_fcall f_20276(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20286)
static void C_ccall f_20286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20400)
static void C_ccall f_20400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20365)
static void C_ccall f_20365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20357)
static void C_ccall f_20357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20328)
static void C_ccall f_20328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20306)
static void C_ccall f_20306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20309)
static void C_ccall f_20309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20297)
static void C_ccall f_20297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20223)
static void C_ccall f_20223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20274)
static void C_ccall f_20274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20266)
static void C_ccall f_20266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20226)
static void C_ccall f_20226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20237)
static void C_ccall f_20237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20241)
static void C_ccall f_20241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20233)
static void C_ccall f_20233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20074)
static void C_ccall f_20074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20122)
static void C_fcall f_20122(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20132)
static void C_ccall f_20132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20143)
static void C_ccall f_20143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20180)
static void C_ccall f_20180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20155)
static void C_ccall f_20155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20146)
static void C_ccall f_20146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20084)
static void C_ccall f_20084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20120)
static void C_ccall f_20120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20091)
static void C_ccall f_20091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19723)
static void C_ccall f_19723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19730)
static void C_ccall f_19730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19964)
static void C_fcall f_19964(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19974)
static void C_ccall f_19974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19985)
static void C_ccall f_19985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19997)
static void C_fcall f_19997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20000)
static void C_ccall f_20000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19988)
static void C_ccall f_19988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19736)
static void C_ccall f_19736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19962)
static void C_ccall f_19962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19958)
static void C_ccall f_19958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19904)
static void C_fcall f_19904(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19869)
static void C_fcall f_19869(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19885)
static void C_fcall f_19885(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19840)
static void C_fcall f_19840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19764)
static void C_ccall f_19764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19767)
static void C_ccall f_19767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19831)
static void C_ccall f_19831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19827)
static void C_ccall f_19827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19747)
static void C_fcall f_19747(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19758)
static void C_ccall f_19758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19754)
static void C_ccall f_19754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19676)
static void C_ccall f_19676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19709)
static void C_ccall f_19709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19691)
static void C_ccall f_19691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19703)
static void C_ccall f_19703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19294)
static void C_ccall f_19294(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19503)
static void C_fcall f_19503(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19513)
static void C_ccall f_19513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19524)
static void C_ccall f_19524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19644)
static void C_ccall f_19644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19623)
static void C_ccall f_19623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19602)
static void C_ccall f_19602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19581)
static void C_ccall f_19581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19560)
static void C_ccall f_19560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19539)
static void C_ccall f_19539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19527)
static void C_ccall f_19527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19304)
static void C_ccall f_19304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19307)
static void C_fcall f_19307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19470)
static void C_fcall f_19470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19310)
static void C_fcall f_19310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19461)
static void C_ccall f_19461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19441)
static void C_ccall f_19441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19313)
static void C_fcall f_19313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19406)
static void C_ccall f_19406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19423)
static void C_ccall f_19423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19316)
static void C_fcall f_19316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19355)
static void C_ccall f_19355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19389)
static void C_ccall f_19389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19373)
static void C_ccall f_19373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19358)
static void C_fcall f_19358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19323)
static void C_fcall f_19323(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19334)
static void C_ccall f_19334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19338)
static void C_ccall f_19338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19330)
static void C_ccall f_19330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19216)
static void C_ccall f_19216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19234)
static void C_ccall f_19234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19052)
static void C_fcall f_19052(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19060)
static void C_fcall f_19060(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19070)
static void C_ccall f_19070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19108)
static void C_ccall f_19108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19111)
static void C_ccall f_19111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19114)
static void C_ccall f_19114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19189)
static void C_fcall f_19189(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19199)
static void C_ccall f_19199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19117)
static void C_ccall f_19117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19120)
static void C_ccall f_19120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19123)
static void C_ccall f_19123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19143)
static void C_fcall f_19143(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19153)
static void C_ccall f_19153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19156)
static void C_ccall f_19156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19159)
static void C_ccall f_19159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19126)
static void C_ccall f_19126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19129)
static void C_ccall f_19129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19046)
static void C_fcall f_19046(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19040)
static void C_fcall f_19040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19034)
static void C_fcall f_19034(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18963)
static void C_fcall f_18963(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19004)
static void C_ccall f_19004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19008)
static void C_ccall f_19008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19012)
static void C_ccall f_19012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19016)
static void C_ccall f_19016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19020)
static void C_ccall f_19020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19024)
static void C_ccall f_19024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19028)
static void C_ccall f_19028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19032)
static void C_ccall f_19032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18965)
static void C_fcall f_18965(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18971)
static void C_fcall f_18971(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18993)
static void C_ccall f_18993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18982)
static void C_ccall f_18982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18812)
static void C_fcall f_18812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18827)
static void C_fcall f_18827(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18840)
static void C_ccall f_18840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18800)
static void C_ccall f_18800(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18788)
static void C_ccall f_18788(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18776)
static void C_ccall f_18776(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18770)
static void C_fcall f_18770(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18764)
static void C_ccall f_18764(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18752)
static void C_ccall f_18752(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18740)
static void C_ccall f_18740(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18728)
static void C_ccall f_18728(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18716)
static void C_ccall f_18716(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18710)
static void C_fcall f_18710(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18674)
static void C_ccall f_18674(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18668)
static void C_ccall f_18668(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18621)
static void C_ccall f_18621(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18625)
static void C_ccall f_18625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18641)
static void C_ccall f_18641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18650)
static void C_ccall f_18650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18628)
static void C_ccall f_18628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18612)
static void C_ccall f_18612(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18616)
static void C_ccall f_18616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18433)
static void C_ccall f_18433(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18433)
static void C_ccall f_18433r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_18586)
static void C_fcall f_18586(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18599)
static void C_ccall f_18599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18581)
static void C_ccall f_18581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18436)
static void C_fcall f_18436(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18578)
static void C_ccall f_18578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18562)
static void C_ccall f_18562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18555)
static void C_ccall f_18555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18551)
static void C_ccall f_18551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18464)
static void C_ccall f_18464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18472)
static void C_fcall f_18472(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18482)
static void C_ccall f_18482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18485)
static void C_ccall f_18485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18467)
static void C_ccall f_18467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18262)
static void C_ccall f_18262(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_18268)
static void C_ccall f_18268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18271)
static void C_fcall f_18271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16071)
static void C_ccall f_16071(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16084)
static void C_ccall f_16084(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16091)
static void C_fcall f_16091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16098)
static void C_ccall f_16098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16077)
static void C_ccall f_16077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18275)
static void C_ccall f_18275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18309)
static void C_ccall f_18309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18402)
static void C_fcall f_18402(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18412)
static void C_fcall f_18412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18315)
static void C_ccall f_18315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18372)
static void C_fcall f_18372(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18382)
static void C_fcall f_18382(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18323)
static void C_ccall f_18323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18337)
static void C_ccall f_18337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18341)
static void C_ccall f_18341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18345)
static void C_ccall f_18345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18349)
static void C_ccall f_18349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18356)
static void C_ccall f_18356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18333)
static void C_ccall f_18333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18326)
static void C_ccall f_18326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18278)
static void C_ccall f_18278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17198)
static void C_ccall f_17198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17211)
static void C_ccall f_17211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17261)
static void C_ccall f_17261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17358)
static void C_ccall f_17358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17426)
static void C_ccall f_17426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17683)
static void C_ccall f_17683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17433)
static void C_fcall f_17433(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17671)
static void C_ccall f_17671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17622)
static void C_ccall f_17622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17628)
static void C_ccall f_17628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17652)
static void C_ccall f_17652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17648)
static void C_ccall f_17648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17636)
static void C_ccall f_17636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17436)
static void C_fcall f_17436(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17598)
static void C_ccall f_17598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17602)
static void C_ccall f_17602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17439)
static void C_fcall f_17439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17575)
static void C_ccall f_17575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17579)
static void C_ccall f_17579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17442)
static void C_fcall f_17442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17552)
static void C_ccall f_17552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17556)
static void C_ccall f_17556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17445)
static void C_fcall f_17445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17477)
static void C_ccall f_17477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17495)
static void C_ccall f_17495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17513)
static void C_ccall f_17513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17531)
static void C_ccall f_17531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17448)
static void C_fcall f_17448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17452)
static void C_ccall f_17452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17362)
static void C_ccall f_17362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17366)
static void C_ccall f_17366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17370)
static void C_ccall f_17370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17265)
static void C_ccall f_17265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17269)
static void C_ccall f_17269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17273)
static void C_ccall f_17273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17292)
static void C_ccall f_17292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17296)
static void C_ccall f_17296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17276)
static void C_fcall f_17276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17280)
static void C_ccall f_17280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17215)
static void C_ccall f_17215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17219)
static void C_ccall f_17219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17223)
static void C_ccall f_17223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17205)
static void C_fcall f_17205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17020)
static void C_fcall f_17020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17032)
static void C_fcall f_17032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17051)
static void C_ccall f_17051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17069)
static void C_fcall f_17069(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17101)
static void C_ccall f_17101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17104)
static void C_fcall f_17104(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17097)
static void C_ccall f_17097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17083)
static void C_ccall f_17083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17054)
static void C_ccall f_17054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16999)
static void C_fcall f_16999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17006)
static void C_ccall f_17006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17009)
static void C_ccall f_17009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17015)
static void C_ccall f_17015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_fcall f_16934(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16943)
static void C_fcall f_16943(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16966)
static void C_ccall f_16966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16956)
static void C_fcall f_16956(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16890)
static void C_fcall f_16890(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16878)
static void C_fcall f_16878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16776)
static void C_fcall f_16776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16728)
static void C_fcall f_16728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16109)
static void C_fcall f_16109(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16113)
static void C_ccall f_16113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16116)
static void C_ccall f_16116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16542)
static void C_ccall f_16542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16538)
static void C_ccall f_16538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16534)
static void C_ccall f_16534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16119)
static void C_fcall f_16119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16242)
static void C_ccall f_16242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15475)
static void C_ccall f_15475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16248)
static void C_fcall f_16248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15491)
static void C_ccall f_15491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16336)
static void C_fcall f_16336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16406)
static void C_ccall f_16406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15507)
static void C_ccall f_15507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16409)
static void C_fcall f_16409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15539)
static void C_ccall f_15539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16487)
static void C_fcall f_16487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16513)
static void C_ccall f_16513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16507)
static void C_ccall f_16507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16496)
static void C_ccall f_16496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16438)
static void C_fcall f_16438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16448)
static void C_ccall f_16448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16474)
static void C_ccall f_16474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16468)
static void C_ccall f_16468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16451)
static void C_ccall f_16451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16461)
static void C_ccall f_16461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16454)
static void C_fcall f_16454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16415)
static void C_ccall f_16415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16424)
static void C_ccall f_16424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16418)
static void C_fcall f_16418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16342)
static void C_ccall f_16342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16360)
static void C_fcall f_16360(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16393)
static void C_ccall f_16393(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16379)
static void C_ccall f_16379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16387)
static void C_ccall f_16387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16370)
static void C_ccall f_16370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16345)
static void C_ccall f_16345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16257)
static void C_ccall f_16257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16279)
static void C_fcall f_16279(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16326)
static void C_ccall f_16326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16312)
static void C_ccall f_16312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16320)
static void C_ccall f_16320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16292)
static void C_ccall f_16292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16295)
static void C_fcall f_16295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16260)
static void C_ccall f_16260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16277)
static void C_ccall f_16277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16263)
static void C_fcall f_16263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16128)
static void C_ccall f_16128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16134)
static void C_ccall f_16134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16192)
static void C_ccall f_16192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16195)
static void C_ccall f_16195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16216)
static void C_ccall f_16216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16227)
static void C_ccall f_16227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16206)
static void C_ccall f_16206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16140)
static void C_ccall f_16140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16150)
static void C_ccall f_16150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16186)
static void C_ccall f_16186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16156)
static void C_ccall f_16156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16171)
static void C_ccall f_16171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16175)
static void C_ccall f_16175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16179)
static void C_ccall f_16179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16163)
static void C_ccall f_16163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16005)
static void C_fcall f_16005(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16007)
static void C_ccall f_16007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16055)
static void C_ccall f_16055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16011)
static void C_ccall f_16011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16014)
static void C_fcall f_16014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16019)
static void C_fcall f_16019(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16040)
static void C_ccall f_16040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15997)
static void C_fcall f_15997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15999)
static void C_ccall f_15999(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15789)
static void C_fcall f_15789(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15806)
static void C_ccall f_15806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15810)
static void C_ccall f_15810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15756)
static void C_fcall f_15756(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15763)
static void C_ccall f_15763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15707)
static void C_ccall f_15707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15714)
static void C_ccall f_15714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15772)
static void C_ccall f_15772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15995)
static void C_ccall f_15995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15972)
static void C_ccall f_15972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15988)
static void C_ccall f_15988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15834)
static void C_ccall f_15834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15837)
static void C_ccall f_15837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15861)
static void C_ccall f_15861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15918)
static void C_ccall f_15918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15924)
static void C_ccall f_15924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15933)
static void C_ccall f_15933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15942)
static void C_ccall f_15942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15951)
static void C_ccall f_15951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15960)
static void C_ccall f_15960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15912)
static void C_ccall f_15912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15867)
static void C_ccall f_15867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15873)
static void C_ccall f_15873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15879)
static void C_ccall f_15879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15885)
static void C_ccall f_15885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15891)
static void C_ccall f_15891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15897)
static void C_ccall f_15897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15738)
static void C_fcall f_15738(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15745)
static void C_ccall f_15745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15728)
static void C_fcall f_15728(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15716)
static void C_fcall f_15716(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15684)
static void C_fcall f_15684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15691)
static void C_ccall f_15691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15698)
static void C_ccall f_15698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15668)
static void C_fcall f_15668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15675)
static void C_ccall f_15675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15682)
static void C_ccall f_15682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15656)
static void C_fcall f_15656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15638)
static void C_fcall f_15638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15620)
static void C_fcall f_15620(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15605)
static void C_fcall f_15605(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15599)
static void C_fcall f_15599(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15587)
static void C_fcall f_15587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15569)
static void C_fcall f_15569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15548)
static void C_fcall f_15548(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15516)
static void C_fcall f_15516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15523)
static void C_ccall f_15523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15458)
static void C_fcall f_15458(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15466)
static void C_ccall f_15466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15448)
static void C_fcall f_15448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15456)
static void C_ccall f_15456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15442)
static void C_fcall f_15442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15430)
static void C_fcall f_15430(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15427)
static void C_ccall f_15427(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15406)
static void C_fcall f_15406(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15319)
static void C_fcall f_15319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15298)
static void C_fcall f_15298(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_15288)
static void C_fcall f_15288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15276)
static void C_fcall f_15276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15247)
static void C_ccall f_15247(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15235)
static void C_fcall f_15235(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15217)
static void C_fcall f_15217(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15199)
static void C_fcall f_15199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15178)
static void C_ccall f_15178(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15084)
static void C_ccall f_15084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15088)
static void C_ccall f_15088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15117)
static void C_ccall f_15117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15122)
static void C_fcall f_15122(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15147)
static void C_fcall f_15147(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15132)
static void C_ccall f_15132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14566)
static void C_ccall f_14566(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14566)
static void C_ccall f_14566r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14837)
static void C_ccall f_14837(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14841)
static void C_ccall f_14841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14846)
static void C_ccall f_14846(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14846)
static void C_ccall f_14846r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15052)
static void C_ccall f_15052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15067)
static void C_ccall f_15067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15059)
static void C_ccall f_15059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15023)
static void C_ccall f_15023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15027)
static void C_ccall f_15027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14988)
static void C_ccall f_14988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14992)
static void C_ccall f_14992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14850)
static void C_fcall f_14850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14952)
static void C_ccall f_14952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14967)
static void C_ccall f_14967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14959)
static void C_ccall f_14959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14923)
static void C_ccall f_14923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14927)
static void C_ccall f_14927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14888)
static void C_ccall f_14888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14892)
static void C_ccall f_14892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14853)
static void C_fcall f_14853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14856)
static void C_ccall f_14856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14859)
static void C_fcall f_14859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14828)
static void C_ccall f_14828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14570)
static void C_ccall f_14570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14797)
static void C_ccall f_14797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14812)
static void C_ccall f_14812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14804)
static void C_ccall f_14804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14768)
static void C_ccall f_14768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14772)
static void C_ccall f_14772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14733)
static void C_ccall f_14733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14737)
static void C_ccall f_14737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14573)
static void C_fcall f_14573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14697)
static void C_ccall f_14697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14712)
static void C_ccall f_14712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14704)
static void C_ccall f_14704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14668)
static void C_ccall f_14668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14672)
static void C_ccall f_14672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14633)
static void C_ccall f_14633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14637)
static void C_ccall f_14637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14576)
static void C_fcall f_14576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14579)
static void C_ccall f_14579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14582)
static void C_ccall f_14582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14594)
static void C_ccall f_14594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14612)
static void C_ccall f_14612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14600)
static void C_ccall f_14600(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14588)
static void C_ccall f_14588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14503)
static void C_fcall f_14503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14163)
static void C_ccall f_14163(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14345)
static void C_ccall f_14345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14349)
static void C_ccall f_14349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14351)
static void C_fcall f_14351(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14276)
static void C_fcall f_14276(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14286)
static void C_fcall f_14286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14293)
static void C_fcall f_14293(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14361)
static void C_ccall f_14361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14364)
static void C_ccall f_14364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14368)
static void C_ccall f_14368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14388)
static void C_fcall f_14388(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14404)
static void C_ccall f_14404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14371)
static void C_ccall f_14371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14166)
static void C_fcall f_14166(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14178)
static void C_fcall f_14178(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14214)
static void C_ccall f_14214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14234)
static void C_ccall f_14234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14239)
static void C_fcall f_14239(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13676)
static void C_ccall f_13676(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13676)
static void C_ccall f_13676r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13603)
static void C_fcall f_13603(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13448)
static void C_ccall f_13448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13454)
static void C_ccall f_13454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13539)
static void C_fcall f_13539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13466)
static void C_ccall f_13466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13482)
static void C_ccall f_13482(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13486)
static void C_fcall f_13486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13489)
static void C_fcall f_13489(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13469)
static void C_ccall f_13469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13480)
static void C_ccall f_13480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13620)
static void C_ccall f_13620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14157)
static void C_ccall f_14157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13680)
static void C_ccall f_13680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14126)
static void C_ccall f_14126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14141)
static void C_ccall f_14141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14133)
static void C_ccall f_14133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14097)
static void C_ccall f_14097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14101)
static void C_ccall f_14101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14062)
static void C_ccall f_14062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14066)
static void C_ccall f_14066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14027)
static void C_ccall f_14027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14031)
static void C_ccall f_14031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13683)
static void C_fcall f_13683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13991)
static void C_ccall f_13991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14006)
static void C_ccall f_14006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13998)
static void C_ccall f_13998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13962)
static void C_ccall f_13962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13966)
static void C_ccall f_13966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13927)
static void C_ccall f_13927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13931)
static void C_ccall f_13931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13892)
static void C_ccall f_13892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13896)
static void C_ccall f_13896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13686)
static void C_fcall f_13686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13856)
static void C_ccall f_13856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13871)
static void C_ccall f_13871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13863)
static void C_ccall f_13863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13827)
static void C_ccall f_13827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13831)
static void C_ccall f_13831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13792)
static void C_ccall f_13792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13796)
static void C_ccall f_13796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13757)
static void C_ccall f_13757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13761)
static void C_ccall f_13761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13689)
static void C_fcall f_13689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13692)
static void C_ccall f_13692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13695)
static void C_ccall f_13695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13728)
static void C_ccall f_13728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13736)
static void C_ccall f_13736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13701)
static void C_ccall f_13701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13714)
static void C_ccall f_13714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13704)
static void C_fcall f_13704(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13707)
static void C_ccall f_13707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13243)
static void C_ccall f_13243(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13247)
static void C_ccall f_13247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13250)
static void C_ccall f_13250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13253)
static void C_ccall f_13253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13422)
static void C_ccall f_13422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13435)
static void C_ccall f_13435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13439)
static void C_ccall f_13439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13259)
static void C_ccall f_13259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13415)
static void C_ccall f_13415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13396)
static void C_ccall f_13396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13403)
static void C_ccall f_13403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13407)
static void C_ccall f_13407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13265)
static void C_fcall f_13265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13271)
static void C_ccall f_13271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13355)
static void C_ccall f_13355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13357)
static void C_fcall f_13357(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13379)
static void C_ccall f_13379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13386)
static void C_ccall f_13386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13390)
static void C_ccall f_13390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13376)
static void C_fcall f_13376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13372)
static void C_ccall f_13372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13313)
static void C_ccall f_13313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13330)
static void C_fcall f_13330(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13340)
static void C_ccall f_13340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13316)
static void C_ccall f_13316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13275)
static void C_fcall f_13275(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13283)
static void C_ccall f_13283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13285)
static void C_fcall f_13285(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13306)
static void C_ccall f_13306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13131)
static void C_fcall f_13131(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13241)
static void C_ccall f_13241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13200)
static void C_fcall f_13200(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13233)
static void C_ccall f_13233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13229)
static void C_ccall f_13229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13214)
static void C_ccall f_13214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13138)
static void C_ccall f_13138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13146)
static void C_fcall f_13146(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13191)
static void C_ccall f_13191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13179)
static void C_ccall f_13179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13163)
static void C_ccall f_13163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12364)
static void C_ccall f_12364(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12364)
static void C_ccall f_12364r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12681)
static void C_ccall f_12681(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12688)
static void C_fcall f_12688(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13093)
static void C_ccall f_13093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13108)
static void C_ccall f_13108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13100)
static void C_ccall f_13100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13064)
static void C_ccall f_13064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13068)
static void C_ccall f_13068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13029)
static void C_ccall f_13029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13033)
static void C_ccall f_13033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12994)
static void C_ccall f_12994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_ccall f_12998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12691)
static void C_fcall f_12691(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12958)
static void C_ccall f_12958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12973)
static void C_ccall f_12973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12965)
static void C_ccall f_12965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12929)
static void C_ccall f_12929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12933)
static void C_ccall f_12933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12894)
static void C_ccall f_12894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12898)
static void C_ccall f_12898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12859)
static void C_ccall f_12859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12863)
static void C_ccall f_12863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12694)
static void C_fcall f_12694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12823)
static void C_ccall f_12823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12838)
static void C_ccall f_12838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12830)
static void C_ccall f_12830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12794)
static void C_ccall f_12794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12798)
static void C_ccall f_12798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12759)
static void C_ccall f_12759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12724)
static void C_ccall f_12724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12728)
static void C_ccall f_12728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12697)
static void C_fcall f_12697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12700)
static void C_ccall f_12700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12368)
static void C_ccall f_12368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12371)
static void C_ccall f_12371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12645)
static void C_ccall f_12645(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12649)
static void C_ccall f_12649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12652)
static void C_ccall f_12652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12655)
static void C_ccall f_12655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12658)
static void C_ccall f_12658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12671)
static void C_ccall f_12671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12661)
static void C_fcall f_12661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12377)
static void C_ccall f_12377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12384)
static void C_fcall f_12384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12615)
static void C_ccall f_12615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12630)
static void C_ccall f_12630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12622)
static void C_ccall f_12622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12586)
static void C_ccall f_12586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12590)
static void C_ccall f_12590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12551)
static void C_ccall f_12551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12555)
static void C_ccall f_12555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12387)
static void C_fcall f_12387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12515)
static void C_ccall f_12515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12530)
static void C_ccall f_12530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12522)
static void C_ccall f_12522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12486)
static void C_ccall f_12486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12490)
static void C_ccall f_12490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12451)
static void C_ccall f_12451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12455)
static void C_ccall f_12455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12390)
static void C_fcall f_12390(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12393)
static void C_ccall f_12393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12408)
static void C_ccall f_12408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12430)
static void C_ccall f_12430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12414)
static void C_ccall f_12414(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12422)
static void C_ccall f_12422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12396)
static void C_ccall f_12396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12399)
static void C_ccall f_12399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12281)
static void C_fcall f_12281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12272)
static void C_fcall f_12272(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12263)
static void C_fcall f_12263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12245)
static void C_fcall f_12245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12227)
static void C_fcall f_12227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12209)
static void C_fcall f_12209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12200)
static void C_fcall f_12200(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12191)
static void C_fcall f_12191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11969)
static void C_ccall f_11969(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12019)
static void C_ccall f_12019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12164)
static void C_ccall f_12164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12045)
static void C_ccall f_12045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12160)
static void C_ccall f_12160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12145)
static void C_ccall f_12145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12126)
static void C_ccall f_12126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12099)
static void C_ccall f_12099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12052)
static void C_ccall f_12052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12022)
static void C_fcall f_12022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11972)
static void C_ccall f_11972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11978)
static void C_fcall f_11978(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11994)
static void C_ccall f_11994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11997)
static void C_ccall f_11997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11495)
static void C_ccall f_11495(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11495)
static void C_ccall f_11495r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11959)
static void C_ccall f_11959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11499)
static void C_fcall f_11499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11931)
static void C_ccall f_11931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11946)
static void C_ccall f_11946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11938)
static void C_ccall f_11938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11902)
static void C_ccall f_11902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11906)
static void C_ccall f_11906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11867)
static void C_ccall f_11867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11871)
static void C_ccall f_11871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11832)
static void C_ccall f_11832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11836)
static void C_ccall f_11836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11502)
static void C_fcall f_11502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11796)
static void C_ccall f_11796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11811)
static void C_ccall f_11811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11803)
static void C_ccall f_11803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11767)
static void C_ccall f_11767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11771)
static void C_ccall f_11771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11732)
static void C_ccall f_11732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11736)
static void C_ccall f_11736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11697)
static void C_ccall f_11697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11701)
static void C_ccall f_11701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11505)
static void C_fcall f_11505(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11661)
static void C_ccall f_11661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11676)
static void C_ccall f_11676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11668)
static void C_ccall f_11668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11632)
static void C_ccall f_11632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11636)
static void C_ccall f_11636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11597)
static void C_ccall f_11597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11601)
static void C_ccall f_11601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11562)
static void C_ccall f_11562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11566)
static void C_ccall f_11566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11508)
static void C_fcall f_11508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11511)
static void C_ccall f_11511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11514)
static void C_ccall f_11514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11529)
static void C_ccall f_11529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11541)
static void C_ccall f_11541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11520)
static void C_ccall f_11520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11523)
static void C_ccall f_11523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11419)
static void C_ccall f_11419(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11423)
static void C_ccall f_11423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11442)
static void C_ccall f_11442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11452)
static void C_ccall f_11452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11454)
static void C_fcall f_11454(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11471)
static void C_ccall f_11471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11474)
static void C_ccall f_11474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11485)
static void C_ccall f_11485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11426)
static void C_ccall f_11426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11156)
static void C_ccall f_11156(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11156)
static void C_ccall f_11156r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11409)
static void C_ccall f_11409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11160)
static void C_fcall f_11160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11381)
static void C_ccall f_11381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11396)
static void C_ccall f_11396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11388)
static void C_ccall f_11388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11352)
static void C_ccall f_11352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11356)
static void C_ccall f_11356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11317)
static void C_ccall f_11317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11321)
static void C_ccall f_11321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11163)
static void C_fcall f_11163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11281)
static void C_ccall f_11281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11296)
static void C_ccall f_11296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11288)
static void C_ccall f_11288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11252)
static void C_ccall f_11252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11256)
static void C_ccall f_11256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11217)
static void C_ccall f_11217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11221)
static void C_ccall f_11221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11166)
static void C_fcall f_11166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11169)
static void C_ccall f_11169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11172)
static void C_ccall f_11172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11184)
static void C_ccall f_11184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11196)
static void C_ccall f_11196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11178)
static void C_ccall f_11178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11120)
static void C_ccall f_11120(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11124)
static void C_ccall f_11124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11146)
static void C_ccall f_11146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11140)
static void C_ccall f_11140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11133)
static void C_ccall f_11133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10873)
static void C_ccall f_10873(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10873)
static void C_ccall f_10873r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10877)
static void C_fcall f_10877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11090)
static void C_ccall f_11090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11105)
static void C_ccall f_11105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11097)
static void C_ccall f_11097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11061)
static void C_ccall f_11061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11065)
static void C_ccall f_11065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11026)
static void C_ccall f_11026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11030)
static void C_ccall f_11030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10880)
static void C_fcall f_10880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10990)
static void C_ccall f_10990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11005)
static void C_ccall f_11005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10997)
static void C_ccall f_10997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10961)
static void C_ccall f_10961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10965)
static void C_ccall f_10965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10926)
static void C_ccall f_10926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10930)
static void C_ccall f_10930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10883)
static void C_fcall f_10883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10886)
static void C_ccall f_10886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10889)
static void C_ccall f_10889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10897)
static void C_ccall f_10897(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10905)
static void C_ccall f_10905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10895)
static void C_ccall f_10895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10658)
static void C_ccall f_10658(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10662)
static void C_ccall f_10662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10871)
static void C_ccall f_10871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10824)
static void C_ccall f_10824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10836)
static void C_fcall f_10836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10692)
static void C_ccall f_10692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10695)
static void C_ccall f_10695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10701)
static void C_ccall f_10701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10704)
static void C_ccall f_10704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10792)
static void C_fcall f_10792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10707)
static void C_fcall f_10707(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10786)
static void C_ccall f_10786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10713)
static void C_ccall f_10713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10716)
static void C_ccall f_10716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10671)
static void C_ccall f_10671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10678)
static void C_ccall f_10678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10188)
static void C_ccall f_10188(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10188)
static void C_ccall f_10188r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10192)
static void C_fcall f_10192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10628)
static void C_ccall f_10628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10643)
static void C_ccall f_10643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10635)
static void C_ccall f_10635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10599)
static void C_ccall f_10599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10603)
static void C_ccall f_10603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10564)
static void C_ccall f_10564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10529)
static void C_ccall f_10529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10533)
static void C_ccall f_10533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10195)
static void C_fcall f_10195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10493)
static void C_ccall f_10493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10508)
static void C_ccall f_10508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10500)
static void C_ccall f_10500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10464)
static void C_ccall f_10464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10468)
static void C_ccall f_10468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10429)
static void C_ccall f_10429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10433)
static void C_ccall f_10433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10394)
static void C_ccall f_10394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10398)
static void C_ccall f_10398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10198)
static void C_fcall f_10198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10358)
static void C_ccall f_10358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10373)
static void C_ccall f_10373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10365)
static void C_ccall f_10365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10329)
static void C_ccall f_10329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10333)
static void C_ccall f_10333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10294)
static void C_ccall f_10294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10298)
static void C_ccall f_10298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10259)
static void C_ccall f_10259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10263)
static void C_ccall f_10263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10201)
static void C_fcall f_10201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10204)
static void C_ccall f_10204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10207)
static void C_ccall f_10207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10230)
static void C_ccall f_10230(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10238)
static void C_ccall f_10238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10213)
static void C_ccall f_10213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10216)
static void C_ccall f_10216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10108)
static void C_fcall f_10108(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10099)
static void C_fcall f_10099(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10027)
static void C_ccall f_10027(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10031)
static void C_ccall f_10031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10034)
static void C_fcall f_10034(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9772)
static void C_ccall f_9772(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9772)
static void C_ccall f_9772r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9776)
static void C_fcall f_9776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9997)
static void C_ccall f_9997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10012)
static void C_ccall f_10012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10004)
static void C_ccall f_10004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9968)
static void C_ccall f_9968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9972)
static void C_ccall f_9972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9933)
static void C_ccall f_9933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9937)
static void C_ccall f_9937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9779)
static void C_fcall f_9779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9897)
static void C_ccall f_9897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9912)
static void C_ccall f_9912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9904)
static void C_ccall f_9904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9868)
static void C_ccall f_9868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9872)
static void C_ccall f_9872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9833)
static void C_ccall f_9833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9837)
static void C_ccall f_9837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9782)
static void C_fcall f_9782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9785)
static void C_ccall f_9785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9788)
static void C_ccall f_9788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9800)
static void C_ccall f_9800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9812)
static void C_ccall f_9812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9794)
static void C_ccall f_9794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9657)
static void C_fcall f_9657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9770)
static void C_ccall f_9770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9667)
static void C_ccall f_9667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9755)
static void C_ccall f_9755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9766)
static void C_ccall f_9766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9762)
static void C_ccall f_9762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9670)
static void C_ccall f_9670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9752)
static void C_ccall f_9752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9678)
static void C_ccall f_9678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9742)
static void C_ccall f_9742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9687)
static void C_ccall f_9687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9706)
static void C_ccall f_9706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9735)
static void C_ccall f_9735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9716)
static void C_ccall f_9716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9731)
static void C_ccall f_9731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9719)
static void C_ccall f_9719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9690)
static void C_ccall f_9690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9700)
static void C_ccall f_9700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9681)
static void C_fcall f_9681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9684)
static void C_ccall f_9684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9611)
static void C_fcall f_9611(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9602)
static void C_fcall f_9602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9301)
static void C_fcall f_9301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9308)
static void C_ccall f_9308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9597)
static void C_ccall f_9597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9311)
static void C_ccall f_9311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9582)
static void C_ccall f_9582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9574)
static void C_ccall f_9574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9566)
static void C_ccall f_9566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9569)
static void C_ccall f_9569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9537)
static void C_fcall f_9537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9560)
static void C_ccall f_9560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9543)
static void C_fcall f_9543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9547)
static void C_ccall f_9547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9314)
static void C_ccall f_9314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9320)
static void C_ccall f_9320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9412)
static void C_ccall f_9412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9524)
static void C_ccall f_9524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_ccall f_9531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9435)
static void C_fcall f_9435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9437)
static void C_fcall f_9437(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9486)
static void C_fcall f_9486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9521)
static void C_ccall f_9521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9510)
static void C_ccall f_9510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9655)
static void C_ccall f_9655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9630)
static void C_ccall f_9630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9651)
static void C_ccall f_9651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9647)
static void C_ccall f_9647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9639)
static void C_ccall f_9639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9503)
static void C_ccall f_9503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9496)
static void C_ccall f_9496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9444)
static void C_ccall f_9444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9484)
static void C_ccall f_9484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9448)
static void C_ccall f_9448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9480)
static void C_ccall f_9480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9467)
static void C_ccall f_9467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9475)
static void C_ccall f_9475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9471)
static void C_ccall f_9471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9451)
static void C_fcall f_9451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9454)
static void C_ccall f_9454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9428)
static void C_ccall f_9428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9415)
static void C_ccall f_9415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9424)
static void C_ccall f_9424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9419)
static void C_ccall f_9419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9326)
static void C_ccall f_9326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9406)
static void C_ccall f_9406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9386)
static void C_ccall f_9386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9392)
static void C_ccall f_9392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9403)
static void C_ccall f_9403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9383)
static void C_ccall f_9383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9371)
static void C_ccall f_9371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9374)
static void C_ccall f_9374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9329)
static void C_ccall f_9329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9365)
static void C_ccall f_9365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9360)
static void C_ccall f_9360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9332)
static void C_ccall f_9332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9345)
static void C_ccall f_9345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9335)
static void C_fcall f_9335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9338)
static void C_ccall f_9338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9341)
static void C_ccall f_9341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9178)
static void C_ccall f_9178(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9178)
static void C_ccall f_9178r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9237)
static void C_ccall f_9237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9247)
static void C_ccall f_9247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9249)
static void C_fcall f_9249(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9278)
static void C_ccall f_9278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9283)
static void C_ccall f_9283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9268)
static void C_fcall f_9268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9199)
static void C_fcall f_9199(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9231)
static void C_ccall f_9231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9159)
static void C_ccall f_9159(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9166)
static void C_ccall f_9166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9173)
static void C_ccall f_9173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9140)
static void C_ccall f_9140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9147)
static void C_ccall f_9147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9154)
static void C_ccall f_9154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8960)
static void C_fcall f_8960(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_8964)
static void C_ccall f_8964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8967)
static void C_ccall f_8967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8970)
static void C_ccall f_8970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8973)
static void C_ccall f_8973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9130)
static void C_ccall f_9130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9137)
static void C_ccall f_9137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8976)
static void C_ccall f_8976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8979)
static void C_fcall f_8979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8985)
static void C_ccall f_8985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8991)
static void C_ccall f_8991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9054)
static void C_ccall f_9054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9068)
static void C_ccall f_9068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8994)
static void C_fcall f_8994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8997)
static void C_ccall f_8997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9003)
static void C_fcall f_9003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9016)
static void C_ccall f_9016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9006)
static void C_ccall f_9006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9009)
static void C_ccall f_9009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8950)
static void C_fcall f_8950(C_word t0) C_noret;
C_noret_decl(f_8895)
static void C_fcall f_8895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8886)
static void C_fcall f_8886(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8769)
static void C_fcall f_8769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8760)
static void C_fcall f_8760(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8751)
static void C_ccall f_8751(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8742)
static void C_fcall f_8742(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8733)
static void C_fcall f_8733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8715)
static void C_fcall f_8715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8706)
static void C_fcall f_8706(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8697)
static void C_fcall f_8697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8679)
static void C_fcall f_8679(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8670)
static void C_fcall f_8670(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8661)
static void C_fcall f_8661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8646)
static void C_fcall f_8646(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8601)
static void C_fcall f_8601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8583)
static void C_fcall f_8583(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8574)
static void C_fcall f_8574(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8547)
static void C_fcall f_8547(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8529)
static void C_fcall f_8529(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8511)
static void C_fcall f_8511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8502)
static void C_fcall f_8502(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8490)
static void C_fcall f_8490(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8324)
static void C_ccall f_8324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8425)
static void C_ccall f_8425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8474)
static void C_ccall f_8474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8470)
static void C_ccall f_8470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8442)
static void C_ccall f_8442(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8377)
static void C_fcall f_8377(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8386)
static void C_fcall f_8386(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8370)
static void C_ccall f_8370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8189)
static void C_ccall f_8189(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8315)
static void C_ccall f_8315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8311)
static void C_ccall f_8311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8289)
static void C_ccall f_8289(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8219)
static void C_fcall f_8219(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8235)
static void C_fcall f_8235(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8144)
static void C_ccall f_8144(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8187)
static void C_ccall f_8187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8176)
static void C_ccall f_8176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8028)
static void C_ccall f_8028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8142)
static void C_ccall f_8142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8043)
static void C_fcall f_8043(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8073)
static void C_fcall f_8073(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8092)
static void C_ccall f_8092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8077)
static void C_ccall f_8077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8056)
static void C_fcall f_8056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7906)
static void C_ccall f_7906(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8026)
static void C_ccall f_8026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7921)
static void C_fcall f_7921(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7951)
static void C_fcall f_7951(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7970)
static void C_ccall f_7970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7955)
static void C_ccall f_7955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7934)
static void C_fcall f_7934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7809)
static void C_ccall f_7809(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7904)
static void C_ccall f_7904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7824)
static void C_fcall f_7824(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7870)
static void C_ccall f_7870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7855)
static void C_ccall f_7855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7837)
static void C_fcall f_7837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7756)
static void C_fcall f_7756(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7794)
static void C_ccall f_7794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7801)
static void C_ccall f_7801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7779)
static void C_ccall f_7779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7754)
static void C_ccall f_7754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7726)
static void C_fcall f_7726(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7728)
static void C_ccall f_7728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7706)
static void C_ccall f_7706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7654)
static void C_fcall f_7654(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7691)
static void C_ccall f_7691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7658)
static void C_ccall f_7658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7674)
static void C_ccall f_7674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7676)
static void C_ccall f_7676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7641)
static void C_ccall f_7641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7635)
static void C_ccall f_7635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7616)
static void C_ccall f_7616(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7616)
static void C_ccall f_7616r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7597)
static void C_ccall f_7597(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7597)
static void C_ccall f_7597r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7591)
static void C_ccall f_7591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7551)
static void C_ccall f_7551(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7551)
static void C_ccall f_7551r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7532)
static void C_ccall f_7532(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7532)
static void C_ccall f_7532r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7304)
static void C_ccall f_7304(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7304)
static void C_ccall f_7304r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7509)
static void C_ccall f_7509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7524)
static void C_ccall f_7524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7516)
static void C_ccall f_7516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7480)
static void C_ccall f_7480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7484)
static void C_ccall f_7484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7445)
static void C_ccall f_7445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7449)
static void C_ccall f_7449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7308)
static void C_fcall f_7308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7409)
static void C_ccall f_7409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7424)
static void C_ccall f_7424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7416)
static void C_ccall f_7416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7380)
static void C_ccall f_7380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7384)
static void C_ccall f_7384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7345)
static void C_ccall f_7345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7349)
static void C_ccall f_7349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7311)
static void C_fcall f_7311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7314)
static void C_ccall f_7314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7317)
static void C_fcall f_7317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7298)
static void C_ccall f_7298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7292)
static void C_ccall f_7292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7286)
static void C_ccall f_7286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7058)
static void C_ccall f_7058(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7058)
static void C_ccall f_7058r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7263)
static void C_ccall f_7263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7278)
static void C_ccall f_7278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7270)
static void C_ccall f_7270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7234)
static void C_ccall f_7234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7238)
static void C_ccall f_7238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7199)
static void C_ccall f_7199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7203)
static void C_ccall f_7203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7062)
static void C_fcall f_7062(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7163)
static void C_ccall f_7163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7178)
static void C_ccall f_7178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7170)
static void C_ccall f_7170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7134)
static void C_ccall f_7134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7138)
static void C_ccall f_7138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7099)
static void C_ccall f_7099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7103)
static void C_ccall f_7103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7065)
static void C_fcall f_7065(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7068)
static void C_ccall f_7068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7078)
static void C_ccall f_7078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7010)
static void C_ccall f_7010(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7048)
static void C_ccall f_7048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7037)
static void C_ccall f_7037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6989)
static void C_ccall f_6989(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6965)
static void C_ccall f_6965(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6959)
static void C_ccall f_6959(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6900)
static void C_ccall f_6900(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6900)
static void C_ccall f_6900r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6913)
static void C_fcall f_6913(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6949)
static void C_ccall f_6949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6873)
static void C_ccall f_6873(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6873)
static void C_ccall f_6873r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6778)
static void C_ccall f_6778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6778)
static void C_ccall f_6778r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6782)
static void C_ccall f_6782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6785)
static void C_ccall f_6785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6797)
static void C_fcall f_6797(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6819)
static void C_ccall f_6819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6763)
static void C_ccall f_6763(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6748)
static void C_ccall f_6748(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6688)
static void C_ccall f_6688(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6688)
static void C_ccall f_6688r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6700)
static void C_fcall f_6700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6695)
static void C_fcall f_6695(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6690)
static void C_fcall f_6690(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6669)
static void C_ccall f_6669(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6669)
static void C_ccall f_6669r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6648)
static void C_ccall f_6648(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6660)
static void C_ccall f_6660(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6633)
static void C_ccall f_6633(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6551)
static void C_ccall f_6551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6551)
static void C_ccall f_6551r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6565)
static void C_ccall f_6565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6517)
static void C_ccall f_6517(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6517)
static void C_ccall f_6517r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6529)
static void C_ccall f_6529(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6504)
static void C_fcall f_6504(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6494)
static void C_fcall f_6494(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6476)
static void C_fcall f_6476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6465)
static void C_fcall f_6465(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6427)
static void C_fcall f_6427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6420)
static void C_fcall f_6420(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6396)
static void C_fcall f_6396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6389)
static void C_ccall f_6389(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6382)
static void C_ccall f_6382(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6356)
static void C_fcall f_6356(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6345)
static void C_fcall f_6345(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6311)
static void C_fcall f_6311(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6284)
static void C_fcall f_6284(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6243)
static void C_fcall f_6243(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6249)
static void C_fcall f_6249(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6259)
static void C_fcall f_6259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6157)
static void C_ccall f_6157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6157)
static void C_ccall f_6157r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6109)
static void C_ccall f_6109(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6109)
static void C_ccall f_6109r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6121)
static void C_fcall f_6121(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6138)
static void C_ccall f_6138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6099)
static void C_ccall f_6099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6059)
static void C_ccall f_6059(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6059)
static void C_ccall f_6059r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6089)
static void C_ccall f_6089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6011)
static void C_ccall f_6011(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6045)
static void C_ccall f_6045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5988)
static void C_ccall f_5988(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5982)
static void C_ccall f_5982(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5967)
static void C_ccall f_5967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5953)
static void C_ccall f_5953(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5943)
static void C_ccall f_5943(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5933)
static void C_ccall f_5933(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5923)
static void C_ccall f_5923(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5913)
static void C_ccall f_5913(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5884)
static void C_ccall f_5884(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5884)
static void C_ccall f_5884r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5893)
static void C_ccall f_5893(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5898)
static void C_ccall f_5898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5873)
static void C_ccall f_5873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5878)
static void C_ccall f_5878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5580)
static void C_ccall f_5580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5590)
static void C_ccall f_5590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5841)
static void C_ccall f_5841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5593)
static void C_ccall f_5593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5596)
static void C_ccall f_5596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5611)
static void C_fcall f_5611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5621)
static void C_ccall f_5621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5623)
static void C_fcall f_5623(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5682)
static void C_ccall f_5682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5692)
static void C_ccall f_5692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5809)
static void C_ccall f_5809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5797)
static void C_ccall f_5797(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5795)
static void C_ccall f_5795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5782)
static void C_ccall f_5782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5736)
static void C_ccall f_5736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5763)
static void C_ccall f_5763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5742)
static void C_ccall f_5742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5676)
static void C_fcall f_5676(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5635)
static void C_fcall f_5635(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5648)
static void C_fcall f_5648(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5858)
static void C_ccall f_5858(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5849)
static void C_ccall f_5849(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5857)
static void C_ccall f_5857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5860)
static void C_ccall f_5860(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5860)
static void C_ccall f_5860r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5868)
static void C_ccall f_5868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5282)
static void C_ccall f_5282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5535)
static void C_ccall f_5535(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5568)
static void C_ccall f_5568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5564)
static void C_ccall f_5564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5553)
static void C_ccall f_5553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5549)
static void C_ccall f_5549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5443)
static void C_ccall f_5443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5446)
static void C_ccall f_5446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5449)
static void C_ccall f_5449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5529)
static void C_ccall f_5529(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5354)
static void C_ccall f_5354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5295)
static void C_ccall f_5295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5452)
static void C_ccall f_5452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5459)
static void C_ccall f_5459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5519)
static void C_ccall f_5519(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5505)
static void C_ccall f_5505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5471)
static void C_ccall f_5471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5497)
static void C_ccall f_5497(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5432)
static void C_ccall f_5432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5479)
static void C_ccall f_5479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5475)
static void C_ccall f_5475(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_32969)
static void C_fcall trf_32969(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32969(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32969(t0,t1,t2);}

C_noret_decl(trf_33029)
static void C_fcall trf_33029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33029(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_33029(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_33049)
static void C_fcall trf_33049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33049(t0,t1);}

C_noret_decl(trf_33052)
static void C_fcall trf_33052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33052(t0,t1);}

C_noret_decl(trf_32923)
static void C_fcall trf_32923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32923(t0,t1);}

C_noret_decl(trf_32845)
static void C_fcall trf_32845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32845(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32845(t0,t1,t2);}

C_noret_decl(trf_32657)
static void C_fcall trf_32657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32657(t0,t1);}

C_noret_decl(trf_31539)
static void C_fcall trf_31539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31539(t0,t1);}

C_noret_decl(trf_31412)
static void C_fcall trf_31412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31412(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31412(t0,t1,t2);}

C_noret_decl(trf_31110)
static void C_fcall trf_31110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31110(t0,t1);}

C_noret_decl(trf_30205)
static void C_fcall trf_30205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30205(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30205(t0,t1,t2);}

C_noret_decl(trf_30240)
static void C_fcall trf_30240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30240(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30240(t0,t1);}

C_noret_decl(trf_30264)
static void C_fcall trf_30264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30264(t0,t1);}

C_noret_decl(trf_30243)
static void C_fcall trf_30243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30243(t0,t1);}

C_noret_decl(trf_30046)
static void C_fcall trf_30046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30046(t0,t1);}

C_noret_decl(trf_29864)
static void C_fcall trf_29864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29864(t0,t1);}

C_noret_decl(trf_29871)
static void C_fcall trf_29871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29871(t0,t1);}

C_noret_decl(trf_29852)
static void C_fcall trf_29852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29852(t0,t1);}

C_noret_decl(trf_17746)
static void C_fcall trf_17746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17746(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17746(t0,t1);}

C_noret_decl(trf_17753)
static void C_fcall trf_17753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17753(t0,t1);}

C_noret_decl(trf_18067)
static void C_fcall trf_18067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18067(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18067(t0,t1,t2);}

C_noret_decl(trf_18090)
static void C_fcall trf_18090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18090(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18090(t0,t1,t2);}

C_noret_decl(trf_18107)
static void C_fcall trf_18107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18107(t0,t1);}

C_noret_decl(trf_18110)
static void C_fcall trf_18110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18110(t0,t1);}

C_noret_decl(trf_18113)
static void C_fcall trf_18113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18113(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18113(t0,t1);}

C_noret_decl(trf_18031)
static void C_fcall trf_18031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18031(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18031(t0,t1,t2);}

C_noret_decl(trf_17975)
static void C_fcall trf_17975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17975(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17975(t0,t1,t2);}

C_noret_decl(trf_17991)
static void C_fcall trf_17991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17991(t0,t1);}

C_noret_decl(trf_17769)
static void C_fcall trf_17769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17769(t0,t1);}

C_noret_decl(trf_17772)
static void C_fcall trf_17772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17772(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17772(t0,t1);}

C_noret_decl(trf_29361)
static void C_fcall trf_29361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29361(t0,t1);}

C_noret_decl(trf_29364)
static void C_fcall trf_29364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29364(t0,t1);}

C_noret_decl(trf_29207)
static void C_fcall trf_29207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29207(t0,t1);}

C_noret_decl(trf_29015)
static void C_fcall trf_29015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29015(t0,t1);}

C_noret_decl(trf_28865)
static void C_fcall trf_28865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28865(t0,t1);}

C_noret_decl(trf_28954)
static void C_fcall trf_28954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28954(t0,t1);}

C_noret_decl(trf_28868)
static void C_fcall trf_28868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28868(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28868(t0,t1);}

C_noret_decl(trf_28884)
static void C_fcall trf_28884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28884(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28884(t0,t1,t2,t3);}

C_noret_decl(trf_28906)
static void C_fcall trf_28906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28906(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28906(t0,t1);}

C_noret_decl(trf_28801)
static void C_fcall trf_28801(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28801(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28801(t0,t1,t2);}

C_noret_decl(trf_28748)
static void C_fcall trf_28748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28748(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28748(t0,t1);}

C_noret_decl(trf_22201)
static void C_fcall trf_22201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22201(t0,t1);}

C_noret_decl(trf_22063)
static void C_fcall trf_22063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22063(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22063(t0,t1);}

C_noret_decl(trf_22277)
static void C_fcall trf_22277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22277(t0,t1);}

C_noret_decl(trf_28244)
static void C_fcall trf_28244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28244(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28244(t0,t1,t2);}

C_noret_decl(trf_28264)
static void C_fcall trf_28264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28264(t0,t1);}

C_noret_decl(trf_28273)
static void C_fcall trf_28273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28273(t0,t1);}

C_noret_decl(trf_28289)
static void C_fcall trf_28289(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28289(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28289(t0,t1);}

C_noret_decl(trf_28137)
static void C_fcall trf_28137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28137(t0,t1);}

C_noret_decl(trf_28146)
static void C_fcall trf_28146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28146(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28146(t0,t1,t2);}

C_noret_decl(trf_28170)
static void C_fcall trf_28170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28170(t0,t1);}

C_noret_decl(trf_27991)
static void C_fcall trf_27991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27991(t0,t1);}

C_noret_decl(trf_27898)
static void C_fcall trf_27898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27898(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27898(t0,t1,t2);}

C_noret_decl(trf_27818)
static void C_fcall trf_27818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27818(t0,t1);}

C_noret_decl(trf_27744)
static void C_fcall trf_27744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27744(t0,t1);}

C_noret_decl(trf_27739)
static void C_fcall trf_27739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27739(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27739(t0,t1,t2);}

C_noret_decl(trf_27627)
static void C_fcall trf_27627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27627(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27627(t0,t1,t2,t3);}

C_noret_decl(trf_27698)
static void C_fcall trf_27698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27698(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27698(t0,t1,t2);}

C_noret_decl(trf_27657)
static void C_fcall trf_27657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27657(t0,t1);}

C_noret_decl(trf_27629)
static void C_fcall trf_27629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27629(t0,t1);}

C_noret_decl(trf_27584)
static void C_fcall trf_27584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27584(t0,t1);}

C_noret_decl(trf_27540)
static void C_fcall trf_27540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27540(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27540(t0,t1,t2,t3);}

C_noret_decl(trf_27531)
static void C_fcall trf_27531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27531(t0,t1);}

C_noret_decl(trf_27370)
static void C_fcall trf_27370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27370(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27370(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27396)
static void C_fcall trf_27396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27396(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27396(t0,t1,t2);}

C_noret_decl(trf_27433)
static void C_fcall trf_27433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27433(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27433(t0,t1);}

C_noret_decl(trf_27266)
static void C_fcall trf_27266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27266(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27266(t0,t1);}

C_noret_decl(trf_27246)
static void C_fcall trf_27246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27246(t0,t1);}

C_noret_decl(trf_27209)
static void C_fcall trf_27209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27209(t0,t1);}

C_noret_decl(trf_27189)
static void C_fcall trf_27189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27189(t0,t1);}

C_noret_decl(trf_26024)
static void C_fcall trf_26024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26024(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26024(t0,t1);}

C_noret_decl(trf_26027)
static void C_fcall trf_26027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26027(t0,t1);}

C_noret_decl(trf_26030)
static void C_fcall trf_26030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26030(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26030(t0,t1);}

C_noret_decl(trf_25554)
static void C_fcall trf_25554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25554(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25554(t0,t1);}

C_noret_decl(trf_25557)
static void C_fcall trf_25557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25557(t0,t1);}

C_noret_decl(trf_25560)
static void C_fcall trf_25560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25560(t0,t1);}

C_noret_decl(trf_25084)
static void C_fcall trf_25084(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25084(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25084(t0,t1);}

C_noret_decl(trf_25087)
static void C_fcall trf_25087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25087(t0,t1);}

C_noret_decl(trf_25090)
static void C_fcall trf_25090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25090(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25090(t0,t1);}

C_noret_decl(trf_24336)
static void C_fcall trf_24336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24336(t0,t1);}

C_noret_decl(trf_24339)
static void C_fcall trf_24339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24339(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24339(t0,t1);}

C_noret_decl(trf_24342)
static void C_fcall trf_24342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24342(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24342(t0,t1);}

C_noret_decl(trf_24345)
static void C_fcall trf_24345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24345(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24345(t0,t1);}

C_noret_decl(trf_23588)
static void C_fcall trf_23588(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23588(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23588(t0,t1);}

C_noret_decl(trf_23591)
static void C_fcall trf_23591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23591(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23591(t0,t1);}

C_noret_decl(trf_23594)
static void C_fcall trf_23594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23594(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23594(t0,t1);}

C_noret_decl(trf_23597)
static void C_fcall trf_23597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23597(t0,t1);}

C_noret_decl(trf_23118)
static void C_fcall trf_23118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23118(t0,t1);}

C_noret_decl(trf_23121)
static void C_fcall trf_23121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23121(t0,t1);}

C_noret_decl(trf_23124)
static void C_fcall trf_23124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23124(t0,t1);}

C_noret_decl(trf_22370)
static void C_fcall trf_22370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22370(t0,t1);}

C_noret_decl(trf_22373)
static void C_fcall trf_22373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22373(t0,t1);}

C_noret_decl(trf_22376)
static void C_fcall trf_22376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22376(t0,t1);}

C_noret_decl(trf_22379)
static void C_fcall trf_22379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22379(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22379(t0,t1);}

C_noret_decl(trf_22028)
static void C_fcall trf_22028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22028(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22028(t0,t1,t2,t3);}

C_noret_decl(trf_21868)
static void C_fcall trf_21868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21868(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21868(t0,t1);}

C_noret_decl(trf_21903)
static void C_fcall trf_21903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21903(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21903(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21913)
static void C_fcall trf_21913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21913(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21913(t0,t1);}

C_noret_decl(trf_21876)
static void C_fcall trf_21876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21876(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21876(t0,t1,t2);}

C_noret_decl(trf_22036)
static void C_fcall trf_22036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22036(t0,t1);}

C_noret_decl(trf_21654)
static void C_fcall trf_21654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21654(t0,t1);}

C_noret_decl(trf_21660)
static void C_fcall trf_21660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21660(t0,t1);}

C_noret_decl(trf_21683)
static void C_fcall trf_21683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21683(t0,t1);}

C_noret_decl(trf_21696)
static void C_fcall trf_21696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21696(t0,t1);}

C_noret_decl(trf_21670)
static void C_fcall trf_21670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21670(t0,t1);}

C_noret_decl(trf_21483)
static void C_fcall trf_21483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21483(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21483(t0,t1,t2,t3);}

C_noret_decl(trf_21492)
static void C_fcall trf_21492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21492(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21492(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21446)
static void C_fcall trf_21446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21446(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21446(t0,t1);}

C_noret_decl(trf_21309)
static void C_fcall trf_21309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21309(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21309(t0,t1);}

C_noret_decl(trf_21239)
static void C_fcall trf_21239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21239(t0,t1);}

C_noret_decl(trf_20600)
static void C_fcall trf_20600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20600(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20600(t0,t1,t2);}

C_noret_decl(trf_20560)
static void C_fcall trf_20560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20560(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20560(t0,t1,t2);}

C_noret_decl(trf_20573)
static void C_fcall trf_20573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20573(t0,t1);}

C_noret_decl(trf_21152)
static void C_fcall trf_21152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21152(t0,t1);}

C_noret_decl(trf_20942)
static void C_fcall trf_20942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20942(t0,t1);}

C_noret_decl(trf_21058)
static void C_fcall trf_21058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21058(t0,t1);}

C_noret_decl(trf_20945)
static void C_fcall trf_20945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20945(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20945(t0,t1);}

C_noret_decl(trf_20948)
static void C_fcall trf_20948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20948(t0,t1);}

C_noret_decl(trf_20853)
static void C_fcall trf_20853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20853(t0,t1);}

C_noret_decl(trf_20768)
static void C_fcall trf_20768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20768(t0,t1);}

C_noret_decl(trf_20725)
static void C_fcall trf_20725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20725(t0,t1);}

C_noret_decl(trf_20692)
static void C_fcall trf_20692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20692(t0,t1);}

C_noret_decl(trf_20687)
static void C_fcall trf_20687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20687(t0,t1);}

C_noret_decl(trf_20682)
static void C_fcall trf_20682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20682(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20682(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20429)
static void C_fcall trf_20429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20429(t0,t1);}

C_noret_decl(trf_20276)
static void C_fcall trf_20276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20276(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20276(t0,t1,t2,t3);}

C_noret_decl(trf_20122)
static void C_fcall trf_20122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20122(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20122(t0,t1,t2);}

C_noret_decl(trf_19964)
static void C_fcall trf_19964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19964(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19964(t0,t1,t2);}

C_noret_decl(trf_19997)
static void C_fcall trf_19997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19997(t0,t1);}

C_noret_decl(trf_19904)
static void C_fcall trf_19904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19904(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19904(t0,t1);}

C_noret_decl(trf_19869)
static void C_fcall trf_19869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19869(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19869(t0,t1);}

C_noret_decl(trf_19885)
static void C_fcall trf_19885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19885(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19885(t0,t1);}

C_noret_decl(trf_19840)
static void C_fcall trf_19840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19840(t0,t1);}

C_noret_decl(trf_19747)
static void C_fcall trf_19747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19747(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19747(t0,t1);}

C_noret_decl(trf_19503)
static void C_fcall trf_19503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19503(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19503(t0,t1,t2);}

C_noret_decl(trf_19307)
static void C_fcall trf_19307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19307(t0,t1);}

C_noret_decl(trf_19470)
static void C_fcall trf_19470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19470(t0,t1);}

C_noret_decl(trf_19310)
static void C_fcall trf_19310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19310(t0,t1);}

C_noret_decl(trf_19313)
static void C_fcall trf_19313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19313(t0,t1);}

C_noret_decl(trf_19316)
static void C_fcall trf_19316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19316(t0,t1);}

C_noret_decl(trf_19358)
static void C_fcall trf_19358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19358(t0,t1);}

C_noret_decl(trf_19323)
static void C_fcall trf_19323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19323(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19323(t0,t1);}

C_noret_decl(trf_19052)
static void C_fcall trf_19052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19052(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19052(t0,t1,t2,t3);}

C_noret_decl(trf_19060)
static void C_fcall trf_19060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19060(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19060(t0,t1,t2,t3);}

C_noret_decl(trf_19189)
static void C_fcall trf_19189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19189(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19189(t0,t1,t2);}

C_noret_decl(trf_19143)
static void C_fcall trf_19143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19143(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19143(t0,t1,t2);}

C_noret_decl(trf_19046)
static void C_fcall trf_19046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19046(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19046(t0,t1,t2);}

C_noret_decl(trf_19040)
static void C_fcall trf_19040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19040(t0,t1);}

C_noret_decl(trf_19034)
static void C_fcall trf_19034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19034(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19034(t0,t1,t2);}

C_noret_decl(trf_18963)
static void C_fcall trf_18963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18963(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18963(t0,t1,t2);}

C_noret_decl(trf_18965)
static void C_fcall trf_18965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18965(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18965(t0,t1,t2);}

C_noret_decl(trf_18971)
static void C_fcall trf_18971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18971(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18971(t0,t1,t2);}

C_noret_decl(trf_18812)
static void C_fcall trf_18812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18812(t0,t1);}

C_noret_decl(trf_18827)
static void C_fcall trf_18827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18827(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18827(t0,t1,t2);}

C_noret_decl(trf_18770)
static void C_fcall trf_18770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18770(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18770(t0,t1,t2);}

C_noret_decl(trf_18710)
static void C_fcall trf_18710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18710(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18710(t0,t1,t2);}

C_noret_decl(trf_18586)
static void C_fcall trf_18586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18586(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18586(t0,t1,t2);}

C_noret_decl(trf_18436)
static void C_fcall trf_18436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18436(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18436(t0,t1,t2);}

C_noret_decl(trf_18472)
static void C_fcall trf_18472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18472(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18472(t0,t1,t2);}

C_noret_decl(trf_18271)
static void C_fcall trf_18271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18271(t0,t1);}

C_noret_decl(trf_16091)
static void C_fcall trf_16091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16091(t0,t1);}

C_noret_decl(trf_18402)
static void C_fcall trf_18402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18402(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18402(t0,t1,t2);}

C_noret_decl(trf_18412)
static void C_fcall trf_18412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18412(t0,t1);}

C_noret_decl(trf_18372)
static void C_fcall trf_18372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18372(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18372(t0,t1,t2);}

C_noret_decl(trf_18382)
static void C_fcall trf_18382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18382(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18382(t0,t1);}

C_noret_decl(trf_17433)
static void C_fcall trf_17433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17433(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17433(t0,t1);}

C_noret_decl(trf_17436)
static void C_fcall trf_17436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17436(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17436(t0,t1);}

C_noret_decl(trf_17439)
static void C_fcall trf_17439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17439(t0,t1);}

C_noret_decl(trf_17442)
static void C_fcall trf_17442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17442(t0,t1);}

C_noret_decl(trf_17445)
static void C_fcall trf_17445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17445(t0,t1);}

C_noret_decl(trf_17448)
static void C_fcall trf_17448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17448(t0,t1);}

C_noret_decl(trf_17276)
static void C_fcall trf_17276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17276(t0,t1);}

C_noret_decl(trf_17205)
static void C_fcall trf_17205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17205(t0,t1);}

C_noret_decl(trf_17020)
static void C_fcall trf_17020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17020(t0,t1);}

C_noret_decl(trf_17032)
static void C_fcall trf_17032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17032(t0,t1);}

C_noret_decl(trf_17069)
static void C_fcall trf_17069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17069(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17069(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17104)
static void C_fcall trf_17104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17104(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17104(t0,t1);}

C_noret_decl(trf_16999)
static void C_fcall trf_16999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16999(t0,t1);}

C_noret_decl(trf_16934)
static void C_fcall trf_16934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16934(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16934(t0,t1,t2);}

C_noret_decl(trf_16943)
static void C_fcall trf_16943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16943(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16943(t0,t1,t2);}

C_noret_decl(trf_16956)
static void C_fcall trf_16956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16956(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16956(t0,t1);}

C_noret_decl(trf_16890)
static void C_fcall trf_16890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16890(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16890(t0,t1,t2);}

C_noret_decl(trf_16878)
static void C_fcall trf_16878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16878(t0,t1);}

C_noret_decl(trf_16776)
static void C_fcall trf_16776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16776(t0,t1);}

C_noret_decl(trf_16728)
static void C_fcall trf_16728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16728(t0,t1);}

C_noret_decl(trf_16109)
static void C_fcall trf_16109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16109(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_16109(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_16119)
static void C_fcall trf_16119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16119(t0,t1);}

C_noret_decl(trf_16248)
static void C_fcall trf_16248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16248(t0,t1);}

C_noret_decl(trf_16336)
static void C_fcall trf_16336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16336(t0,t1);}

C_noret_decl(trf_16409)
static void C_fcall trf_16409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16409(t0,t1);}

C_noret_decl(trf_16487)
static void C_fcall trf_16487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16487(t0,t1);}

C_noret_decl(trf_16438)
static void C_fcall trf_16438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16438(t0,t1);}

C_noret_decl(trf_16454)
static void C_fcall trf_16454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16454(t0,t1);}

C_noret_decl(trf_16418)
static void C_fcall trf_16418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16418(t0,t1);}

C_noret_decl(trf_16360)
static void C_fcall trf_16360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16360(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16360(t0,t1,t2);}

C_noret_decl(trf_16279)
static void C_fcall trf_16279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16279(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16279(t0,t1,t2);}

C_noret_decl(trf_16295)
static void C_fcall trf_16295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16295(t0,t1);}

C_noret_decl(trf_16263)
static void C_fcall trf_16263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16263(t0,t1);}

C_noret_decl(trf_16005)
static void C_fcall trf_16005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16005(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16005(t0,t1);}

C_noret_decl(trf_16014)
static void C_fcall trf_16014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16014(t0,t1);}

C_noret_decl(trf_16019)
static void C_fcall trf_16019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16019(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16019(t0,t1,t2);}

C_noret_decl(trf_15997)
static void C_fcall trf_15997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15997(t0,t1);}

C_noret_decl(trf_15789)
static void C_fcall trf_15789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15789(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15789(t0,t1,t2,t3);}

C_noret_decl(trf_15756)
static void C_fcall trf_15756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15756(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15756(t0,t1,t2,t3);}

C_noret_decl(trf_15738)
static void C_fcall trf_15738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15738(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15738(t0,t1,t2,t3);}

C_noret_decl(trf_15728)
static void C_fcall trf_15728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15728(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15728(t0,t1,t2,t3);}

C_noret_decl(trf_15716)
static void C_fcall trf_15716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15716(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15716(t0,t1,t2);}

C_noret_decl(trf_15684)
static void C_fcall trf_15684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15684(t0,t1,t2);}

C_noret_decl(trf_15668)
static void C_fcall trf_15668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15668(t0,t1);}

C_noret_decl(trf_15656)
static void C_fcall trf_15656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15656(t0,t1);}

C_noret_decl(trf_15638)
static void C_fcall trf_15638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15638(t0,t1);}

C_noret_decl(trf_15620)
static void C_fcall trf_15620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15620(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15620(t0,t1);}

C_noret_decl(trf_15605)
static void C_fcall trf_15605(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15605(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15605(t0,t1);}

C_noret_decl(trf_15599)
static void C_fcall trf_15599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15599(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15599(t0,t1,t2,t3);}

C_noret_decl(trf_15587)
static void C_fcall trf_15587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15587(t0,t1);}

C_noret_decl(trf_15569)
static void C_fcall trf_15569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15569(t0,t1);}

C_noret_decl(trf_15548)
static void C_fcall trf_15548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15548(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15548(t0,t1,t2);}

C_noret_decl(trf_15516)
static void C_fcall trf_15516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15516(t0,t1);}

C_noret_decl(trf_15458)
static void C_fcall trf_15458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15458(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15458(t0,t1,t2);}

C_noret_decl(trf_15448)
static void C_fcall trf_15448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15448(t0,t1);}

C_noret_decl(trf_15442)
static void C_fcall trf_15442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15442(t0,t1);}

C_noret_decl(trf_15430)
static void C_fcall trf_15430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15430(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15430(t0,t1);}

C_noret_decl(trf_15406)
static void C_fcall trf_15406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15406(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15406(t0,t1,t2);}

C_noret_decl(trf_15319)
static void C_fcall trf_15319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15319(t0,t1);}

C_noret_decl(trf_15298)
static void C_fcall trf_15298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15298(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_15298(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_15288)
static void C_fcall trf_15288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15288(t0,t1);}

C_noret_decl(trf_15276)
static void C_fcall trf_15276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15276(t0,t1);}

C_noret_decl(trf_15235)
static void C_fcall trf_15235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15235(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15235(t0,t1);}

C_noret_decl(trf_15217)
static void C_fcall trf_15217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15217(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15217(t0,t1);}

C_noret_decl(trf_15199)
static void C_fcall trf_15199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15199(t0,t1);}

C_noret_decl(trf_15122)
static void C_fcall trf_15122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15122(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15122(t0,t1,t2);}

C_noret_decl(trf_15147)
static void C_fcall trf_15147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15147(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15147(t0,t1);}

C_noret_decl(trf_14850)
static void C_fcall trf_14850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14850(t0,t1);}

C_noret_decl(trf_14853)
static void C_fcall trf_14853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14853(t0,t1);}

C_noret_decl(trf_14859)
static void C_fcall trf_14859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14859(t0,t1);}

C_noret_decl(trf_14573)
static void C_fcall trf_14573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14573(t0,t1);}

C_noret_decl(trf_14576)
static void C_fcall trf_14576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14576(t0,t1);}

C_noret_decl(trf_14503)
static void C_fcall trf_14503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14503(t0,t1);}

C_noret_decl(trf_14351)
static void C_fcall trf_14351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14351(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14351(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14276)
static void C_fcall trf_14276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14276(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14276(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14286)
static void C_fcall trf_14286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14286(t0,t1);}

C_noret_decl(trf_14293)
static void C_fcall trf_14293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14293(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14293(t0,t1);}

C_noret_decl(trf_14388)
static void C_fcall trf_14388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14388(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14388(t0,t1,t2);}

C_noret_decl(trf_14166)
static void C_fcall trf_14166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14166(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14166(t0,t1,t2,t3);}

C_noret_decl(trf_14178)
static void C_fcall trf_14178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14178(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14178(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14239)
static void C_fcall trf_14239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14239(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14239(t0,t1,t2);}

C_noret_decl(trf_13603)
static void C_fcall trf_13603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13603(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13603(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13539)
static void C_fcall trf_13539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13539(t0,t1);}

C_noret_decl(trf_13486)
static void C_fcall trf_13486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13486(t0,t1);}

C_noret_decl(trf_13489)
static void C_fcall trf_13489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13489(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13489(t0,t1);}

C_noret_decl(trf_13683)
static void C_fcall trf_13683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13683(t0,t1);}

C_noret_decl(trf_13686)
static void C_fcall trf_13686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13686(t0,t1);}

C_noret_decl(trf_13689)
static void C_fcall trf_13689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13689(t0,t1);}

C_noret_decl(trf_13704)
static void C_fcall trf_13704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13704(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13704(t0,t1);}

C_noret_decl(trf_13265)
static void C_fcall trf_13265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13265(t0,t1);}

C_noret_decl(trf_13357)
static void C_fcall trf_13357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13357(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13357(t0,t1,t2);}

C_noret_decl(trf_13376)
static void C_fcall trf_13376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13376(t0,t1);}

C_noret_decl(trf_13330)
static void C_fcall trf_13330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13330(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13330(t0,t1,t2);}

C_noret_decl(trf_13275)
static void C_fcall trf_13275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13275(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13275(t0,t1,t2);}

C_noret_decl(trf_13285)
static void C_fcall trf_13285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13285(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13285(t0,t1,t2,t3);}

C_noret_decl(trf_13131)
static void C_fcall trf_13131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13131(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13131(t0,t1,t2);}

C_noret_decl(trf_13200)
static void C_fcall trf_13200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13200(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13200(t0,t1,t2);}

C_noret_decl(trf_13146)
static void C_fcall trf_13146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13146(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13146(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12688)
static void C_fcall trf_12688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12688(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12688(t0,t1);}

C_noret_decl(trf_12691)
static void C_fcall trf_12691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12691(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12691(t0,t1);}

C_noret_decl(trf_12694)
static void C_fcall trf_12694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12694(t0,t1);}

C_noret_decl(trf_12697)
static void C_fcall trf_12697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12697(t0,t1);}

C_noret_decl(trf_12661)
static void C_fcall trf_12661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12661(t0,t1);}

C_noret_decl(trf_12384)
static void C_fcall trf_12384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12384(t0,t1);}

C_noret_decl(trf_12387)
static void C_fcall trf_12387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12387(t0,t1);}

C_noret_decl(trf_12390)
static void C_fcall trf_12390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12390(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12390(t0,t1);}

C_noret_decl(trf_12281)
static void C_fcall trf_12281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12281(t0,t1);}

C_noret_decl(trf_12272)
static void C_fcall trf_12272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12272(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12272(t0,t1,t2);}

C_noret_decl(trf_12263)
static void C_fcall trf_12263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12263(t0,t1);}

C_noret_decl(trf_12245)
static void C_fcall trf_12245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12245(t0,t1);}

C_noret_decl(trf_12227)
static void C_fcall trf_12227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12227(t0,t1);}

C_noret_decl(trf_12209)
static void C_fcall trf_12209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12209(t0,t1);}

C_noret_decl(trf_12200)
static void C_fcall trf_12200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12200(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12200(t0,t1,t2);}

C_noret_decl(trf_12191)
static void C_fcall trf_12191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12191(t0,t1);}

C_noret_decl(trf_12022)
static void C_fcall trf_12022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12022(t0,t1);}

C_noret_decl(trf_11978)
static void C_fcall trf_11978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11978(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11978(t0,t1,t2);}

C_noret_decl(trf_11499)
static void C_fcall trf_11499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11499(t0,t1);}

C_noret_decl(trf_11502)
static void C_fcall trf_11502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11502(t0,t1);}

C_noret_decl(trf_11505)
static void C_fcall trf_11505(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11505(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11505(t0,t1);}

C_noret_decl(trf_11508)
static void C_fcall trf_11508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11508(t0,t1);}

C_noret_decl(trf_11454)
static void C_fcall trf_11454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11454(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11454(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11160)
static void C_fcall trf_11160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11160(t0,t1);}

C_noret_decl(trf_11163)
static void C_fcall trf_11163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11163(t0,t1);}

C_noret_decl(trf_11166)
static void C_fcall trf_11166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11166(t0,t1);}

C_noret_decl(trf_10877)
static void C_fcall trf_10877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10877(t0,t1);}

C_noret_decl(trf_10880)
static void C_fcall trf_10880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10880(t0,t1);}

C_noret_decl(trf_10883)
static void C_fcall trf_10883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10883(t0,t1);}

C_noret_decl(trf_10836)
static void C_fcall trf_10836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10836(t0,t1);}

C_noret_decl(trf_10792)
static void C_fcall trf_10792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10792(t0,t1);}

C_noret_decl(trf_10707)
static void C_fcall trf_10707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10707(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10707(t0,t1);}

C_noret_decl(trf_10192)
static void C_fcall trf_10192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10192(t0,t1);}

C_noret_decl(trf_10195)
static void C_fcall trf_10195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10195(t0,t1);}

C_noret_decl(trf_10198)
static void C_fcall trf_10198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10198(t0,t1);}

C_noret_decl(trf_10201)
static void C_fcall trf_10201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10201(t0,t1);}

C_noret_decl(trf_10108)
static void C_fcall trf_10108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10108(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10108(t0,t1,t2);}

C_noret_decl(trf_10099)
static void C_fcall trf_10099(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10099(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10099(t0,t1);}

C_noret_decl(trf_10034)
static void C_fcall trf_10034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10034(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10034(t0,t1);}

C_noret_decl(trf_9776)
static void C_fcall trf_9776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9776(t0,t1);}

C_noret_decl(trf_9779)
static void C_fcall trf_9779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9779(t0,t1);}

C_noret_decl(trf_9782)
static void C_fcall trf_9782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9782(t0,t1);}

C_noret_decl(trf_9657)
static void C_fcall trf_9657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9657(t0,t1);}

C_noret_decl(trf_9681)
static void C_fcall trf_9681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9681(t0,t1);}

C_noret_decl(trf_9611)
static void C_fcall trf_9611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9611(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9611(t0,t1,t2);}

C_noret_decl(trf_9602)
static void C_fcall trf_9602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9602(t0,t1);}

C_noret_decl(trf_9301)
static void C_fcall trf_9301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9301(t0,t1);}

C_noret_decl(trf_9537)
static void C_fcall trf_9537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9537(t0,t1);}

C_noret_decl(trf_9543)
static void C_fcall trf_9543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9543(t0,t1);}

C_noret_decl(trf_9435)
static void C_fcall trf_9435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9435(t0,t1);}

C_noret_decl(trf_9437)
static void C_fcall trf_9437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9437(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9437(t0,t1,t2,t3);}

C_noret_decl(trf_9486)
static void C_fcall trf_9486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9486(t0,t1);}

C_noret_decl(trf_9451)
static void C_fcall trf_9451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9451(t0,t1);}

C_noret_decl(trf_9335)
static void C_fcall trf_9335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9335(t0,t1);}

C_noret_decl(trf_9249)
static void C_fcall trf_9249(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9249(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9249(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9268)
static void C_fcall trf_9268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9268(t0,t1);}

C_noret_decl(trf_9199)
static void C_fcall trf_9199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9199(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9199(t0,t1,t2,t3);}

C_noret_decl(trf_8960)
static void C_fcall trf_8960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8960(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_8960(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_8979)
static void C_fcall trf_8979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8979(t0,t1);}

C_noret_decl(trf_8994)
static void C_fcall trf_8994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8994(t0,t1);}

C_noret_decl(trf_9003)
static void C_fcall trf_9003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9003(t0,t1);}

C_noret_decl(trf_8950)
static void C_fcall trf_8950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8950(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_8950(t0);}

C_noret_decl(trf_8895)
static void C_fcall trf_8895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8895(t0,t1);}

C_noret_decl(trf_8886)
static void C_fcall trf_8886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8886(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8886(t0,t1,t2);}

C_noret_decl(trf_8769)
static void C_fcall trf_8769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8769(t0,t1);}

C_noret_decl(trf_8760)
static void C_fcall trf_8760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8760(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8760(t0,t1,t2);}

C_noret_decl(trf_8742)
static void C_fcall trf_8742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8742(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8742(t0,t1,t2);}

C_noret_decl(trf_8733)
static void C_fcall trf_8733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8733(t0,t1);}

C_noret_decl(trf_8715)
static void C_fcall trf_8715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8715(t0,t1);}

C_noret_decl(trf_8706)
static void C_fcall trf_8706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8706(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8706(t0,t1,t2);}

C_noret_decl(trf_8697)
static void C_fcall trf_8697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8697(t0,t1);}

C_noret_decl(trf_8679)
static void C_fcall trf_8679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8679(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8679(t0,t1);}

C_noret_decl(trf_8670)
static void C_fcall trf_8670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8670(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8670(t0,t1,t2);}

C_noret_decl(trf_8661)
static void C_fcall trf_8661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8661(t0,t1);}

C_noret_decl(trf_8646)
static void C_fcall trf_8646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8646(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8646(t0,t1);}

C_noret_decl(trf_8601)
static void C_fcall trf_8601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8601(t0,t1);}

C_noret_decl(trf_8583)
static void C_fcall trf_8583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8583(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8583(t0,t1);}

C_noret_decl(trf_8574)
static void C_fcall trf_8574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8574(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8574(t0,t1,t2);}

C_noret_decl(trf_8547)
static void C_fcall trf_8547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8547(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8547(t0,t1);}

C_noret_decl(trf_8529)
static void C_fcall trf_8529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8529(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8529(t0,t1);}

C_noret_decl(trf_8511)
static void C_fcall trf_8511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8511(t0,t1);}

C_noret_decl(trf_8502)
static void C_fcall trf_8502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8502(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8502(t0,t1,t2);}

C_noret_decl(trf_8490)
static void C_fcall trf_8490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8490(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8490(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8377)
static void C_fcall trf_8377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8377(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8377(t0,t1,t2);}

C_noret_decl(trf_8386)
static void C_fcall trf_8386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8386(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8386(t0,t1,t2,t3);}

C_noret_decl(trf_8219)
static void C_fcall trf_8219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8219(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8219(t0,t1);}

C_noret_decl(trf_8235)
static void C_fcall trf_8235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8235(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8235(t0,t1,t2,t3);}

C_noret_decl(trf_8043)
static void C_fcall trf_8043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8043(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8043(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8073)
static void C_fcall trf_8073(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8073(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8073(t0,t1);}

C_noret_decl(trf_8056)
static void C_fcall trf_8056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8056(t0,t1);}

C_noret_decl(trf_7921)
static void C_fcall trf_7921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7921(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7921(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7951)
static void C_fcall trf_7951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7951(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7951(t0,t1);}

C_noret_decl(trf_7934)
static void C_fcall trf_7934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7934(t0,t1);}

C_noret_decl(trf_7824)
static void C_fcall trf_7824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7824(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7824(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7837)
static void C_fcall trf_7837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7837(t0,t1);}

C_noret_decl(trf_7756)
static void C_fcall trf_7756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7756(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7756(t0,t1,t2,t3);}

C_noret_decl(trf_7726)
static void C_fcall trf_7726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7726(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7726(t0,t1);}

C_noret_decl(trf_7654)
static void C_fcall trf_7654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7654(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7654(t0,t1,t2,t3);}

C_noret_decl(trf_7308)
static void C_fcall trf_7308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7308(t0,t1);}

C_noret_decl(trf_7311)
static void C_fcall trf_7311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7311(t0,t1);}

C_noret_decl(trf_7317)
static void C_fcall trf_7317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7317(t0,t1);}

C_noret_decl(trf_7062)
static void C_fcall trf_7062(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7062(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7062(t0,t1);}

C_noret_decl(trf_7065)
static void C_fcall trf_7065(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7065(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7065(t0,t1);}

C_noret_decl(trf_6913)
static void C_fcall trf_6913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6913(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6913(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6797)
static void C_fcall trf_6797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6797(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6797(t0,t1,t2);}

C_noret_decl(trf_6700)
static void C_fcall trf_6700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6700(t0,t1);}

C_noret_decl(trf_6695)
static void C_fcall trf_6695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6695(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6695(t0,t1,t2);}

C_noret_decl(trf_6690)
static void C_fcall trf_6690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6690(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6690(t0,t1,t2,t3);}

C_noret_decl(trf_6504)
static void C_fcall trf_6504(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6504(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6504(t0,t1);}

C_noret_decl(trf_6494)
static void C_fcall trf_6494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6494(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6494(t0,t1);}

C_noret_decl(trf_6476)
static void C_fcall trf_6476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6476(t0,t1);}

C_noret_decl(trf_6465)
static void C_fcall trf_6465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6465(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6465(t0,t1,t2);}

C_noret_decl(trf_6427)
static void C_fcall trf_6427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6427(t0,t1);}

C_noret_decl(trf_6420)
static void C_fcall trf_6420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6420(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6420(t0,t1);}

C_noret_decl(trf_6396)
static void C_fcall trf_6396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6396(t0,t1);}

C_noret_decl(trf_6356)
static void C_fcall trf_6356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6356(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6356(t0,t1,t2);}

C_noret_decl(trf_6345)
static void C_fcall trf_6345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6345(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6345(t0,t1,t2);}

C_noret_decl(trf_6311)
static void C_fcall trf_6311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6311(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6311(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6284)
static void C_fcall trf_6284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6284(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6284(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6243)
static void C_fcall trf_6243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6243(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6243(t0,t1,t2);}

C_noret_decl(trf_6249)
static void C_fcall trf_6249(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6249(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6249(t0,t1,t2);}

C_noret_decl(trf_6259)
static void C_fcall trf_6259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6259(t0,t1);}

C_noret_decl(trf_6121)
static void C_fcall trf_6121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6121(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6121(t0,t1,t2,t3);}

C_noret_decl(trf_5611)
static void C_fcall trf_5611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5611(t0,t1);}

C_noret_decl(trf_5623)
static void C_fcall trf_5623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5623(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5623(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5676)
static void C_fcall trf_5676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5676(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5676(t0,t1);}

C_noret_decl(trf_5635)
static void C_fcall trf_5635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5635(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5635(t0,t1,t2);}

C_noret_decl(trf_5648)
static void C_fcall trf_5648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5648(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5648(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4848)){
C_save(t1);
C_rereclaim2(4848*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,821);
lf[1]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[2]=C_h_intern(&lf[2],14,"expand-optkeys");
lf[3]=C_h_intern(&lf[3],3,"let");
lf[4]=C_h_intern(&lf[4],4,"let*");
lf[5]=C_h_intern(&lf[5],5,"null\077");
lf[6]=C_h_intern(&lf[6],5,"error");
lf[7]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[8]=C_h_intern(&lf[8],6,"unless");
lf[9]=C_h_intern(&lf[9],10,"\003sysappend");
lf[10]=C_h_intern(&lf[10],3,"car");
lf[11]=C_h_intern(&lf[11],4,"case");
lf[12]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[13]=C_h_intern(&lf[13],4,"when");
lf[14]=C_h_intern(&lf[14],4,"set!");
lf[15]=C_h_intern(&lf[15],8,"keyword\077");
lf[16]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[17]=C_h_intern(&lf[17],3,"cdr");
lf[18]=C_h_intern(&lf[18],4,"else");
lf[19]=C_h_intern(&lf[19],7,"\003sysmap");
lf[20]=C_h_intern(&lf[20],6,"append");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[22]=C_h_intern(&lf[22],2,"if");
lf[23]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[24]=C_h_intern(&lf[24],4,"cadr");
lf[25]=C_h_intern(&lf[25],4,"cddr");
lf[26]=C_h_intern(&lf[26],15,"string->keyword");
lf[27]=C_h_intern(&lf[27],14,"symbol->string");
lf[28]=C_h_intern(&lf[28],6,"gensym");
lf[29]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[30]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[31]=C_h_intern(&lf[31],10,"*messages*");
lf[32]=C_h_intern(&lf[32],11,"expand-send");
lf[33]=C_h_intern(&lf[33],7,"sprintf");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[35]=C_h_intern(&lf[35],15,"keyword->string");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[39]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[41]=C_h_intern(&lf[41],5,"&rest");
lf[42]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[43]=C_h_intern(&lf[43],14,"hash-table-ref");
lf[44]=C_h_intern(&lf[44],3,"cwd");
lf[45]=C_h_intern(&lf[45],17,"\003syspeek-c-string");
lf[46]=C_h_intern(&lf[46],5,"chdir");
lf[47]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[48]=C_h_intern(&lf[48],17,"\003sysmake-c-string");
lf[49]=C_h_intern(&lf[49],5,"fifth");
lf[50]=C_h_intern(&lf[50],5,"sixth");
lf[51]=C_h_intern(&lf[51],7,"seventh");
lf[52]=C_h_intern(&lf[52],6,"eighth");
lf[53]=C_h_intern(&lf[53],5,"ninth");
lf[54]=C_h_intern(&lf[54],5,"tenth");
lf[55]=C_h_intern(&lf[55],3,"nth");
lf[56]=C_h_intern(&lf[56],8,"list-ref");
lf[57]=C_h_intern(&lf[57],4,"rest");
lf[58]=C_h_intern(&lf[58],4,"last");
lf[59]=C_h_intern(&lf[59],7,"butlast");
lf[60]=C_h_intern(&lf[60],5,"list*");
lf[61]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[62]=C_h_intern(&lf[62],9,"list-set!");
lf[63]=C_h_intern(&lf[63],9,"make-list");
lf[64]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[80]=C_h_intern(&lf[80],7,"rescale");
lf[81]=C_h_intern(&lf[81],8,"discrete");
lf[82]=C_h_intern(&lf[82],3,"int");
lf[83]=C_h_intern(&lf[83],8,"quantize");
lf[84]=C_h_intern(&lf[84],8,"decimals");
lf[85]=C_h_intern(&lf[85],15,"rhythm->seconds");
lf[86]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[87]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[88]=C_h_intern(&lf[88],9,"\003syserror");
lf[89]=C_h_intern(&lf[89],13,"cents->scaler");
lf[90]=C_h_intern(&lf[90],13,"scaler->cents");
lf[91]=C_h_intern(&lf[91],7,"interpl");
lf[92]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[93]=C_h_intern(&lf[93],3,"err");
lf[94]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[95]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[96]=C_h_intern(&lf[96],6,"interp");
lf[97]=C_h_intern(&lf[97],5,"scale");
lf[98]=C_h_intern(&lf[98],6,"modulo");
lf[99]=C_h_intern(&lf[99],8,"ran-set!");
lf[100]=C_h_intern(&lf[100],3,"ran");
lf[101]=C_h_intern(&lf[101],7,"between");
lf[102]=C_h_intern(&lf[102],4,"pick");
lf[103]=C_decode_literal(C_heaptop,"\376B\000\000\027Missing values to pick.");
lf[104]=C_h_intern(&lf[104],4,"odds");
lf[105]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[106]=C_h_intern(&lf[106],5,"\000true");
lf[107]=C_h_intern(&lf[107],6,"\000false");
lf[108]=C_h_intern(&lf[108],6,"ranlow");
lf[109]=C_h_intern(&lf[109],7,"ranhigh");
lf[110]=C_h_intern(&lf[110],9,"ranmiddle");
lf[111]=C_h_intern(&lf[111],7,"ranbeta");
lf[112]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[113]=C_h_intern(&lf[113],2,"\000a");
lf[114]=C_h_intern(&lf[114],2,"\000b");
lf[115]=C_h_intern(&lf[115],6,"ranexp");
lf[116]=C_h_intern(&lf[116],8,"rangauss");
lf[117]=C_h_intern(&lf[117],9,"rancauchy");
lf[118]=C_h_intern(&lf[118],10,"ranpoisson");
lf[119]=C_h_intern(&lf[119],3,"arg");
lf[120]=C_h_intern(&lf[120],8,"rangamma");
lf[121]=C_h_intern(&lf[121],8,"ranbrown");
lf[122]=C_h_intern(&lf[122],7,"ranpink");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[126]=C_h_intern(&lf[126],13,"string-append");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[129]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[130]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[131]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[132]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[133]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[134]=C_h_intern(&lf[134],5,"floor");
lf[135]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[136]=C_h_intern(&lf[136],4,"note");
lf[137]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[138]=C_h_intern(&lf[138],3,"key");
lf[139]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[140]=C_h_intern(&lf[140],2,"hz");
lf[141]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[142]=C_h_intern(&lf[142],2,"pc");
lf[143]=C_h_intern(&lf[143],6,"invert");
lf[144]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[145]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[146]=C_h_intern(&lf[146],9,"transpose");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[148]=C_h_intern(&lf[148],10,"retrograde");
lf[149]=C_h_intern(&lf[149],7,"reverse");
lf[151]=C_h_intern(&lf[151],6,"period");
lf[153]=C_h_intern(&lf[153],14,"\003sysblock-set!");
lf[161]=C_h_intern(&lf[161],7,"pattern");
lf[176]=C_h_intern(&lf[176],4,"\000nad");
lf[177]=C_h_intern(&lf[177],8,"\000periods");
lf[178]=C_h_intern(&lf[178],12,"\000depth-first");
lf[180]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[181]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[182]=C_h_intern(&lf[182],14,"\000breadth-first");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[184]=C_h_intern(&lf[184],7,"\000values");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[187]=C_h_intern(&lf[187],4,"eop\077");
lf[188]=C_h_intern(&lf[188],4,"\000eop");
lf[189]=C_h_intern(&lf[189],4,"eod\077");
lf[190]=C_h_intern(&lf[190],4,"\000eod");
lf[191]=C_h_intern(&lf[191],4,"next");
lf[195]=C_h_intern(&lf[195],5,"force");
lf[196]=C_h_intern(&lf[196],8,"promise\077");
lf[197]=C_h_intern(&lf[197],3,"max");
lf[198]=C_h_intern(&lf[198],10,"make-cycle");
lf[199]=C_h_intern(&lf[199],12,"\003sysfor-each");
lf[201]=C_h_intern(&lf[201],4,"\000for");
lf[202]=C_h_intern(&lf[202],7,"\000repeat");
lf[204]=C_h_intern(&lf[204],5,"palin");
lf[206]=C_h_intern(&lf[206],15,"make-palindrome");
lf[208]=C_h_intern(&lf[208],6,"\000elide");
lf[209]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[210]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[211]=C_h_intern(&lf[211],9,"make-line");
lf[213]=C_h_intern(&lf[213],9,"make-heap");
lf[215]=C_h_intern(&lf[215],13,"make-rotation");
lf[217]=C_h_intern(&lf[217],7,"\000rotate");
lf[219]=C_h_intern(&lf[219],11,"random-item");
lf[227]=C_h_intern(&lf[227],14,"make-weighting");
lf[230]=C_h_intern(&lf[230],7,"\000weight");
lf[231]=C_h_intern(&lf[231],4,"\000min");
lf[232]=C_h_intern(&lf[232],4,"\000max");
lf[233]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[234]=C_h_intern(&lf[234],11,"make-markov");
lf[235]=C_h_intern(&lf[235],1,"*");
lf[237]=C_h_intern(&lf[237],5,"\000past");
lf[238]=C_h_intern(&lf[238],2,"->");
lf[239]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[240]=C_h_intern(&lf[240],3,"\000->");
lf[241]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[242]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[243]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[244]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[246]=C_h_intern(&lf[246],10,"graph-node");
lf[247]=C_h_intern(&lf[247],10,"make-graph");
lf[249]=C_h_intern(&lf[249],3,"\000to");
lf[250]=C_h_intern(&lf[250],3,"\000id");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[253]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[255]=C_h_intern(&lf[255],5,"token");
lf[260]=C_h_intern(&lf[260],1,"t");
lf[265]=C_h_intern(&lf[265],4,"rule");
lf[268]=C_h_intern(&lf[268],22,"hash-table-ref/default");
lf[275]=C_h_intern(&lf[275],11,"parse-error");
lf[279]=C_h_intern(&lf[279],10,"parse-unit");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[293]=C_h_intern(&lf[293],14,"string->symbol");
lf[294]=C_h_intern(&lf[294],4,"expt");
lf[295]=C_h_intern(&lf[295],5,"equal");
lf[296]=C_h_intern(&lf[296],3,"and");
lf[297]=C_h_intern(&lf[297],2,"or");
lf[298]=C_h_intern(&lf[298],3,"not");
lf[299]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[300]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[303]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[309]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[311]=C_h_intern(&lf[311],1,"@");
lf[312]=C_h_intern(&lf[312],1,"+");
lf[313]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[314]=C_h_intern(&lf[314],6,"printf");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[320]=C_h_intern(&lf[320],2,">=");
lf[321]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[322]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[323]=C_h_intern(&lf[323],5,"begin");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[326]=C_h_intern(&lf[326],1,">");
lf[327]=C_h_intern(&lf[327],2,"<=");
lf[328]=C_h_intern(&lf[328],1,"-");
lf[329]=C_h_intern(&lf[329],1,"<");
lf[330]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[331]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[336]=C_h_intern(&lf[336],3,"sal");
lf[337]=C_h_intern(&lf[337],11,"print-error");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[339]=C_h_intern(&lf[339],11,"make-string");
lf[340]=C_h_intern(&lf[340],9,"substring");
lf[341]=C_h_intern(&lf[341],2,"pp");
lf[342]=C_h_intern(&lf[342],4,"eval");
lf[343]=C_h_intern(&lf[343],7,"\000syntax");
lf[344]=C_h_intern(&lf[344],7,"\000scheme");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[346]=C_h_intern(&lf[346],7,"call/cc");
lf[347]=C_h_intern(&lf[347],9,"sal:print");
lf[348]=C_h_intern(&lf[348],13,"print-message");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[352]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[353]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[354]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[355]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[357]=C_h_intern(&lf[357],9,"sal:chdir");
lf[358]=C_h_intern(&lf[358],8,"sal:load");
lf[359]=C_h_intern(&lf[359],13,"load-sal-file");
lf[360]=C_h_intern(&lf[360],4,"load");
lf[361]=C_h_intern(&lf[361],15,"\003syssubstring=\077");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[365]=C_h_intern(&lf[365],12,"file-exists\077");
lf[366]=C_h_intern(&lf[366],8,"sal:open");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[368]=C_h_intern(&lf[368],10,"sal:output");
lf[369]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[381]=C_h_intern(&lf[381],8,"operator");
lf[382]=C_h_intern(&lf[382],8,"bindings");
lf[383]=C_h_intern(&lf[383],10,"collectors");
lf[384]=C_h_intern(&lf[384],9,"initially");
lf[385]=C_h_intern(&lf[385],9,"end-tests");
lf[386]=C_h_intern(&lf[386],7,"looping");
lf[387]=C_h_intern(&lf[387],8,"stepping");
lf[388]=C_h_intern(&lf[388],7,"finally");
lf[389]=C_h_intern(&lf[389],9,"returning");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[396]=C_h_intern(&lf[396],7,"newline");
lf[397]=C_h_intern(&lf[397],7,"display");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[399]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[401]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[406]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[407]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[409]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[413]=C_h_intern(&lf[413],3,"for");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[416]=C_h_intern(&lf[416],8,"downfrom");
lf[417]=C_h_intern(&lf[417],5,"above");
lf[418]=C_h_intern(&lf[418],5,"below");
lf[419]=C_h_intern(&lf[419],6,"downto");
lf[420]=C_h_intern(&lf[420],4,"from");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[422]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[427]=C_h_intern(&lf[427],2,"to");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[431]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[432]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[437]=C_h_intern(&lf[437],2,"by");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[446]=C_h_intern(&lf[446],6,"across");
lf[447]=C_h_intern(&lf[447],13,"vector-length");
lf[448]=C_h_intern(&lf[448],10,"vector-ref");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[451]=C_h_intern(&lf[451],4,"over");
lf[452]=C_h_intern(&lf[452],2,"in");
lf[453]=C_h_intern(&lf[453],5,"quote");
lf[454]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[460]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[461]=C_h_intern(&lf[461],2,"on");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[465]=C_h_intern(&lf[465],1,"=");
lf[466]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[467]=C_h_intern(&lf[467],4,"then");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[473]=C_h_intern(&lf[473],4,"with");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[496]=C_h_intern(&lf[496],3,"sum");
lf[497]=C_h_intern(&lf[497],5,"count");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[499]=C_h_intern(&lf[499],8,"minimize");
lf[500]=C_h_intern(&lf[500],8,"maximize");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[503]=C_h_intern(&lf[503],4,"list");
lf[504]=C_h_intern(&lf[504],8,"set-cdr!");
lf[505]=C_h_intern(&lf[505],9,"last-pair");
lf[506]=C_h_intern(&lf[506],7,"collect");
lf[507]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[510]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[511]=C_h_intern(&lf[511],5,"nconc");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[515]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[516]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[517]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[518]=C_h_intern(&lf[518],4,"into");
lf[519]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[525]=C_h_intern(&lf[525],6,"return");
lf[527]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[528]=C_h_intern(&lf[528],5,"until");
lf[529]=C_h_intern(&lf[529],5,"while");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[533]=C_h_intern(&lf[533],7,"thereis");
lf[534]=C_h_intern(&lf[534],6,"always");
lf[535]=C_h_intern(&lf[535],5,"never");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[545]=C_h_intern(&lf[545],4,"task");
lf[546]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[548]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[554]=C_h_intern(&lf[554],2,"do");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[558]=C_h_intern(&lf[558],4,"iter");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[561]=C_h_intern(&lf[561],6,"repeat");
lf[562]=C_h_intern(&lf[562],2,"as");
lf[564]=C_h_intern(&lf[564],10,"mm:make-on");
lf[565]=C_h_intern(&lf[565],5,"\000time");
lf[566]=C_h_intern(&lf[566],4,"\000key");
lf[567]=C_h_intern(&lf[567],4,"\000vel");
lf[568]=C_h_intern(&lf[568],5,"\000chan");
lf[569]=C_h_intern(&lf[569],6,"mm:on\077");
lf[570]=C_h_intern(&lf[570],11,"mm:make-off");
lf[571]=C_h_intern(&lf[571],7,"mm:off\077");
lf[572]=C_h_intern(&lf[572],13,"mm:make-touch");
lf[573]=C_h_intern(&lf[573],4,"\000val");
lf[574]=C_h_intern(&lf[574],9,"mm:touch\077");
lf[575]=C_h_intern(&lf[575],12,"mm:make-ctrl");
lf[576]=C_h_intern(&lf[576],4,"\000num");
lf[577]=C_h_intern(&lf[577],8,"mm:ctrl\077");
lf[578]=C_h_intern(&lf[578],12,"mm:make-prog");
lf[579]=C_h_intern(&lf[579],8,"mm:prog\077");
lf[580]=C_h_intern(&lf[580],13,"mm:make-press");
lf[581]=C_h_intern(&lf[581],9,"mm:press\077");
lf[582]=C_h_intern(&lf[582],12,"mm:make-bend");
lf[583]=C_h_intern(&lf[583],7,"mm:free");
lf[584]=C_h_intern(&lf[584],7,"mm:copy");
lf[585]=C_h_intern(&lf[585],7,"mm:time");
lf[586]=C_h_intern(&lf[586],12,"mm:time-set!");
lf[587]=C_h_intern(&lf[587],7,"mm:chan");
lf[588]=C_h_intern(&lf[588],12,"mm:chan-set!");
lf[589]=C_h_intern(&lf[589],6,"mm:key");
lf[590]=C_h_intern(&lf[590],11,"mm:key-set!");
lf[591]=C_h_intern(&lf[591],6,"mm:vel");
lf[592]=C_h_intern(&lf[592],11,"mm:vel-set!");
lf[593]=C_h_intern(&lf[593],6,"mm:val");
lf[594]=C_h_intern(&lf[594],8,"mm:type\077");
lf[595]=C_h_intern(&lf[595],11,"mm:val-set!");
lf[596]=C_h_intern(&lf[596],1,"k");
lf[597]=C_h_intern(&lf[597],6,"mm:num");
lf[598]=C_h_intern(&lf[598],11,"mm:num-set!");
lf[599]=C_h_intern(&lf[599],7,"mp:note");
lf[600]=C_h_intern(&lf[600],7,"mp:midi");
lf[601]=C_h_intern(&lf[601],6,"mp:off");
lf[602]=C_h_intern(&lf[602],5,"mp:on");
lf[603]=C_h_intern(&lf[603],8,"mp:touch");
lf[604]=C_h_intern(&lf[604],7,"mp:ctrl");
lf[605]=C_h_intern(&lf[605],7,"mp:prog");
lf[606]=C_h_intern(&lf[606],8,"mp:press");
lf[607]=C_h_intern(&lf[607],7,"mp:bend");
lf[608]=C_h_intern(&lf[608],5,"mp:mm");
lf[609]=C_h_intern(&lf[609],9,"mp:inhook");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[611]=C_h_intern(&lf[611],27,"condition-property-accessor");
lf[612]=C_h_intern(&lf[612],3,"exn");
lf[613]=C_h_intern(&lf[613],7,"message");
lf[614]=C_h_intern(&lf[614],22,"with-exception-handler");
lf[615]=C_h_intern(&lf[615],30,"call-with-current-continuation");
lf[616]=C_h_intern(&lf[616],4,"cs:i");
lf[617]=C_h_intern(&lf[617],4,"cs:f");
lf[618]=C_h_intern(&lf[618],8,"cs:clear");
lf[619]=C_h_intern(&lf[619],7,"cm-logo");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[627]=C_h_intern(&lf[627],25,"current-time-milliseconds");
lf[628]=C_h_intern(&lf[628],20,"current-time-seconds");
lf[630]=C_h_intern(&lf[630],6,"\003sysgc");
lf[633]=C_h_intern(&lf[633],6,"sprout");
lf[634]=C_h_intern(&lf[634],3,"now");
lf[635]=C_h_intern(&lf[635],11,"time-format");
lf[636]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[637]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[638]=C_h_intern(&lf[638],1,"m");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[640]=C_h_intern(&lf[640],1,"s");
lf[641]=C_h_intern(&lf[641],5,"pause");
lf[642]=C_h_intern(&lf[642],7,"paused\077");
lf[643]=C_h_intern(&lf[643],4,"cont");
lf[644]=C_h_intern(&lf[644],4,"stop");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[646]=C_h_intern(&lf[646],4,"hush");
lf[647]=C_h_intern(&lf[647],14,"return-to-host");
lf[648]=C_h_intern(&lf[648],4,"cond");
lf[649]=C_h_intern(&lf[649],6,"lambda");
lf[650]=C_h_intern(&lf[650],7,"elapsed");
lf[651]=C_h_intern(&lf[651],1,"x");
lf[652]=C_h_intern(&lf[652],4,"wait");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[654]=C_h_intern(&lf[654],6,"safety");
lf[655]=C_h_intern(&lf[655],4,"cdar");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[657]=C_h_intern(&lf[657],4,"caar");
lf[658]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[659]=C_h_intern(&lf[659],7,"declare");
lf[660]=C_h_intern(&lf[660],5,"\000null");
lf[661]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[662]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[664]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[665]=C_h_intern(&lf[665],18,"\003sysregister-macro");
lf[666]=C_h_intern(&lf[666],2,"go");
lf[667]=C_h_intern(&lf[667],15,"hash-table-set!");
lf[668]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[669]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[671]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[673]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[675]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[677]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[679]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[680]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[681]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[683]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[684]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[685]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[687]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[689]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[690]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[691]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[692]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[693]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[695]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[696]=C_h_intern(&lf[696],5,":loop");
lf[697]=C_h_intern(&lf[697],7,"tagbody");
lf[698]=C_h_intern(&lf[698],5,"block");
lf[699]=C_h_intern(&lf[699],3,"nil");
lf[700]=C_h_intern(&lf[700],20,"\003sysregister-macro-2");
lf[701]=C_h_intern(&lf[701],8,"function");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[703]=C_h_intern(&lf[703],3,"pop");
lf[704]=C_h_intern(&lf[704],4,"cons");
lf[705]=C_h_intern(&lf[705],4,"push");
lf[706]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[707]=C_h_intern(&lf[707],4,"loop");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[711]=C_h_intern(&lf[711],6,"define");
lf[712]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[717]=C_h_intern(&lf[717],7,"\000return");
lf[718]=C_h_intern(&lf[718],9,"\000function");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[720]=C_h_intern(&lf[720],8,"\000process");
lf[721]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[725]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[730]=C_h_intern(&lf[730],5,"\000loop");
lf[731]=C_h_intern(&lf[731],4,"\000run");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[733]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[735]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[740]=C_h_intern(&lf[740],9,"list-tail");
lf[741]=C_h_intern(&lf[741],8,"set-car!");
lf[742]=C_h_intern(&lf[742],3,"min");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[745]=C_h_intern(&lf[745],9,"\000bindings");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[753]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[756]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[757]=C_h_intern(&lf[757],10,"sal:system");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[771]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[775]=C_h_intern(&lf[775],7,"unquote");
lf[776]=C_h_intern(&lf[776],16,"unquote-splicing");
lf[777]=C_h_intern(&lf[777],5,"\000list");
lf[778]=C_h_intern(&lf[778],8,"\000unquote");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[782]=C_h_intern(&lf[782],10,"quasiquote");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[787]=C_h_intern(&lf[787],7,"fprintf");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[790]=C_h_intern(&lf[790],27,"\003sysregister-record-printer");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[792]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[793]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[794]=C_h_intern(&lf[794],6,"ruleid");
lf[795]=C_h_intern(&lf[795],9,"make-rule");
lf[796]=C_h_intern(&lf[796],7,"*rules*");
lf[797]=C_h_intern(&lf[797],7,"defrule");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[799]=C_h_intern(&lf[799],15,"make-hash-table");
lf[800]=C_h_intern(&lf[800],3,"eq\077");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[803]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[805]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[806]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[807]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[808]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[814]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[815]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[816]=C_h_intern(&lf[816],6,"equal\077");
lf[817]=C_h_intern(&lf[817],4,"send");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[819]=C_h_intern(&lf[819],19,"define-send-message");
lf[820]=C_h_intern(&lf[820],12,"with-optkeys");
C_register_lf2(lf,821,create_ptable());
t2=C_mutate(&lf[0],lf[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5271,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t3);}

/* k5269 */
static void C_ccall f_5271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5274,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5272 in k5269 */
static void C_ccall f_5274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5277,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5275 in k5272 in k5269 */
static void C_ccall f_5277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5280,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5280,2,t0,t1);}
t2=C_mutate((C_word*)lf[2]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5282,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5571,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33243,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 239  ##sys#register-macro");
t5=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[820],t4);}

/* a33242 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33243(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33243r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33243r(t0,t1,t2,t3);}}

static void C_ccall f_33243r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 240  expand-optkeys");
t6=*((C_word*)lf[2]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5575,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 246  make-hash-table");
t3=C_retrieve(lf[799]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[816]+1));}

/* k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5575,2,t0,t1);}
t2=C_mutate((C_word*)lf[31]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5578,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33191,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 248  ##sys#register-macro");
t5=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[819],t4);}

/* a33190 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33191,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33195,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_33195(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33228,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 255  string->symbol");
t10=*((C_word*)lf[293]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33238,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 257  symbol->string");
t9=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 259  error");
t8=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[818]);}}}}

/* k33236 in a33190 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33195(2,t3,t2);}

/* k33226 in a33190 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33195(2,t3,t2);}

/* k33193 in a33190 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33195,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[453],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[667],lf[31],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5578,2,t0,t1);}
t2=C_mutate((C_word*)lf[32]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5580,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5871,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33185,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 344  ##sys#register-macro");
t5=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[817],t4);}

/* a33184 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33185(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33185r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33185r(t0,t1,t2,t3);}}

static void C_ccall f_33185r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 345  expand-send");
t4=C_retrieve(lf[32]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[171],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5871,2,t0,t1);}
t2=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5873,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[46]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5884,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5913,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5923,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5933,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5943,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5953,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5967,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[55]+1,*((C_word*)lf[56]+1));
t11=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5982,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5988,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6011,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6059,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6099,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6109,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6157,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6243,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6284,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6311,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6345,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6356,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6382,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6389,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6396,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6420,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6427,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6465,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6476,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6494,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6504,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6517,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6551,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6633,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6648,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[84]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6669,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6688,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6748,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6763,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[91]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6778,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[96]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6873,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6900,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6959,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6965,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6989,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7010,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[104]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7058,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[108]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7286,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[109]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7292,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[110]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7298,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[111]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7304,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7532,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7551,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7591,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7597,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[120]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7616,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7635,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7641,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t59=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7649,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  make-hash-table");
t60=C_retrieve(lf[799]);
((C_proc3)C_retrieve_proc(t60))(3,t60,t59,*((C_word*)lf[816]+1));}

/* k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7649,2,t0,t1);}
t2=C_mutate(&lf[123],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7652,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32969,a[2]=t7,a[3]=t4,a[4]=((C_word)li529),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_32969(t9,t5,C_fix(0));}

/* do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_32969(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32969,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[802],C_fix(-1),lf[803],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32982,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t5=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[123],"*notes*"),lf[804],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33183,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 366  modulo");
t4=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33183,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[805],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32992,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33003,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  modulo");
t6=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33003,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[806]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[807]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33015,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 366  tb:keynum->hertz");
f_6396(t4,((C_word*)t0)[4]);}

/* k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33019,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[815]);
C_trace("ChickenBridge.scm: 366  tb:keynum->hertz");
f_6396(t2,t3);}

/* k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33023,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[814]);
C_trace("ChickenBridge.scm: 366  tb:keynum->hertz");
f_6396(t2,t3);}

/* k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33167,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 366  floor");
t4=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33167,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33029,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li528),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_33029(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_33029(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33029,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33039,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33049,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_33049(t21,(C_word)C_i_string_equal_p(t20,lf[813]));}
else{
t20=t19;
f_33049(t20,C_SCHEME_FALSE);}}}

/* k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_33049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33049,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_33039(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33052,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[811]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_33052(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[812]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_33052(t7,t6);}
else{
t5=t2;
f_33052(t5,C_SCHEME_UNDEFINED);}}}}

/* k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_33052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33052,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[808],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_33060,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 366  string-append");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33060,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33067,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t6=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[123],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t4=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[123],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_33070(2,t4,C_SCHEME_UNDEFINED);}}

/* k33068 in k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 366  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[810],((C_word*)((C_word*)t0)[8])[1]);}

/* k33072 in k33068 in k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33074,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33081,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t6=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[123],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k33079 in k33072 in k33068 in k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33084,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t4=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[123],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_33084(2,t4,C_SCHEME_UNDEFINED);}}

/* k33082 in k33079 in k33072 in k33068 in k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33088,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 366  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[809],((C_word*)((C_word*)t0)[6])[1]);}

/* k33086 in k33082 in k33079 in k33072 in k33068 in k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33088,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33095,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t6=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[123],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k33093 in k33086 in k33082 in k33079 in k33072 in k33068 in k33065 in k33058 in k33050 in k33047 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[123],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_33039(2,t3,C_SCHEME_UNDEFINED);}}

/* k33037 in do480 in k33165 in k33021 in k33017 in k33013 in k33001 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_33039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_33029(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k32990 in k33181 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32992,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_32969(t3,((C_word*)t0)[2],t2);}

/* k32980 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32985,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[123],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k32983 in k32980 in do474 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7652,2,t0,t1);}
t2=C_mutate(&lf[124],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7654,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7756,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7809,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[138]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7906,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8028,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[142]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8144,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[143]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8189,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[146]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8324,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[148]+1,*((C_word*)lf[149]+1));
t11=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8490,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[152],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8502,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[154],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8511,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[155],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8529,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[156],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8547,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[157],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8574,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[158],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8583,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[159],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8601,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8646,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8661,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[163],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8670,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[164],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8679,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[165],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8697,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[166],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8706,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8715,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[168],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8733,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8742,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8751,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[171],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8760,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[172],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8769,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8886,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[174],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8895,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[175],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8950,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[179],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8960,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[187]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9140,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[189]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9159,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[191]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9178,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[192],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9301,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[193],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9602,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9611,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9657,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[198]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9772,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[200],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10027,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[203],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10099,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[205],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10108,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10188,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10658,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[211]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10873,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[212],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11120,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11156,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[214],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11419,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11495,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[216],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11969,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[218],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12191,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[220],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12200,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[221],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12209,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12227,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[223],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12245,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[224],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12263,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12272,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12281,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12364,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13131,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13243,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[234]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13676,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14163,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[245],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14503,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[247]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14566,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[248],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15084,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[254],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15178,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[256],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15199,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[257],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15217,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[258],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15235,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t74=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15245,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32955,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  ##sys#register-record-printer");
t76=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t76))(4,t76,t74,lf[255],t75);}

/* a32954 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32955,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32963,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-type");
f_15199(t4,t2);}

/* k32961 in a32954 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32967,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-string");
f_15217(t2,((C_word*)t0)[2]);}

/* k32965 in k32961 in a32954 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fprintf");
t2=C_retrieve(lf[787]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[801],((C_word*)t0)[2],t1);}

/* k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15245,2,t0,t1);}
t2=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15247,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15276,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15288,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15296,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-hash-table");
t6=C_retrieve(lf[799]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[800]+1));}

/* k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15296,2,t0,t1);}
t2=C_mutate(&lf[263],t1);
t3=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15298,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15319,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15401,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32945,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  ##sys#register-record-printer");
t7=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[265],t6);}

/* a32944 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32945,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32953,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  rule-name");
f_15319(t4,t2);}

/* k32951 in a32944 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fprintf");
t2=C_retrieve(lf[787]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[798],t1);}

/* k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15404,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32842,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  ##sys#register-macro");
t4=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[797],t3);}

/* a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_32842r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_32842r(t0,t1,t2,t3,t4);}}

static void C_ccall f_32842r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32845,a[2]=t6,a[3]=((C_word)li524),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[794],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32905,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  symbol->string");
t11=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k32903 in a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32909,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_32845(t3,t2,((C_word*)t0)[2]);}

/* k32907 in k32903 in a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32909,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_32923(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_32923(t7,(C_word)C_i_nullp(t6));}}

/* k32921 in k32907 in k32903 in a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_32923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32923,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[795],((C_word*)t0)[6],lf[794],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[667],lf[796],lf[794],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[3],((C_word*)t0)[2],t4));}

/* ppat in a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_32845(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_32845,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[792]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32865,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[793]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[453],t2):t2));}}}

/* k32863 in ppat in a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32869,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_32845(t4,t2,t3);}

/* k32867 in k32863 in ppat in a32841 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32869,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[704],((C_word*)t0)[2],t1));}

/* k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15404,2,t0,t1);}
t2=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15406,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15427,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15430,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15442,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15448,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15458,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15516,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15548,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15569,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15587,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15597,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32828,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  ##sys#register-record-printer");
t14=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[275],t13);}

/* a32827 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32828,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32836,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-error-string");
f_15569(t4,t2);}

/* k32834 in a32827 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32840,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-error-position");
f_15587(t2,((C_word*)t0)[2]);}

/* k32838 in k32834 in a32827 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fprintf");
t2=C_retrieve(lf[787]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[791],((C_word*)t0)[2],t1);}

/* k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15597,2,t0,t1);}
t2=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15599,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15605,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15620,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15638,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15656,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15666,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32802,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  ##sys#register-record-printer");
t9=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[279],t8);}

/* a32801 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32802,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32806,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t4,t2);}

/* k32804 in a32801 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32812,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalRuleType?");
f_16878(t2,t1);}

/* k32810 in k32804 in a32801 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32812,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32823,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  get-rule");
f_15406(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 368  fprintf");
t2=C_retrieve(lf[787]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[789],((C_word*)t0)[2]);}}

/* k32821 in k32810 in k32804 in a32801 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  rule-name");
f_15319(((C_word*)t0)[2],t1);}

/* k32817 in k32810 in k32804 in a32801 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fprintf");
t2=C_retrieve(lf[787]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[788],t1);}

/* k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15666,2,t0,t1);}
t2=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15668,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15684,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15716,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15728,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15738,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15756,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15789,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15997,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16005,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t11=lf[307]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16109,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16728,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16776,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16878,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16890,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16911,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32780,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[297],t21);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t18,lf[786],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32778 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(25856),t1);}

/* k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16914,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32760,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[297],t5);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[785],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32758 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(26112),t1);}

/* k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16917,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32720,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[297],t10);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[784],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32718 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(26368),t1);}

/* k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16920,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32610,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[235],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[296],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32616,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32626,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[783],C_fix(26624),t9,t10,t11);}

/* a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32626,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32630,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t5,lf[777],t3);}

/* k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t2,((C_word*)t0)[2]);}

/* k32631 in k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32633,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[503]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32651,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t3,lf[777],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k32649 in k32631 in k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32654,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k32652 in k32649 in k32631 in k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32654,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32657,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32685,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t5,lf[777],((C_word*)t0)[2]);}

/* k32683 in k32652 in k32649 in k32631 in k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32685,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[778]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[782],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32657(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[453],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32657(t5,t4);}}

/* k32655 in k32652 in k32649 in k32631 in k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_32657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32657,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32663,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t2,lf[745],((C_word*)t0)[2]);}

/* k32661 in k32655 in k32652 in k32649 in k32631 in k32628 in a32625 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32663,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[503]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a32615 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32616(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32616,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k32608 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(26624),t1);}

/* k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16923,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32510,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[297],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[296],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32518,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t10,C_fix(27648));}

/* k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32520,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[3],lf[781],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32520(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32520,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32524,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32527,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,t3,C_fix(5376));}

/* k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t2,lf[777],((C_word*)t0)[4]);}

/* k32528 in k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_32533(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32562,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[779]:lf[780]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32570,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t5,t6);}}

/* k32568 in k32528 in k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-error");
f_15548(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32560 in k32528 in k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32531 in k32528 in k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32536,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k32534 in k32531 in k32528 in k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32539,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  set-emit-info!");
f_15738(t2,lf[777],lf[778],((C_word*)t0)[2]);}

/* k32537 in k32534 in k32531 in k32528 in k32525 in k32522 in a32519 in k32516 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32539,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[775],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[776],((C_word*)t0)[2])));}

/* k32508 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(27648),t1);}

/* k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16926,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32482,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[297],t7);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[774],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32480 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(26880),t1);}

/* k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16929,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32422,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[296],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32428,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32446,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[773],C_fix(27136),t8,t9,t10);}

/* a32445 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32446,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32454,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32458,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t6,t2);}

/* k32456 in a32445 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32452 in a32445 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32454,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[56],t1));}

/* a32427 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32428,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k32420 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(27136),t1);}

/* k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16932,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32299,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[296],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32305,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32336,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[772],C_fix(27392),t14,t15,t16);}

/* a32335 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32336,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32340,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k32338 in a32335 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32341 in k32338 in a32335 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32344 in k32341 in k32338 in a32335 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32346,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32359,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[22],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k32357 in k32344 in k32341 in k32338 in a32335 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32359,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[22],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a32304 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32305(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32305,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32309,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  sixth");
t5=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k32307 in a32304 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32309,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32324,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k32322 in k32307 in a32304 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32324,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k32297 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(27392),t1);}

/* k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16932,2,t0,t1);}
t2=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16934,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16988,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32179,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[312],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[297],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32185,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t4,lf[771],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a32184 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32185(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32185,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32201,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t4,t8,C_fix(256));}
else{
t7=t4;
f_32201(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_32201(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k32199 in a32184 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32201,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32212,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k32210 in k32199 in a32184 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32212,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k32177 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(28416),t1);}

/* k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16991,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32040,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[312],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[296],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[296],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[297],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32046,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[770],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a32045 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32046,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32066,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32069,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t7,t11,C_fix(256));}
else{
t10=t7;
f_32069(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_32069(2,t9,C_SCHEME_FALSE);}}

/* k32067 in a32045 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_32066(2,t2,C_SCHEME_END_OF_LIST);}}

/* k32064 in a32045 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32066,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k32038 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_32040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(28672),t1);}

/* k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16994,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31888,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[296],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[296],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[297],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31894,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[769],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a31893 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31894,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31912,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t10,t7,C_fix(768));}

/* k31910 in a31893 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31912,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,t3,C_fix(256));}}

/* k31919 in k31910 in a31893 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 368  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k31886 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(28160),t1);}

/* k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16997,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31817,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31823,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31841,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[768],C_fix(27904),t6,t7,t8);}

/* a31840 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31841(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31841,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31845,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k31843 in a31840 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31848,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31846 in k31843 in a31840 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31864,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31862 in k31846 in k31843 in a31840 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31864,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a31822 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31823,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k31815 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(27904),t1);}

/* k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16997,2,t0,t1);}
t2=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16999,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17020,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17136,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31741,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[297],t21);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t5,lf[767],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31739 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(28928),t1);}

/* k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17139,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31661,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[235],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[296],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31667,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[766],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a31666 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31667,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31674,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 368  is-op?");
f_16999(t4,t7);}
else{
t6=t4;
f_31674(2,t6,C_SCHEME_FALSE);}}

/* k31672 in a31666 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31674,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 368  inf->pre");
f_17020(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k31659 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(29184),t1);}

/* k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17142,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31525,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[296],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[296],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[297],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31531,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31557,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[765],C_fix(29440),t23,t24,t25);}

/* a31556 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31557,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31565,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k31563 in a31556 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31530 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31531,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31539,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31548,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t5,t6,C_fix(512));}
else{
t5=t4;
f_31539(t5,t2);}}

/* k31546 in a31530 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_31539(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k31537 in a31530 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_31539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k31523 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(29440),t1);}

/* k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17145,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31481,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[297],t11);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[764],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31479 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(29696),t1);}

/* k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17148,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31371,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[235],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31377,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31399,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[763],C_fix(33536),t10,t11,t12);}

/* a31398 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31399,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[347]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31410,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t8,t2);}

/* k31408 in a31398 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31410,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li505),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31412(t5,((C_word*)t0)[2],t1);}

/* do2618 in k31408 in a31398 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_31412(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31412,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31441,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k31439 in do2618 in k31408 in a31398 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31441,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_31412(t7,((C_word*)t0)[2],t6);}

/* a31376 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31377,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31393,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t5,t6,C_fix(256));}

/* k31391 in a31376 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31393,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k31369 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(33536),t1);}

/* k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17151,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31296,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[235],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31302,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31324,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[762],C_fix(34560),t10,t11,t12);}

/* a31323 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31324,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31328,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k31326 in a31323 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31335,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31333 in k31326 in a31323 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31335,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[633],t1));}

/* a31301 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31302,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31318,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t5,t6,C_fix(256));}

/* k31316 in a31301 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31318,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k31294 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(34560),t1);}

/* k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17154,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31097,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[297],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[297],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[311],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[296],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31103,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31164,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[761],C_fix(34304),t21,t22,t23);}

/* a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31164,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31168,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31204,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t6,t2);}

/* k31202 in a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31166 in a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31168,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31184,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li500),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  expand-send");
t6=C_retrieve(lf[32]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a31183 in k31166 in a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31184(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_31184r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31184r(t0,t1,t2,t3);}}

static void C_ccall f_31184r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31192,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31196,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[33]),t2,t3);}

/* k31194 in a31183 in k31166 in a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31200,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t2,((C_word*)t0)[2]);}

/* k31198 in k31194 in a31183 in k31166 in a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-error");
f_15548(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31190 in a31183 in k31166 in a31163 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a31102 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31103(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31103,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31110,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31150,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 368  append");
t15=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_31110(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_31110(t10,t9);}}

/* k31148 in a31102 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31110(t3,t2);}

/* k31108 in a31102 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_31110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31110,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31121,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t4,t5);}

/* k31119 in k31108 in a31102 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k31095 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(34304),t1);}

/* k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17157,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31071,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31077,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[760],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a31076 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31077,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k31069 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(33792),t1);}

/* k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17160,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31043,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31051,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t7,C_fix(35072));}

/* k31049 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31055,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-emitter");
f_16005(t2,lf[358]);}

/* k31053 in k31049 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[4],lf[759],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31041 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(35072),t1);}

/* k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17163,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31015,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31023,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t7,C_fix(35584));}

/* k31021 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31027,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-emitter");
f_16005(t2,lf[357]);}

/* k31025 in k31021 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[4],lf[758],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31013 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_31015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(35584),t1);}

/* k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17166,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30987,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30995,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t7,C_fix(35328));}

/* k30993 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30999,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-emitter");
f_16005(t2,lf[757]);}

/* k30997 in k30993 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[4],lf[756],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30985 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(35328),t1);}

/* k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17169,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30959,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30967,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t7,C_fix(34816));}

/* k30965 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30971,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-emitter");
f_16005(t2,lf[368]);}

/* k30969 in k30965 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[4],lf[755],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30957 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(34816),t1);}

/* k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17172,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30822,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[297],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[296],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[297],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[235],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[296],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30828,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30858,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[754],C_fix(36096),t22,t23,t24);}

/* a30857 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30858,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[753]);}

/* a30827 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30828,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30852,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t6,t7,C_fix(256));}

/* k30850 in a30827 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30852,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k30820 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(36096),t1);}

/* k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17175,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30764,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30772,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t7,C_fix(31744));}

/* k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30774,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[3],lf[752],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a30773 in k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30774,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30778,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k30776 in a30773 in k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30806,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t3,lf[731],((C_word*)t0)[3]);}

/* k30804 in k30776 in a30773 in k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30806,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30781(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30794,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30798,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t3,t4);}}

/* k30796 in k30804 in k30776 in a30773 in k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-error");
f_15548(((C_word*)t0)[2],lf[751],t1);}

/* k30792 in k30804 in k30776 in a30773 in k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k30779 in k30776 in a30773 in k30770 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30762 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(31744),t1);}

/* k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17178,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30703,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30711,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t7,C_fix(31488));}

/* k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30713,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[3],lf[750],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30713(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30713,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30717,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k30715 in a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30748,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t3,lf[718],((C_word*)t0)[3]);}

/* k30746 in k30715 in a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30748,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30720(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30736,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30740,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t3,t4);}}

/* k30738 in k30746 in k30715 in a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-error");
f_15548(((C_word*)t0)[2],lf[749],t1);}

/* k30734 in k30746 in k30715 in a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k30718 in k30715 in a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30723,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  set-emit-info!");
f_15738(t2,lf[718],lf[717],((C_word*)t0)[3]);}

/* k30721 in k30718 in k30715 in a30712 in k30709 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30701 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(31488),t1);}

/* k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17181,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30612,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[296],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[297],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30618,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30653,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[748],C_fix(30208),t10,t11,t12);}

/* a30652 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30653,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30659,a[2]=t4,a[3]=t3,a[4]=((C_word)li492),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30667,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t6,t2);}

/* k30665 in a30652 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a30658 in a30652 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30659(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30659,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30617 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30618(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30618,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30651,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t4,C_fix(4608),lf[747],C_SCHEME_FALSE);}}

/* k30649 in a30617 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30651,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k30610 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(30208),t1);}

/* k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17184,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30510,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[235],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30516,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30559,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[746],C_fix(29952),t10,t11,t12);}

/* a30558 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30559,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30563,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t5,lf[745],C_SCHEME_TRUE,t3);}

/* k30561 in a30558 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30568,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li489),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30576,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t3,((C_word*)t0)[2]);}

/* k30574 in k30561 in a30558 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a30567 in k30561 in a30558 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30568(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30568,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30515 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30516,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30549,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k30547 in a30515 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30549,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k30508 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(29952),t1);}

/* k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17187,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30424,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[297],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[297],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[296],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30430,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[744],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a30429 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30430,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k30422 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(30720),t1);}

/* k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17190,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30144,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[235],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30150,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30193,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[743],C_fix(30464),t10,t11,t12);}

/* a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30193,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30197,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30197,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[323]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li485),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_30205(t8,((C_word*)t0)[2],t1);}

/* do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_30205(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30205,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t3,t4);}}

/* k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30231,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t2,t3);}

/* k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30237,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30237,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30240,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t5,((C_word*)t0)[2],C_fix(10756));}

/* k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30297,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_30240(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30304,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30240(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k30312 in k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30314,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[235],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30240(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30324,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k30322 in k30312 in k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30324,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[503],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_30240(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30338,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k30336 in k30322 in k30312 in k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30338,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[704],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30240(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k30346 in k30336 in k30322 in k30312 in k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30348,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30240(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k30356 in k30346 in k30336 in k30322 in k30312 in k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30358,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[742],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30240(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k30366 in k30356 in k30346 in k30336 in k30322 in k30312 in k30302 in k30295 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30368,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[197],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30240(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_30240(t2,C_SCHEME_UNDEFINED);}}

/* k30238 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_30240(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30240,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30264,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_30264(t5,(C_word)C_eqp(t4,lf[56]));}
else{
t4=t3;
f_30264(t4,C_SCHEME_FALSE);}}

/* k30262 in k30238 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_30264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30264,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[740],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[741],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30243(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30243(t4,t3);}}

/* k30241 in k30238 in k30235 in k30232 in k30229 in k30226 in do2697 in k30195 in a30192 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_30243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30243,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_30205(t7,((C_word*)t0)[2],t6);}

/* a30149 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30150(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30150,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30183,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k30181 in a30149 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30183,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k30142 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(30464),t1);}

/* k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17193,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30030,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[311],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[235],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[296],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30036,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30062,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[739],C_fix(32000),t12,t13,t14);}

/* a30061 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30062,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30066,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k30064 in a30061 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30066,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30070 in k30064 in a30061 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30072,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30092,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[323],t1));}}

/* k30090 in k30070 in k30064 in a30061 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30092,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[4],t2));}

/* a30035 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30036,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30046,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_30046(t12,t11);}
else{
t10=t8;
f_30046(t10,C_SCHEME_FALSE);}}

/* k30044 in a30035 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_30046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30046,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k30028 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_30030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(32000),t1);}

/* k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17196,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29833,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[311],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[311],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[296],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[296],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[296],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[297],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29839,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29907,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[738],C_fix(32256),t26,t27,t28);}

/* a29906 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29907(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29907,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29911,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t5,t2);}

/* k29909 in a29906 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29839(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29839,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29852,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29858,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t9,t4,C_fix(14336));}

/* k29856 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29858,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29864,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_29864(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29893,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t11,C_fix(4608),lf[737],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29852(t5,t4);}}

/* k29891 in k29856 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29864(t3,t2);}

/* k29862 in k29856 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29864,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t3=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29866 in k29862 in k29856 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29868,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_29871(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29882,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t5,C_fix(4608),lf[736],C_SCHEME_FALSE);}}

/* k29880 in k29866 in k29862 in k29856 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29871(t3,t2);}

/* k29869 in k29866 in k29862 in k29856 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29871,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29852(t4,t3);}

/* k29850 in a29838 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29852(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k29831 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(32256),t1);}

/* k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17196,2,t0,t1);}
t2=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17198,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17719,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29561,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[296],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[296],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[296],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[297],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[311],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[311],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[296],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[297],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[311],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[296],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[297],t58);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t4,lf[735],C_fix(33024),t59,C_retrieve2(lf[319],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k29559 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(33024),t1);}

/* k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17722,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29505,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[296],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[297],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29513,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  simple-unit-parser");
f_15997(t13,C_fix(33280));}

/* k29511 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(((C_word*)t0)[3],lf[734],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k29503 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(33280),t1);}

/* k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18244,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29333,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[297],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[311],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[235],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[235],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[312],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[311],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[296],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29339,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29385,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[733],C_fix(32512),t25,t26,t27);}

/* a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29385,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17728,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t7,t2);}

/* k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17728,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17746,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18203,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t17,t18,C_fix(14864));}

/* k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18203,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18207,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t2,lf[730],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18210,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t3,lf[720],((C_word*)((C_word*)t0)[6])[1]);}}

/* k18235 in k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18237,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_18210(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18225,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18229,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t3,t4);}}

/* k18227 in k18235 in k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-error");
f_15548(((C_word*)t0)[2],lf[732],t1);}

/* k18223 in k18235 in k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18208 in k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t2,lf[731],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k18212 in k18208 in k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_17746(t4,t3);}

/* k18205 in k18201 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17746(t3,t2);}

/* k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17746(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17746,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18192,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18196,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_17753(t5,C_SCHEME_UNDEFINED);}}

/* k18194 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18190 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17753(t3,t2);}

/* k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17753,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18067,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li478),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_18067(t7,t2,t3);}

/* do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18067(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18067,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18077,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18088,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t4,t5);}}

/* k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18088,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li477),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_18090(t5,((C_word*)t0)[2],t1);}

/* do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18090(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18090,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 368  append");
t9=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18104,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18157,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_18107(t4,C_SCHEME_UNDEFINED);}}

/* k18155 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18107(t3,t2);}

/* k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18107,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18142,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 368  append");
t6=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_18110(t3,C_SCHEME_UNDEFINED);}}

/* k18140 in k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18110(t3,t2);}

/* k18108 in k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18110,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18113,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18123,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18121 in k18108 in k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18123,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18135,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18113(t2,C_SCHEME_UNDEFINED);}}

/* k18133 in k18121 in k18108 in k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18135,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 368  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18125 in k18121 in k18108 in k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18113(t3,t2);}

/* k18111 in k18108 in k18105 in k18102 in do2810 in k18086 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18113(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18090(t3,((C_word*)t0)[2],t2);}

/* k18075 in do2807 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18067(t3,((C_word*)t0)[2],t2);}

/* k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18031,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li476),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18031(t7,t2,t3);}

/* do2821 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18031(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18031,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18042,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18057,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k18055 in do2821 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18057,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 368  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18040 in do2821 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18031(t4,((C_word*)t0)[2],t3);}

/* k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17763,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17766,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li475),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_17975(t8,t3,t4);}

/* do2826 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17975(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17975,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t3,t4);}}

/* k17983 in do2826 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17988,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17986 in k17983 in do2826 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17988,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17991,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18009,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t5,t6,C_fix(20224));}

/* k18007 in k17986 in k17983 in do2826 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18009,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[298],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17991(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_17991(t2,C_SCHEME_UNDEFINED);}}

/* k17989 in k17986 in k17983 in do2826 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17991,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17995,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 368  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k17993 in k17989 in k17986 in k17983 in do2826 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17975(t4,((C_word*)t0)[2],t3);}

/* k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17769,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_17769(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[297],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_17769(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_17769(t4,t3);}}

/* k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17769(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17769,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17772,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k17936 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17938,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17942,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_17772(t3,t2);}}

/* k17944 in k17936 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17940 in k17936 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17772(t3,t2);}

/* k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17772(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17772,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17800,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[729]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[554],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k17798 in k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17803,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[728]);}

/* k17801 in k17798 in k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17806,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[727]);}

/* k17804 in k17801 in k17798 in k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[726]);}

/* k17807 in k17804 in k17801 in k17798 in k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17812,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[725]);}

/* k17810 in k17807 in k17804 in k17801 in k17798 in k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17812,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[649],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[650],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[649],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[652],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[453],lf[612]);
t14=(C_word)C_a_i_list(&a,2,lf[453],lf[613]);
t15=(C_word)C_a_i_list(&a,3,lf[611],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[33],lf[724],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[337],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[649],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k17869 in k17810 in k17807 in k17804 in k17801 in k17798 in k17770 in k17767 in k17764 in k17761 in k17757 in k17754 in k17751 in k17744 in k17726 in a29384 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17871,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[18],t1);
t3=(C_word)C_a_i_list(&a,3,lf[648],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[649],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[614],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[649],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[615],t6);
t8=(C_word)C_a_i_list(&a,3,lf[4],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[649],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a29338 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29339,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29355,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t11=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k29353 in a29338 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29358,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  sixth");
t3=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29356 in k29353 in a29338 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29358,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29361,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_29361(t7,t6);}
else{
t5=t4;
f_29361(t5,C_SCHEME_UNDEFINED);}}

/* k29359 in k29356 in k29353 in a29338 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29361,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_29364(t5,t4);}
else{
t3=t2;
f_29364(t3,C_SCHEME_UNDEFINED);}}

/* k29362 in k29359 in k29356 in k29353 in a29338 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29364,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29375,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t3,((C_word*)t0)[8]);}

/* k29373 in k29362 in k29359 in k29356 in k29353 in a29338 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k29331 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(32512),t1);}

/* k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18247,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29188,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[296],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[235],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[296],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[297],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[296],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29194,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[723],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a29193 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29194,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29207,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_29207(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29233,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t12,t13,C_fix(256));}}

/* k29231 in a29193 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29233,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29207(t4,t3);}

/* k29205 in a29193 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29207,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k29186 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(37632),t1);}

/* k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18250,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28731,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[235],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[296],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[296],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[296],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[297],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[296],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28737,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28776,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[722],C_fix(36352),t23,t24,t25);}

/* a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28776,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28780,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t6,t2);}

/* k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28780,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[323]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28789,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28792,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t7,t2,C_fix(24576));}

/* k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28792,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28801,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li470),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28801(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t2,t3);}}

/* k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 368  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29068,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28865,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_28865(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29006,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 368  symbol->string");
t15=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k29004 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29006,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29015,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29040,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 368  substring");
t6=*((C_word*)lf[340]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_29015(t4,C_SCHEME_FALSE);}}

/* k29038 in k29004 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29015(t2,(C_word)C_i_string_equal_p(t1,lf[721]));}

/* k29013 in k29004 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_29015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29015,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29022,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29026,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 368  substring");
t5=*((C_word*)lf[340]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_28865(t2,C_SCHEME_UNDEFINED);}}

/* k29024 in k29013 in k29004 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  string->symbol");
t2=*((C_word*)lf[293]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29020 in k29013 in k29004 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_29022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28865(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28865,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28868,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t3,((C_word*)t0)[2],C_fix(24064));}

/* k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28943,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t2,lf[718],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k28982 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28984,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t2,lf[720],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_28868(t2,C_SCHEME_UNDEFINED);}}

/* k28986 in k28982 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28988,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28992,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k28990 in k28986 in k28982 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28992,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[711],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[719]);
t6=((C_word*)t0)[2];
f_28868(t6,t5);}

/* k28945 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28947,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28951,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k28949 in k28945 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28951,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28978,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  get-emit-info");
f_15716(t4,lf[718],((C_word*)((C_word*)t0)[2])[1]);}

/* k28976 in k28949 in k28945 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28978,2,t0,t1);}
t2=(C_word)C_eqp(lf[717],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[525]);
t4=(C_word)C_a_i_list(&a,3,lf[649],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[615],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28954(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_28954(t3,C_SCHEME_UNDEFINED);}}

/* k28952 in k28949 in k28945 in k28941 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28954,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[711],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[716]);
t5=((C_word*)t0)[2];
f_28868(t5,t4);}

/* k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28868(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28868,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28871,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28882,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28940,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  symbol->string");
t5=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k28938 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[715]);}

/* k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28882,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28884,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li471),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28884(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2908 in k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28884(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28884,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28899,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  string-append");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[713]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28903,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28932,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 368  symbol->string");
t8=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k28930 in do2908 in k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28901 in do2908 in k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28903,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28906,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_28906(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28920,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  string-append");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[714]);}}

/* k28918 in k28901 in do2908 in k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28906(t3,t2);}

/* k28904 in k28901 in do2908 in k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28906(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_28884(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k28897 in do2908 in k28880 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28899,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[348],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k28869 in k28866 in k28863 in k29066 in k28854 in k28851 in k28848 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28871,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_28789(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2882 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28801(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28801,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28811,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k28809 in do2882 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28811,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  sprintf");
t4=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[712],t2);}

/* k28815 in k28809 in do2882 in k28790 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28817,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[711],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[347],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_28801(t9,((C_word*)t0)[2],t8);}

/* k28787 in k28778 in a28775 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a28736 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28737(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28737,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28748,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28754,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t9,t7,C_fix(24576));}

/* k28752 in a28736 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28754,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 368  remove-token-type");
f_16934(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_28748(t2,C_SCHEME_UNDEFINED);}}

/* k28768 in k28752 in a28736 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28770,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28748(t5,t4);}

/* k28746 in a28736 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28748(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k28729 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(36352),t1);}

/* k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18253,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28655,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[297],t19);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[710],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k28653 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(36608),t1);}

/* k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18256,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28611,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[312],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28617,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28631,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  make-rule");
f_15298(t3,lf[709],C_fix(36864),t5,t6,t7);}

/* a28630 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28631,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28639,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28643,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t6,t2);}

/* k28641 in a28630 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28637 in a28630 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28639,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[323],t1));}

/* a28616 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28617(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28617,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28625,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  parse-unit-position");
f_15656(t4,t5);}

/* k28623 in a28616 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k28609 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  hash-table-set!");
t2=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[263],"*rules*"),C_fix(36864),t1);}

/* k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18256,2,t0,t1);}
t2=lf[333]=C_SCHEME_FALSE;;
t3=lf[334]=C_SCHEME_FALSE;;
t4=lf[335]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[336]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18262,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[347]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18433,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[357]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18612,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[358]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18621,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[366]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18668,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[368]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18674,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18693,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28603,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro-2");
t13=C_retrieve(lf[700]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[707],t12);}

/* a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28603(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28603,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22046,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[708]);}

/* k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22049,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-iteration");
f_22028(t2,lf[707],((C_word*)t0)[2],C_retrieve2(lf[563],"*loop-operators*"));}

/* k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22049,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[525],C_retrieve2(lf[563],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22056,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22201,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22215,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  loop-returning");
t11=C_retrieve2(lf[379],"loop-returning");
f_18800(3,t11,t10,t1);}

/* k22213 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22215,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_22201(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22211,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  loop-returning");
t3=C_retrieve2(lf[379],"loop-returning");
f_18800(3,t3,t2,((C_word*)t0)[2]);}}

/* k22209 in k22213 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_22201(t2,(C_word)C_i_car(t1));}

/* k22199 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22056,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22060,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  loop-end-tests");
t4=C_retrieve2(lf[374],"loop-end-tests");
f_18752(3,t4,t3,((C_word*)t0)[2]);}

/* k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22063,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_22063(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[297],t1));
t6=(C_word)C_a_i_list(&a,4,lf[22],t5,lf[706],C_SCHEME_FALSE);
t7=t2;
f_22063(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22063(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22063,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22074,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  loop-bindings");
t4=C_retrieve2(lf[371],"loop-bindings");
f_18716(3,t4,t3,((C_word*)t0)[2]);}

/* k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22078,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  loop-initially");
t4=C_retrieve2(lf[373],"loop-initially");
f_18740(3,t4,t3,((C_word*)t0)[3]);}

/* k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22082,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[525]);
t3=(C_word)C_a_i_list(&a,1,lf[666]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22146,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22150,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-looping");
t7=C_retrieve2(lf[375],"loop-looping");
f_18764(3,t7,t6,((C_word*)t0)[3]);}

/* k22152 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22158,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22162,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  loop-stepping");
t4=C_retrieve2(lf[377],"loop-stepping");
f_18776(3,t4,t3,((C_word*)t0)[2]);}

/* k22160 in k22152 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22162,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 369  ##sys#append");
t4=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k22156 in k22152 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22148 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22144 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22146,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[3],t3);
t5=(C_word)C_a_i_list(&a,3,lf[649],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[615],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22114,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22118,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  loop-finally");
t9=C_retrieve2(lf[378],"loop-finally");
f_18788(3,t9,t8,((C_word*)t0)[2]);}

/* k22116 in k22144 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22118,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  ##sys#append");
t3=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22112 in k22144 in k22080 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22114,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[649],t3);
t5=(C_word)C_a_i_list(&a,2,lf[615],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 369  ##sys#append");
t7=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k22076 in k22072 in k22061 in k22058 in k22054 in k22047 in k22044 in a28602 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22078,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[3],t2));}

/* k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18696,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28589,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro");
t4=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[705],t3);}

/* a28588 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28589(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28589,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[704],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[14],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[323],t5,t3));}

/* k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18699,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28560,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro");
t4=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[703],t3);}

/* a28559 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28560(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28560,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28564,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[702]);}

/* k28562 in a28559 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28564,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[3],t4,t6,t1));}

/* k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18702,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28557,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro");
t4=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[701],t3);}

/* a28556 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28557(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28557,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18702,2,t0,t1);}
t2=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18710,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18716,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18728,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18740,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18752,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18764,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18770,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18776,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[378],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18788,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18800,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18812,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18963,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19034,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19040,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19046,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19052,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19212,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19294,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[442],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19676,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[445],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19723,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20074,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[472],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20216,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[486],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20409,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[489],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20476,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[492],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20514,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[495],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20673,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[524],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21219,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[526],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21225,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[532],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21291,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21382,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[541],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21483,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[547],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21614,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22028,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[473],C_retrieve2(lf[472],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[384],C_retrieve2(lf[492],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[561],C_retrieve2(lf[442],"parse-repeat"),lf[558]);
t38=(C_word)C_a_i_list(&a,2,lf[420],C_retrieve2(lf[412],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[416],C_retrieve2(lf[412],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[418],C_retrieve2(lf[412],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[427],C_retrieve2(lf[412],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[417],C_retrieve2(lf[412],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[419],C_retrieve2(lf[412],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[452],C_retrieve2(lf[445],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[461],C_retrieve2(lf[445],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[446],C_retrieve2(lf[445],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[465],C_retrieve2(lf[464],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[451],C_retrieve2(lf[445],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[413],C_retrieve2(lf[404],"parse-for"),lf[558],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[562],C_retrieve2(lf[404],"parse-for"),lf[558]);
t51=(C_word)C_a_i_list(&a,3,lf[554],C_retrieve2(lf[486],"parse-do"),lf[545]);
t52=(C_word)C_a_i_list(&a,3,lf[506],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t53=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t54=(C_word)C_a_i_list(&a,3,lf[511],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t55=(C_word)C_a_i_list(&a,3,lf[496],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t56=(C_word)C_a_i_list(&a,3,lf[497],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t57=(C_word)C_a_i_list(&a,3,lf[499],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t58=(C_word)C_a_i_list(&a,3,lf[500],C_retrieve2(lf[495],"parse-accumulation"),lf[545]);
t59=(C_word)C_a_i_list(&a,4,lf[533],C_retrieve2(lf[532],"parse-thereis"),lf[545],C_retrieve2(lf[524],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[534],C_retrieve2(lf[532],"parse-thereis"),lf[545],C_retrieve2(lf[524],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[535],C_retrieve2(lf[532],"parse-thereis"),lf[545],C_retrieve2(lf[524],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[525],C_retrieve2(lf[538],"parse-return"),lf[545],C_retrieve2(lf[524],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[529],C_retrieve2(lf[526],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[528],C_retrieve2(lf[526],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[13],C_retrieve2(lf[547],"parse-conditional"),lf[545]);
t66=(C_word)C_a_i_list(&a,3,lf[8],C_retrieve2(lf[547],"parse-conditional"),lf[545]);
t67=(C_word)C_a_i_list(&a,3,lf[22],C_retrieve2(lf[547],"parse-conditional"),lf[545]);
t68=(C_word)C_a_i_list(&a,3,lf[388],C_retrieve2(lf[489],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[563],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22222,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28415,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro-2");
t73=C_retrieve(lf[700]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[558],t72);}

/* a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28415,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22228,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-iteration");
f_22028(t3,lf[558],t2,C_retrieve2(lf[563],"*loop-operators*"));}

/* k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22231,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[525],C_retrieve2(lf[563],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22360,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  loop-returning");
t6=C_retrieve2(lf[379],"loop-returning");
f_18800(3,t6,t5,t1);}

/* k22358 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22360,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22242,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-bindings");
t3=C_retrieve2(lf[371],"loop-bindings");
f_18716(3,t3,t2,((C_word*)t0)[2]);}

/* k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22246,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-initially");
t4=C_retrieve2(lf[373],"loop-initially");
f_18740(3,t4,t3,((C_word*)t0)[2]);}

/* k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22270,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-end-tests");
t4=C_retrieve2(lf[374],"loop-end-tests");
f_18752(3,t4,t3,((C_word*)t0)[2]);}

/* k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[297],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[666],lf[260]);
t6=(C_word)C_a_i_list(&a,3,lf[22],t4,t5);
t7=t2;
f_22277(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_22277(t3,C_SCHEME_END_OF_LIST);}}

/* k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22277,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22281,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22285,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-looping");
t4=C_retrieve2(lf[375],"loop-looping");
f_18764(3,t4,t3,((C_word*)t0)[2]);}

/* k22283 in k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22289,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-stepping");
t4=C_retrieve2(lf[377],"loop-stepping");
f_18776(3,t4,t3,((C_word*)t0)[2]);}

/* k22291 in k22283 in k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22293,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[666],lf[696]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22309,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22313,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  loop-finally");
t5=C_retrieve2(lf[378],"loop-finally");
f_18788(3,t5,t4,((C_word*)t0)[2]);}

/* k22311 in k22291 in k22283 in k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22313,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22307 in k22291 in k22283 in k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22309,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[260],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22287 in k22283 in k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22279 in k22275 in k22272 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22268 in k22248 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22270,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[696],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[697],t2);
t4=(C_word)C_a_i_list(&a,3,lf[698],lf[699],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k22244 in k22240 in k22229 in k22226 in a28414 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22246,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[3],t2));}

/* k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22222,2,t0,t1);}
t2=C_mutate((C_word*)lf[564]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22366,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[569]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23095,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[570]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23114,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[571]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23565,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[572]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23584,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[574]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24313,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[575]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24332,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[577]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25061,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25080,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25531,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[580]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25550,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26001,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26020,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26490,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26508,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26523,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[586]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26538,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26557,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[588]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26572,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[589]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26591,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26610,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[591]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26633,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26652,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26675,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26722,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26777,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26796,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26819,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26847,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26875,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26903,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[603]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26931,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26959,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[605]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26987,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[606]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27015,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[607]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27043,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[608]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27071,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[609]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27086,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27144,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t41=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[31]),lf[694],lf[695]);}

/* k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27147,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[692],lf[693]);}

/* k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27150,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[690],lf[691]);}

/* k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27153,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[688],lf[689]);}

/* k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27156,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[686],lf[687]);}

/* k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27159,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[684],lf[685]);}

/* k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27162,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[682],lf[683]);}

/* k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27165,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[680],lf[681]);}

/* k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27168,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[678],lf[679]);}

/* k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27171,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[676],lf[677]);}

/* k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27174,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[674],lf[675]);}

/* k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27174,2,t0,t1);}
t2=C_mutate((C_word*)lf[616]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27176,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[617]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27233,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[618]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27290,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27299,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t6=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[31]),lf[672],lf[673]);}

/* k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27302,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[670],lf[671]);}

/* k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27305,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[667]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[668],lf[669]);}

/* k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27305,2,t0,t1);}
t2=C_mutate((C_word*)lf[619]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27307,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[348]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27488,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[337]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27502,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[627]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27516,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27519,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[629],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27531,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[631],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27540,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[632],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27584,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[359]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27606,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[633]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27625,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[634]+1,C_retrieve(lf[628]));
t13=C_mutate((C_word*)lf[635]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27793,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[641]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27856,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[642]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27865,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[643]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27871,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[644]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27880,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[646]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27938,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27948,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28409,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 545  ##sys#register-macro");
t21=C_retrieve(lf[665]);
((C_proc4)C_retrieve_proc(t21))(4,t21,t19,lf[666],t20);}

/* a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28409(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_28409r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28409r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28409r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27963,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_27963(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 554  error");
t14=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[664],t2);}}

/* k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 558  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[662]);}
else{
t3=t2;
f_27966(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 556  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[663],((C_word*)t0)[8]);}}

/* k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li460),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28244(t6,t2,((C_word*)t0)[2]);}

/* do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28244(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28244,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28254,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28264,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28352,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 562  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_28264(t6,C_SCHEME_FALSE);}}}

/* k28350 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_28264(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_28264(t2,C_SCHEME_FALSE);}}

/* k28262 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28264,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28273,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_28273(t9,lf[660]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_28273(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 575  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[661],t2);}}

/* k28271 in k28262 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28273,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 570  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k28275 in k28271 in k28262 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28277,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 571  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k28279 in k28275 in k28271 in k28262 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28281,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28285,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28289,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[660]);
if(C_truep(t5)){
t6=t4;
f_28289(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_28289(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k28287 in k28279 in k28275 in k28271 in k28262 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28289(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 572  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28283 in k28279 in k28275 in k28271 in k28262 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28254(2,t3,t2);}

/* k28252 in do5191 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28244(t3,((C_word*)t0)[2],t2);}

/* k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 577  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 578  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 579  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 580  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27981,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28137,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28238,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 586  caar");
t10=*((C_word*)lf[657]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_28137(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_28137(t8,C_SCHEME_FALSE);}}

/* k28236 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28137(t2,(C_word)C_eqp(t1,lf[659]));}

/* k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28137,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 587  cdar");
t3=*((C_word*)lf[655]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_27984(2,t2,C_SCHEME_UNDEFINED);}}

/* k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28144,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28146,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li459),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_28146(t5,((C_word*)t0)[2],t1);}

/* do5207 in k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28146(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28146,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28160,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28170,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28218,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 591  cdar");
t7=*((C_word*)lf[655]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_28170(t6,C_SCHEME_FALSE);}}}

/* k28216 in do5207 in k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28170(t2,(C_word)C_i_pairp(t1));}

/* k28168 in do5207 in k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_28170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28170,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 592  caar");
t3=*((C_word*)lf[657]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 598  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[658],t2);}}

/* k28171 in k28168 in do5207 in k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28173,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[654]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 594  cdar");
t4=*((C_word*)lf[655]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 597  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[656],t3);}}

/* k28192 in k28171 in k28168 in do5207 in k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_28160(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_28160(2,t3,t2);}}

/* k28158 in do5207 in k28142 in k28135 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28146(t3,((C_word*)t0)[2],t2);}

/* k27982 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27984,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 549  ##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k28124 in k27982 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28126,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28110,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28114,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 549  ##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k28112 in k28124 in k27982 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 549  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28108 in k28124 in k27982 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28110,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[18],t1);
t3=(C_word)C_a_i_list(&a,3,lf[648],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27991,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[453],lf[612]);
t9=(C_word)C_a_i_list(&a,2,lf[453],lf[613]);
t10=(C_word)C_a_i_list(&a,3,lf[611],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[33],lf[653],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[337],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[649],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[649],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[614],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[649],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[615],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_27991(t21,t20);}
else{
t6=t5;
f_27991(t6,C_SCHEME_UNDEFINED);}}

/* k27989 in k28108 in k28124 in k27982 in k27979 in k27976 in k27973 in k27970 in k27967 in k27964 in k27961 in a28408 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27991,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[649],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[650],t4);
t6=(C_word)C_a_i_list(&a,1,lf[651]);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],lf[651]);
t8=(C_word)C_a_i_list(&a,3,lf[649],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[652],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[4],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[649],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[649],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k27946 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28407,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 643  return-to-host");
t3=C_retrieve(lf[647]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28405 in k27946 in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_28407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27942,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27601,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27599 in hush in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27601,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5118,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27940 in hush in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 539  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27880(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_27880r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27880r(t0,t1,t2);}}

static void C_ccall f_27880r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27884,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 529  scheduler-stop");
f_27584(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27898,a[2]=t5,a[3]=((C_word)li455),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_27898(t7,t3,t2);}}

/* do5175 in stop in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27898(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27898,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27908,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 533  scheduler-stop");
f_27584(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 534  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[645],t5);}}}

/* k27906 in do5175 in stop in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27898(t3,((C_word*)t0)[2],t2);}

/* k27882 in stop in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 535  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27875,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27579,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27577 in cont in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27579,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5108,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27873 in cont in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 525  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27561,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k27559 in paused? in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27561,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5100,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27860,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27570,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27568 in pause in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27570,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5104,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27858 in pause in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 518  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27793(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_27793r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_27793r(t0,t1,t2);}}

static void C_ccall f_27793r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27806,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27526,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[637]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27818,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_27818(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_27818(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[640])));}}}

/* k27816 in time-format in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27818(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[634]+1,C_retrieve(lf[628]));
C_trace("ChickenBridge.scm: 507  scheduler-set-time-milliseconds");
f_27531(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[638]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[634]+1,C_retrieve(lf[627]));
C_trace("ChickenBridge.scm: 511  scheduler-set-time-milliseconds");
f_27531(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 514  error");
t5=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[639],t4);}}}

/* k27524 in time-format in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27526,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5080,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27804 in time-format in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[636]));}

/* sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27625(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_27625r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_27625r(t0,t1,t2,t3);}}

static void C_ccall f_27625r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27627,a[2]=t2,a[3]=((C_word)li443),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27739,a[2]=t4,a[3]=((C_word)li444),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27744,a[2]=t5,a[3]=((C_word)li445),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start51355156");
t7=t6;
f_27744(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id51365154");
t9=t5;
f_27739(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body51335138");
t11=t4;
f_27627(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[88]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-start5135 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27744,NULL,2,t0,t1);}
C_trace("def-id51365154");
t2=((C_word*)t0)[2];
f_27739(t2,t1,C_fix(0));}

/* def-id5136 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27739(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27739,NULL,3,t0,t1,t2);}
C_trace("body51335138");
t3=((C_word*)t0)[2];
f_27627(t3,t1,t2,C_fix(-1));}

/* body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27627(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27627,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27629,a[2]=t4,a[3]=((C_word)li440),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27657,a[2]=t5,a[3]=((C_word)li441),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27687,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27698,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li442),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_27698(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27730,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27734,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextstart");
t11=t6;
f_27629(t11,t10);}}

/* k27732 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27738,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextid");
t3=((C_word*)t0)[2];
f_27657(t3,t2);}

/* k27736 in k27732 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 491  scheduler-sprout");
f_27540(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k27728 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_27687(2,t2,((C_word*)t0)[2]);}

/* do5147 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27698(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27698,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27708,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27723,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 489  nextstart");
t6=((C_word*)t0)[2];
f_27629(t6,t5);}}

/* k27721 in do5147 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27727,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 489  nextid");
t3=((C_word*)t0)[2];
f_27657(t3,t2);}

/* k27725 in k27721 in do5147 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 489  scheduler-sprout");
f_27540(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k27706 in do5147 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27698(t3,((C_word*)t0)[2],t2);}

/* k27685 in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 495  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27657,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5133 in sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27629,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27606(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27606,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27611,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27611 in load-sal-file in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27611(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27611,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27616,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27616(2,t4,C_SCHEME_FALSE);}}

/* k27614 */
static void C_ccall f_27616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5124(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27584(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27584,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27588,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27586 in scheduler-stop in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27588,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5113,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27540(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27540,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27544,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k27542 in scheduler-sprout in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27544,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5093,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27531(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27531,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27535,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[630]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k27533 in scheduler-set-time-milliseconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27535,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5085,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27519,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5077(t2));}

/* current-time-milliseconds in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27516,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5074(t2));}

/* print-error in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27502(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27502,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27507,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27507(2,t4,C_SCHEME_FALSE);}}

/* k27505 in print-error in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5069(C_SCHEME_UNDEFINED,t1));}

/* print-message in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27488(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27488,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27493,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_27493(2,t4,C_SCHEME_FALSE);}}

/* k27491 in print-message in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5063(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27307(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27307,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27361,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27368,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 387  make-string");
t5=*((C_word*)lf[339]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27368,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27370,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li426),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27370(t5,((C_word*)t0)[2],lf[626],t1,C_fix(0));}

/* do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27370(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27370,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27380,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27394,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27396,a[2]=t8,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,a[6]=((C_word)li425),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_27396(t10,t6,C_fix(0));}}

/* do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27396(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27396,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27416,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27354,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 379  floor");
t14=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 394  string-append");
t3=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[625]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27433,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27436,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 396  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k27434 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27436,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27433(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 397  modulo");
t4=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k27476 in k27434 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27478,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_27433(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 399  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k27446 in k27476 in k27434 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27448,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27433(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_27433(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k27431 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27433(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27433,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27396(t4,((C_word*)t0)[2],t3);}

/* k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27354,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27319,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  modulo");
t5=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k27317 in k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27319,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27346,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 381  floor");
t5=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27344 in k27317 in k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27346,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 382  modulo");
t5=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k27325 in k27344 in k27317 in k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27327,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 383  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27332 in k27325 in k27344 in k27317 in k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27338,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 384  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27336 in k27332 in k27325 in k27344 in k27317 in k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27342,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 385  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27340 in k27336 in k27332 in k27325 in k27344 in k27317 in k27352 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 383  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[622],((C_word*)t0)[3],lf[623],((C_word*)t0)[2],lf[624],t1);}

/* k27414 in do5052 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 393  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[620],t1,lf[621]);}

/* k27392 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 390  printf");
t2=C_retrieve(lf[314]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27378 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 402  printf");
t3=C_retrieve(lf[314]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27381 in k27378 in do5038 in k27366 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27383,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27370(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27359 in cm-logo in k27303 in k27300 in k27297 in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 403  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27295,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_27295 in cs:clear in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27295,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5030(C_SCHEME_UNDEFINED));}

/* cs:f in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27233(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27233r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27233r(t0,t1,t2);}}

static void C_ccall f_27233r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27237,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27237(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27246,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27266,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27266(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27266(t8,C_SCHEME_FALSE);}}}

/* k27264 in cs:f in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27266(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27246(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27246(t2,C_SCHEME_UNDEFINED);}}

/* k27244 in cs:f in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27246(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27246,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27254,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27254 in k27244 in cs:f in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27254,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5023(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27235 in cs:f in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27176(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27176r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27176r(t0,t1,t2);}}

static void C_ccall f_27176r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27180,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27180(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27189,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27209,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27209(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27209(t8,C_SCHEME_FALSE);}}}

/* k27207 in cs:i in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27189(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27189(t2,C_SCHEME_UNDEFINED);}}

/* k27187 in cs:i in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_27189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27189,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27197,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27197 in k27187 in cs:i in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27197(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27197,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5012(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27178 in cs:i in k27172 in k27169 in k27166 in k27163 in k27160 in k27157 in k27154 in k27151 in k27148 in k27145 in k27142 in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27086(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27086,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27098,a[2]=t2,a[3]=((C_word)li415),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27135,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27140,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_27140 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27140,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4956(C_SCHEME_UNDEFINED,t2));}

/* f_27135 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27135(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27135,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4947(C_SCHEME_UNDEFINED,t2));}

/* a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27098(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27098,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27104,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li414),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-current-continuation");
t4=*((C_word*)lf[615]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27104(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27104,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27110,a[2]=t2,a[3]=((C_word)li412),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27130,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li413),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  with-exception-handler");
t5=C_retrieve(lf[614]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a27129 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27134,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27132 in a27129 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a27109 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27110(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27110,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27114,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27121,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27125,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27128,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  condition-property-accessor");
t7=C_retrieve(lf[611]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[612],lf[613]);}

/* k27126 in a27109 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27123 in a27109 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  sprintf");
t2=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[610],t1);}

/* k27119 in a27109 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  print-error");
t2=C_retrieve(lf[337]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27112 in a27109 in a27103 in a27097 in mp:inhook in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27071(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27071,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27076,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27076 in mp:mm in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27076(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27076,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4940(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27043,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27048,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_27048 in mp:bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27048,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4931(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27015,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27020,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_27020 in mp:press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_27020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27020,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4916(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26987,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26992,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_26992 in mp:prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26992,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4901(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26959,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26964,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_26964 in mp:ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26964,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4886(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26931,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26936,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_26936 in mp:touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26936(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26936,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4870(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26903(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26903,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26908,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_26908 in mp:on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26908(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26908,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4854(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26875,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26880,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_26880 in mp:off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26880,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4838(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26847,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26852,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_26852 in mp:midi in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26852,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4823(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26819,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26824,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_26824 in mp:note in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26824,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4806(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26796,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26800,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26801,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_26801 in mm:num-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26801,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4788(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26798 in mm:num-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26777(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26777,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26782,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_26782 in mm:num in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26782,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4777(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26722,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26726,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26729,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  mm:type?");
t6=C_retrieve(lf[594]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k26727 in mm:val-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_26732(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 370  mm:type?");
t3=C_retrieve(lf[594]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k26730 in k26727 in mm:val-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26732,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26736,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26756,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[596]));}}

/* f_26756 in k26730 in k26727 in mm:val-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26756,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4766(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_26736 in k26730 in k26727 in mm:val-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26736(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26736,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4756(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26724 in mm:val-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26675(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26675,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26682,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  mm:type?");
t4=C_retrieve(lf[594]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k26680 in mm:val in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_26685(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 370  mm:type?");
t3=C_retrieve(lf[594]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k26683 in k26680 in mm:val in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26685,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26689,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26705,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_26705 in k26683 in k26680 in mm:val in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26705,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4743(C_SCHEME_UNDEFINED,t4,t5));}

/* f_26689 in k26683 in k26680 in mm:val in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26689(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26689,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4735(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26652(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26652,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26656,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26657,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_26657 in mm:vel-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26657,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4722(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26654 in mm:vel-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26633(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26633,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26638,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_26638 in mm:vel in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26638,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4711(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26610,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26614,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26615,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_26615 in mm:key-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26615,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4700(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k26612 in mm:key-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26591(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26591,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26596,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_26596 in mm:key in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26596,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4689(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26572,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26576,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26577,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_26577 in mm:chan-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26577(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26577,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4679(C_SCHEME_UNDEFINED,t4,t5));}

/* k26574 in mm:chan-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26557(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26557,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26562,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26562 in mm:chan in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26562(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26562,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4670(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26538(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26538,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26542,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26543,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_26543 in mm:time-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26543,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4661(C_SCHEME_UNDEFINED,t4,t5));}

/* k26540 in mm:time-set! in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26523(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26523,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26528,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26528 in mm:time in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26528(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26528,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4651(t3,t4));}

/* mm:copy in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26508(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26508,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26513,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26513 in mm:copy in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26513(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26513,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4643(t3,t4));}

/* mm:free in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26490(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26490,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26494,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26498,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_26498 in mm:free in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26498,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4635(C_SCHEME_UNDEFINED,t3));}

/* k26492 in mm:free in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26020(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26020r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26020r(t0,t1,t2);}}

static void C_ccall f_26020r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26024,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26024(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[565]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26349,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[565]);}
else{
t23=t22;
f_26349(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[573]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26384,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[573]);}
else{
t24=t23;
f_26384(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26419,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[568]);}
else{
t25=t24;
f_26419(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26448,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_26448(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26446 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26448,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26463,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26461 in k26446 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26455(2,t2,C_SCHEME_UNDEFINED);}}

/* k26453 in k26446 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26024(t5,t4);}

/* k26417 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26423,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26423(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26421 in k26417 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26024(t7,t6);}

/* k26382 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26384,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26388,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26388(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26386 in k26382 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26024(t7,t6);}

/* k26347 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26353(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26351 in k26347 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26024(t7,t6);}

/* k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_26024(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26024,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26027(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26214,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_26214(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26249,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[573]);}
else{
t7=t6;
f_26249(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26284,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_26284(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26313,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_26313(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26311 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26313,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26328,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26326 in k26311 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26320(2,t2,C_SCHEME_UNDEFINED);}}

/* k26318 in k26311 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26027(t5,t4);}

/* k26282 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26288(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26286 in k26282 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26027(t7,t6);}

/* k26247 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26253,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26253(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26251 in k26247 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26027(t7,t6);}

/* k26212 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26216 in k26212 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26027(t7,t6);}

/* k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_26027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26027,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26030,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26030(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26079,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_26079(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26114,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[573]);}
else{
t7=t6;
f_26114(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26149,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_26149(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26178,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_26178(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26176 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26178,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26193,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26191 in k26176 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26185(2,t2,C_SCHEME_UNDEFINED);}}

/* k26183 in k26176 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26030(t5,t4);}

/* k26147 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26153(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26151 in k26147 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26030(t7,t6);}

/* k26112 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26118(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26116 in k26112 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26030(t7,t6);}

/* k26077 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_26083(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26081 in k26077 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26030(t7,t6);}

/* k26028 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_26030(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26030,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26033,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26033(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k26031 in k26028 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26037,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26037 in k26031 in k26028 in k26025 in k26022 in mm:make-bend in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26037,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4612(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26001(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26001,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26006,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_26006 in mm:press? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_26006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26006,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4533(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25550(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25550r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25550r(t0,t1,t2);}}

static void C_ccall f_25550r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25554,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25554(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[565]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25879,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[565]);}
else{
t23=t22;
f_25879(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[573]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25914,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[573]);}
else{
t24=t23;
f_25914(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25949,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[568]);}
else{
t25=t24;
f_25949(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25978,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_25978(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25976 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25978,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25993,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25991 in k25976 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25985(2,t2,C_SCHEME_UNDEFINED);}}

/* k25983 in k25976 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25554(t5,t4);}

/* k25947 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25953(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25951 in k25947 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25554(t7,t6);}

/* k25912 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25918,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25918(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25916 in k25912 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25554(t7,t6);}

/* k25877 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25879,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25883,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25883(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25881 in k25877 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25554(t7,t6);}

/* k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_25554(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25554,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25557(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25744,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_25744(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25779,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[573]);}
else{
t7=t6;
f_25779(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25814,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_25814(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25843,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25843(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25841 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25843,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25858,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25856 in k25841 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25850(2,t2,C_SCHEME_UNDEFINED);}}

/* k25848 in k25841 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25557(t5,t4);}

/* k25812 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25818,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25818(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25816 in k25812 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25557(t7,t6);}

/* k25777 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25783,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25783(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25781 in k25777 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25557(t7,t6);}

/* k25742 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25748,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25748(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25746 in k25742 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25557(t7,t6);}

/* k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_25557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25557,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25560,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25560(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25609,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_25609(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25644,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[573]);}
else{
t7=t6;
f_25644(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25679,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_25679(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25708,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25708(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25706 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25708,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25723,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25721 in k25706 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25715(2,t2,C_SCHEME_UNDEFINED);}}

/* k25713 in k25706 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25560(t5,t4);}

/* k25677 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25683,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25683(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25681 in k25677 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25560(t7,t6);}

/* k25642 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25644,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25648,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25648(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25646 in k25642 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25560(t7,t6);}

/* k25607 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25613,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25613(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25611 in k25607 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25560(t7,t6);}

/* k25558 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_25560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25560,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25563,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25563(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k25561 in k25558 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25567,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25567 in k25561 in k25558 in k25555 in k25552 in mm:make-press in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25567(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25567,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4518(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25531(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25531,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25536,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_25536 in mm:prog? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25536,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4439(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25080(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25080r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25080r(t0,t1,t2);}}

static void C_ccall f_25080r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25084,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25084(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[565]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25409,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[565]);}
else{
t23=t22;
f_25409(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[573]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25444,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[573]);}
else{
t24=t23;
f_25444(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25479,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[568]);}
else{
t25=t24;
f_25479(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25508,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_25508(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25506 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25508,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25515,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25523,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25521 in k25506 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25515(2,t2,C_SCHEME_UNDEFINED);}}

/* k25513 in k25506 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25084(t5,t4);}

/* k25477 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25483,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25483(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25481 in k25477 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25084(t7,t6);}

/* k25442 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25448,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25448(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25446 in k25442 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25084(t7,t6);}

/* k25407 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25413,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25413(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25411 in k25407 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25084(t7,t6);}

/* k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_25084(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25084,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25087(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25274,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_25274(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25309,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[573]);}
else{
t7=t6;
f_25309(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25344,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_25344(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25373,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25373(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25371 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25373,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25388,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25386 in k25371 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25380(2,t2,C_SCHEME_UNDEFINED);}}

/* k25378 in k25371 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25087(t5,t4);}

/* k25342 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25348,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25348(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25346 in k25342 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25087(t7,t6);}

/* k25307 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25313(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25311 in k25307 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25087(t7,t6);}

/* k25272 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25278,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25278(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25276 in k25272 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25087(t7,t6);}

/* k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_25087(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25087,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25090,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25090(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25139,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_25139(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25174,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[573]);}
else{
t7=t6;
f_25174(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25209,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_25209(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25238,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25238(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25236 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25238,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25253,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25251 in k25236 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25245(2,t2,C_SCHEME_UNDEFINED);}}

/* k25243 in k25236 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25090(t5,t4);}

/* k25207 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25213(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25211 in k25207 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25090(t7,t6);}

/* k25172 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25178,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25178(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25176 in k25172 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25090(t7,t6);}

/* k25137 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25143(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25141 in k25137 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25090(t7,t6);}

/* k25088 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_25090(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25090,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25093,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25093(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k25091 in k25088 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25097,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25097 in k25091 in k25088 in k25085 in k25082 in mm:make-prog in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25097,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4424(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25061(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25061,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25066,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_25066 in mm:ctrl? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25066,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4345(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24332(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24332r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24332r(t0,t1,t2);}}

static void C_ccall f_24332r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24336,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24336(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[565]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24904,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[565]);}
else{
t27=t26;
f_24904(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[576]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24939,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[576]);}
else{
t28=t27;
f_24939(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[573]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24974,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[573]);}
else{
t29=t28;
f_24974(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[568]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25009,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[568]);}
else{
t30=t29;
f_25009(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25038,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_25038(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25036 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25038,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25045,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25053,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25051 in k25036 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25045(2,t2,C_SCHEME_UNDEFINED);}}

/* k25043 in k25036 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24336(t5,t4);}

/* k25007 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25013(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25011 in k25007 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_25013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24336(t7,t6);}

/* k24972 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24978(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24976 in k24972 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24336(t7,t6);}

/* k24937 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24943(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24941 in k24937 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24336(t7,t6);}

/* k24902 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24908,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24908(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24906 in k24902 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24336(t7,t6);}

/* k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_24336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24336,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24339(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24734,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_24734(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[576]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24769,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[576]);}
else{
t7=t6;
f_24769(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24804,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[573]);}
else{
t8=t7;
f_24804(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24839,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_24839(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24868,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24868(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24866 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24868,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24883,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24881 in k24866 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24875(2,t2,C_SCHEME_UNDEFINED);}}

/* k24873 in k24866 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24339(t5,t4);}

/* k24837 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24843,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24843(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24841 in k24837 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24339(t7,t6);}

/* k24802 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24808,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24808(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24806 in k24802 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24339(t7,t6);}

/* k24767 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24773,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24773(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24771 in k24767 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24339(t7,t6);}

/* k24732 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24738,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24738(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24736 in k24732 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24339(t7,t6);}

/* k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_24339(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24339,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24342(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24564,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_24564(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[576]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24599,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[576]);}
else{
t7=t6;
f_24599(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24634,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[573]);}
else{
t8=t7;
f_24634(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24669,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_24669(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24698,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24698(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24696 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24698,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24713,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24711 in k24696 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24705(2,t2,C_SCHEME_UNDEFINED);}}

/* k24703 in k24696 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24342(t5,t4);}

/* k24667 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24671 in k24667 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24342(t7,t6);}

/* k24632 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24638(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24636 in k24632 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24342(t7,t6);}

/* k24597 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24603(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24601 in k24597 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24342(t7,t6);}

/* k24562 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24568(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24566 in k24562 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24342(t7,t6);}

/* k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_24342(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24342,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24345,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24345(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24394,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_24394(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[576]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24429,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[576]);}
else{
t7=t6;
f_24429(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24464,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[573]);}
else{
t8=t7;
f_24464(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24499,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_24499(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24528,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24528(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24526 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24528,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24543,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24541 in k24526 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24535(2,t2,C_SCHEME_UNDEFINED);}}

/* k24533 in k24526 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24345(t5,t4);}

/* k24497 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24503,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24503(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24501 in k24497 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24345(t7,t6);}

/* k24462 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24468(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24466 in k24462 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24345(t7,t6);}

/* k24427 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24433(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24431 in k24427 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24345(t7,t6);}

/* k24392 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24398(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24396 in k24392 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24345(t7,t6);}

/* k24343 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_24345(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24345,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24348,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24348(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k24346 in k24343 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24352,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24352 in k24346 in k24343 in k24340 in k24337 in k24334 in mm:make-ctrl in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24352(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24352,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4329(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24313(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24313,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24318,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_24318 in mm:touch? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24318(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24318,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4213(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23584(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_23584r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23584r(t0,t1,t2);}}

static void C_ccall f_23584r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23588,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_23588(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[565]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24156,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[565]);}
else{
t27=t26;
f_24156(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[566]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24191,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[566]);}
else{
t28=t27;
f_24191(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[573]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24226,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[573]);}
else{
t29=t28;
f_24226(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[568]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24261,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[568]);}
else{
t30=t29;
f_24261(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24290,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_24290(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k24288 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24290,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24305,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24303 in k24288 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24297(2,t2,C_SCHEME_UNDEFINED);}}

/* k24295 in k24288 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23588(t5,t4);}

/* k24259 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24265(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24263 in k24259 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23588(t7,t6);}

/* k24224 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24230,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24230(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24228 in k24224 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23588(t7,t6);}

/* k24189 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24195(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24193 in k24189 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23588(t7,t6);}

/* k24154 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24160(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24158 in k24154 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23588(t7,t6);}

/* k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23588(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23588,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23591(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23986,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_23986(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24021,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_24021(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24056,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[573]);}
else{
t8=t7;
f_24056(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24091,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_24091(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24120,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24120(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24118 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24120,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24135,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24133 in k24118 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24127(2,t2,C_SCHEME_UNDEFINED);}}

/* k24125 in k24118 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23591(t5,t4);}

/* k24089 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24095(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24093 in k24089 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23591(t7,t6);}

/* k24054 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24060,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24060(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24058 in k24054 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23591(t7,t6);}

/* k24019 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24025,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24025(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24023 in k24019 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_24025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23591(t7,t6);}

/* k23984 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23990(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23988 in k23984 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23591(t7,t6);}

/* k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23591(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23591,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23594(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23816,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_23816(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23851,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_23851(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23886,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[573]);}
else{
t8=t7;
f_23886(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23921,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_23921(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23950,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23950(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23948 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23950,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23965,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23963 in k23948 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23957(2,t2,C_SCHEME_UNDEFINED);}}

/* k23955 in k23948 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23594(t5,t4);}

/* k23919 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23925,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23925(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23923 in k23919 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23594(t7,t6);}

/* k23884 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23890,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23890(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23888 in k23884 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23594(t7,t6);}

/* k23849 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23855(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23853 in k23849 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23594(t7,t6);}

/* k23814 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23820(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23818 in k23814 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23594(t7,t6);}

/* k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23594(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23594,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23597,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23597(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23646,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_23646(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23681,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_23681(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23716,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[573]);}
else{
t8=t7;
f_23716(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23751,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_23751(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23780,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23780(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23778 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23780,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23795,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23793 in k23778 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23787(2,t2,C_SCHEME_UNDEFINED);}}

/* k23785 in k23778 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23597(t5,t4);}

/* k23749 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23755,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23755(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23753 in k23749 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23597(t7,t6);}

/* k23714 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23720(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23718 in k23714 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23597(t7,t6);}

/* k23679 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23685(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23683 in k23679 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23597(t7,t6);}

/* k23644 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23650(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23648 in k23644 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23597(t7,t6);}

/* k23595 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23597(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23597,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23600,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23600(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k23598 in k23595 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23604,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_23604 in k23598 in k23595 in k23592 in k23589 in k23586 in mm:make-touch in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23604(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23604,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4197(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23565(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23565,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23570,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_23570 in mm:off? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23570(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23570,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4081(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23114(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_23114r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23114r(t0,t1,t2);}}

static void C_ccall f_23114r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23118,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_23118(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[565]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23443,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[565]);}
else{
t23=t22;
f_23443(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[566]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23478,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[566]);}
else{
t24=t23;
f_23478(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23513,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[568]);}
else{
t25=t24;
f_23513(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23542,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_23542(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k23540 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23542,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23557,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23555 in k23540 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23549(2,t2,C_SCHEME_UNDEFINED);}}

/* k23547 in k23540 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23118(t5,t4);}

/* k23511 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23517,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23517(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23515 in k23511 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23118(t7,t6);}

/* k23476 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23482(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23480 in k23476 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23118(t7,t6);}

/* k23441 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23447(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23445 in k23441 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23118(t7,t6);}

/* k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23118,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23121(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23308,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_23308(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23343,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_23343(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23378,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23378(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23407,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_23407(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23405 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23407,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23422,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23420 in k23405 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23414(2,t2,C_SCHEME_UNDEFINED);}}

/* k23412 in k23405 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23121(t5,t4);}

/* k23376 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23382(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23380 in k23376 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23121(t7,t6);}

/* k23341 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23347(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23345 in k23341 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23121(t7,t6);}

/* k23306 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23312(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23310 in k23306 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23121(t7,t6);}

/* k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23121,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23124,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23124(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23173,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_23173(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23208,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_23208(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23243,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23243(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23272,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_23272(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23270 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23272,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23287,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23285 in k23270 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23279(2,t2,C_SCHEME_UNDEFINED);}}

/* k23277 in k23270 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23124(t5,t4);}

/* k23241 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23247(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23245 in k23241 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23124(t7,t6);}

/* k23206 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23212,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23212(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23210 in k23206 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23124(t7,t6);}

/* k23171 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23177,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23177(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23175 in k23171 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23124(t7,t6);}

/* k23122 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_23124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23124,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23127,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23127(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k23125 in k23122 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23131,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_23131 in k23125 in k23122 in k23119 in k23116 in mm:make-off in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23131(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23131,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4066(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23095(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23095,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23100,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_23100 in mm:on? in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23100,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub3987(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22366(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_22366r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22366r(t0,t1,t2);}}

static void C_ccall f_22366r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22370,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_22370(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[565]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22938,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[565]);}
else{
t27=t26;
f_22938(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[566]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22973,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[566]);}
else{
t28=t27;
f_22973(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[567]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23008,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[567]);}
else{
t29=t28;
f_23008(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[568]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23043,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[568]);}
else{
t30=t29;
f_23043(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23072,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_23072(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23070 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23072,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23087,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23085 in k23070 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23079(2,t2,C_SCHEME_UNDEFINED);}}

/* k23077 in k23070 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22370(t5,t4);}

/* k23041 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23047(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23045 in k23041 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22370(t7,t6);}

/* k23006 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23012,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23012(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23010 in k23006 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_23012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22370(t7,t6);}

/* k22971 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22977,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22977(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22975 in k22971 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22370(t7,t6);}

/* k22936 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22942(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22940 in k22936 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22370(t7,t6);}

/* k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22370,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22373(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22768,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_22768(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22803,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_22803(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[567]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22838,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[567]);}
else{
t8=t7;
f_22838(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22873,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_22873(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22902,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22902(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22900 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22902,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22917,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22915 in k22900 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22909(2,t2,C_SCHEME_UNDEFINED);}}

/* k22907 in k22900 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22373(t5,t4);}

/* k22871 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22877(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22875 in k22871 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22373(t7,t6);}

/* k22836 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22842(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22840 in k22836 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22373(t7,t6);}

/* k22801 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22807(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22805 in k22801 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22373(t7,t6);}

/* k22766 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22772,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22772(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22770 in k22766 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22373(t7,t6);}

/* k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22373,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22376(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22598,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_22598(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22633,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_22633(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[567]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22668,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[567]);}
else{
t8=t7;
f_22668(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22703,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_22703(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22732,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22732(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22730 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22732,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22747,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22745 in k22730 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22739(2,t2,C_SCHEME_UNDEFINED);}}

/* k22737 in k22730 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22376(t5,t4);}

/* k22701 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22707(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22705 in k22701 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22376(t7,t6);}

/* k22666 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22670 in k22666 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22376(t7,t6);}

/* k22631 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22637,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22637(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22635 in k22631 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22376(t7,t6);}

/* k22596 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22602,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22602(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22600 in k22596 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22376(t7,t6);}

/* k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22376,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22379,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22379(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[565]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22428,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[565]);}
else{
t6=t5;
f_22428(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[566]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22463,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[566]);}
else{
t7=t6;
f_22463(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[567]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22498,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[567]);}
else{
t8=t7;
f_22498(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22533,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[568]);}
else{
t9=t8;
f_22533(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22562,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22562(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22560 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22562,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22577,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22575 in k22560 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22569(2,t2,C_SCHEME_UNDEFINED);}}

/* k22567 in k22560 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22379(t5,t4);}

/* k22531 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22535 in k22531 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22379(t7,t6);}

/* k22496 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22502,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22502(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22500 in k22496 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22379(t7,t6);}

/* k22461 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22467,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22467(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22465 in k22461 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22379(t7,t6);}

/* k22426 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22432,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22432(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22430 in k22426 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22379(t7,t6);}

/* k22377 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22379(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22379,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22382,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22382(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k22380 in k22377 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22386,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_22386 in k22380 in k22377 in k22374 in k22371 in k22368 in mm:make-on in k22220 in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_22386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22386,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub3971(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22028(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22028,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22036,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21868,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_21868(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_21868(t12,(C_word)C_i_not(t11));}}

/* k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21868(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21868,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21875,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(t2,(C_word)C_a_i_list(&a,4,lf[381],lf[554],lf[386],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21876,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21901,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21903,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li334),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_21903(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21903(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21903,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[296]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_21913(t16,t13);}
else{
t13=t10;
f_21913(t13,C_SCHEME_UNDEFINED);}}}

/* k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21913(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21913,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t2,t3,((C_word*)t0)[3]);}

/* k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21917,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_21920(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[559],t5,lf[560]));}}

/* k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li332),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21981,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li333),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21980 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21981,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21971 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21972,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21921 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21926,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  op-type?");
f_21876(t3,((C_word*)((C_word*)t0)[6])[1],lf[545]);}

/* k21940 in k21921 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21942,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_21926(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21949,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  op-type?");
f_21876(t2,((C_word*)((C_word*)t0)[6])[1],lf[558]);}}

/* k21947 in k21940 in k21921 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21949,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_21926(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[555],t2,lf[556],t3,lf[557]));}}
else{
t2=((C_word*)t0)[5];
f_21926(2,t2,C_SCHEME_UNDEFINED);}}

/* k21924 in k21921 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21926,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  append");
t6=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k21930 in k21924 in k21921 in k21918 in k21915 in k21911 in do3769 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_21903(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21899 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_22036(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21876(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21876,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k21873 in k21866 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21875,2,t0,t1);}
t2=((C_word*)t0)[2];
f_22036(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k22034 in parse-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_22036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  gather-clauses");
f_18963(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21614,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[548],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21636,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[551],t8,lf[552]));}
else{
t19=t17;
f_21636(2,t19,C_SCHEME_UNDEFINED);}}

/* k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21636,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[550]));}
else{
t9=t8;
f_21651(2,t9,C_SCHEME_UNDEFINED);}}

/* k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[8]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[298],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_21654(t6,t5);}
else{
t4=t2;
f_21654(t4,C_SCHEME_UNDEFINED);}}

/* k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21654(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21654,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21824,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li328),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21830,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li329),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21829 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21830,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21823 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21824,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parse-then-else-dependents");
f_21483(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_21660(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21806,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  gather-clauses");
f_18963(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k21804 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21660(t3,t2);}

/* k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21660,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  loop-operator-set!");
f_18710(t2,((C_word*)((C_word*)t0)[7])[1],lf[22]);}

/* k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21799,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  loop-looping");
t4=C_retrieve2(lf[375],"loop-looping");
f_18764(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k21797 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21799,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[323],t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21787,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[22],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21670,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_21683(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_21683(t7,(C_word)C_eqp(t6,lf[18]));}}

/* k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21683,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[549]));}
else{
t5=t4;
f_21690(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_21670(t2,C_SCHEME_UNDEFINED);}}

/* k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21693,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21746,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li326),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21760,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li327),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21759 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21760,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21745 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21754,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k21752 in a21745 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  parse-then-else-dependents");
f_21483(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_21696(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21732,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  gather-clauses");
f_18963(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21730 in k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21696(t3,t2);}

/* k21694 in k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21696,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  loop-looping");
t4=C_retrieve2(lf[375],"loop-looping");
f_18764(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21723 in k21694 in k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21725,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[323],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-looping-set!");
f_18770(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k21700 in k21723 in k21694 in k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  loop-looping-set!");
f_18770(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k21703 in k21700 in k21723 in k21694 in k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21709,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  gather-clauses");
f_18963(t2,lf[22],t3);}

/* k21707 in k21703 in k21700 in k21723 in k21694 in k21691 in k21688 in k21681 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21670(t3,t2);}

/* k21668 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21670,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  loop-looping-set!");
f_18770(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k21671 in k21668 in k21785 in k21661 in k21658 in k21655 in k21652 in k21649 in k21634 in parse-conditional in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21483(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21483,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21487,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21492,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li324),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_21492(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21492(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21492,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21440,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t12,t10,t11);}}

/* k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21446,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21446(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[545]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[546]);
t8=t2;
f_21446(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_21446(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_21446(t3,C_SCHEME_FALSE);}}

/* k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21446(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21446,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_21509(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[543],t6,lf[544]));}}

/* k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21512,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21582,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li322),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21595,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li323),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21594 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21595,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21581 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21590,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21588 in a21581 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k21510 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21516,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k21514 in k21510 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21516,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21521,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_21521(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[296]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[542]));}
else{
t10=t5;
f_21521(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[18]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_21521(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21559,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t10,t11,((C_word*)t0)[3]);}}}}

/* k21557 in k21514 in k21510 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_21521(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_21521(2,t2,C_SCHEME_UNDEFINED);}}

/* k21519 in k21514 in k21510 in k21507 in k21444 in k21438 in do3702 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_21492(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21485 in parse-then-else-dependents in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21382(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21382,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21389,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[539],t13,lf[540]));}
else{
t13=t11;
f_21389(2,t13,C_SCHEME_UNDEFINED);}}

/* k21387 in parse-return in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21389,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21420,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21418 in k21387 in parse-return in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21420,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21416,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21414 in k21418 in k21387 in parse-return in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21416,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[381],lf[525],lf[386],t2));}

/* k21406 in k21418 in k21387 in parse-return in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21291(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21291,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21298,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[536],t15,lf[537]));}
else{
t15=t13;
f_21298(2,t15,C_SCHEME_UNDEFINED);}}

/* k21296 in parse-thereis in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21298,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21364 in k21296 in parse-thereis in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21366,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21309,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[533]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_21309(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[534]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[298],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_21309(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[535]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_21309(t9,t8);}
else{
t8=t4;
f_21309(t8,C_SCHEME_UNDEFINED);}}}}

/* k21307 in k21364 in k21296 in parse-thereis in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21309(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21309,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21320,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21336,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k21334 in k21307 in k21364 in k21296 in parse-thereis in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21336,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[381],lf[533],lf[386],t3,lf[389],t4));}

/* k21318 in k21307 in k21364 in k21296 in parse-thereis in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21225,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21236,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[530],t7,lf[531]));}
else{
t13=t12;
f_21236(2,t13,C_SCHEME_UNDEFINED);}}

/* k21234 in parse-while-until in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[528]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_21239(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[529]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[298],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_21239(t10,t9);}
else{
t5=t2;
f_21239(t5,C_SCHEME_UNDEFINED);}}}

/* k21237 in k21234 in parse-while-until in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21239(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21239,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21246,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[3])[1],lf[527]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(t2,(C_word)C_a_i_list(&a,4,lf[381],((C_word*)t0)[2],lf[386],t4));}

/* k21244 in k21237 in k21234 in parse-while-until in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21219(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21219,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[525],t2));}

/* parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20673,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20682,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20687,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20692,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_20704,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[522],t7,lf[523]));}
else{
t30=t29;
f_20704(2,t30,C_SCHEME_UNDEFINED);}}

/* k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20704,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_20715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_20715(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[518]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21168,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[521]));}
else{
t11=t9;
f_21168(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_20715(2,t9,C_SCHEME_UNDEFINED);}}}

/* k21166 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 369  loop-variable?");
f_19040(t2,t3);}

/* k21172 in k21166 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21174,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_20715(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[519],t2,lf[520]));}}

/* k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_20719,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20600,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li316),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_20600(t9,t2,C_SCHEME_FALSE);}

/* do3524 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20600(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20600,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20614,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20625,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  loop-collectors");
t9=C_retrieve2(lf[372],"loop-collectors");
f_18728(3,t9,t7,t8);}}

/* k20623 in do3524 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20625,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20560,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li315),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_20560(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3516 in k20623 in do3524 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20560(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20560,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20573,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_20573(t12,t11);}
else{
t10=t6;
f_20573(t10,C_SCHEME_UNDEFINED);}}}

/* k20571 in do3516 in k20623 in do3524 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_20560(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20612 in do3524 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20600(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20719,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_20722,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21152,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21156,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  collector-type");
f_20687(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_20722(2,t6,t5);}}

/* k21154 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[515];
t3=lf[516];
t4=lf[517];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_21152(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_21152(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_21152(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_21152(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k21150 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21152,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_20722(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21148,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  collector-type");
f_20687(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21146 in k21150 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21148,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[512],t1,lf[513],((C_word*)t0)[2],lf[514]));}

/* k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20725,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[496]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[497]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20768,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20806,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_20806(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 369  gensym");
t10=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[498]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20835,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  collector-acc");
f_20692(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[499]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[500]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20847,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[502]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[20]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_20942(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[506]);
t10=t8;
f_20942(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[511])));}}}}

/* k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20942(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20942,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20945,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21058,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21116,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t9,((C_word*)((C_word*)t0)[13])[1],lf[510]);}
else{
t9=t8;
f_21058(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21051,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  collector-acc");
f_20692(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_20725(t2,C_SCHEME_UNDEFINED);}}

/* k21049 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20945(t6,t5);}

/* k21114 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21116,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21058(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21056 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_21058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21058,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[509]);}

/* k21060 in k21056 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21062,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21066,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[508]);}

/* k21064 in k21060 in k21056 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21066,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,((C_word*)((C_word*)t0)[11])[1],lf[507]);}

/* k21106 in k21064 in k21060 in k21056 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21108,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k21102 in k21106 in k21064 in k21060 in k21056 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21104,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21082,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-collector");
f_20682(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k21080 in k21102 in k21106 in k21064 in k21060 in k21056 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_21082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21082,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20945(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_20945(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20943 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20945(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20945,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20948,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[20]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[503]);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[504],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[505],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_20948(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[506]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[503],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[504],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_20948(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[504],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[505],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_20948(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k20946 in k20943 in k20940 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20948,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20725(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_20725(t2,C_SCHEME_UNDEFINED);}}

/* k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20847,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[499]);
t3=(C_truep(t2)?lf[329]:lf[326]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20853,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20897,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_20897(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 369  gensym");
t9=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[501]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20930,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  collector-acc");
f_20692(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k20928 in k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20853(t3,t2);}

/* k20895 in k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20897,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k20921 in k20895 in k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20923,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20905,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-collector");
f_20682(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k20903 in k20921 in k20895 in k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20905,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20853(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[297],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_20853(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20851 in k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20853,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k20891 in k20851 in k20845 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20893,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[298],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[297],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[22],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[323],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_20725(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k20833 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20768(t3,t2);}

/* k20804 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20806,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k20826 in k20804 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20828,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20814,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-collector");
f_20682(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k20812 in k20826 in k20804 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20814,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20768(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_20768(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20766 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20768,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[496]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20725(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_20725(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20723 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20725,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20732,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20736,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20734 in k20723 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20738 in k20734 in k20723 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20744,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20742 in k20738 in k20734 in k20723 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20748,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20746 in k20742 in k20738 in k20734 in k20723 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20748,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[381],((C_word*)t0)[5],lf[382],((C_word*)t0)[4],lf[384],((C_word*)t0)[3],lf[386],((C_word*)t0)[2],lf[389],t1,lf[383],t2,lf[385],C_SCHEME_END_OF_LIST));}

/* k20730 in k20723 in k20720 in k20717 in k20713 in k20702 in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20692(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20692,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20687(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20687,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20682(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20682,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20514,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20525,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[493],t6,lf[494]));}
else{
t12=t11;
f_20525(2,t12,C_SCHEME_UNDEFINED);}}

/* k20523 in parse-initially in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20525,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20540,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(t6,(C_word)C_a_i_list(&a,4,lf[381],((C_word*)t0)[2],lf[384],t7));}

/* k20538 in k20523 in parse-initially in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20476,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20487,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[490],t6,lf[491]));}
else{
t12=t11;
f_20487(2,t12,C_SCHEME_UNDEFINED);}}

/* k20485 in parse-finally in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20487,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20502,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(t6,(C_word)C_a_i_list(&a,4,lf[381],((C_word*)t0)[2],lf[388],t7));}

/* k20500 in k20485 in parse-finally in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20409(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20409,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20420,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20429,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li308),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_20429(t16,t12);}

/* do3473 in parse-do in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20429,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_20439(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t3,t4,((C_word*)t0)[5]);}}

/* k20437 in do3473 in parse-do in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20439,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[487],((C_word*)t0)[4],lf[488]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20452,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_20429(t7,((C_word*)t0)[7]);}}

/* k20450 in k20437 in do3473 in parse-do in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k20418 in parse-do in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20427,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(t2,(C_word)C_a_i_list(&a,4,lf[381],((C_word*)t0)[3],lf[386],((C_word*)((C_word*)t0)[2])[1]));}

/* k20425 in k20418 in parse-do in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20216,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20223,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20276,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li306),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_20276(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20276(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20276,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20286,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_20286(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t7,t8,((C_word*)t0)[5]);}}

/* k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20286,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20297,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20400,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 369  loop-variable?");
f_19040(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k20398 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20400,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20306,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[477],((C_word*)((C_word*)t0)[10])[1],lf[478]));}
else{
t4=t3;
f_20306(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[296]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20328,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[479]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20357,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20365,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[480]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[465]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[481]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_20297(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[482],((C_word*)((C_word*)t0)[10])[1],lf[483]));}
else{
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[484],((C_word*)((C_word*)t0)[10])[1],lf[485]));}}}}}

/* k20363 in k20398 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20365,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20328(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20355 in k20398 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20357,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20328(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20326 in k20398 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_20297(2,t6,t5);}

/* k20304 in k20398 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20309,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[475],((C_word*)((C_word*)t0)[8])[1],lf[476]));}
else{
t3=t2;
f_20309(2,t3,C_SCHEME_UNDEFINED);}}

/* k20307 in k20304 in k20398 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_20297(2,t6,t5);}

/* k20295 in k20284 in do3429 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_20276(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20226,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[474]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20266,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20274,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_20226(2,t3,C_SCHEME_UNDEFINED);}}}

/* k20272 in k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20274,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20226(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20264 in k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20266,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20226(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20224 in k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20233,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20237,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20235 in k20224 in k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20241,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20239 in k20235 in k20224 in k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20241,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[381],lf[473],lf[382],((C_word*)t0)[2],lf[384],t1));}

/* k20231 in k20224 in k20221 in parse-with in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20074,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20084,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20122,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li304),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_20122(t22,t18,C_SCHEME_FALSE);}

/* do3391 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_20122(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20122,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20132(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t5,t6,((C_word*)t0)[5]);}}

/* k20130 in do3391 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20132,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[471]));}
else{
t7=t6;
f_20143(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20141 in k20130 in do3391 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20143,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20146,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[465]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20155,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[466]));}
else{
t6=t5;
f_20155(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[467]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20180,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[468]));}
else{
t7=t6;
f_20180(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[469],((C_word*)((C_word*)t0)[12])[1],lf[470]));}}}

/* k20178 in k20141 in k20130 in do3391 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20180,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_20146(2,t10,t9);}

/* k20153 in k20141 in k20130 in do3391 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20155,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_20146(2,t8,t7);}

/* k20144 in k20141 in k20130 in do3391 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20122(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20082 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20091,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20120,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k20118 in k20082 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20120,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[381],lf[413],lf[382],t2,lf[384],t3,lf[386],t4,lf[387],t5));}

/* k20089 in k20082 in parse-general-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19723,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19730,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[463]);}

/* k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19730,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19736,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19964,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li302),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_19964(t25,t21,C_SCHEME_FALSE);}

/* do3324 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19964(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19964,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_19974(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t5,t6,((C_word*)t0)[4]);}}

/* k19972 in do3324 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19974,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[462]));}
else{
t7=t6;
f_19985(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19983 in k19972 in do3324 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19985,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19988,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[452]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19997,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_19997(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[461]);
if(C_truep(t6)){
t7=t5;
f_19997(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[446]);
t8=t5;
f_19997(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[451])));}}}

/* k19995 in k19983 in k19972 in do3324 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19997(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19997,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20000,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[454],((C_word*)((C_word*)t0)[9])[1],lf[455],((C_word*)((C_word*)t0)[10])[1],lf[456]));}
else{
t3=t2;
f_20000(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[437]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[457]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[446]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[458]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_19988(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[459],((C_word*)((C_word*)t0)[9])[1],lf[460]));}}}

/* k19998 in k19995 in k19983 in k19972 in do3324 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_20000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_19988(2,t7,t6);}

/* k19986 in k19983 in k19972 in do3324 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19964(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19962,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19958,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19747,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[446]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19764,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[450]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[451]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19840,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[191],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_19840(t9,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[191],((C_word*)t0)[4]);
t9=t7;
f_19840(t9,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19904,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_19904(t10,(C_word)C_eqp(t9,lf[453]));}
else{
t9=t8;
f_19904(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_19869(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k19902 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19904(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19904,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19869(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19869(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19867 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19869(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19869,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19885,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[452]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)t0)[6]);
t5=t2;
f_19885(t5,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_19885(t4,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k19883 in k19867 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19885(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19885,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19747(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19838 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19840(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19840,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[189],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[323],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19747(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k19762 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[449]);}

/* k19765 in k19762 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t2,((C_word*)t0)[7],C_fix(0));}

/* k19829 in k19765 in k19762 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19831,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k19825 in k19829 in k19765 in k19762 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19827,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[447],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[312],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[448],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[329],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[298],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_19747(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k19745 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19747(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19747,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19754,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19758,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19756 in k19745 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19758,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[381],lf[413],lf[382],t1,lf[385],((C_word*)((C_word*)t0)[5])[1],lf[384],((C_word*)((C_word*)t0)[4])[1],lf[386],((C_word*)((C_word*)t0)[3])[1],lf[387],((C_word*)((C_word*)t0)[2])[1]));}

/* k19752 in k19745 in k19956 in k19960 in k19734 in k19728 in parse-sequence-iteration in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19676,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[443]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19691,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li299),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19709,a[2]=t2,a[3]=((C_word)li300),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a19708 in parse-repeat in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19709,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,t1,t2,t4);}

/* a19690 in parse-repeat in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19703,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[444]);}

/* k19701 in a19690 in parse-repeat in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19703,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[413],t1,lf[418],t2);
C_trace("ChickenBridge.scm: 369  parse-numerical-for");
t4=C_retrieve2(lf[412],"parse-numerical-for");
f_19294(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19294(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19294,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19304,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19503,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li297),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_19503(t31,t27,C_SCHEME_FALSE);}

/* do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19503(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19503,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_19513(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t5,t6,((C_word*)t0)[6]);}}

/* k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19513,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[441]));}
else{
t7=t6;
f_19524(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19524,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19527,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[420]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[416]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19539,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[421],((C_word*)((C_word*)t0)[12])[1],lf[422],((C_word*)((C_word*)t0)[9])[1],lf[423]));}
else{
t7=t6;
f_19539(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[418]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19560,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[424],((C_word*)((C_word*)t0)[12])[1],lf[425],((C_word*)((C_word*)t0)[3])[1],lf[426]));}
else{
t8=t7;
f_19560(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[427]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19581,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[428],((C_word*)((C_word*)t0)[12])[1],lf[429],((C_word*)((C_word*)t0)[3])[1],lf[430]));}
else{
t9=t8;
f_19581(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[417]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19602,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[431],((C_word*)((C_word*)t0)[12])[1],lf[432],((C_word*)((C_word*)t0)[3])[1],lf[433]));}
else{
t10=t9;
f_19602(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[419]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19623,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[434],((C_word*)((C_word*)t0)[12])[1],lf[435],((C_word*)((C_word*)t0)[3])[1],lf[436]));}
else{
t11=t10;
f_19623(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[437]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19644,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[438]));}
else{
t12=t11;
f_19644(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[439],((C_word*)((C_word*)t0)[12])[1],lf[440]));}}}}}}}

/* k19642 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_19527(2,t6,t5);}

/* k19621 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19527(2,t7,t6);}

/* k19600 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19527(2,t7,t6);}

/* k19579 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19527(2,t7,t6);}

/* k19558 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_19527(2,t7,t6);}

/* k19537 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_19527(2,t7,t6);}

/* k19525 in k19522 in k19511 in do3225 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19503(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_19307(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[420]);
t5=t2;
f_19307(t5,t4);}}

/* k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19307,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19310,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[416]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19470,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_19470(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[419]);
t6=t4;
f_19470(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[417])));}}

/* k19468 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[328]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[417]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[327]);
t5=((C_word*)t0)[2];
f_19310(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[329]);
t5=((C_word*)t0)[2];
f_19310(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[312]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[418]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[320]);
t5=((C_word*)t0)[2];
f_19310(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[326]);
t5=((C_word*)t0)[2];
f_19310(t5,t4);}}}

/* k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19310,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19441,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19461,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k19459 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19461,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19313(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19439 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19441,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19313(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19313(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19313,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_19316(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19406,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[415]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_19316(t5,t4);}}

/* k19404 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t2,t1,C_SCHEME_FALSE);}

/* k19421 in k19404 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19423,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_19316(t8,t7);}

/* k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19316,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19355,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[414]);}
else{
t6=t5;
f_19323(t6,C_SCHEME_UNDEFINED);}}

/* k19353 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19358,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19373,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19389,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  make-binding");
f_19046(t3,t1,C_SCHEME_FALSE);}}

/* k19387 in k19353 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19389,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19358(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19371 in k19353 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19373,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19358(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19356 in k19353 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19358,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19323(t4,t3);}

/* k19321 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19323(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19323,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19330,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19334,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19332 in k19321 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19338,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19336 in k19332 in k19321 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19338,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[381],lf[413],lf[382],((C_word*)t0)[2],lf[384],t1,lf[387],t2,lf[385],t4));}

/* k19328 in k19321 in k19314 in k19311 in k19308 in k19305 in k19302 in parse-numerical-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19212,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19216,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t5,t6,t4);}

/* k19214 in parse-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19216,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[405]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19234,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  loop-variable?");
f_19040(t4,t3);}}

/* k19232 in k19214 in parse-for in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19234,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[406]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[407],t6,lf[408],lf[409]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 369  loop-error");
f_19052(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[410],t2,lf[411]));}}

/* loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19052(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19052,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19108,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19060,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li294),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19060(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3176 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19060(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19060,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19070,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_19070(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_19070(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  loop-op?");
f_19034(t6,t8,((C_word*)t0)[2]);}}}

/* k19068 in do3176 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19070,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  reverse");
t2=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_19060(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19111,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  newline");
t3=*((C_word*)lf[396]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  display");
t3=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[403]);}

/* k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19189,a[2]=t4,a[3]=((C_word)li293),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_19189(t6,t2,((C_word*)t0)[2]);}

/* do3186 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19189(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19189,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19199,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  display");
t5=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k19197 in do3186 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19189(t3,((C_word*)t0)[2],t2);}

/* k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  newline");
t3=*((C_word*)lf[396]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  display");
t3=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[402]);}

/* k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19126,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 369  display");
t3=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[398]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19143,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li292),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19143(t6,t2,((C_word*)t0)[2]);}}

/* do3191 in k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19143(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19143,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19153,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 369  display");
t5=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[401]);}
else{
t5=t3;
f_19153(2,t5,C_SCHEME_UNDEFINED);}}}

/* k19151 in do3191 in k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  display");
t4=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k19154 in k19151 in do3191 in k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[399]:lf[400]);
C_trace("ChickenBridge.scm: 369  display");
t6=*((C_word*)lf[397]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k19157 in k19154 in k19151 in do3191 in k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19143(t3,((C_word*)t0)[2],t2);}

/* k19124 in k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19129,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  newline");
t3=*((C_word*)lf[396]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19127 in k19124 in k19121 in k19118 in k19115 in k19112 in k19109 in k19106 in loop-error in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[395]);}

/* make-binding in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19046(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19046,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19040(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19040,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_19034(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19034,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18963(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18963,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18965,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19004,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t5,t3,C_retrieve2(lf[371],"loop-bindings"));}

/* k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19008,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[372],"loop-collectors"));}

/* k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[373],"loop-initially"));}

/* k19010 in k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[374],"loop-end-tests"));}

/* k19014 in k19010 in k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[375],"loop-looping"));}

/* k19018 in k19014 in k19010 in k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[377],"loop-stepping"));}

/* k19022 in k19018 in k19014 in k19010 in k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19028,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[378],"loop-finally"));}

/* k19026 in k19022 in k19018 in k19014 in k19010 in k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19032,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  gather-clause");
f_18965(t2,((C_word*)t0)[2],C_retrieve2(lf[379],"loop-returning"));}

/* k19030 in k19026 in k19022 in k19018 in k19014 in k19010 in k19006 in k19002 in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_19032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19032,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  make-loop-clause");
f_18812(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[381],((C_word*)t0)[9],lf[382],((C_word*)t0)[8],lf[383],((C_word*)t0)[7],lf[384],((C_word*)t0)[6],lf[385],((C_word*)t0)[5],lf[386],((C_word*)t0)[4],lf[387],((C_word*)t0)[3],lf[388],((C_word*)t0)[2],lf[389],t1));}

/* gather-clause in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18965(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18965,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18971,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li286),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_18971(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3159 in gather-clause in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18971(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18971,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18982,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18993,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k18991 in do3159 in gather-clause in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18980 in do3159 in gather-clause in gather-clauses in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_18971(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18812(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18812,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18827,a[2]=t5,a[3]=t3,a[4]=((C_word)li284),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_18827(t7,t1,t2);}}

/* do3147 in make-loop-clause in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18827(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18827,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18840,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 369  loop-operator-set!");
f_18710(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_18840(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_18840(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[384]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_18840(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[385]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_18840(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[386]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 369  loop-looping-set!");
f_18770(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[387]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_18840(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[388]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_18840(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_18840(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_18840(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k18838 in do3147 in make-loop-clause in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18827(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18800(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18800,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18788(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18788,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18776(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18776,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18770(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18770,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18764(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18764,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18752(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18752,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18740(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18740,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18728(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18728,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18716(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18716,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k18700 in k18697 in k18694 in k18691 in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18710(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18710,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18674(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18674,2,t0,t1);}
C_trace("ChickenBridge.scm: 368  print-error");
t2=C_retrieve(lf[337]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[369]);}

/* sal:open in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18668(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18668,2,t0,t1);}
C_trace("ChickenBridge.scm: 368  print-error");
t2=C_retrieve(lf[337]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[367]);}

/* sal:load in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18621(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18621,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18625,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  file-exists?");
t4=C_retrieve(lf[365]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k18623 in sal:load in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18628,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18650,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[361]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[362],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_18650(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18641,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[363],((C_word*)t0)[2],lf[364]);}}

/* k18639 in k18623 in sal:load in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  print-error");
t2=C_retrieve(lf[337]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18648 in k18623 in sal:load in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  load-sal-file");
t2=C_retrieve(lf[359]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 368  load");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k18626 in k18623 in sal:load in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18612(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18612,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18616,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  chdir");
t4=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k18614 in sal:chdir in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18433(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_18433r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_18433r(t0,t1,t2);}}

static void C_ccall f_18433r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18436,a[2]=t4,a[3]=((C_word)li267),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18581,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18586,a[2]=t4,a[3]=t8,a[4]=((C_word)li268),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_18586(t10,t6,t2);}

/* do2975 in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18586(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18586,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  print-message");
t3=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[356]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18599,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_18436(t5,t3,t4);}}

/* k18597 in do2975 in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18586(t3,((C_word*)t0)[2],t2);}

/* k18579 in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18436(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18436,NULL,3,t0,t1,t2);}
t3=t2;
if(C_truep(t3)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  print-message");
t4=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[349]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18464,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  print-message");
t5=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[352]);}
else{
t4=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 368  print-message");
t5=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[353]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_inexactp(t2))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18551,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18555,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  decimals");
t7=C_retrieve(lf[84]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,t2,C_fix(3));}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18562,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  number->string");
C_number_to_string(3,0,t5,t2);}}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 368  print-message");
t5=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t2);}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18578,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  sprintf");
t6=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[354],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 368  print-message");
t4=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[355]);}}

/* k18576 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  print-message");
t2=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18560 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  print-message");
t2=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18553 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  number->string");
C_number_to_string(3,0,((C_word*)t0)[2],t1);}

/* k18549 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  print-message");
t2=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18462 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18467,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18472,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_18472(t6,t2,((C_word*)t0)[2]);}

/* do2967 in k18462 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18472(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18472,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18482,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_18436(t5,t3,t4);}}

/* k18480 in do2967 in k18462 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_18485(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  print-message");
t4=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[351]);}}

/* k18483 in k18480 in do2967 in k18462 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18472(t3,((C_word*)t0)[2],t2);}

/* k18465 in k18462 in printer in sal:print in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  print-message");
t2=C_retrieve(lf[348]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[350]);}

/* sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18262(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_18262,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[333],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18268,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[259],"list->token"),t4);}

/* k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18268,2,t0,t1);}
t2=C_mutate(&lf[334],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_18271(t5,t4);}
else{
t4=t3;
f_18271(t4,C_SCHEME_FALSE);}}

/* k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18271,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18275,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[334],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16071,a[2]=t4,a[3]=t3,a[4]=((C_word)li264),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  call/cc");
t7=*((C_word*)lf[346]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a16070 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16071(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16071,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16077,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li262),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16084,a[2]=t2,a[3]=((C_word)li263),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a16083 in a16070 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16084(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16084,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16091,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_16091(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_16091(t6,C_SCHEME_FALSE);}}

/* k16089 in a16083 in a16070 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16091,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  add-emit-info");
f_15728(t2,lf[343],lf[344],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 368  make-parse-error");
f_15548(((C_word*)t0)[4],lf[345],C_retrieve2(lf[307],"*maxtokpos*"));}}

/* k16096 in k16089 in a16083 in a16070 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16076 in a16070 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16077,2,t0,t1);}
t2=lf[307]=C_fix(0);;
C_trace("ChickenBridge.scm: 368  parser");
f_16109(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18275,2,t0,t1);}
t2=C_mutate(&lf[335],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18278,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[335],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[275]))){
t5=C_retrieve2(lf[333],"*sal-string*");
t6=C_retrieve2(lf[335],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18309,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  parse-error-position");
f_15587(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 368  pp");
t5=C_retrieve(lf[341]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[335],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 368  eval");
t5=C_retrieve(lf[342]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[335],"*sal-output*"));}}}

/* k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18309,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18315,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18402,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li261),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_18402(t11,t7,C_SCHEME_FALSE);}

/* do2941 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18402(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18402,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18412,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18412(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_18412(t11,t10);}}}

/* k18410 in do2941 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18402(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18315,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18372,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li260),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_18372(t9,t5,C_SCHEME_FALSE);}

/* do2948 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18372(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18372,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18382,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18382(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_18382(t11,t10);}}}

/* k18380 in do2948 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_18382(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18372(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18326,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18333,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  parse-error-string");
f_15569(t4,((C_word*)t0)[2]);}

/* k18335 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18341,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  make-string");
t3=*((C_word*)lf[339]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18339 in k18335 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18345,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  substring");
t3=*((C_word*)lf[340]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18343 in k18339 in k18335 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18349,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  make-string");
t3=*((C_word*)lf[339]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18347 in k18343 in k18339 in k18335 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18349,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18356,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 368  make-string");
t5=*((C_word*)lf[339]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k18354 in k18347 in k18343 in k18339 in k18335 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18356,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 368  string-append");
t5=*((C_word*)lf[126]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[338],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18331 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  print-error");
t2=C_retrieve(lf[337]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18324 in k18321 in k18313 in k18307 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k18276 in k18273 in k18269 in k18266 in sal in k18254 in k18251 in k18248 in k18245 in k18242 in k17720 in k17717 in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_18278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17198,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17205,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_17211,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t33,t34,C_fix(23296));}

/* k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17211,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17215,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_17261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,t3,C_fix(10756));}}

/* k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17261,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17265,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_17358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,t3,C_fix(22784));}}

/* k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17358,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17362,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17426,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17426,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17433,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17683,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_17433(t8,t7);}}

/* k17681 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17433(t3,t2);}

/* k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17433(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17433,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17436,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17671,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k17669 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17436(t3,t2);}

/* k17620 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17622,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17626 in k17620 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17628,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t3=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_17436(t4,t3);}}

/* k17650 in k17626 in k17620 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17652,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17636,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17648,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t6=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k17646 in k17650 in k17626 in k17620 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17634 in k17650 in k17626 in k17620 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17436(t3,t2);}

/* k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17436(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17436,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_17439(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17598,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[332]);}}

/* k17596 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17602,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 368  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17600 in k17596 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17439(t4,t3);}

/* k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17439(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17439,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17442(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17575,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[331]);}}

/* k17573 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17579,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 368  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17577 in k17573 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17442(t4,t3);}

/* k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17442,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_17445(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17552,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[330]);}}
else{
t3=t2;
f_17445(t3,C_SCHEME_UNDEFINED);}}

/* k17550 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17556,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 368  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k17554 in k17550 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_17445(t4,t3);}

/* k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17448,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17477,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_17448(t7,t6);}}

/* k17475 in k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17477,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[320],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17448(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k17493 in k17475 in k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17495,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[326],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17448(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k17511 in k17493 in k17475 in k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17513,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[327],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[328],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_17448(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k17529 in k17511 in k17493 in k17475 in k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17531,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[329],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[328],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17448(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_17448(t2,C_SCHEME_UNDEFINED);}}

/* k17446 in k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17452,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 368  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k17450 in k17446 in k17443 in k17440 in k17437 in k17434 in k17431 in k17424 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17205(t3,t2);}

/* k17360 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17362,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17366,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17364 in k17360 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17366,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[325]);}

/* k17368 in k17364 in k17360 in k17356 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17370,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17205(t12,t11);}

/* k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17265,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k17267 in k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17269,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 368  fifth");
t4=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17271 in k17267 in k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17273,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17276,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17292,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_17276(t6,t5);}}

/* k17290 in k17271 in k17267 in k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17292,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[324]);}

/* k17294 in k17290 in k17271 in k17267 in k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17296,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[323],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[22],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17276(t12,t11);}

/* k17274 in k17271 in k17267 in k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17280,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 368  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k17278 in k17274 in k17271 in k17267 in k17263 in k17259 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17205(t3,t2);}

/* k17213 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17215,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17219,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[322]);}

/* k17217 in k17213 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17219,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[321]);}

/* k17221 in k17217 in k17213 in k17209 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17223,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[312],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[320],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_17205(t10,t9);}

/* k17203 in sal-parse-stepping in k17194 in k17191 in k17188 in k17185 in k17182 in k17179 in k17176 in k17173 in k17170 in k17167 in k17164 in k17161 in k17158 in k17155 in k17152 in k17149 in k17146 in k17143 in k17140 in k17137 in k17134 in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17020(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17020,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17032,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li257),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_17032(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17032,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17051,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  is-op?");
f_16999(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17051,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17054,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17069,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li256),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_17069(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_17054(2,t5,t4);}}

/* do2580 in k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17069(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17069,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17083,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17097,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  reverse");
t12=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17101,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 368  is-op?");
f_16999(t10,t11);}}

/* k17099 in do2580 in k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17101,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17104,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_17104(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_17104(t10,t9);}}

/* k17102 in k17099 in do2580 in k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_17104(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_17069(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17095 in do2580 in k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  inf->pre");
f_17020(((C_word*)t0)[2],t1);}

/* k17081 in do2580 in k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17083,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17052 in k17049 in do2578 in inf->pre in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17032(t2,((C_word*)t0)[2]);}

/* is-op? in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16999(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16999,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17006,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  token-unit?");
f_15668(t3,t2);}

/* k17004 in is-op? in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17006,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17009,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k17007 in k17004 in is-op? in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17015,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  SalOpType?");
f_16776(t2,t1);}

/* k17013 in k17007 in k17004 in is-op? in k16995 in k16992 in k16989 in k16986 in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_17015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17015,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16934(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16934,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16943,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li253),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_16943(t10,t1,t2);}

/* do2544 in remove-token-type in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16943(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16943,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16956,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16966,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  token-unit-type=?");
f_15684(t4,t5,((C_word*)t0)[2]);}}

/* k16964 in do2544 in remove-token-type in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16966,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16956(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_16956(t7,t6);}}

/* k16954 in do2544 in remove-token-type in k16930 in k16927 in k16924 in k16921 in k16918 in k16915 in k16912 in k16909 in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16956(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16943(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16890(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16890,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16878(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16878,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16776(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16776,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16728(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16728,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16109(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16109,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16113,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 368  printf");
t10=C_retrieve(lf[314]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[315],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_16113(2,t10,C_SCHEME_UNDEFINED);}}

/* k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  null-tokens?");
f_15288(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_16119(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16534,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16538,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16542,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  first-token");
f_15276(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k16540 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  token-position");
f_15235(((C_word*)t0)[2],t1);}

/* k16536 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  max");
t2=*((C_word*)lf[197]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[307],"*maxtokpos*"),t1);}

/* k16532 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[307],t1);
t3=((C_word*)t0)[2];
f_16119(t3,t2);}

/* k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16119,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value");
t4=C_retrieve2(lf[170],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16242,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  pattern-clause?");
f_15430(t3,((C_word*)t0)[8]);}}

/* k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16242,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16248,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15475,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-clause?");
f_15430(t4,t3);}
else{
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[313],((C_word*)t0)[2]);}}

/* k15473 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16248(t3,(C_word)C_eqp(t2,lf[296]));}
else{
t2=((C_word*)t0)[2];
f_16248(t2,C_SCHEME_FALSE);}}

/* k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16248,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 368  pattern-nsubs");
f_15448(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15491,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-clause?");
f_15430(t5,t4);}}

/* k15489 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16336(t3,(C_word)C_eqp(t2,lf[297]));}
else{
t2=((C_word*)t0)[2];
f_16336(t2,C_SCHEME_FALSE);}}

/* k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16336,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  pattern-nsubs");
f_15448(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  pattern-zero-or-more?");
f_15516(t2,((C_word*)t0)[2]);}}

/* k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_16409(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15507,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-clause?");
f_15430(t4,t3);}}

/* k15505 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16409(t3,(C_word)C_eqp(t2,lf[312]));}
else{
t2=((C_word*)t0)[2];
f_16409(t2,C_SCHEME_FALSE);}}

/* k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16409,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16415,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li245),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_16438(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15539,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-clause?");
f_15430(t4,t3);}}

/* k15537 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16487(t3,(C_word)C_eqp(t2,lf[311]));}
else{
t2=((C_word*)t0)[2];
f_16487(t2,C_SCHEME_FALSE);}}

/* k16485 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16487,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16496,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li246),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16513,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li247),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[310],t3);}}

/* a16512 in k16485 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16513,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16506 in k16485 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16507,2,t0,t1);}
C_trace("ChickenBridge.scm: 368  parser");
f_16109(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16494 in k16485 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16438,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_16448(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 368  null-tokens?");
f_15288(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k16446 in do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16448,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16451,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li243),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16474,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li244),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a16473 in k16446 in do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16474,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16467 in k16446 in do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16468,2,t0,t1);}
C_trace("ChickenBridge.scm: 368  parser");
f_16109(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16449 in k16446 in do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16454,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16461,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_16454(t3,C_SCHEME_UNDEFINED);}}

/* k16459 in k16449 in k16446 in do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16461,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_16454(t6,t5);}

/* k16452 in k16449 in k16446 in do2281 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16438(t2,((C_word*)t0)[2]);}

/* k16413 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16418,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16424,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-zero-or-more?");
f_15516(t3,((C_word*)t0)[2]);}

/* k16422 in k16413 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_16418(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_16418(t5,t4);}}

/* k16416 in k16413 in k16407 in k16404 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16345,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16360,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li242),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_16360(t6,t2,C_fix(0));}

/* do2261 in k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16360(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16360,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16370,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16379,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li240),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li241),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16392 in do2261 in k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16393(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16393,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16378 in do2261 in k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16387,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pattern-sub");
f_15458(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16385 in a16378 in do2261 in k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16387,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 368  parser");
f_16109(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16368 in do2261 in k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16370,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16360(t3,((C_word*)t0)[2],t2);}

/* k16343 in k16340 in k16334 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16257,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16260,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li239),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_16279(t8,t4,C_fix(0));}

/* do2239 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16279(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16279,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16292,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16312,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li237),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16326,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li238),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16325 in do2239 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16326,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16311 in do2239 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16320,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pattern-sub");
f_15458(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16318 in a16311 in do2239 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16320,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 368  parser");
f_16109(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16290 in do2239 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16295,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_16295(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_16295(t5,t4);}}

/* k16293 in k16290 in do2239 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16295,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16279(t3,((C_word*)t0)[2],t2);}

/* k16258 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16263,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_16263(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16277,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  reverse");
t5=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k16275 in k16258 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16263(t3,t2);}

/* k16261 in k16258 in k16255 in k16246 in k16240 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  SalTokenType?");
f_16728(t2,t1);}

/* k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16134,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16140,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  null-tokens?");
f_15288(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16192,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  SalRuleType?");
f_16878(t2,((C_word*)t0)[5]);}}

/* k16190 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16192,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  get-rule");
f_15406(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[309],((C_word*)t0)[2]);}}

/* k16193 in k16190 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16195,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[265]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li235),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16216,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li236),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a16215 in k16193 in k16190 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16216,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16227,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 368  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_16227(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k16225 in a16215 in k16193 in k16190 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16205 in k16193 in k16190 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16206,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 368  parser");
f_16109(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16140,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  first-token");
f_15276(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16156,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16186,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  token-type");
f_15199(t3,t1);}

/* k16184 in k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k16154 in k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16156,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16163,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16171,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  token-type");
f_15199(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k16169 in k16154 in k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16175,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-string");
f_15217(t2,((C_word*)t0)[2]);}

/* k16173 in k16169 in k16154 in k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16179,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-position");
f_15235(t2,((C_word*)t0)[2]);}

/* k16177 in k16173 in k16169 in k16154 in k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16161 in k16154 in k16148 in k16138 in k16132 in k16126 in k16117 in k16114 in k16111 in parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 368  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_16005(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16005,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16007,a[2]=t2,a[3]=((C_word)li233),tmp=(C_word)a,a+=4,tmp));}

/* f_16007 in simple-unit-emitter in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_16007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16007,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16011,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16055,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t6,t2);}

/* k16053 */
static void C_ccall f_16055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16009 */
static void C_ccall f_16011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16011,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16014,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_16014(t9,t8);}
else{
t6=t5;
f_16014(t6,C_SCHEME_UNDEFINED);}}

/* k16012 in k16009 */
static void C_fcall f_16014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16014,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16019,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li232),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16019(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2196 in k16012 in k16009 */
static void C_fcall f_16019(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16019,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16040,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16038 in do2196 in k16012 in k16009 */
static void C_ccall f_16040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16019(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15997(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15997,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15999,a[2]=t2,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp));}

/* f_15999 in simple-unit-parser in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15999(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15999,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 368  make-parse-unit");
f_15599(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15789(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15789,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15806,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  emit");
f_15756(t5,t6,t3,t4);}}

/* k15804 in emit-list in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15810,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  emit-list");
f_15789(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15808 in k15804 in emit-list in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15810,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15756(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15756,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15763,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  token-unit?");
f_15668(t5,t2);}

/* k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15763,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15834,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15707,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit?");
f_15605(t4,t3);}}

/* k15705 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15707,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15714,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15772(2,t2,C_SCHEME_FALSE);}}

/* k15712 in k15705 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  SalRuleType?");
f_16878(((C_word*)t0)[2],t1);}

/* k15770 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15772,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15972,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15995,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 368  emit-list");
f_15789(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[303],((C_word*)t0)[4]);}}}

/* k15993 in k15770 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  get-rule");
f_15406(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k15970 in k15770 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15972,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[265]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 368  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t4,((C_word*)t0)[4]);}}

/* k15986 in k15970 in k15770 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  emit");
f_15756(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-parsed");
f_15638(t2,((C_word*)t0)[2]);}

/* k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15837,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 368  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 368  string->symbol");
t8=*((C_word*)lf[293]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalOpType?");
f_16776(t8,((C_word*)t0)[4]);}}}

/* k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15861,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15912,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15918,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k15916 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15918,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k15922 in k15916 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15924,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k15931 in k15922 in k15916 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15933,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k15940 in k15931 in k15922 in k15916 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15942,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  string->symbol");
t2=*((C_word*)lf[293]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k15949 in k15940 in k15931 in k15922 in k15916 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15951,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[299],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15960,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k15958 in k15949 in k15940 in k15931 in k15922 in k15916 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  string->symbol");
t2=*((C_word*)lf[293]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[300],((C_word*)t0)[2]);}}

/* k15910 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k15865 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15867,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[98]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k15871 in k15865 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15873,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[294]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k15877 in k15871 in k15865 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15879,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[295]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15885,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k15883 in k15877 in k15871 in k15865 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15885,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[296]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k15889 in k15883 in k15877 in k15871 in k15865 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15891,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[297]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k15895 in k15889 in k15883 in k15877 in k15871 in k15865 in k15859 in k15835 in k15832 in k15761 in emit in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[298]);}
else{
C_trace("ChickenBridge.scm: 368  string->symbol");
t2=*((C_word*)lf[293]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15738(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15738,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15745,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_15745(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[291],t2);}}

/* k15743 in set-emit-info! in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15728(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15728,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15716(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15716,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15684(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15684,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15691,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  token-unit?");
f_15668(t4,t2);}

/* k15689 in token-unit-type=? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15691,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15698,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k15696 in k15689 in token-unit-type=? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  SalType=?");
f_16890(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15668(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15668,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15675,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit?");
f_15605(t3,t2);}

/* k15673 in token-unit? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15675,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15682,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  parse-unit-type");
f_15620(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k15680 in k15673 in token-unit? in k15664 in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  SalTokenType?");
f_16728(((C_word*)t0)[2],t1);}

/* parse-unit-position in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15656(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15656,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15638(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15638,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15620(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15620,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15605(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15605,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[279]));}

/* make-parse-unit in k15595 in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15599(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15599,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[279],t2,t3,t4));}

/* parse-error-position in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15587(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15587,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[275]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15569(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15569,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[275]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15548(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15548,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[275],t2,t3));}

/* pattern-zero-or-more? in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15516(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15516,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15523,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-clause?");
f_15430(t3,t2);}

/* k15521 in pattern-zero-or-more? in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[235]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15458(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15458,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15466,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-subs");
f_15442(t4,t2);}

/* k15464 in pattern-sub in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15448(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15448,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15456,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-subs");
f_15442(t3,t2);}

/* k15454 in pattern-nsubs in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15442(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15442,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15430(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15430,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15427(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15427,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k15402 in k15399 in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15406(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15406,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  hash-table-ref");
t4=*((C_word*)lf[43]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[263],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 368  hash-table-ref/default");
t4=C_retrieve(lf[268]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[263],"*rules*"),t3);}}

/* rule-name in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15319(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15319,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k15294 in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15298(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15298,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[265],t2,t3,t4,t5,t6));}

/* null-tokens? in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15288(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15288,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15276(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15276,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k15243 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15247(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15247,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[260]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[254],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[254],"make-token"),t2);}}

/* token-position in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15235(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15235,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[255]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15217(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15217,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[255]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15199(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15199,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[255]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15178(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15178,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[255],t2,t3,t4));}

/* next-in-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15084,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15088,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t3,t2);}

/* k15086 in next-in-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15088,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15117,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[246]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  graph-node-datum");
f_14503(((C_word*)t0)[2],t6);}}

/* k15115 in k15086 in next-in-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15117,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15122,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li197),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_15122(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1957 in k15115 in k15086 in next-in-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15122(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15122,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15132,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_15132(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[253],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15147,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[246]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_15147(t12,t11);}
else{
t10=t5;
f_15147(t10,C_SCHEME_UNDEFINED);}}}

/* k15145 in do1957 in k15115 in k15086 in next-in-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_15147(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15122(t3,((C_word*)t0)[2],t2);}

/* k15130 in do1957 in k15115 in k15086 in next-in-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  graph-node-datum");
f_14503(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14566(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_14566r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14566r(t0,t1,t2,t3);}}

static void C_ccall f_14566r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14570,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14828,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14837,a[2]=t9,a[3]=((C_word)li195),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[252],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14837(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14837,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14841,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_14841(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[251],t2);}}

/* k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14846,a[2]=((C_word*)t0)[4],a[3]=((C_word)li194),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14846(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_14846r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14846r(t0,t1,t2,t3);}}

static void C_ccall f_14846r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_14850,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_14850(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[249]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14988,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[249]);}
else{
t20=t19;
f_14988(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[250]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15023,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[21],lf[250]);}
else{
t21=t20;
f_15023(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15052,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[12],t3);}
else{
t21=t20;
f_15052(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k15050 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15052,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15067,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15065 in k15050 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15059(2,t2,C_SCHEME_UNDEFINED);}}

/* k15057 in k15050 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14850(t5,t4);}

/* k15021 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_15027(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15025 in k15021 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_15027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14850(t7,t6);}

/* k14986 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14992,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14992(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14990 in k14986 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14850(t7,t6);}

/* k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14850,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14853,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14853(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[249]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14888,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[249]);}
else{
t6=t5;
f_14888(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[250]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14923,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[250]);}
else{
t7=t6;
f_14923(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14952,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_14952(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14950 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14952,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14967,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14965 in k14950 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14959(2,t2,C_SCHEME_UNDEFINED);}}

/* k14957 in k14950 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14853(t5,t4);}

/* k14921 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14927(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14925 in k14921 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14853(t7,t6);}

/* k14886 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14892(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14890 in k14886 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14853(t7,t6);}

/* k14851 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14853,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14856,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14856(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k14854 in k14851 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_14859(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_14859(t4,t3);}}

/* k14857 in k14854 in k14851 in k14848 in a14845 in k14839 in parse-graph-item in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14859,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[246],t5,t6,t7));}

/* k14826 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14570(2,t3,t2);}

/* k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14570,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14573,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14573(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[201]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14733,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 367  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[201]);}
else{
t18=t17;
f_14733(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[202]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14768,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[202]);}
else{
t19=t18;
f_14768(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14797,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_14797(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14795 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14797,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14812,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14810 in k14795 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14804(2,t2,C_SCHEME_UNDEFINED);}}

/* k14802 in k14795 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14573(t5,t4);}

/* k14766 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14772,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14772(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14770 in k14766 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14573(t7,t6);}

/* k14731 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14737,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14737(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14735 in k14731 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14573(t7,t6);}

/* k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14573,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14576,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14576(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14633,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_14633(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14668,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_14668(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14697,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_14697(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14695 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14697,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14712,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14710 in k14695 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14704(2,t2,C_SCHEME_UNDEFINED);}}

/* k14702 in k14695 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14576(t5,t4);}

/* k14666 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14670 in k14666 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14576(t7,t6);}

/* k14631 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14637,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14637(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14635 in k14631 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14576(t7,t6);}

/* k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14579,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14579(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k14577 in k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14579,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k14580 in k14577 in k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14582,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14588,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14594,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[248],"next-in-graph"),t5);}

/* a14593 in k14580 in k14577 in k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14594,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14600,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14612,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t5,t3);}

/* k14610 in a14593 in k14580 in k14577 in k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a14599 in a14593 in k14580 in k14577 in k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14600(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14600,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  graph-node-datum");
f_14503(t1,t2);}

/* k14586 in k14580 in k14577 in k14574 in k14571 in k14568 in make-graph in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14503(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14503,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[246]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14163(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14163,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14166,a[2]=t4,a[3]=((C_word)li186),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14345,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t6,t2);}

/* k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14349,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  pattern-cache");
f_8895(t2,((C_word*)t0)[4]);}

/* k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14349,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14351,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li189),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_14351(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14351(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14351,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_14361(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_14361(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14276,a[2]=t13,a[3]=((C_word)li188),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_14276(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1783 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14276(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14276,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14286,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_14286(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_14286(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k14284 in do1783 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14286(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14286,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[235]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14293,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_14293(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_14293(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_14293(t9,(C_word)C_eqp(t8,lf[235]));}}}}

/* k14291 in k14284 in do1783 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14293(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14276(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k14359 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14361,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[244],((C_word*)t0)[6]);}
else{
t3=t2;
f_14364(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_14351(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k14362 in k14359 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14368,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 367  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_14166(t7,t2,t4,t6);}

/* k14366 in k14362 in k14359 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14368,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14371,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_14371(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_14371(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14388,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li187),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_14388(t8,t3,((C_word*)t0)[3]);}}}

/* do1807 in k14366 in k14362 in k14359 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14388(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14388,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14404,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 367  pattern-cache-set!");
f_8886(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k14402 in do1807 in k14366 in k14362 in k14359 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k14369 in k14366 in k14362 in k14359 in do1798 in k14347 in k14343 in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14166(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14166,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14234,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6427(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14178,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li185),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_14178(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1767 in select-output in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14178(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14178,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 367  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_14166(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14214,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_14214(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t9,t11);}}}

/* k14212 in do1767 in select-output in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14214,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_14178(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k14232 in select-output in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14234,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14239,a[2]=t3,a[3]=t1,a[4]=((C_word)li184),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14239(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1777 in k14232 in select-output in next-in-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_14239(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14239,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13676(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_13676r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13676r(t0,t1,t2,t3);}}

static void C_ccall f_13676r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13680,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14157,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13603,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li182),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13603(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[243],((C_word*)t4)[1]);}}

/* do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13603(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13603,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13448,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_13448(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t13=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[242],((C_word*)t11)[1]);}}}

/* k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13448,2,t0,t1);}
t2=(C_word)C_i_member(lf[238],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13454,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_13454(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[240],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_13454(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 367  error");
t5=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[241],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13454,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13466,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13539,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li181),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_13539(t17,t13);}

/* do1646 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13539,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_13469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li180),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a13481 in k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13482(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13482,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13486,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_13486(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_13486(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_13486(t13,t12);}}

/* k13484 in a13481 in k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13486,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13489,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_13489(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_13489(t5,t4);}}

/* k13487 in k13484 in a13481 in k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13489(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13489,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k13467 in k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 367  reverse");
t3=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13478 in k13467 in k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13480,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_13620(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[239],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_13620(2,t10,t9);}}

/* k13618 in k13478 in k13467 in k13464 in k13452 in k13446 in do1668 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13620,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_13603(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k14155 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13680(2,t3,t2);}

/* k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13680,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13683,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13683(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[201]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14027,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[201]);}
else{
t22=t21;
f_14027(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[202]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14062,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 367  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[202]);}
else{
t23=t22;
f_14062(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[237]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14097,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[237]);}
else{
t24=t23;
f_14097(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14126,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_14126(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14124 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14126,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14141,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14139 in k14124 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14133(2,t2,C_SCHEME_UNDEFINED);}}

/* k14131 in k14124 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13683(t5,t4);}

/* k14095 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14101(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14099 in k14095 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13683(t7,t6);}

/* k14060 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14064 in k14060 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13683(t7,t6);}

/* k14025 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14031(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14029 in k14025 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13683(t7,t6);}

/* k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13683,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13686(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13892,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_13892(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13927,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_13927(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[237]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13962,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[237]);}
else{
t8=t7;
f_13962(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13991,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_13991(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13989 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13991,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13998,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14006,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14004 in k13989 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_14006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13998(2,t2,C_SCHEME_UNDEFINED);}}

/* k13996 in k13989 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13686(t5,t4);}

/* k13960 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13966(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13964 in k13960 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13686(t7,t6);}

/* k13925 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13929 in k13925 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13686(t7,t6);}

/* k13890 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13894 in k13890 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13686(t7,t6);}

/* k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13686(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13686,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13689,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13689(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13757,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_13757(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13792,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_13792(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[237]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13827,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[237]);}
else{
t8=t7;
f_13827(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13856,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_13856(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13854 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13856,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13871,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13869 in k13854 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13863(2,t2,C_SCHEME_UNDEFINED);}}

/* k13861 in k13854 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13689(t5,t4);}

/* k13825 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13831,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13831(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13829 in k13825 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13689(t7,t6);}

/* k13790 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13796(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13794 in k13790 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13689(t7,t6);}

/* k13755 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13759 in k13755 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13689(t7,t6);}

/* k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13689,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13692,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13692(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13695,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13701,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13728,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[236],"next-in-markov"),t4);}

/* a13727 in k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13728(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13728,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13736,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t3);}

/* k13734 in a13727 in k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13699 in k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13704(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13714,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 367  make-list");
t7=C_retrieve(lf[63]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[235]);}}

/* k13712 in k13699 in k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13704(t3,t2);}

/* k13702 in k13699 in k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13704(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13704,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-cache-set!");
f_8886(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13705 in k13702 in k13699 in k13693 in k13690 in k13687 in k13684 in k13681 in k13678 in make-markov in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13243(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13243,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13247,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t3,t2);}

/* k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t2,((C_word*)t0)[2]);}

/* k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13253,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  pattern-flags");
f_8661(t2,((C_word*)t0)[2]);}

/* k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13253,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t4,t1,C_fix(4));}

/* k13420 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13422,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_13259(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  period-count");
f_8511(t2,((C_word*)t0)[2]);}}

/* k13433 in k13420 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  period-length");
f_8529(t2,((C_word*)t0)[2]);}

/* k13437 in k13433 in k13420 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 367  recalc-weightings");
f_13131(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_13259(2,t2,C_SCHEME_UNDEFINED);}}

/* k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_13265(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13396,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13415,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-count");
f_12281(t4,((C_word*)t0)[4]);}}

/* k13413 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13415,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 367  random-item-count-set!");
f_12272(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13394 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-count");
f_12281(t2,((C_word*)t0)[2]);}

/* k13401 in k13394 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13407,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-min");
f_12245(t2,((C_word*)t0)[2]);}

/* k13405 in k13401 in k13394 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13265(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13265,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  random-item-datum");
f_12191(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13271,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-cache");
f_8895(t2,((C_word*)t0)[2]);}}

/* k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13271,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13275,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13313,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13355,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  pick");
f_13275(t7,t2,t1);}

/* k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13355,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li177),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_13357(t5,((C_word*)t0)[2],t1);}

/* do1620 in k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13357(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13357,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13376,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13379,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-max");
f_12263(t4,t2);}

/* k13377 in do1620 in k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13379,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-count");
f_12281(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13376(t2,C_SCHEME_FALSE);}}

/* k13384 in k13377 in do1620 in k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13390,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-max");
f_12263(t2,((C_word*)t0)[2]);}

/* k13388 in k13384 in k13377 in do1620 in k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13376(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k13374 in do1620 in k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13376,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13372,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pick");
f_13275(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k13370 in k13374 in do1620 in k13353 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13357(t2,((C_word*)t0)[2],t1);}

/* k13311 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13316,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_13316(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13330,a[2]=t5,a[3]=((C_word)li176),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_13330(t7,t2,((C_word*)t0)[2]);}}

/* do1624 in k13311 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13330(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13330,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13340,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  random-item-count-set!");
f_12272(t3,t4,C_fix(0));}}

/* k13338 in do1624 in k13311 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13330(t3,((C_word*)t0)[2],t2);}

/* k13314 in k13311 in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 367  random-item-datum");
f_12191(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13275(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13275,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13283,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6427(t4,t3);}

/* k13281 in pick in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13283,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13285,a[2]=t3,a[3]=((C_word)li174),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_13285(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1615 in k13281 in pick in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13285(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13285,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13306,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  random-item-index");
f_12209(t4,t5);}

/* k13304 in do1615 in k13281 in pick in k13269 in k13263 in k13257 in k13251 in k13248 in k13245 in next-in-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_13285(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13131(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13131,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13241,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t2);}

/* k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13241,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[233];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13138,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13200,a[2]=t7,a[3]=t4,a[4]=((C_word)li172),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_13200(t9,t5,t2);}

/* do1587 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13200(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13200,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13229,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13233,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  random-item-weight");
f_12227(t4,t5);}}

/* k13231 in do1587 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(((C_word*)t0)[2],t1);}

/* k13227 in do1587 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13229,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  random-item-index-set!");
f_12200(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k13212 in k13227 in do1587 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13200(t3,((C_word*)t0)[2],t2);}

/* k13136 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13138,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13146,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li171),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13146(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 367  pattern-cache-set!");
f_8886(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1593 in k13136 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_13146(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13146,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 367  pattern-cache-set!");
f_8886(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13179,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13191,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  random-item-index");
f_12209(t8,t9);}}

/* k13189 in do1593 in k13136 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13191,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 367  floor");
t4=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k13177 in do1593 in k13136 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13179,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  random-item-index-set!");
f_12200(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k13161 in k13177 in do1593 in k13136 in k13239 in recalc-weightings in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13146(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12364(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_12364r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12364r(t0,t1,t2,t3);}}

static void C_ccall f_12364r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12368,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12681,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12681(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12681,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12688,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_12688(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_12688(t9,t8);}}

/* k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12688(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12688,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12691,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12691(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[230]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12994,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[230]);}
else{
t22=t21;
f_12994(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[231]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13029,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 367  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[231]);}
else{
t23=t22;
f_13029(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[232]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13064,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[232]);}
else{
t24=t23;
f_13064(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13093,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_13093(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13091 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13093,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13100,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13108,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13106 in k13091 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13100(2,t2,C_SCHEME_UNDEFINED);}}

/* k13098 in k13091 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12691(t5,t4);}

/* k13062 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13066 in k13062 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12691(t7,t6);}

/* k13027 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13033(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13031 in k13027 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_13033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12691(t7,t6);}

/* k12992 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12998(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12996 in k12992 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12691(t7,t6);}

/* k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12691(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12691,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12694,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12694(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12859,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[230]);}
else{
t6=t5;
f_12859(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12894,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[231]);}
else{
t7=t6;
f_12894(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12929,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[232]);}
else{
t8=t7;
f_12929(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12958,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_12958(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12956 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12958,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12973,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12971 in k12956 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12965(2,t2,C_SCHEME_UNDEFINED);}}

/* k12963 in k12956 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12694(t5,t4);}

/* k12927 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12931 in k12927 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12694(t7,t6);}

/* k12892 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12898(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12896 in k12892 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12694(t7,t6);}

/* k12857 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12863,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12863(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12861 in k12857 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12694(t7,t6);}

/* k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12694,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12697,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12697(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[230]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12724,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[230]);}
else{
t6=t5;
f_12724(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12759,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[231]);}
else{
t7=t6;
f_12759(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12794,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[232]);}
else{
t8=t7;
f_12794(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12823,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_12823(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12821 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12823,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12838,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12836 in k12821 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12830(2,t2,C_SCHEME_UNDEFINED);}}

/* k12828 in k12821 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12697(t5,t4);}

/* k12792 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12798(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12796 in k12792 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12697(t7,t6);}

/* k12757 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12763(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12761 in k12757 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12697(t7,t6);}

/* k12722 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12726 in k12722 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12697(t7,t6);}

/* k12695 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12697,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12700,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12700(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)((C_word*)t0)[2])[1]);}}

/* k12698 in k12695 in k12692 in k12689 in k12686 in %make-random-item in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12700,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[219],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12371,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12377,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12645,a[2]=t8,a[3]=t6,a[4]=((C_word)li168),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12645(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12645,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12649,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  random-item-min");
f_12245(t3,t2);}

/* k12647 in a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  random-item-max");
f_12263(t2,((C_word*)t0)[2]);}

/* k12650 in k12647 in a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  random-item-weight");
f_12227(t2,((C_word*)t0)[2]);}

/* k12653 in k12650 in k12647 in a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12658,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  random-item-datum");
f_12191(t2,((C_word*)t0)[2]);}

/* k12656 in k12653 in k12650 in k12647 in a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12671,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t3,t1);}

/* k12669 in k12656 in k12653 in k12650 in k12647 in a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12671,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12661(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12661(t2,C_SCHEME_UNDEFINED);}}

/* k12659 in k12656 in k12653 in k12650 in k12647 in a12644 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12377,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12384,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_12384(t8,t7);}
else{
t6=t5;
f_12384(t6,C_SCHEME_UNDEFINED);}}

/* k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12384,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_12387,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_12387(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[201]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12551,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 367  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[201]);}
else{
t18=t17;
f_12551(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[202]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12586,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[202]);}
else{
t19=t18;
f_12586(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12615,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[9]);}
else{
t19=t18;
f_12615(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k12613 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12615,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12630,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12628 in k12613 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12622(2,t2,C_SCHEME_UNDEFINED);}}

/* k12620 in k12613 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12387(t5,t4);}

/* k12584 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12590,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12590(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12588 in k12584 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12387(t7,t6);}

/* k12549 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12555(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12553 in k12549 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12387(t7,t6);}

/* k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12387,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12390,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_12390(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12451,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_12451(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12486,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_12486(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12515,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_12515(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k12513 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12515,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12530,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12528 in k12513 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12522(2,t2,C_SCHEME_UNDEFINED);}}

/* k12520 in k12513 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12390(t5,t4);}

/* k12484 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12490(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12488 in k12484 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12390(t7,t6);}

/* k12449 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12455(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12453 in k12449 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12390(t7,t6);}

/* k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12390(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12390,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12393,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12393(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12396,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12408,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[229],"next-in-weighting"),t4);}

/* a12407 in k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12408,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12414,a[2]=t2,a[3]=((C_word)li166),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12430,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t5,t3);}

/* k12428 in a12407 in k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a12413 in a12407 in k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12414(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12414,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12422,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  random-item-datum");
f_12191(t3,t2);}

/* k12420 in a12413 in a12407 in k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12394 in k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  recalc-weightings");
f_13131(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_12399(2,t3,C_SCHEME_UNDEFINED);}}

/* k12397 in k12394 in k12391 in k12388 in k12385 in k12382 in k12375 in k12369 in k12366 in make-weighting in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12281(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12281,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12272(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12272,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[219]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12263(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12263,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12245(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12245,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12227(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12227,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12209(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12209,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12200(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12200,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[219]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12191(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12191,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11969(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11969,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11972,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12019,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t2);}

/* k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12022,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12045,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12164,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-cache");
f_8895(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_12022(t4,C_SCHEME_UNDEFINED);}}

/* k12162 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(((C_word*)t0)[2],t1);}

/* k12043 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12052,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12099,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 367  pattern-length");
f_8697(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12126,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  pattern-length");
f_8697(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12145,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  pattern-length");
f_8697(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12160,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  pattern-length");
f_8697(t3,((C_word*)t0)[2]);}}

/* k12158 in k12043 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12160,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  rotate-items");
t3=((C_word*)t0)[5];
f_11972(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12143 in k12043 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12145,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  rotate-items");
t3=((C_word*)t0)[5];
f_11972(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12124 in k12043 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12126,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  rotate-items");
t3=((C_word*)t0)[6];
f_11972(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k12097 in k12043 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12099,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 367  rotate-items");
t4=((C_word*)t0)[7];
f_11972(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12050 in k12043 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_12052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12022(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k12020 in k12017 in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_12022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11972,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11978,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li155),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_11978(t10,t1,t3);}

/* do1355 in rotate-items in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11978(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11978,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11994,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 367  list-set!");
t7=C_retrieve(lf[62]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k11992 in do1355 in rotate-items in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11997,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  list-set!");
t4=C_retrieve(lf[62]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k11995 in k11992 in do1355 in rotate-items in next-in-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11997,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_11978(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11495(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11495r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11495r(t0,t1,t2,t3);}}

static void C_ccall f_11495r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11499,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11959,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11499(t8,t7);}}

/* k11957 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11499(t3,t2);}

/* k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11499,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11502,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_11502(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[201]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11832,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[201]);}
else{
t22=t21;
f_11832(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[202]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11867,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 367  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[202]);}
else{
t23=t22;
f_11867(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11902,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[217]);}
else{
t24=t23;
f_11902(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11931,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_11931(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k11929 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11931,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11946,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11944 in k11929 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11938(2,t2,C_SCHEME_UNDEFINED);}}

/* k11936 in k11929 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11502(t5,t4);}

/* k11900 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11906,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11906(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11904 in k11900 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11502(t7,t6);}

/* k11865 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11871(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11869 in k11865 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11502(t7,t6);}

/* k11830 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11836(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11834 in k11830 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11502(t7,t6);}

/* k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11502(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11502,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11505,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11505(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11697,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_11697(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11732,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_11732(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11767,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[217]);}
else{
t8=t7;
f_11767(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11796,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_11796(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11794 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11796,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11803,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11811,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11809 in k11794 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11803(2,t2,C_SCHEME_UNDEFINED);}}

/* k11801 in k11794 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11505(t5,t4);}

/* k11765 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11771(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11769 in k11765 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11505(t7,t6);}

/* k11730 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11736,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11736(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11734 in k11730 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11505(t7,t6);}

/* k11695 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11701(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11699 in k11695 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11505(t7,t6);}

/* k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11505(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11505,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11508,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11508(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11562,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_11562(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11597,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_11597(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11632,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[217]);}
else{
t8=t7;
f_11632(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11661,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_11661(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11659 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11661,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11676,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11674 in k11659 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11668(2,t2,C_SCHEME_UNDEFINED);}}

/* k11666 in k11659 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11508(t5,t4);}

/* k11630 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11636(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11634 in k11630 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11508(t7,t6);}

/* k11595 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11601(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11599 in k11595 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11508(t7,t6);}

/* k11560 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11566(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11564 in k11560 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11508(t7,t6);}

/* k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11508,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11511,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11511(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k11509 in k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11514,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k11512 in k11509 in k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11514,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11520,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11529,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[216],"next-in-rotation"),t5);}

/* a11528 in k11512 in k11509 in k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11529,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11541,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t3);}

/* k11539 in a11528 in k11512 in k11509 in k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11518 in k11512 in k11509 in k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11523,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-cache-set!");
f_8886(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11521 in k11518 in k11512 in k11509 in k11506 in k11503 in k11500 in k11497 in make-rotation in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11419(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11419,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11423,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t3,t2);}

/* k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11426,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11442,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-length");
f_8697(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_11426(2,t4,C_SCHEME_UNDEFINED);}}

/* k11440 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11442,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11452,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6420(t3,t1);}

/* k11450 in k11440 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11452,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11454,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li151),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_11454(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1255 in k11450 in k11440 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11454(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11454,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11471,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 367  list-set!");
t10=C_retrieve(lf[62]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k11469 in do1255 in k11450 in k11440 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11474,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  list-set!");
t3=C_retrieve(lf[62]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k11472 in k11469 in do1255 in k11450 in k11440 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11474,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11485,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6420(t3,((C_word*)t0)[2]);}

/* k11483 in k11472 in k11469 in do1255 in k11450 in k11440 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_11454(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k11424 in k11421 in next-in-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11156(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11156r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11156r(t0,t1,t2,t3);}}

static void C_ccall f_11156r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11160,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11409,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11160(t8,t7);}}

/* k11407 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11160(t3,t2);}

/* k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11160,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11163,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11163(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[201]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11317,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 367  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[201]);}
else{
t18=t17;
f_11317(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[202]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11352,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[202]);}
else{
t19=t18;
f_11352(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11381,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_11381(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11379 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11381,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11396,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11394 in k11379 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11388(2,t2,C_SCHEME_UNDEFINED);}}

/* k11386 in k11379 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11163(t5,t4);}

/* k11350 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11354 in k11350 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11163(t7,t6);}

/* k11315 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11321(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11319 in k11315 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11163(t7,t6);}

/* k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11163,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11166,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11166(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11217,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_11217(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11252,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_11252(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11281,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_11281(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11279 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11281,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11296,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11294 in k11279 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11288(2,t2,C_SCHEME_UNDEFINED);}}

/* k11286 in k11279 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11166(t5,t4);}

/* k11250 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11256(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11254 in k11250 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11166(t7,t6);}

/* k11215 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11221(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11219 in k11215 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11166(t7,t6);}

/* k11164 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_11166(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11166,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11169,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11169(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k11167 in k11164 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11172,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k11170 in k11167 in k11164 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11172,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11178,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11184,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[214],"next-in-heap"),t5);}

/* a11183 in k11170 in k11167 in k11164 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11184,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11196,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t3);}

/* k11194 in a11183 in k11170 in k11167 in k11164 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11176 in k11170 in k11167 in k11164 in k11161 in k11158 in make-heap in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11120(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11120,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11124,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t3,t2);}

/* k11122 in next-in-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11124,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11133,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11140,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11146,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 367  pattern-data-set!");
f_8670(t4,((C_word*)t0)[2],t5);}}

/* k11144 in k11122 in next-in-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k11138 in k11122 in next-in-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[2],t1,C_fix(1));}

/* k11131 in k11122 in next-in-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10873(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10873r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10873r(t0,t1,t2,t3);}}

static void C_ccall f_10873r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10877,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10877(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10877(t8,t7);}}

/* k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10877(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10877,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10880,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10880(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[201]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11026,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 367  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[201]);}
else{
t18=t17;
f_11026(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[202]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11061,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[202]);}
else{
t19=t18;
f_11061(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11090,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_11090(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11088 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11090,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11097,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11105,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11103 in k11088 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11097(2,t2,C_SCHEME_UNDEFINED);}}

/* k11095 in k11088 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10880(t5,t4);}

/* k11059 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11065,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11065(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11063 in k11059 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10880(t7,t6);}

/* k11024 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11030(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11028 in k11024 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10880(t7,t6);}

/* k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10880(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10880,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10883,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10883(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10926,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_10926(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10961,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_10961(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10990,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_10990(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10988 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10990,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11005,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11003 in k10988 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_11005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10997(2,t2,C_SCHEME_UNDEFINED);}}

/* k10995 in k10988 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10883(t5,t4);}

/* k10959 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10965(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10963 in k10959 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10883(t7,t6);}

/* k10924 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10930(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10928 in k10924 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10883(t7,t6);}

/* k10881 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10883(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10883,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10886,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10886(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10884 in k10881 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10889,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k10887 in k10884 in k10881 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10889,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10895,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10897,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[212],"next-in-line"),t4);}

/* a10896 in k10887 in k10884 in k10881 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10897(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10897,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10905,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t3);}

/* k10903 in a10896 in k10887 in k10884 in k10881 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10893 in k10887 in k10884 in k10881 in k10878 in k10875 in make-line in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10658(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10658,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10662,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-cache");
f_8895(t3,t2);}

/* k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10662,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[204]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10668,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10692,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[204]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10871,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  palin-len");
f_10099(t8,t1);}}

/* k10869 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10871,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  palin-inc-set!");
f_10108(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_10668(2,t2,C_SCHEME_UNDEFINED);}}

/* k10822 in k10869 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10824,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[204]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_10836(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_10836(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_10836(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_10836(t7,C_SCHEME_FALSE);}}}

/* k10834 in k10822 in k10869 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10836,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10668(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10668(2,t4,t3);}}

/* k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  palin-len");
f_10099(t2,((C_word*)t0)[2]);}

/* k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10695,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10701,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[204]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t7=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 367  palin-inc-set!");
f_10108(t2,((C_word*)t0)[2],C_fix(1));}

/* k10702 in k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10792,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_10792(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_10792(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_10792(t5,C_SCHEME_FALSE);}}}

/* k10790 in k10702 in k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_10707(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_10707(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_10707(t3,t2);}}

/* k10705 in k10702 in k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10707(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10707,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10786,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-flags");
f_8661(t3,((C_word*)t0)[2]);}

/* k10784 in k10705 in k10702 in k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(((C_word*)t0)[2],t1,C_fix(2));}

/* k10711 in k10705 in k10702 in k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10713,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10716,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_10668(2,t2,C_SCHEME_UNDEFINED);}}

/* k10714 in k10711 in k10705 in k10702 in k10699 in k10693 in k10690 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10716,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[209]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[210]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],t1,t2);}}}}

/* k10666 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[204]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[204]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t9=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k10669 in k10666 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t2,((C_word*)t0)[2]);}

/* k10676 in k10669 in k10666 in k10660 in next-in-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10188(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10188r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10188r(t0,t1,t2,t3);}}

static void C_ccall f_10188r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10192,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10192(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10192(t8,t7);}}

/* k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10192,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10195,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_10195(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[201]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10529,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[201]);}
else{
t22=t21;
f_10529(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[202]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10564,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 367  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[202]);}
else{
t23=t22;
f_10564(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[208]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10599,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[208]);}
else{
t24=t23;
f_10599(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10628,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 367  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_10628(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k10626 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10628,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10643,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10641 in k10626 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10635(2,t2,C_SCHEME_UNDEFINED);}}

/* k10633 in k10626 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10195(t5,t4);}

/* k10597 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10603(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10601 in k10597 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10195(t7,t6);}

/* k10562 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10568(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10566 in k10562 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10195(t7,t6);}

/* k10527 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10533(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10531 in k10527 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10195(t7,t6);}

/* k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10195,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10198(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10394,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_10394(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10429,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_10429(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[208]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10464,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[208]);}
else{
t8=t7;
f_10464(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10493,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_10493(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10491 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10493,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10508,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10506 in k10491 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10500(2,t2,C_SCHEME_UNDEFINED);}}

/* k10498 in k10491 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10198(t5,t4);}

/* k10462 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10468(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10466 in k10462 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10198(t7,t6);}

/* k10427 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10433(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10431 in k10427 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10198(t7,t6);}

/* k10392 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10398(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10396 in k10392 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10198(t7,t6);}

/* k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10201,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10201(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10259,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_10259(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10294,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_10294(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[208]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10329,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[208]);}
else{
t8=t7;
f_10329(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10358,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_10358(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10356 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10358,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10373,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10371 in k10356 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10365(2,t2,C_SCHEME_UNDEFINED);}}

/* k10363 in k10356 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10201(t5,t4);}

/* k10327 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10333(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10331 in k10327 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10201(t7,t6);}

/* k10292 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10298,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10298(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10296 in k10292 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10201(t7,t6);}

/* k10257 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10263(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10261 in k10257 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10201(t7,t6);}

/* k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10201,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10204,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10204(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10202 in k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k10205 in k10202 in k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10207,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10213,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10230,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[207],"next-in-palindrome"),t5);}

/* a10229 in k10205 in k10202 in k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10230(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10230,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10238,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t3);}

/* k10236 in a10229 in k10205 in k10202 in k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10211 in k10205 in k10202 in k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10216,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[204],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 367  pattern-cache-set!");
f_8886(t2,((C_word*)t0)[4],t5);}

/* k10214 in k10211 in k10205 in k10202 in k10199 in k10196 in k10193 in k10190 in make-palindrome in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10108(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10108,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[204]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10099(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10099,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[204]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10027(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10027,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10031,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t3,t2);}

/* k10029 in next-in-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10034,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_10034(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_10034(t4,C_SCHEME_UNDEFINED);}}

/* k10032 in k10029 in next-in-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_10034(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9772(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_9772r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9772r(t0,t1,t2,t3);}}

static void C_ccall f_9772r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9776,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_9776(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_9776(t8,t7);}}

/* k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9776,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9779,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_9779(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[201]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9933,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 367  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[201]);}
else{
t18=t17;
f_9933(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[202]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9968,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[202]);}
else{
t19=t18;
f_9968(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9997,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 367  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_9997(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k9995 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9997,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10012,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10010 in k9995 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10004(2,t2,C_SCHEME_UNDEFINED);}}

/* k10002 in k9995 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_10004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9779(t5,t4);}

/* k9966 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9972(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9970 in k9966 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9779(t7,t6);}

/* k9931 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9937(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9935 in k9931 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9779(t7,t6);}

/* k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9779,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9782,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9782(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[201]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9833,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[201]);}
else{
t6=t5;
f_9833(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9868,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[202]);}
else{
t7=t6;
f_9868(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9897,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 367  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_9897(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9895 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9897,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9912,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9910 in k9895 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9904(2,t2,C_SCHEME_UNDEFINED);}}

/* k9902 in k9895 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9782(t5,t4);}

/* k9866 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9872(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9870 in k9866 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9782(t7,t6);}

/* k9831 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9835 in k9831 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9782(t7,t6);}

/* k9780 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9782,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9785,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9785(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k9783 in k9780 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  %alloc-pattern");
f_8950(t2);}

/* k9786 in k9783 in k9780 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9788,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9794,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9800,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  initialize-pattern");
f_8960(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[200],"next-in-cycle"),t5);}

/* a9799 in k9786 in k9783 in k9780 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9800(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9800,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9812,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data");
f_8679(t4,t3);}

/* k9810 in a9799 in k9786 in k9783 in k9780 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[199]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9792 in k9786 in k9783 in k9780 in k9777 in k9774 in make-cycle in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9657(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9657,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9770,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t3,t2);}

/* k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9770,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9667,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9670,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9755,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-stream");
f_8547(t7,t1);}

/* k9753 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9755,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9762,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9766,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  period-stream");
f_8547(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_9670(2,t2,C_SCHEME_UNDEFINED);}}

/* k9764 in k9753 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(((C_word*)t0)[2],t1);}

/* k9760 in k9753 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t4=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9752,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  period-length");
f_8529(t2,((C_word*)t0)[3]);}

/* k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9752,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9678,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[151]);
t7=t4;
f_9678(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 367  period-length");
f_8529(t4,((C_word*)t0)[3]);}}

/* k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9678,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9681,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9687,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9742,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-flags");
f_8661(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_9687(2,t5,C_SCHEME_FALSE);}}

/* k9740 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(((C_word*)t0)[2],t1,C_fix(8));}

/* k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9687,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9706,a[2]=t3,a[3]=((C_word)li136),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  map-pattern-data");
f_9611(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9681(t2,C_SCHEME_UNDEFINED);}}

/* a9705 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9706,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9735,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  reset-period");
f_9657(t3,t2);}

/* k9733 in a9705 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9735,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9716,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9714 in k9733 in a9705 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9731,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-omit");
f_8583(t3,t1);}

/* k9729 in k9714 in k9733 in a9705 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9731,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  period-omit-set!");
f_8574(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9717 in k9714 in k9733 in a9705 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9719,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k9688 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9690,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 367  max");
t4=*((C_word*)lf[197]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_9681(t2,C_SCHEME_UNDEFINED);}}

/* k9698 in k9688 in k9685 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9681(t3,t2);}

/* k9679 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9681(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9681,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9684,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9682 in k9679 in k9676 in k9750 in k9668 in k9665 in k9768 in reset-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9611(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9611,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[161]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9602(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9602,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[161]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9301(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9301,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9308,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t3,t2);}

/* k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9308,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 367  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  promise?");
t3=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k9595 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  force");
t2=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9311,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9314,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9582,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  period-count");
f_8511(t5,t1);}

/* k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9582,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9574,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  period-reps");
f_8601(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_9314(2,t2,C_SCHEME_UNDEFINED);}}

/* k9572 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9574,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9566,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-value-set!");
f_8742(t5,((C_word*)t0)[4],lf[190]);}
else{
t5=((C_word*)t0)[2];
f_9537(t5,C_SCHEME_UNDEFINED);}}

/* k9564 in k9572 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-state-set!");
f_8760(t2,((C_word*)t0)[2],lf[188]);}

/* k9567 in k9564 in k9572 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[190]);
t3=((C_word*)t0)[2];
f_9537(t3,t2);}

/* k9535 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9537,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_9543(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9560,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  reset-period");
f_9657(t4,((C_word*)t0)[2]);}}

/* k9558 in k9535 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9543(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k9541 in k9535 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9543,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[176]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9547,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-value-set!");
f_8742(t3,((C_word*)t0)[2],lf[176]);}
else{
t2=((C_word*)t0)[3];
f_9314(2,t2,C_SCHEME_UNDEFINED);}}

/* k9545 in k9541 in k9535 in k9580 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  pattern-state-set!");
f_8760(((C_word*)t0)[3],((C_word*)t0)[2],lf[188]);}

/* k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9314,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-flags");
f_8661(t2,((C_word*)t0)[3]);}}

/* k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9320,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9326,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9412,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t10,t1,C_fix(1));}

/* k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9412,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9415,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9428,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  next-in-pattern");
f_9602(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9435,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9524,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t3,((C_word*)t0)[2],C_fix(8));}}

/* k9522 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9524,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9531,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  period-length");
f_8529(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9435(t2,C_SCHEME_FALSE);}}

/* k9529 in k9522 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9435(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9435,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li132),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_9437(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9437(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9437,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9486,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li131),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_9486(t9,t5);}}

/* do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9486,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  pattern-datum");
f_8715(t2,((C_word*)t0)[3]);}

/* k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9521,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[176]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9496,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9503,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9510,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  next-in-pattern");
f_9602(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 367  next-in-pattern");
f_9602(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k9508 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9655,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t2,t1);}

/* k9653 in k9508 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9655,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-period");
f_8733(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9503(2,t2,((C_word*)t0)[2]);}}

/* k9628 in k9653 in k9508 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9651,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  period-omit");
f_8583(t2,t1);}

/* k9649 in k9628 in k9653 in k9508 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9651,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9639,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9647,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-omit");
f_8583(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_9503(2,t2,((C_word*)t0)[2]);}}

/* k9645 in k9649 in k9628 in k9653 in k9508 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9647,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  period-omit-set!");
f_8574(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9637 in k9649 in k9628 in k9653 in k9508 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9503(2,t2,lf[176]);}

/* k9501 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  pattern-datum-set!");
f_8706(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9494 in k9519 in do907 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_9486(t2,((C_word*)t0)[2]);}

/* k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9484,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-datum");
f_8715(t3,((C_word*)t0)[3]);}

/* k9482 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(((C_word*)t0)[2],t1);}

/* k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9448,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9467,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9480,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-datum");
f_8715(t5,((C_word*)t0)[3]);}

/* k9478 in k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(((C_word*)t0)[2],t1);}

/* k9465 in k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9467,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9475,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-datum");
f_8715(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[188]);
t3=((C_word*)t0)[3];
f_9451(t3,t2);}}

/* k9473 in k9465 in k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  pattern-state");
f_8769(((C_word*)t0)[2],t1);}

/* k9469 in k9465 in k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9451(t3,t2);}

/* k9449 in k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9451,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9454,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[176]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  pattern-datum-set!");
f_8706(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_9454(2,t5,t4);}}

/* k9452 in k9449 in k9446 in k9442 in do903 in k9433 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9437(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9426 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  pattern-datum-set!");
f_8706(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9413 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9424,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-datum");
f_8715(t3,((C_word*)t0)[2]);}

/* k9422 in k9413 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(((C_word*)t0)[2],t1);}

/* k9417 in k9413 in k9410 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[188]);
t4=((C_word*)t0)[2];
f_9326(2,t4,t3);}

/* k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9329,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[188]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9371,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9383,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-count");
f_8511(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9406,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t5,((C_word*)t0)[2],C_fix(64));}}

/* k9404 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 367  pattern-datum-set!");
f_8706(((C_word*)t0)[3],((C_word*)t0)[2],lf[176]);}
else{
t2=((C_word*)t0)[3];
f_9386(2,t2,C_SCHEME_UNDEFINED);}}

/* k9384 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t2,((C_word*)t0)[2],C_fix(16));}

/* k9390 in k9384 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9392,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-count");
f_8511(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9329(2,t2,C_SCHEME_UNDEFINED);}}

/* k9401 in k9390 in k9384 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9403,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9381 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9383,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 367  period-count-set!");
f_8502(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9369 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-datum-set!");
f_8706(t2,((C_word*)t0)[2],lf[176]);}

/* k9372 in k9369 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_9329(2,t3,t2);}

/* k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9365,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  period-count");
f_8511(t3,((C_word*)t0)[2]);}

/* k9363 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9365,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[188]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  period-reps");
f_8601(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_9332(2,t3,t2);}}

/* k9358 in k9363 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9360,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[151]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k9330 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9345,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_9335(t3,C_SCHEME_UNDEFINED);}}

/* k9343 in k9330 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9335(t3,t2);}

/* k9333 in k9330 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9335,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  pattern-state-set!");
f_8760(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9336 in k9333 in k9330 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern-value-set!");
f_8742(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9339 in k9336 in k9333 in k9330 in k9327 in k9324 in k9318 in k9312 in k9309 in k9306 in next-1 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9178(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_9178r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_9178r(t0,t1,t2,t3);}}

static void C_ccall f_9178r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9199,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li128),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_9199(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9237,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t1,t2);}}

/* k9235 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9237,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9247,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k9245 in k9235 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9247,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9249,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li129),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9249(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do879 in k9245 in k9235 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9249(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9249,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[190]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9268,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9278,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  eop?");
t13=C_retrieve(lf[187]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k9276 in do879 in k9245 in k9235 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9278,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_9268(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9283,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t2,((C_word*)t0)[2]);}}

/* k9281 in k9276 in do879 in k9245 in k9235 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9268(t3,t2);}

/* k9266 in do879 in k9245 in k9235 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_9249(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do872 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9199(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9199,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9231,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  next-1");
f_9301(t4,((C_word*)t0)[2]);}}

/* k9229 in do872 in next in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9231,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_9199(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9159(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9159,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9166,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t3,t2);}

/* k9164 in eod? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9166,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9173,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-value");
t3=C_retrieve2(lf[170],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[190]));}}

/* k9171 in k9164 in eod? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  eod?");
t2=C_retrieve(lf[189]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9140,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9147,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t3,t2);}

/* k9145 in eop? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9147,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9154,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  pattern-state");
f_8769(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[188]));}}

/* k9152 in k9145 in eop? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  eop?");
t2=C_retrieve(lf[187]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8960(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8960,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8964,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 367  pattern-data-set!");
f_8670(t12,t2,t3);}

/* k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t6=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t6=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t6=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8973,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8976,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9130,a[2]=t3,a[3]=((C_word)li124),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  map-pattern-data");
f_9611(t4,t5,((C_word*)t0)[7]);}

/* a9129 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9130,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9137,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  pattern?");
f_8646(t3,t2);}

/* k9135 in a9129 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_8979(t5,t4);}
else{
t3=t2;
f_8979(t3,C_SCHEME_UNDEFINED);}}

/* k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8979(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8979,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[177]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_8985(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[184]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_8985(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[185],t4);}}}

/* k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8985,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[178]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_8991(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[182]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_8991(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 367  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[183],t4);}}}

/* k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9054,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k9052 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9054,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[180]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8994(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  bitwise-test");
f_6243(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k9066 in k9052 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9068,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[181]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8994(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8994(t4,t3);}}

/* k8992 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8994(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8994,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t8=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k8995 in k8992 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8997,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9003,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_9003(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_9003(t8,t7);}}

/* k9001 in k8995 in k8992 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_9003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9006,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9016,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 367  make-period");
f_8490(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 367  make-period");
f_8490(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k9014 in k9001 in k8995 in k8992 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t4=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k9004 in k9001 in k8995 in k8992 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9009,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t6=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k9007 in k9004 in k9001 in k8995 in k8992 in k8989 in k8983 in k8977 in k8974 in k8971 in k8968 in k8965 in k8962 in initialize-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_9009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8950(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8950,NULL,1,t1);}
t2=lf[176];
t3=lf[176];
t4=lf[176];
t5=lf[177];
t6=lf[178];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[161],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8895(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8895,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8886(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8886,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8769(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8769,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8760(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8760,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_8751 in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8751(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8751,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8742(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8742,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8733(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8733,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8715(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8715,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8706(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8706,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8697(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8697,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8679(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8679,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8670(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8670,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[161]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8661(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8661,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[161]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8646(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8646,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[161]));}

/* period-reps in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8601(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8601,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8583(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8583,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8574(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8574,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8547(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8547,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8529(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8529,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8511(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8511,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[151]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8502(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8502,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[151]);
C_trace("ChickenBridge.scm: 367  ##sys#block-set!");
t5=*((C_word*)lf[153]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8490(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8490,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[151],t2,t3,t4,t5,t6,t7));}

/* transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8324(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8324,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 366  modulo");
t7=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8370,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  key");
t5=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8377,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8425,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_8425(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 366  key");
t6=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 366  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[147],t2);}}}

/* k8423 in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8425,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8442,a[2]=t1,a[3]=((C_word)li99),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 366  transpkeys");
f_8377(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8470,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8474,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  key");
t5=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k8472 in k8423 in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  transpkeys");
f_8377(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k8468 in k8423 in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  note");
t2=C_retrieve(lf[136]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8441 in k8423 in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8442(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8442,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 366  modulo");
t4=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8377(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8377,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8386,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li97),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8386(t8,t1,t2,t4);}

/* do590 in transpkeys in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8386(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8386,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k8368 in transpose in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8370,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 366  note");
t3=C_retrieve(lf[136]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8189(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8189,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 366  modulo");
t4=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[144],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8219,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8289,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 366  invkeys");
f_8219(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8311,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8315,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  key");
t7=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[145],t2);}}}

/* k8313 in invert in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  invkeys");
f_8219(((C_word*)t0)[2],t1);}

/* k8309 in invert in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  note");
t2=C_retrieve(lf[136]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8288 in invert in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8289(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8289,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 366  modulo");
t4=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8219(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8219,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8235,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li93),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8235(t9,t1,t5,t4);}

/* do575 in invkeys in invert in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8235(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8235,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8144(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8144,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 366  modulo");
t3=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[142]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8176,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  key");
t5=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8187,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  key");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k8185 in pc in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  modulo");
t2=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k8174 in pc in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[142]),t1);}

/* hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8028,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8043,a[2]=t5,a[3]=t3,a[4]=((C_word)li90),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8043(t7,t1,t2,lf[141],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 366  tb:keynum->hertz");
f_6396(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8142,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  note-aux");
f_7756(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8140 in hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do555 in hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8043(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8043,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8056,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8073,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8073(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8073(t14,(C_word)C_i_listp(t13));}}}

/* k8071 in do555 in hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8073(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8073,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8077,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 366  hz");
t4=C_retrieve(lf[140]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8092,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 366  note-aux");
f_7756(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8090 in k8071 in do555 in hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8092,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8056(t9,t8);}

/* k8075 in k8071 in do555 in hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8077,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8056(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8054 in do555 in hz in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_8056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8043(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7906(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7906,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7921,a[2]=t5,a[3]=t3,a[4]=((C_word)li88),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7921(t7,t1,t2,lf[139],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub226(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8026,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  note-aux");
f_7756(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8024 in key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_8026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do539 in key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7921(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7921,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7934,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7951,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_7951(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_7951(t14,(C_word)C_i_numberp(t13));}}}

/* k7949 in do539 in key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7951(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7951,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7955,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 366  key");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7970,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 366  note-aux");
f_7756(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k7968 in k7949 in do539 in key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7970,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_7934(t9,t8);}

/* k7953 in k7949 in do539 in key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7955,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7934(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7932 in do539 in key in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7921(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7809(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7809,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7824,a[2]=t5,a[3]=t3,a[4]=((C_word)li86),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7824(t7,t1,t2,lf[137],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7904,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  note-aux");
f_7756(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k7902 in note in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do525 in note in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7824(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7824,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7837,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7855,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 366  note");
t13=C_retrieve(lf[136]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7870,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 366  note-aux");
f_7756(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k7868 in do525 in note in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7870,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_7837(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k7853 in do525 in note in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7855,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7837(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7835 in do525 in note in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7824(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7756(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7756,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7706,a[2]=t6,a[3]=t7,a[4]=((C_word)li83),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-ref");
t9=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[123],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7754,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  floor");
t9=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7779,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  symbol->string");
t6=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 366  string->note-entry");
f_7654(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7794,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 366  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k7792 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7794,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  keyword->string");
t3=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 366  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[135],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k7799 in k7792 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  string->note-entry");
f_7654(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7777 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  string->note-entry");
f_7654(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7752 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7754,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[131]))){
t5=t4;
f_7726(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[132]);
t6=t4;
f_7726(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[133]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k7724 in k7752 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7726(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7726,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li84),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-ref");
t3=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[123],"*notes*"),t1,t2);}

/* a7727 in k7724 in k7752 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7728,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 366  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[130],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a7705 in note-aux in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7706,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 366  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[129],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7654(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7654,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7658,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7691,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-ref");
t7=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[123],"*notes*"),t2,t6);}

/* a7690 in string->note-entry in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7691,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k7656 in string->note-entry in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7658,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7674,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[127],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k7672 in k7656 in string->note-entry in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li80),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-ref");
t3=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[123],"*notes*"),t1,t2);}

/* a7675 in k7672 in k7656 in string->note-entry in k7650 in k7647 in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7676,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 366  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[125],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* ranpink in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7641,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub296(t2));}

/* ranbrown in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7635,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub299(t2));}

/* rangamma in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7616(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7616r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7616r(t0,t1,t2);}}

static void C_ccall f_7616r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 366  tb:rangamma");
f_6494(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 366  tb:rangamma");
f_6494(t1,t3);}}

/* ranpoisson in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7597(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7597r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7597r(t0,t1,t2);}}

static void C_ccall f_7597r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[119])))){
C_trace("ChickenBridge.scm: 366  tb:ranpoisson");
f_6504(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 366  tb:ranpoisson");
f_6504(t1,t3);}}

/* rancauchy in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7591,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub289(t2));}

/* rangauss in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7551(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7551r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7551r(t0,t1,t2);}}

static void C_ccall f_7551r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 366  tb:rangauss");
f_6465(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 366  tb:rangauss");
f_6465(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  tb:rangauss");
f_6465(t1,t4,t5);}}}

/* ranexp in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7532(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7532r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7532r(t0,t1,t2);}}

static void C_ccall f_7532r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 366  tb:ranexp");
f_6476(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 366  tb:ranexp");
f_6476(t1,t3);}}

/* ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7304(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_7304r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7304r(t0,t1,t2);}}

static void C_ccall f_7304r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[112];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7308,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_7308(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[113]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7445,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[113]);}
else{
t19=t18;
f_7445(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[114]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7480,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[114]);}
else{
t20=t19;
f_7480(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7509,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[12],t2);}
else{
t20=t19;
f_7509(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k7507 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7509,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7516,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7524,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7522 in k7507 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7516(2,t2,C_SCHEME_UNDEFINED);}}

/* k7514 in k7507 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7308(t5,t4);}

/* k7478 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7482 in k7478 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7308(t7,t6);}

/* k7443 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7449(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7447 in k7443 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7308(t7,t6);}

/* k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7308,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7311,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7311(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[113]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7345,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[113]);}
else{
t6=t5;
f_7345(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[114]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7380,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[114]);}
else{
t7=t6;
f_7380(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7409,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_7409(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7407 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7409,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7424,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7422 in k7407 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7416(2,t2,C_SCHEME_UNDEFINED);}}

/* k7414 in k7407 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7311(t5,t4);}

/* k7378 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7384(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7382 in k7378 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7311(t7,t6);}

/* k7343 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7347 in k7343 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7311(t7,t6);}

/* k7309 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7311,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7314,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7314(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k7312 in k7309 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_7317(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_7317(t5,t4);}}

/* k7315 in k7312 in k7309 in k7306 in ranbeta in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7317(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7317,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub279(t5,t6,t7));}

/* ranmiddle in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7298,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub262(t2));}

/* ranhigh in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7292,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub259(t2));}

/* ranlow in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7286,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub256(t2));}

/* odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7058(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7058r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7058r(t0,t1,t2,t3);}}

static void C_ccall f_7058r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7062,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7062(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[106]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7199,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[106]);}
else{
t20=t19;
f_7199(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[107]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7234,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[21],lf[107]);}
else{
t21=t20;
f_7234(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7263,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[12],t3);}
else{
t21=t20;
f_7263(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7261 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7263,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7278,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7276 in k7261 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7270(2,t2,C_SCHEME_UNDEFINED);}}

/* k7268 in k7261 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7062(t5,t4);}

/* k7232 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7238(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7236 in k7232 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7062(t7,t6);}

/* k7197 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7201 in k7197 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7062(t7,t6);}

/* k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7062(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7062,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7065,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7065(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[106]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7099,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[106]);}
else{
t6=t5;
f_7099(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[107]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7134,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[107]);}
else{
t7=t6;
f_7134(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7163,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_7163(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7161 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7163,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7178,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7176 in k7161 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7170(2,t2,C_SCHEME_UNDEFINED);}}

/* k7168 in k7161 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7065(t5,t4);}

/* k7132 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7138(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7136 in k7132 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7065(t7,t6);}

/* k7097 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_7103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7101 in k7097 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7065(t7,t6);}

/* k7063 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_7065(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7065,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7068,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7068(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k7066 in k7063 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 366  tb:ranf");
f_6427(t2,lf[105]);}

/* k7076 in k7066 in k7063 in k7060 in odds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7010(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7010,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[103]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7037,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 366  tb:rani");
f_6420(t5,t6);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7048,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 366  tb:rani");
f_6420(t4,t5);}}}

/* k7046 in pick in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k7035 in pick in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_7037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6989(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6989,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub245(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub251(t9,t10,t11));}}

/* ran in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6965(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6965,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,C_fix(1)))){
if(C_truep((C_word)C_fixnump(t2))){
C_trace("ChickenBridge.scm: 366  tb:rani");
f_6420(t1,t2);}
else{
C_trace("ChickenBridge.scm: 366  tb:ranf");
f_6427(t1,t2);}}
else{
C_trace("ChickenBridge.scm: 366  tb:ranf");
f_6427(t1,t2);}}

/* ran-set! in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6959(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6959,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub231(C_SCHEME_UNDEFINED,t2));}

/* scale in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6900(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4rv,(void*)f_6900r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_6900r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6900r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(12);
t5=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t6=(C_word)C_block_size(t4);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6913,a[2]=t5,a[3]=t8,a[4]=t4,a[5]=t2,a[6]=((C_word)li62),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_6913(t10,t1,C_fix(0),t3,t6,t5);}

/* do366 in scale in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6913(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6913,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6949,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 366  modulo");
t13=*((C_word*)lf[98]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k6947 in do366 in scale in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6949,2,t0,t1);}
t2=(C_word)C_i_vector_ref(((C_word*)t0)[8],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_6913(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6873(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6873r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6873r(t0,t1,t2,t3);}}

static void C_ccall f_6873r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
t4=(C_word)C_i_car(t3);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(6,0,t1,C_retrieve(lf[91]),t2,t5,t6);}
else{
C_trace("ChickenBridge.scm: 366  interpl");
t5=C_retrieve(lf[91]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t2,t3);}}

/* interpl in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_6778r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_6778r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6778r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6782,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 366  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[95],t3);}
else{
t6=t5;
f_6782(2,t6,(C_word)C_i_car(t3));}}

/* k6780 in interpl in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6782,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 366  err");
t6=C_retrieve(lf[93]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[94],((C_word*)t0)[4]);}
else{
t6=t4;
f_6785(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k6783 in k6780 in interpl in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6785,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6797,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li59),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_6797(t14,((C_word*)t0)[2],t10);}

/* do350 in k6783 in k6780 in interpl in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6797(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6797,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 366  tb:rescale");
f_6284(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6819,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 366  error");
t11=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[92],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_6819(2,t13,t12);}}}

/* k6817 in do350 in k6783 in k6780 in interpl in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6797(t3,((C_word*)t0)[2],t2);}

/* scaler->cents in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6763(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6763,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 366  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_6389(3,t3,t1,t2);}}

/* cents->scaler in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6748(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6748,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 366  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_6382(3,t3,t1,t2);}}

/* rhythm->seconds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6688(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_6688r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6688r(t0,t1,t2,t3);}}

static void C_ccall f_6688r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6690,a[2]=t2,a[3]=((C_word)li53),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6695,a[2]=t4,a[3]=((C_word)li54),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6700,a[2]=t5,a[3]=((C_word)li55),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-tempo326334");
t7=t6;
f_6700(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-beat327332");
t9=t5;
f_6695(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body324329");
t11=t4;
f_6690(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[88]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-tempo326 in rhythm->seconds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6700,NULL,2,t0,t1);}
C_trace("def-beat327332");
t2=((C_word*)t0)[2];
f_6695(t2,t1,lf[87]);}

/* def-beat327 in rhythm->seconds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6695(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6695,NULL,3,t0,t1,t2);}
C_trace("body324329");
t3=((C_word*)t0)[2];
f_6690(t3,t1,t2,lf[86]);}

/* body324 in rhythm->seconds in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6690(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6690,NULL,4,t0,t1,t2,t3);}
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub201(t5,t6,t7,t8));}

/* decimals in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6669(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6669r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6669r(t0,t1,t2,t3);}}

static void C_ccall f_6669r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 366  tb:decimals");
f_6345(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 366  tb:decimals");
f_6345(t1,t2,t4);}}

/* quantize in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6648(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6648,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6660,a[2]=t3,a[3]=((C_word)li50),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 366  tb:quantize");
f_6356(t1,t2,t3);}}

/* a6659 in quantize in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6660(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6660,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 366  tb:quantize");
f_6356(t1,t2,((C_word*)t0)[2]);}

/* int in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6633(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6633,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve(lf[82]),t2);}
else{
t3=t1;
t4=t2;
t5=(C_word)C_i_foreign_flonum_argumentp(t4);
t6=t3;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub181(C_SCHEME_UNDEFINED,t5));}}

/* discrete in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_6551r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6551r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6551r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6565,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 366  tb:discrete");
f_6311(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 366  tb:discrete");
f_6311(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 366  tb:discrete");
f_6311(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 366  tb:discrete");
f_6311(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 366  tb:discrete");
f_6311(t1,t2,t3,t4,t5,t8,t9);}}}

/* k6563 in discrete in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6517(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_6517r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_6517r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6517r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6529,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li46),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 366  tb:rescale");
f_6284(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 366  tb:rescale");
f_6284(t1,t2,t3,t4,t5,t6,t8);}}}

/* a6528 in rescale in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6529(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6529,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[80]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranpoisson in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6504(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6504,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub293(C_SCHEME_UNDEFINED,t3));}

/* tb:rangamma in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6494(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6494,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub285(t3,t4));}

/* tb:ranexp in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6476(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6476,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub273(t3,t4));}

/* tb:rangauss in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6465(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6465,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub267(t4,t5,t6));}

/* tb:ranf in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6427(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6427,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub239(t3,t4));}

/* tb:rani in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6420(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6420,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub235(C_SCHEME_UNDEFINED,t3));}

/* tb:keynum->hertz in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6396(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6396,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub217(t3,t4));}

/* tb:scaler->cents in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6389(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6389,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub213(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6382(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6382,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub208(t3,t4));}

/* tb:quantize in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6356(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6356,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub193(t4,t5,t6));}

/* tb:decimals in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6345(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6345,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub186(t4,t5,t6));}

/* tb:discrete in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6311(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6311,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub172(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6284(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6284,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub157(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6243(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6243,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6249,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li31),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6249(t9,t1,C_SCHEME_FALSE);}

/* do128 in bitwise-test in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6249(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6249,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6259,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6259(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6259(t7,t6);}}
else{
t5=t4;
f_6259(t5,C_SCHEME_UNDEFINED);}}}

/* k6257 in do128 in bitwise-test in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6259,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6249(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6157r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6157r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6157r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[65],"list-prop"),t7,t3,t4);}}}

/* make-list in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6109(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6109r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6109r(t0,t1,t2,t3);}}

static void C_ccall f_6109r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(6);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 365  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[64],t2);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6121,a[2]=t5,a[3]=((C_word)li28),tmp=(C_word)a,a+=4,tmp));
t7=(C_word)C_vemptyp(t3);
t8=(C_truep(t7)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
C_trace("ChickenBridge.scm: 365  mk");
t9=((C_word*)t5)[1];
f_6121(t9,t1,t2,t8);}}

/* mk in make-list in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_6121(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6121,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6138,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 365  mk");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6136 in mk in make-list in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6138,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* list-set! in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6099,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6059(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6059r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6059r(t0,t1,t2);}}

static void C_ccall f_6059r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 365  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[61]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6089,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[60]),t6);}}}

/* k6087 in list* in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6089,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6011(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6011,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6045,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 365  butlast");
t8=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6043 in butlast in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_6045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6045,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5988(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5988,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 365  last");
t5=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5982(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5982,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5967,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5953(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5953,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5943(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5943,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5933(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5933,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5923(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5923,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5913(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5913,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5884(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_5884r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_5884r(t0,t1,t2);}}

static void C_ccall f_5884r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[47]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5893,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_5893 in chdir in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5893(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5893,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5898,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_5898(2,t4,C_SCHEME_FALSE);}}

/* k5896 */
static void C_ccall f_5898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5878,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5878 in cwd in k5869 in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5878,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[45]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5580,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5860,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5849,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5858,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5590,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 271  symbol->string");
t11=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5590(2,t11,t2);}}

/* k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5593,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5841,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 272  hash-table-ref");
t4=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[31]),t1,t3);}

/* a5840 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5841,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5596(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 273  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[42],((C_word*)t0)[3]);}}

/* k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5596,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5611,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5611(t10,(C_word)C_eqp(t9,lf[41]));}
else{
t9=t8;
f_5611(t9,C_SCHEME_FALSE);}}

/* k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_5611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5611,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5621,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 287  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5621,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5623(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_5623(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5623,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5635,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5635(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5676,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5682,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5682(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 302  keyword?");
t13=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5682,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5676(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5736,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5809,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 323  keyword?");
t11=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5692,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 313  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[40],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5692(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5690 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5692,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5676(t9,t8);}

/* k5807 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5809,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5782,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 328  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5736(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5795,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5797,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 324  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[39],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5796 in k5807 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5797(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5797,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 332  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5793 in k5807 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 330  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[38],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5780 in k5807 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 327  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[37],((C_word*)t0)[2],t1);}

/* k5734 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5736,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5742,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5742(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5763,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 339  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5761 in k5734 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 338  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[36],((C_word*)t0)[2],t1);}

/* k5740 in k5734 in k5680 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5676(t6,t5);}

/* k5674 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_5676(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5623(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_5635(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5635,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5648,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5648(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5648(t5,C_SCHEME_UNDEFINED);}}}

/* k5646 in do69 in do63 in k5619 in k5609 in k5594 in k5591 in k5588 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_fcall f_5648(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5635(t3,((C_word*)t0)[2],t2);}

/* f_5858 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5858(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5858,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5849 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5849(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5849,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5857,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 269  keyword->string");
t4=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5855 */
static void C_ccall f_5857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 269  sprintf");
t2=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[34],t1);}

/* f_5860 in expand-send in k5576 in k5573 in k5569 in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5860(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5860r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5860r(t0,t1,t2,t3);}}

static void C_ccall f_5860r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5868,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[33]),t2,t3);}

/* k5866 */
static void C_ccall f_5868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  error");
t2=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5282,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5443,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5535,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5534 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5535(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5535,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5549,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5553,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 217  symbol->string");
t6=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5564,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5568,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 218  symbol->string");
t5=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5566 in a5534 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 218  gensym");
t2=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5562 in a5534 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5564,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5551 in a5534 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 217  gensym");
t2=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5547 in a5534 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5549,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5446,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 220  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[30]);}

/* k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 221  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[29]);}

/* k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5452,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5529,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5528 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5529(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5529,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5295,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5354,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 181  symbol->string");
t10=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5352 in a5528 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 181  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5293 in a5528 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5295,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[6],lf[21],t1);
t4=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[5],t5);
t7=(C_word)C_a_i_list(&a,3,lf[6],lf[23],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[24],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[22],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[25],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5459,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[17]+1),((C_word*)t0)[2]);}

/* k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5505,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5519,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5518 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5519(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5519,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5503 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5505,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 227  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5469 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5475,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5479,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5496 in k5469 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5497(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5497,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[5],t4);
t8=(C_word)C_a_i_list(&a,2,lf[10],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5432,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[6],lf[12],t5);
t13=(C_word)C_a_i_list(&a,3,lf[13],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[10],t4);
t15=(C_word)C_a_i_list(&a,3,lf[14],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[15],t11);
t17=(C_word)C_a_i_list(&a,3,lf[6],lf[16],t11);
t18=(C_word)C_a_i_list(&a,3,lf[13],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[14],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[17],t4);
t21=(C_word)C_a_i_list(&a,3,lf[14],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[18],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5430 in a5496 in k5469 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5432,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[11],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[8],((C_word*)t0)[2],t3));}

/* k5477 in k5469 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5479,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[6],lf[7],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[8],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5473 in k5469 in k5457 in k5450 in k5447 in k5444 in k5441 in expand-optkeys in k5278 in k5275 in k5272 in k5269 */
static void C_ccall f_5475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5475,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[3],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2232] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5271ChickenBridge.scm",(void*)f_5271},
{"f_5274ChickenBridge.scm",(void*)f_5274},
{"f_5277ChickenBridge.scm",(void*)f_5277},
{"f_5280ChickenBridge.scm",(void*)f_5280},
{"f_33243ChickenBridge.scm",(void*)f_33243},
{"f_5571ChickenBridge.scm",(void*)f_5571},
{"f_5575ChickenBridge.scm",(void*)f_5575},
{"f_33191ChickenBridge.scm",(void*)f_33191},
{"f_33238ChickenBridge.scm",(void*)f_33238},
{"f_33228ChickenBridge.scm",(void*)f_33228},
{"f_33195ChickenBridge.scm",(void*)f_33195},
{"f_5578ChickenBridge.scm",(void*)f_5578},
{"f_33185ChickenBridge.scm",(void*)f_33185},
{"f_5871ChickenBridge.scm",(void*)f_5871},
{"f_7649ChickenBridge.scm",(void*)f_7649},
{"f_32969ChickenBridge.scm",(void*)f_32969},
{"f_33183ChickenBridge.scm",(void*)f_33183},
{"f_33003ChickenBridge.scm",(void*)f_33003},
{"f_33015ChickenBridge.scm",(void*)f_33015},
{"f_33019ChickenBridge.scm",(void*)f_33019},
{"f_33023ChickenBridge.scm",(void*)f_33023},
{"f_33167ChickenBridge.scm",(void*)f_33167},
{"f_33029ChickenBridge.scm",(void*)f_33029},
{"f_33049ChickenBridge.scm",(void*)f_33049},
{"f_33052ChickenBridge.scm",(void*)f_33052},
{"f_33060ChickenBridge.scm",(void*)f_33060},
{"f_33067ChickenBridge.scm",(void*)f_33067},
{"f_33070ChickenBridge.scm",(void*)f_33070},
{"f_33074ChickenBridge.scm",(void*)f_33074},
{"f_33081ChickenBridge.scm",(void*)f_33081},
{"f_33084ChickenBridge.scm",(void*)f_33084},
{"f_33088ChickenBridge.scm",(void*)f_33088},
{"f_33095ChickenBridge.scm",(void*)f_33095},
{"f_33039ChickenBridge.scm",(void*)f_33039},
{"f_32992ChickenBridge.scm",(void*)f_32992},
{"f_32982ChickenBridge.scm",(void*)f_32982},
{"f_32985ChickenBridge.scm",(void*)f_32985},
{"f_7652ChickenBridge.scm",(void*)f_7652},
{"f_32955ChickenBridge.scm",(void*)f_32955},
{"f_32963ChickenBridge.scm",(void*)f_32963},
{"f_32967ChickenBridge.scm",(void*)f_32967},
{"f_15245ChickenBridge.scm",(void*)f_15245},
{"f_15296ChickenBridge.scm",(void*)f_15296},
{"f_32945ChickenBridge.scm",(void*)f_32945},
{"f_32953ChickenBridge.scm",(void*)f_32953},
{"f_15401ChickenBridge.scm",(void*)f_15401},
{"f_32842ChickenBridge.scm",(void*)f_32842},
{"f_32905ChickenBridge.scm",(void*)f_32905},
{"f_32909ChickenBridge.scm",(void*)f_32909},
{"f_32923ChickenBridge.scm",(void*)f_32923},
{"f_32845ChickenBridge.scm",(void*)f_32845},
{"f_32865ChickenBridge.scm",(void*)f_32865},
{"f_32869ChickenBridge.scm",(void*)f_32869},
{"f_15404ChickenBridge.scm",(void*)f_15404},
{"f_32828ChickenBridge.scm",(void*)f_32828},
{"f_32836ChickenBridge.scm",(void*)f_32836},
{"f_32840ChickenBridge.scm",(void*)f_32840},
{"f_15597ChickenBridge.scm",(void*)f_15597},
{"f_32802ChickenBridge.scm",(void*)f_32802},
{"f_32806ChickenBridge.scm",(void*)f_32806},
{"f_32812ChickenBridge.scm",(void*)f_32812},
{"f_32823ChickenBridge.scm",(void*)f_32823},
{"f_32819ChickenBridge.scm",(void*)f_32819},
{"f_15666ChickenBridge.scm",(void*)f_15666},
{"f_32780ChickenBridge.scm",(void*)f_32780},
{"f_16911ChickenBridge.scm",(void*)f_16911},
{"f_32760ChickenBridge.scm",(void*)f_32760},
{"f_16914ChickenBridge.scm",(void*)f_16914},
{"f_32720ChickenBridge.scm",(void*)f_32720},
{"f_16917ChickenBridge.scm",(void*)f_16917},
{"f_32626ChickenBridge.scm",(void*)f_32626},
{"f_32630ChickenBridge.scm",(void*)f_32630},
{"f_32633ChickenBridge.scm",(void*)f_32633},
{"f_32651ChickenBridge.scm",(void*)f_32651},
{"f_32654ChickenBridge.scm",(void*)f_32654},
{"f_32685ChickenBridge.scm",(void*)f_32685},
{"f_32657ChickenBridge.scm",(void*)f_32657},
{"f_32663ChickenBridge.scm",(void*)f_32663},
{"f_32616ChickenBridge.scm",(void*)f_32616},
{"f_32610ChickenBridge.scm",(void*)f_32610},
{"f_16920ChickenBridge.scm",(void*)f_16920},
{"f_32518ChickenBridge.scm",(void*)f_32518},
{"f_32520ChickenBridge.scm",(void*)f_32520},
{"f_32524ChickenBridge.scm",(void*)f_32524},
{"f_32527ChickenBridge.scm",(void*)f_32527},
{"f_32530ChickenBridge.scm",(void*)f_32530},
{"f_32570ChickenBridge.scm",(void*)f_32570},
{"f_32562ChickenBridge.scm",(void*)f_32562},
{"f_32533ChickenBridge.scm",(void*)f_32533},
{"f_32536ChickenBridge.scm",(void*)f_32536},
{"f_32539ChickenBridge.scm",(void*)f_32539},
{"f_32510ChickenBridge.scm",(void*)f_32510},
{"f_16923ChickenBridge.scm",(void*)f_16923},
{"f_32482ChickenBridge.scm",(void*)f_32482},
{"f_16926ChickenBridge.scm",(void*)f_16926},
{"f_32446ChickenBridge.scm",(void*)f_32446},
{"f_32458ChickenBridge.scm",(void*)f_32458},
{"f_32454ChickenBridge.scm",(void*)f_32454},
{"f_32428ChickenBridge.scm",(void*)f_32428},
{"f_32422ChickenBridge.scm",(void*)f_32422},
{"f_16929ChickenBridge.scm",(void*)f_16929},
{"f_32336ChickenBridge.scm",(void*)f_32336},
{"f_32340ChickenBridge.scm",(void*)f_32340},
{"f_32343ChickenBridge.scm",(void*)f_32343},
{"f_32346ChickenBridge.scm",(void*)f_32346},
{"f_32359ChickenBridge.scm",(void*)f_32359},
{"f_32305ChickenBridge.scm",(void*)f_32305},
{"f_32309ChickenBridge.scm",(void*)f_32309},
{"f_32324ChickenBridge.scm",(void*)f_32324},
{"f_32299ChickenBridge.scm",(void*)f_32299},
{"f_16932ChickenBridge.scm",(void*)f_16932},
{"f_32185ChickenBridge.scm",(void*)f_32185},
{"f_32201ChickenBridge.scm",(void*)f_32201},
{"f_32212ChickenBridge.scm",(void*)f_32212},
{"f_32179ChickenBridge.scm",(void*)f_32179},
{"f_16988ChickenBridge.scm",(void*)f_16988},
{"f_32046ChickenBridge.scm",(void*)f_32046},
{"f_32069ChickenBridge.scm",(void*)f_32069},
{"f_32066ChickenBridge.scm",(void*)f_32066},
{"f_32040ChickenBridge.scm",(void*)f_32040},
{"f_16991ChickenBridge.scm",(void*)f_16991},
{"f_31894ChickenBridge.scm",(void*)f_31894},
{"f_31912ChickenBridge.scm",(void*)f_31912},
{"f_31921ChickenBridge.scm",(void*)f_31921},
{"f_31888ChickenBridge.scm",(void*)f_31888},
{"f_16994ChickenBridge.scm",(void*)f_16994},
{"f_31841ChickenBridge.scm",(void*)f_31841},
{"f_31845ChickenBridge.scm",(void*)f_31845},
{"f_31848ChickenBridge.scm",(void*)f_31848},
{"f_31864ChickenBridge.scm",(void*)f_31864},
{"f_31823ChickenBridge.scm",(void*)f_31823},
{"f_31817ChickenBridge.scm",(void*)f_31817},
{"f_16997ChickenBridge.scm",(void*)f_16997},
{"f_31741ChickenBridge.scm",(void*)f_31741},
{"f_17136ChickenBridge.scm",(void*)f_17136},
{"f_31667ChickenBridge.scm",(void*)f_31667},
{"f_31674ChickenBridge.scm",(void*)f_31674},
{"f_31661ChickenBridge.scm",(void*)f_31661},
{"f_17139ChickenBridge.scm",(void*)f_17139},
{"f_31557ChickenBridge.scm",(void*)f_31557},
{"f_31565ChickenBridge.scm",(void*)f_31565},
{"f_31531ChickenBridge.scm",(void*)f_31531},
{"f_31548ChickenBridge.scm",(void*)f_31548},
{"f_31539ChickenBridge.scm",(void*)f_31539},
{"f_31525ChickenBridge.scm",(void*)f_31525},
{"f_17142ChickenBridge.scm",(void*)f_17142},
{"f_31481ChickenBridge.scm",(void*)f_31481},
{"f_17145ChickenBridge.scm",(void*)f_17145},
{"f_31399ChickenBridge.scm",(void*)f_31399},
{"f_31410ChickenBridge.scm",(void*)f_31410},
{"f_31412ChickenBridge.scm",(void*)f_31412},
{"f_31441ChickenBridge.scm",(void*)f_31441},
{"f_31377ChickenBridge.scm",(void*)f_31377},
{"f_31393ChickenBridge.scm",(void*)f_31393},
{"f_31371ChickenBridge.scm",(void*)f_31371},
{"f_17148ChickenBridge.scm",(void*)f_17148},
{"f_31324ChickenBridge.scm",(void*)f_31324},
{"f_31328ChickenBridge.scm",(void*)f_31328},
{"f_31335ChickenBridge.scm",(void*)f_31335},
{"f_31302ChickenBridge.scm",(void*)f_31302},
{"f_31318ChickenBridge.scm",(void*)f_31318},
{"f_31296ChickenBridge.scm",(void*)f_31296},
{"f_17151ChickenBridge.scm",(void*)f_17151},
{"f_31164ChickenBridge.scm",(void*)f_31164},
{"f_31204ChickenBridge.scm",(void*)f_31204},
{"f_31168ChickenBridge.scm",(void*)f_31168},
{"f_31184ChickenBridge.scm",(void*)f_31184},
{"f_31196ChickenBridge.scm",(void*)f_31196},
{"f_31200ChickenBridge.scm",(void*)f_31200},
{"f_31192ChickenBridge.scm",(void*)f_31192},
{"f_31103ChickenBridge.scm",(void*)f_31103},
{"f_31150ChickenBridge.scm",(void*)f_31150},
{"f_31110ChickenBridge.scm",(void*)f_31110},
{"f_31121ChickenBridge.scm",(void*)f_31121},
{"f_31097ChickenBridge.scm",(void*)f_31097},
{"f_17154ChickenBridge.scm",(void*)f_17154},
{"f_31077ChickenBridge.scm",(void*)f_31077},
{"f_31071ChickenBridge.scm",(void*)f_31071},
{"f_17157ChickenBridge.scm",(void*)f_17157},
{"f_31051ChickenBridge.scm",(void*)f_31051},
{"f_31055ChickenBridge.scm",(void*)f_31055},
{"f_31043ChickenBridge.scm",(void*)f_31043},
{"f_17160ChickenBridge.scm",(void*)f_17160},
{"f_31023ChickenBridge.scm",(void*)f_31023},
{"f_31027ChickenBridge.scm",(void*)f_31027},
{"f_31015ChickenBridge.scm",(void*)f_31015},
{"f_17163ChickenBridge.scm",(void*)f_17163},
{"f_30995ChickenBridge.scm",(void*)f_30995},
{"f_30999ChickenBridge.scm",(void*)f_30999},
{"f_30987ChickenBridge.scm",(void*)f_30987},
{"f_17166ChickenBridge.scm",(void*)f_17166},
{"f_30967ChickenBridge.scm",(void*)f_30967},
{"f_30971ChickenBridge.scm",(void*)f_30971},
{"f_30959ChickenBridge.scm",(void*)f_30959},
{"f_17169ChickenBridge.scm",(void*)f_17169},
{"f_30858ChickenBridge.scm",(void*)f_30858},
{"f_30828ChickenBridge.scm",(void*)f_30828},
{"f_30852ChickenBridge.scm",(void*)f_30852},
{"f_30822ChickenBridge.scm",(void*)f_30822},
{"f_17172ChickenBridge.scm",(void*)f_17172},
{"f_30772ChickenBridge.scm",(void*)f_30772},
{"f_30774ChickenBridge.scm",(void*)f_30774},
{"f_30778ChickenBridge.scm",(void*)f_30778},
{"f_30806ChickenBridge.scm",(void*)f_30806},
{"f_30798ChickenBridge.scm",(void*)f_30798},
{"f_30794ChickenBridge.scm",(void*)f_30794},
{"f_30781ChickenBridge.scm",(void*)f_30781},
{"f_30764ChickenBridge.scm",(void*)f_30764},
{"f_17175ChickenBridge.scm",(void*)f_17175},
{"f_30711ChickenBridge.scm",(void*)f_30711},
{"f_30713ChickenBridge.scm",(void*)f_30713},
{"f_30717ChickenBridge.scm",(void*)f_30717},
{"f_30748ChickenBridge.scm",(void*)f_30748},
{"f_30740ChickenBridge.scm",(void*)f_30740},
{"f_30736ChickenBridge.scm",(void*)f_30736},
{"f_30720ChickenBridge.scm",(void*)f_30720},
{"f_30723ChickenBridge.scm",(void*)f_30723},
{"f_30703ChickenBridge.scm",(void*)f_30703},
{"f_17178ChickenBridge.scm",(void*)f_17178},
{"f_30653ChickenBridge.scm",(void*)f_30653},
{"f_30667ChickenBridge.scm",(void*)f_30667},
{"f_30659ChickenBridge.scm",(void*)f_30659},
{"f_30618ChickenBridge.scm",(void*)f_30618},
{"f_30651ChickenBridge.scm",(void*)f_30651},
{"f_30612ChickenBridge.scm",(void*)f_30612},
{"f_17181ChickenBridge.scm",(void*)f_17181},
{"f_30559ChickenBridge.scm",(void*)f_30559},
{"f_30563ChickenBridge.scm",(void*)f_30563},
{"f_30576ChickenBridge.scm",(void*)f_30576},
{"f_30568ChickenBridge.scm",(void*)f_30568},
{"f_30516ChickenBridge.scm",(void*)f_30516},
{"f_30549ChickenBridge.scm",(void*)f_30549},
{"f_30510ChickenBridge.scm",(void*)f_30510},
{"f_17184ChickenBridge.scm",(void*)f_17184},
{"f_30430ChickenBridge.scm",(void*)f_30430},
{"f_30424ChickenBridge.scm",(void*)f_30424},
{"f_17187ChickenBridge.scm",(void*)f_17187},
{"f_30193ChickenBridge.scm",(void*)f_30193},
{"f_30197ChickenBridge.scm",(void*)f_30197},
{"f_30205ChickenBridge.scm",(void*)f_30205},
{"f_30228ChickenBridge.scm",(void*)f_30228},
{"f_30231ChickenBridge.scm",(void*)f_30231},
{"f_30234ChickenBridge.scm",(void*)f_30234},
{"f_30237ChickenBridge.scm",(void*)f_30237},
{"f_30297ChickenBridge.scm",(void*)f_30297},
{"f_30304ChickenBridge.scm",(void*)f_30304},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30324ChickenBridge.scm",(void*)f_30324},
{"f_30338ChickenBridge.scm",(void*)f_30338},
{"f_30348ChickenBridge.scm",(void*)f_30348},
{"f_30358ChickenBridge.scm",(void*)f_30358},
{"f_30368ChickenBridge.scm",(void*)f_30368},
{"f_30240ChickenBridge.scm",(void*)f_30240},
{"f_30264ChickenBridge.scm",(void*)f_30264},
{"f_30243ChickenBridge.scm",(void*)f_30243},
{"f_30150ChickenBridge.scm",(void*)f_30150},
{"f_30183ChickenBridge.scm",(void*)f_30183},
{"f_30144ChickenBridge.scm",(void*)f_30144},
{"f_17190ChickenBridge.scm",(void*)f_17190},
{"f_30062ChickenBridge.scm",(void*)f_30062},
{"f_30066ChickenBridge.scm",(void*)f_30066},
{"f_30072ChickenBridge.scm",(void*)f_30072},
{"f_30092ChickenBridge.scm",(void*)f_30092},
{"f_30036ChickenBridge.scm",(void*)f_30036},
{"f_30046ChickenBridge.scm",(void*)f_30046},
{"f_30030ChickenBridge.scm",(void*)f_30030},
{"f_17193ChickenBridge.scm",(void*)f_17193},
{"f_29907ChickenBridge.scm",(void*)f_29907},
{"f_29911ChickenBridge.scm",(void*)f_29911},
{"f_29839ChickenBridge.scm",(void*)f_29839},
{"f_29858ChickenBridge.scm",(void*)f_29858},
{"f_29893ChickenBridge.scm",(void*)f_29893},
{"f_29864ChickenBridge.scm",(void*)f_29864},
{"f_29868ChickenBridge.scm",(void*)f_29868},
{"f_29882ChickenBridge.scm",(void*)f_29882},
{"f_29871ChickenBridge.scm",(void*)f_29871},
{"f_29852ChickenBridge.scm",(void*)f_29852},
{"f_29833ChickenBridge.scm",(void*)f_29833},
{"f_17196ChickenBridge.scm",(void*)f_17196},
{"f_29561ChickenBridge.scm",(void*)f_29561},
{"f_17719ChickenBridge.scm",(void*)f_17719},
{"f_29513ChickenBridge.scm",(void*)f_29513},
{"f_29505ChickenBridge.scm",(void*)f_29505},
{"f_17722ChickenBridge.scm",(void*)f_17722},
{"f_29385ChickenBridge.scm",(void*)f_29385},
{"f_17728ChickenBridge.scm",(void*)f_17728},
{"f_18203ChickenBridge.scm",(void*)f_18203},
{"f_18237ChickenBridge.scm",(void*)f_18237},
{"f_18229ChickenBridge.scm",(void*)f_18229},
{"f_18225ChickenBridge.scm",(void*)f_18225},
{"f_18210ChickenBridge.scm",(void*)f_18210},
{"f_18214ChickenBridge.scm",(void*)f_18214},
{"f_18207ChickenBridge.scm",(void*)f_18207},
{"f_17746ChickenBridge.scm",(void*)f_17746},
{"f_18196ChickenBridge.scm",(void*)f_18196},
{"f_18192ChickenBridge.scm",(void*)f_18192},
{"f_17753ChickenBridge.scm",(void*)f_17753},
{"f_18067ChickenBridge.scm",(void*)f_18067},
{"f_18088ChickenBridge.scm",(void*)f_18088},
{"f_18090ChickenBridge.scm",(void*)f_18090},
{"f_18104ChickenBridge.scm",(void*)f_18104},
{"f_18157ChickenBridge.scm",(void*)f_18157},
{"f_18107ChickenBridge.scm",(void*)f_18107},
{"f_18142ChickenBridge.scm",(void*)f_18142},
{"f_18110ChickenBridge.scm",(void*)f_18110},
{"f_18123ChickenBridge.scm",(void*)f_18123},
{"f_18135ChickenBridge.scm",(void*)f_18135},
{"f_18127ChickenBridge.scm",(void*)f_18127},
{"f_18113ChickenBridge.scm",(void*)f_18113},
{"f_18077ChickenBridge.scm",(void*)f_18077},
{"f_17756ChickenBridge.scm",(void*)f_17756},
{"f_18031ChickenBridge.scm",(void*)f_18031},
{"f_18057ChickenBridge.scm",(void*)f_18057},
{"f_18042ChickenBridge.scm",(void*)f_18042},
{"f_17759ChickenBridge.scm",(void*)f_17759},
{"f_17763ChickenBridge.scm",(void*)f_17763},
{"f_17975ChickenBridge.scm",(void*)f_17975},
{"f_17985ChickenBridge.scm",(void*)f_17985},
{"f_17988ChickenBridge.scm",(void*)f_17988},
{"f_18009ChickenBridge.scm",(void*)f_18009},
{"f_17991ChickenBridge.scm",(void*)f_17991},
{"f_17995ChickenBridge.scm",(void*)f_17995},
{"f_17766ChickenBridge.scm",(void*)f_17766},
{"f_17769ChickenBridge.scm",(void*)f_17769},
{"f_17938ChickenBridge.scm",(void*)f_17938},
{"f_17946ChickenBridge.scm",(void*)f_17946},
{"f_17942ChickenBridge.scm",(void*)f_17942},
{"f_17772ChickenBridge.scm",(void*)f_17772},
{"f_17800ChickenBridge.scm",(void*)f_17800},
{"f_17803ChickenBridge.scm",(void*)f_17803},
{"f_17806ChickenBridge.scm",(void*)f_17806},
{"f_17809ChickenBridge.scm",(void*)f_17809},
{"f_17812ChickenBridge.scm",(void*)f_17812},
{"f_17871ChickenBridge.scm",(void*)f_17871},
{"f_29339ChickenBridge.scm",(void*)f_29339},
{"f_29355ChickenBridge.scm",(void*)f_29355},
{"f_29358ChickenBridge.scm",(void*)f_29358},
{"f_29361ChickenBridge.scm",(void*)f_29361},
{"f_29364ChickenBridge.scm",(void*)f_29364},
{"f_29375ChickenBridge.scm",(void*)f_29375},
{"f_29333ChickenBridge.scm",(void*)f_29333},
{"f_18244ChickenBridge.scm",(void*)f_18244},
{"f_29194ChickenBridge.scm",(void*)f_29194},
{"f_29233ChickenBridge.scm",(void*)f_29233},
{"f_29207ChickenBridge.scm",(void*)f_29207},
{"f_29188ChickenBridge.scm",(void*)f_29188},
{"f_18247ChickenBridge.scm",(void*)f_18247},
{"f_28776ChickenBridge.scm",(void*)f_28776},
{"f_28780ChickenBridge.scm",(void*)f_28780},
{"f_28792ChickenBridge.scm",(void*)f_28792},
{"f_28850ChickenBridge.scm",(void*)f_28850},
{"f_28853ChickenBridge.scm",(void*)f_28853},
{"f_28856ChickenBridge.scm",(void*)f_28856},
{"f_29068ChickenBridge.scm",(void*)f_29068},
{"f_29006ChickenBridge.scm",(void*)f_29006},
{"f_29040ChickenBridge.scm",(void*)f_29040},
{"f_29015ChickenBridge.scm",(void*)f_29015},
{"f_29026ChickenBridge.scm",(void*)f_29026},
{"f_29022ChickenBridge.scm",(void*)f_29022},
{"f_28865ChickenBridge.scm",(void*)f_28865},
{"f_28943ChickenBridge.scm",(void*)f_28943},
{"f_28984ChickenBridge.scm",(void*)f_28984},
{"f_28988ChickenBridge.scm",(void*)f_28988},
{"f_28992ChickenBridge.scm",(void*)f_28992},
{"f_28947ChickenBridge.scm",(void*)f_28947},
{"f_28951ChickenBridge.scm",(void*)f_28951},
{"f_28978ChickenBridge.scm",(void*)f_28978},
{"f_28954ChickenBridge.scm",(void*)f_28954},
{"f_28868ChickenBridge.scm",(void*)f_28868},
{"f_28940ChickenBridge.scm",(void*)f_28940},
{"f_28882ChickenBridge.scm",(void*)f_28882},
{"f_28884ChickenBridge.scm",(void*)f_28884},
{"f_28932ChickenBridge.scm",(void*)f_28932},
{"f_28903ChickenBridge.scm",(void*)f_28903},
{"f_28920ChickenBridge.scm",(void*)f_28920},
{"f_28906ChickenBridge.scm",(void*)f_28906},
{"f_28899ChickenBridge.scm",(void*)f_28899},
{"f_28871ChickenBridge.scm",(void*)f_28871},
{"f_28801ChickenBridge.scm",(void*)f_28801},
{"f_28811ChickenBridge.scm",(void*)f_28811},
{"f_28817ChickenBridge.scm",(void*)f_28817},
{"f_28789ChickenBridge.scm",(void*)f_28789},
{"f_28737ChickenBridge.scm",(void*)f_28737},
{"f_28754ChickenBridge.scm",(void*)f_28754},
{"f_28770ChickenBridge.scm",(void*)f_28770},
{"f_28748ChickenBridge.scm",(void*)f_28748},
{"f_28731ChickenBridge.scm",(void*)f_28731},
{"f_18250ChickenBridge.scm",(void*)f_18250},
{"f_28655ChickenBridge.scm",(void*)f_28655},
{"f_18253ChickenBridge.scm",(void*)f_18253},
{"f_28631ChickenBridge.scm",(void*)f_28631},
{"f_28643ChickenBridge.scm",(void*)f_28643},
{"f_28639ChickenBridge.scm",(void*)f_28639},
{"f_28617ChickenBridge.scm",(void*)f_28617},
{"f_28625ChickenBridge.scm",(void*)f_28625},
{"f_28611ChickenBridge.scm",(void*)f_28611},
{"f_18256ChickenBridge.scm",(void*)f_18256},
{"f_28603ChickenBridge.scm",(void*)f_28603},
{"f_22046ChickenBridge.scm",(void*)f_22046},
{"f_22049ChickenBridge.scm",(void*)f_22049},
{"f_22215ChickenBridge.scm",(void*)f_22215},
{"f_22211ChickenBridge.scm",(void*)f_22211},
{"f_22201ChickenBridge.scm",(void*)f_22201},
{"f_22056ChickenBridge.scm",(void*)f_22056},
{"f_22060ChickenBridge.scm",(void*)f_22060},
{"f_22063ChickenBridge.scm",(void*)f_22063},
{"f_22074ChickenBridge.scm",(void*)f_22074},
{"f_22082ChickenBridge.scm",(void*)f_22082},
{"f_22154ChickenBridge.scm",(void*)f_22154},
{"f_22162ChickenBridge.scm",(void*)f_22162},
{"f_22158ChickenBridge.scm",(void*)f_22158},
{"f_22150ChickenBridge.scm",(void*)f_22150},
{"f_22146ChickenBridge.scm",(void*)f_22146},
{"f_22118ChickenBridge.scm",(void*)f_22118},
{"f_22114ChickenBridge.scm",(void*)f_22114},
{"f_22078ChickenBridge.scm",(void*)f_22078},
{"f_18693ChickenBridge.scm",(void*)f_18693},
{"f_28589ChickenBridge.scm",(void*)f_28589},
{"f_18696ChickenBridge.scm",(void*)f_18696},
{"f_28560ChickenBridge.scm",(void*)f_28560},
{"f_28564ChickenBridge.scm",(void*)f_28564},
{"f_18699ChickenBridge.scm",(void*)f_18699},
{"f_28557ChickenBridge.scm",(void*)f_28557},
{"f_18702ChickenBridge.scm",(void*)f_18702},
{"f_28415ChickenBridge.scm",(void*)f_28415},
{"f_22228ChickenBridge.scm",(void*)f_22228},
{"f_22360ChickenBridge.scm",(void*)f_22360},
{"f_22231ChickenBridge.scm",(void*)f_22231},
{"f_22242ChickenBridge.scm",(void*)f_22242},
{"f_22250ChickenBridge.scm",(void*)f_22250},
{"f_22274ChickenBridge.scm",(void*)f_22274},
{"f_22277ChickenBridge.scm",(void*)f_22277},
{"f_22285ChickenBridge.scm",(void*)f_22285},
{"f_22293ChickenBridge.scm",(void*)f_22293},
{"f_22313ChickenBridge.scm",(void*)f_22313},
{"f_22309ChickenBridge.scm",(void*)f_22309},
{"f_22289ChickenBridge.scm",(void*)f_22289},
{"f_22281ChickenBridge.scm",(void*)f_22281},
{"f_22270ChickenBridge.scm",(void*)f_22270},
{"f_22246ChickenBridge.scm",(void*)f_22246},
{"f_22222ChickenBridge.scm",(void*)f_22222},
{"f_27144ChickenBridge.scm",(void*)f_27144},
{"f_27147ChickenBridge.scm",(void*)f_27147},
{"f_27150ChickenBridge.scm",(void*)f_27150},
{"f_27153ChickenBridge.scm",(void*)f_27153},
{"f_27156ChickenBridge.scm",(void*)f_27156},
{"f_27159ChickenBridge.scm",(void*)f_27159},
{"f_27162ChickenBridge.scm",(void*)f_27162},
{"f_27165ChickenBridge.scm",(void*)f_27165},
{"f_27168ChickenBridge.scm",(void*)f_27168},
{"f_27171ChickenBridge.scm",(void*)f_27171},
{"f_27174ChickenBridge.scm",(void*)f_27174},
{"f_27299ChickenBridge.scm",(void*)f_27299},
{"f_27302ChickenBridge.scm",(void*)f_27302},
{"f_27305ChickenBridge.scm",(void*)f_27305},
{"f_28409ChickenBridge.scm",(void*)f_28409},
{"f_27963ChickenBridge.scm",(void*)f_27963},
{"f_27966ChickenBridge.scm",(void*)f_27966},
{"f_28244ChickenBridge.scm",(void*)f_28244},
{"f_28352ChickenBridge.scm",(void*)f_28352},
{"f_28264ChickenBridge.scm",(void*)f_28264},
{"f_28273ChickenBridge.scm",(void*)f_28273},
{"f_28277ChickenBridge.scm",(void*)f_28277},
{"f_28281ChickenBridge.scm",(void*)f_28281},
{"f_28289ChickenBridge.scm",(void*)f_28289},
{"f_28285ChickenBridge.scm",(void*)f_28285},
{"f_28254ChickenBridge.scm",(void*)f_28254},
{"f_27969ChickenBridge.scm",(void*)f_27969},
{"f_27972ChickenBridge.scm",(void*)f_27972},
{"f_27975ChickenBridge.scm",(void*)f_27975},
{"f_27978ChickenBridge.scm",(void*)f_27978},
{"f_27981ChickenBridge.scm",(void*)f_27981},
{"f_28238ChickenBridge.scm",(void*)f_28238},
{"f_28137ChickenBridge.scm",(void*)f_28137},
{"f_28144ChickenBridge.scm",(void*)f_28144},
{"f_28146ChickenBridge.scm",(void*)f_28146},
{"f_28218ChickenBridge.scm",(void*)f_28218},
{"f_28170ChickenBridge.scm",(void*)f_28170},
{"f_28173ChickenBridge.scm",(void*)f_28173},
{"f_28194ChickenBridge.scm",(void*)f_28194},
{"f_28160ChickenBridge.scm",(void*)f_28160},
{"f_27984ChickenBridge.scm",(void*)f_27984},
{"f_28126ChickenBridge.scm",(void*)f_28126},
{"f_28114ChickenBridge.scm",(void*)f_28114},
{"f_28110ChickenBridge.scm",(void*)f_28110},
{"f_27991ChickenBridge.scm",(void*)f_27991},
{"f_27948ChickenBridge.scm",(void*)f_27948},
{"f_28407ChickenBridge.scm",(void*)f_28407},
{"f_27938ChickenBridge.scm",(void*)f_27938},
{"f_27601ChickenBridge.scm",(void*)f_27601},
{"f_27942ChickenBridge.scm",(void*)f_27942},
{"f_27880ChickenBridge.scm",(void*)f_27880},
{"f_27898ChickenBridge.scm",(void*)f_27898},
{"f_27908ChickenBridge.scm",(void*)f_27908},
{"f_27884ChickenBridge.scm",(void*)f_27884},
{"f_27871ChickenBridge.scm",(void*)f_27871},
{"f_27579ChickenBridge.scm",(void*)f_27579},
{"f_27875ChickenBridge.scm",(void*)f_27875},
{"f_27865ChickenBridge.scm",(void*)f_27865},
{"f_27561ChickenBridge.scm",(void*)f_27561},
{"f_27856ChickenBridge.scm",(void*)f_27856},
{"f_27570ChickenBridge.scm",(void*)f_27570},
{"f_27860ChickenBridge.scm",(void*)f_27860},
{"f_27793ChickenBridge.scm",(void*)f_27793},
{"f_27818ChickenBridge.scm",(void*)f_27818},
{"f_27526ChickenBridge.scm",(void*)f_27526},
{"f_27806ChickenBridge.scm",(void*)f_27806},
{"f_27625ChickenBridge.scm",(void*)f_27625},
{"f_27744ChickenBridge.scm",(void*)f_27744},
{"f_27739ChickenBridge.scm",(void*)f_27739},
{"f_27627ChickenBridge.scm",(void*)f_27627},
{"f_27734ChickenBridge.scm",(void*)f_27734},
{"f_27738ChickenBridge.scm",(void*)f_27738},
{"f_27730ChickenBridge.scm",(void*)f_27730},
{"f_27698ChickenBridge.scm",(void*)f_27698},
{"f_27723ChickenBridge.scm",(void*)f_27723},
{"f_27727ChickenBridge.scm",(void*)f_27727},
{"f_27708ChickenBridge.scm",(void*)f_27708},
{"f_27687ChickenBridge.scm",(void*)f_27687},
{"f_27657ChickenBridge.scm",(void*)f_27657},
{"f_27629ChickenBridge.scm",(void*)f_27629},
{"f_27606ChickenBridge.scm",(void*)f_27606},
{"f_27611ChickenBridge.scm",(void*)f_27611},
{"f_27616ChickenBridge.scm",(void*)f_27616},
{"f_27584ChickenBridge.scm",(void*)f_27584},
{"f_27588ChickenBridge.scm",(void*)f_27588},
{"f_27540ChickenBridge.scm",(void*)f_27540},
{"f_27544ChickenBridge.scm",(void*)f_27544},
{"f_27531ChickenBridge.scm",(void*)f_27531},
{"f_27535ChickenBridge.scm",(void*)f_27535},
{"f_27519ChickenBridge.scm",(void*)f_27519},
{"f_27516ChickenBridge.scm",(void*)f_27516},
{"f_27502ChickenBridge.scm",(void*)f_27502},
{"f_27507ChickenBridge.scm",(void*)f_27507},
{"f_27488ChickenBridge.scm",(void*)f_27488},
{"f_27493ChickenBridge.scm",(void*)f_27493},
{"f_27307ChickenBridge.scm",(void*)f_27307},
{"f_27368ChickenBridge.scm",(void*)f_27368},
{"f_27370ChickenBridge.scm",(void*)f_27370},
{"f_27396ChickenBridge.scm",(void*)f_27396},
{"f_27436ChickenBridge.scm",(void*)f_27436},
{"f_27478ChickenBridge.scm",(void*)f_27478},
{"f_27448ChickenBridge.scm",(void*)f_27448},
{"f_27433ChickenBridge.scm",(void*)f_27433},
{"f_27354ChickenBridge.scm",(void*)f_27354},
{"f_27319ChickenBridge.scm",(void*)f_27319},
{"f_27346ChickenBridge.scm",(void*)f_27346},
{"f_27327ChickenBridge.scm",(void*)f_27327},
{"f_27334ChickenBridge.scm",(void*)f_27334},
{"f_27338ChickenBridge.scm",(void*)f_27338},
{"f_27342ChickenBridge.scm",(void*)f_27342},
{"f_27416ChickenBridge.scm",(void*)f_27416},
{"f_27394ChickenBridge.scm",(void*)f_27394},
{"f_27380ChickenBridge.scm",(void*)f_27380},
{"f_27383ChickenBridge.scm",(void*)f_27383},
{"f_27361ChickenBridge.scm",(void*)f_27361},
{"f_27290ChickenBridge.scm",(void*)f_27290},
{"f_27295ChickenBridge.scm",(void*)f_27295},
{"f_27233ChickenBridge.scm",(void*)f_27233},
{"f_27266ChickenBridge.scm",(void*)f_27266},
{"f_27246ChickenBridge.scm",(void*)f_27246},
{"f_27254ChickenBridge.scm",(void*)f_27254},
{"f_27237ChickenBridge.scm",(void*)f_27237},
{"f_27176ChickenBridge.scm",(void*)f_27176},
{"f_27209ChickenBridge.scm",(void*)f_27209},
{"f_27189ChickenBridge.scm",(void*)f_27189},
{"f_27197ChickenBridge.scm",(void*)f_27197},
{"f_27180ChickenBridge.scm",(void*)f_27180},
{"f_27086ChickenBridge.scm",(void*)f_27086},
{"f_27140ChickenBridge.scm",(void*)f_27140},
{"f_27135ChickenBridge.scm",(void*)f_27135},
{"f_27098ChickenBridge.scm",(void*)f_27098},
{"f_27104ChickenBridge.scm",(void*)f_27104},
{"f_27130ChickenBridge.scm",(void*)f_27130},
{"f_27134ChickenBridge.scm",(void*)f_27134},
{"f_27110ChickenBridge.scm",(void*)f_27110},
{"f_27128ChickenBridge.scm",(void*)f_27128},
{"f_27125ChickenBridge.scm",(void*)f_27125},
{"f_27121ChickenBridge.scm",(void*)f_27121},
{"f_27114ChickenBridge.scm",(void*)f_27114},
{"f_27071ChickenBridge.scm",(void*)f_27071},
{"f_27076ChickenBridge.scm",(void*)f_27076},
{"f_27043ChickenBridge.scm",(void*)f_27043},
{"f_27048ChickenBridge.scm",(void*)f_27048},
{"f_27015ChickenBridge.scm",(void*)f_27015},
{"f_27020ChickenBridge.scm",(void*)f_27020},
{"f_26987ChickenBridge.scm",(void*)f_26987},
{"f_26992ChickenBridge.scm",(void*)f_26992},
{"f_26959ChickenBridge.scm",(void*)f_26959},
{"f_26964ChickenBridge.scm",(void*)f_26964},
{"f_26931ChickenBridge.scm",(void*)f_26931},
{"f_26936ChickenBridge.scm",(void*)f_26936},
{"f_26903ChickenBridge.scm",(void*)f_26903},
{"f_26908ChickenBridge.scm",(void*)f_26908},
{"f_26875ChickenBridge.scm",(void*)f_26875},
{"f_26880ChickenBridge.scm",(void*)f_26880},
{"f_26847ChickenBridge.scm",(void*)f_26847},
{"f_26852ChickenBridge.scm",(void*)f_26852},
{"f_26819ChickenBridge.scm",(void*)f_26819},
{"f_26824ChickenBridge.scm",(void*)f_26824},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26801ChickenBridge.scm",(void*)f_26801},
{"f_26800ChickenBridge.scm",(void*)f_26800},
{"f_26777ChickenBridge.scm",(void*)f_26777},
{"f_26782ChickenBridge.scm",(void*)f_26782},
{"f_26722ChickenBridge.scm",(void*)f_26722},
{"f_26729ChickenBridge.scm",(void*)f_26729},
{"f_26732ChickenBridge.scm",(void*)f_26732},
{"f_26756ChickenBridge.scm",(void*)f_26756},
{"f_26736ChickenBridge.scm",(void*)f_26736},
{"f_26726ChickenBridge.scm",(void*)f_26726},
{"f_26675ChickenBridge.scm",(void*)f_26675},
{"f_26682ChickenBridge.scm",(void*)f_26682},
{"f_26685ChickenBridge.scm",(void*)f_26685},
{"f_26705ChickenBridge.scm",(void*)f_26705},
{"f_26689ChickenBridge.scm",(void*)f_26689},
{"f_26652ChickenBridge.scm",(void*)f_26652},
{"f_26657ChickenBridge.scm",(void*)f_26657},
{"f_26656ChickenBridge.scm",(void*)f_26656},
{"f_26633ChickenBridge.scm",(void*)f_26633},
{"f_26638ChickenBridge.scm",(void*)f_26638},
{"f_26610ChickenBridge.scm",(void*)f_26610},
{"f_26615ChickenBridge.scm",(void*)f_26615},
{"f_26614ChickenBridge.scm",(void*)f_26614},
{"f_26591ChickenBridge.scm",(void*)f_26591},
{"f_26596ChickenBridge.scm",(void*)f_26596},
{"f_26572ChickenBridge.scm",(void*)f_26572},
{"f_26577ChickenBridge.scm",(void*)f_26577},
{"f_26576ChickenBridge.scm",(void*)f_26576},
{"f_26557ChickenBridge.scm",(void*)f_26557},
{"f_26562ChickenBridge.scm",(void*)f_26562},
{"f_26538ChickenBridge.scm",(void*)f_26538},
{"f_26543ChickenBridge.scm",(void*)f_26543},
{"f_26542ChickenBridge.scm",(void*)f_26542},
{"f_26523ChickenBridge.scm",(void*)f_26523},
{"f_26528ChickenBridge.scm",(void*)f_26528},
{"f_26508ChickenBridge.scm",(void*)f_26508},
{"f_26513ChickenBridge.scm",(void*)f_26513},
{"f_26490ChickenBridge.scm",(void*)f_26490},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26494ChickenBridge.scm",(void*)f_26494},
{"f_26020ChickenBridge.scm",(void*)f_26020},
{"f_26448ChickenBridge.scm",(void*)f_26448},
{"f_26463ChickenBridge.scm",(void*)f_26463},
{"f_26455ChickenBridge.scm",(void*)f_26455},
{"f_26419ChickenBridge.scm",(void*)f_26419},
{"f_26423ChickenBridge.scm",(void*)f_26423},
{"f_26384ChickenBridge.scm",(void*)f_26384},
{"f_26388ChickenBridge.scm",(void*)f_26388},
{"f_26349ChickenBridge.scm",(void*)f_26349},
{"f_26353ChickenBridge.scm",(void*)f_26353},
{"f_26024ChickenBridge.scm",(void*)f_26024},
{"f_26313ChickenBridge.scm",(void*)f_26313},
{"f_26328ChickenBridge.scm",(void*)f_26328},
{"f_26320ChickenBridge.scm",(void*)f_26320},
{"f_26284ChickenBridge.scm",(void*)f_26284},
{"f_26288ChickenBridge.scm",(void*)f_26288},
{"f_26249ChickenBridge.scm",(void*)f_26249},
{"f_26253ChickenBridge.scm",(void*)f_26253},
{"f_26214ChickenBridge.scm",(void*)f_26214},
{"f_26218ChickenBridge.scm",(void*)f_26218},
{"f_26027ChickenBridge.scm",(void*)f_26027},
{"f_26178ChickenBridge.scm",(void*)f_26178},
{"f_26193ChickenBridge.scm",(void*)f_26193},
{"f_26185ChickenBridge.scm",(void*)f_26185},
{"f_26149ChickenBridge.scm",(void*)f_26149},
{"f_26153ChickenBridge.scm",(void*)f_26153},
{"f_26114ChickenBridge.scm",(void*)f_26114},
{"f_26118ChickenBridge.scm",(void*)f_26118},
{"f_26079ChickenBridge.scm",(void*)f_26079},
{"f_26083ChickenBridge.scm",(void*)f_26083},
{"f_26030ChickenBridge.scm",(void*)f_26030},
{"f_26033ChickenBridge.scm",(void*)f_26033},
{"f_26037ChickenBridge.scm",(void*)f_26037},
{"f_26001ChickenBridge.scm",(void*)f_26001},
{"f_26006ChickenBridge.scm",(void*)f_26006},
{"f_25550ChickenBridge.scm",(void*)f_25550},
{"f_25978ChickenBridge.scm",(void*)f_25978},
{"f_25993ChickenBridge.scm",(void*)f_25993},
{"f_25985ChickenBridge.scm",(void*)f_25985},
{"f_25949ChickenBridge.scm",(void*)f_25949},
{"f_25953ChickenBridge.scm",(void*)f_25953},
{"f_25914ChickenBridge.scm",(void*)f_25914},
{"f_25918ChickenBridge.scm",(void*)f_25918},
{"f_25879ChickenBridge.scm",(void*)f_25879},
{"f_25883ChickenBridge.scm",(void*)f_25883},
{"f_25554ChickenBridge.scm",(void*)f_25554},
{"f_25843ChickenBridge.scm",(void*)f_25843},
{"f_25858ChickenBridge.scm",(void*)f_25858},
{"f_25850ChickenBridge.scm",(void*)f_25850},
{"f_25814ChickenBridge.scm",(void*)f_25814},
{"f_25818ChickenBridge.scm",(void*)f_25818},
{"f_25779ChickenBridge.scm",(void*)f_25779},
{"f_25783ChickenBridge.scm",(void*)f_25783},
{"f_25744ChickenBridge.scm",(void*)f_25744},
{"f_25748ChickenBridge.scm",(void*)f_25748},
{"f_25557ChickenBridge.scm",(void*)f_25557},
{"f_25708ChickenBridge.scm",(void*)f_25708},
{"f_25723ChickenBridge.scm",(void*)f_25723},
{"f_25715ChickenBridge.scm",(void*)f_25715},
{"f_25679ChickenBridge.scm",(void*)f_25679},
{"f_25683ChickenBridge.scm",(void*)f_25683},
{"f_25644ChickenBridge.scm",(void*)f_25644},
{"f_25648ChickenBridge.scm",(void*)f_25648},
{"f_25609ChickenBridge.scm",(void*)f_25609},
{"f_25613ChickenBridge.scm",(void*)f_25613},
{"f_25560ChickenBridge.scm",(void*)f_25560},
{"f_25563ChickenBridge.scm",(void*)f_25563},
{"f_25567ChickenBridge.scm",(void*)f_25567},
{"f_25531ChickenBridge.scm",(void*)f_25531},
{"f_25536ChickenBridge.scm",(void*)f_25536},
{"f_25080ChickenBridge.scm",(void*)f_25080},
{"f_25508ChickenBridge.scm",(void*)f_25508},
{"f_25523ChickenBridge.scm",(void*)f_25523},
{"f_25515ChickenBridge.scm",(void*)f_25515},
{"f_25479ChickenBridge.scm",(void*)f_25479},
{"f_25483ChickenBridge.scm",(void*)f_25483},
{"f_25444ChickenBridge.scm",(void*)f_25444},
{"f_25448ChickenBridge.scm",(void*)f_25448},
{"f_25409ChickenBridge.scm",(void*)f_25409},
{"f_25413ChickenBridge.scm",(void*)f_25413},
{"f_25084ChickenBridge.scm",(void*)f_25084},
{"f_25373ChickenBridge.scm",(void*)f_25373},
{"f_25388ChickenBridge.scm",(void*)f_25388},
{"f_25380ChickenBridge.scm",(void*)f_25380},
{"f_25344ChickenBridge.scm",(void*)f_25344},
{"f_25348ChickenBridge.scm",(void*)f_25348},
{"f_25309ChickenBridge.scm",(void*)f_25309},
{"f_25313ChickenBridge.scm",(void*)f_25313},
{"f_25274ChickenBridge.scm",(void*)f_25274},
{"f_25278ChickenBridge.scm",(void*)f_25278},
{"f_25087ChickenBridge.scm",(void*)f_25087},
{"f_25238ChickenBridge.scm",(void*)f_25238},
{"f_25253ChickenBridge.scm",(void*)f_25253},
{"f_25245ChickenBridge.scm",(void*)f_25245},
{"f_25209ChickenBridge.scm",(void*)f_25209},
{"f_25213ChickenBridge.scm",(void*)f_25213},
{"f_25174ChickenBridge.scm",(void*)f_25174},
{"f_25178ChickenBridge.scm",(void*)f_25178},
{"f_25139ChickenBridge.scm",(void*)f_25139},
{"f_25143ChickenBridge.scm",(void*)f_25143},
{"f_25090ChickenBridge.scm",(void*)f_25090},
{"f_25093ChickenBridge.scm",(void*)f_25093},
{"f_25097ChickenBridge.scm",(void*)f_25097},
{"f_25061ChickenBridge.scm",(void*)f_25061},
{"f_25066ChickenBridge.scm",(void*)f_25066},
{"f_24332ChickenBridge.scm",(void*)f_24332},
{"f_25038ChickenBridge.scm",(void*)f_25038},
{"f_25053ChickenBridge.scm",(void*)f_25053},
{"f_25045ChickenBridge.scm",(void*)f_25045},
{"f_25009ChickenBridge.scm",(void*)f_25009},
{"f_25013ChickenBridge.scm",(void*)f_25013},
{"f_24974ChickenBridge.scm",(void*)f_24974},
{"f_24978ChickenBridge.scm",(void*)f_24978},
{"f_24939ChickenBridge.scm",(void*)f_24939},
{"f_24943ChickenBridge.scm",(void*)f_24943},
{"f_24904ChickenBridge.scm",(void*)f_24904},
{"f_24908ChickenBridge.scm",(void*)f_24908},
{"f_24336ChickenBridge.scm",(void*)f_24336},
{"f_24868ChickenBridge.scm",(void*)f_24868},
{"f_24883ChickenBridge.scm",(void*)f_24883},
{"f_24875ChickenBridge.scm",(void*)f_24875},
{"f_24839ChickenBridge.scm",(void*)f_24839},
{"f_24843ChickenBridge.scm",(void*)f_24843},
{"f_24804ChickenBridge.scm",(void*)f_24804},
{"f_24808ChickenBridge.scm",(void*)f_24808},
{"f_24769ChickenBridge.scm",(void*)f_24769},
{"f_24773ChickenBridge.scm",(void*)f_24773},
{"f_24734ChickenBridge.scm",(void*)f_24734},
{"f_24738ChickenBridge.scm",(void*)f_24738},
{"f_24339ChickenBridge.scm",(void*)f_24339},
{"f_24698ChickenBridge.scm",(void*)f_24698},
{"f_24713ChickenBridge.scm",(void*)f_24713},
{"f_24705ChickenBridge.scm",(void*)f_24705},
{"f_24669ChickenBridge.scm",(void*)f_24669},
{"f_24673ChickenBridge.scm",(void*)f_24673},
{"f_24634ChickenBridge.scm",(void*)f_24634},
{"f_24638ChickenBridge.scm",(void*)f_24638},
{"f_24599ChickenBridge.scm",(void*)f_24599},
{"f_24603ChickenBridge.scm",(void*)f_24603},
{"f_24564ChickenBridge.scm",(void*)f_24564},
{"f_24568ChickenBridge.scm",(void*)f_24568},
{"f_24342ChickenBridge.scm",(void*)f_24342},
{"f_24528ChickenBridge.scm",(void*)f_24528},
{"f_24543ChickenBridge.scm",(void*)f_24543},
{"f_24535ChickenBridge.scm",(void*)f_24535},
{"f_24499ChickenBridge.scm",(void*)f_24499},
{"f_24503ChickenBridge.scm",(void*)f_24503},
{"f_24464ChickenBridge.scm",(void*)f_24464},
{"f_24468ChickenBridge.scm",(void*)f_24468},
{"f_24429ChickenBridge.scm",(void*)f_24429},
{"f_24433ChickenBridge.scm",(void*)f_24433},
{"f_24394ChickenBridge.scm",(void*)f_24394},
{"f_24398ChickenBridge.scm",(void*)f_24398},
{"f_24345ChickenBridge.scm",(void*)f_24345},
{"f_24348ChickenBridge.scm",(void*)f_24348},
{"f_24352ChickenBridge.scm",(void*)f_24352},
{"f_24313ChickenBridge.scm",(void*)f_24313},
{"f_24318ChickenBridge.scm",(void*)f_24318},
{"f_23584ChickenBridge.scm",(void*)f_23584},
{"f_24290ChickenBridge.scm",(void*)f_24290},
{"f_24305ChickenBridge.scm",(void*)f_24305},
{"f_24297ChickenBridge.scm",(void*)f_24297},
{"f_24261ChickenBridge.scm",(void*)f_24261},
{"f_24265ChickenBridge.scm",(void*)f_24265},
{"f_24226ChickenBridge.scm",(void*)f_24226},
{"f_24230ChickenBridge.scm",(void*)f_24230},
{"f_24191ChickenBridge.scm",(void*)f_24191},
{"f_24195ChickenBridge.scm",(void*)f_24195},
{"f_24156ChickenBridge.scm",(void*)f_24156},
{"f_24160ChickenBridge.scm",(void*)f_24160},
{"f_23588ChickenBridge.scm",(void*)f_23588},
{"f_24120ChickenBridge.scm",(void*)f_24120},
{"f_24135ChickenBridge.scm",(void*)f_24135},
{"f_24127ChickenBridge.scm",(void*)f_24127},
{"f_24091ChickenBridge.scm",(void*)f_24091},
{"f_24095ChickenBridge.scm",(void*)f_24095},
{"f_24056ChickenBridge.scm",(void*)f_24056},
{"f_24060ChickenBridge.scm",(void*)f_24060},
{"f_24021ChickenBridge.scm",(void*)f_24021},
{"f_24025ChickenBridge.scm",(void*)f_24025},
{"f_23986ChickenBridge.scm",(void*)f_23986},
{"f_23990ChickenBridge.scm",(void*)f_23990},
{"f_23591ChickenBridge.scm",(void*)f_23591},
{"f_23950ChickenBridge.scm",(void*)f_23950},
{"f_23965ChickenBridge.scm",(void*)f_23965},
{"f_23957ChickenBridge.scm",(void*)f_23957},
{"f_23921ChickenBridge.scm",(void*)f_23921},
{"f_23925ChickenBridge.scm",(void*)f_23925},
{"f_23886ChickenBridge.scm",(void*)f_23886},
{"f_23890ChickenBridge.scm",(void*)f_23890},
{"f_23851ChickenBridge.scm",(void*)f_23851},
{"f_23855ChickenBridge.scm",(void*)f_23855},
{"f_23816ChickenBridge.scm",(void*)f_23816},
{"f_23820ChickenBridge.scm",(void*)f_23820},
{"f_23594ChickenBridge.scm",(void*)f_23594},
{"f_23780ChickenBridge.scm",(void*)f_23780},
{"f_23795ChickenBridge.scm",(void*)f_23795},
{"f_23787ChickenBridge.scm",(void*)f_23787},
{"f_23751ChickenBridge.scm",(void*)f_23751},
{"f_23755ChickenBridge.scm",(void*)f_23755},
{"f_23716ChickenBridge.scm",(void*)f_23716},
{"f_23720ChickenBridge.scm",(void*)f_23720},
{"f_23681ChickenBridge.scm",(void*)f_23681},
{"f_23685ChickenBridge.scm",(void*)f_23685},
{"f_23646ChickenBridge.scm",(void*)f_23646},
{"f_23650ChickenBridge.scm",(void*)f_23650},
{"f_23597ChickenBridge.scm",(void*)f_23597},
{"f_23600ChickenBridge.scm",(void*)f_23600},
{"f_23604ChickenBridge.scm",(void*)f_23604},
{"f_23565ChickenBridge.scm",(void*)f_23565},
{"f_23570ChickenBridge.scm",(void*)f_23570},
{"f_23114ChickenBridge.scm",(void*)f_23114},
{"f_23542ChickenBridge.scm",(void*)f_23542},
{"f_23557ChickenBridge.scm",(void*)f_23557},
{"f_23549ChickenBridge.scm",(void*)f_23549},
{"f_23513ChickenBridge.scm",(void*)f_23513},
{"f_23517ChickenBridge.scm",(void*)f_23517},
{"f_23478ChickenBridge.scm",(void*)f_23478},
{"f_23482ChickenBridge.scm",(void*)f_23482},
{"f_23443ChickenBridge.scm",(void*)f_23443},
{"f_23447ChickenBridge.scm",(void*)f_23447},
{"f_23118ChickenBridge.scm",(void*)f_23118},
{"f_23407ChickenBridge.scm",(void*)f_23407},
{"f_23422ChickenBridge.scm",(void*)f_23422},
{"f_23414ChickenBridge.scm",(void*)f_23414},
{"f_23378ChickenBridge.scm",(void*)f_23378},
{"f_23382ChickenBridge.scm",(void*)f_23382},
{"f_23343ChickenBridge.scm",(void*)f_23343},
{"f_23347ChickenBridge.scm",(void*)f_23347},
{"f_23308ChickenBridge.scm",(void*)f_23308},
{"f_23312ChickenBridge.scm",(void*)f_23312},
{"f_23121ChickenBridge.scm",(void*)f_23121},
{"f_23272ChickenBridge.scm",(void*)f_23272},
{"f_23287ChickenBridge.scm",(void*)f_23287},
{"f_23279ChickenBridge.scm",(void*)f_23279},
{"f_23243ChickenBridge.scm",(void*)f_23243},
{"f_23247ChickenBridge.scm",(void*)f_23247},
{"f_23208ChickenBridge.scm",(void*)f_23208},
{"f_23212ChickenBridge.scm",(void*)f_23212},
{"f_23173ChickenBridge.scm",(void*)f_23173},
{"f_23177ChickenBridge.scm",(void*)f_23177},
{"f_23124ChickenBridge.scm",(void*)f_23124},
{"f_23127ChickenBridge.scm",(void*)f_23127},
{"f_23131ChickenBridge.scm",(void*)f_23131},
{"f_23095ChickenBridge.scm",(void*)f_23095},
{"f_23100ChickenBridge.scm",(void*)f_23100},
{"f_22366ChickenBridge.scm",(void*)f_22366},
{"f_23072ChickenBridge.scm",(void*)f_23072},
{"f_23087ChickenBridge.scm",(void*)f_23087},
{"f_23079ChickenBridge.scm",(void*)f_23079},
{"f_23043ChickenBridge.scm",(void*)f_23043},
{"f_23047ChickenBridge.scm",(void*)f_23047},
{"f_23008ChickenBridge.scm",(void*)f_23008},
{"f_23012ChickenBridge.scm",(void*)f_23012},
{"f_22973ChickenBridge.scm",(void*)f_22973},
{"f_22977ChickenBridge.scm",(void*)f_22977},
{"f_22938ChickenBridge.scm",(void*)f_22938},
{"f_22942ChickenBridge.scm",(void*)f_22942},
{"f_22370ChickenBridge.scm",(void*)f_22370},
{"f_22902ChickenBridge.scm",(void*)f_22902},
{"f_22917ChickenBridge.scm",(void*)f_22917},
{"f_22909ChickenBridge.scm",(void*)f_22909},
{"f_22873ChickenBridge.scm",(void*)f_22873},
{"f_22877ChickenBridge.scm",(void*)f_22877},
{"f_22838ChickenBridge.scm",(void*)f_22838},
{"f_22842ChickenBridge.scm",(void*)f_22842},
{"f_22803ChickenBridge.scm",(void*)f_22803},
{"f_22807ChickenBridge.scm",(void*)f_22807},
{"f_22768ChickenBridge.scm",(void*)f_22768},
{"f_22772ChickenBridge.scm",(void*)f_22772},
{"f_22373ChickenBridge.scm",(void*)f_22373},
{"f_22732ChickenBridge.scm",(void*)f_22732},
{"f_22747ChickenBridge.scm",(void*)f_22747},
{"f_22739ChickenBridge.scm",(void*)f_22739},
{"f_22703ChickenBridge.scm",(void*)f_22703},
{"f_22707ChickenBridge.scm",(void*)f_22707},
{"f_22668ChickenBridge.scm",(void*)f_22668},
{"f_22672ChickenBridge.scm",(void*)f_22672},
{"f_22633ChickenBridge.scm",(void*)f_22633},
{"f_22637ChickenBridge.scm",(void*)f_22637},
{"f_22598ChickenBridge.scm",(void*)f_22598},
{"f_22602ChickenBridge.scm",(void*)f_22602},
{"f_22376ChickenBridge.scm",(void*)f_22376},
{"f_22562ChickenBridge.scm",(void*)f_22562},
{"f_22577ChickenBridge.scm",(void*)f_22577},
{"f_22569ChickenBridge.scm",(void*)f_22569},
{"f_22533ChickenBridge.scm",(void*)f_22533},
{"f_22537ChickenBridge.scm",(void*)f_22537},
{"f_22498ChickenBridge.scm",(void*)f_22498},
{"f_22502ChickenBridge.scm",(void*)f_22502},
{"f_22463ChickenBridge.scm",(void*)f_22463},
{"f_22467ChickenBridge.scm",(void*)f_22467},
{"f_22428ChickenBridge.scm",(void*)f_22428},
{"f_22432ChickenBridge.scm",(void*)f_22432},
{"f_22379ChickenBridge.scm",(void*)f_22379},
{"f_22382ChickenBridge.scm",(void*)f_22382},
{"f_22386ChickenBridge.scm",(void*)f_22386},
{"f_22028ChickenBridge.scm",(void*)f_22028},
{"f_21868ChickenBridge.scm",(void*)f_21868},
{"f_21903ChickenBridge.scm",(void*)f_21903},
{"f_21913ChickenBridge.scm",(void*)f_21913},
{"f_21917ChickenBridge.scm",(void*)f_21917},
{"f_21920ChickenBridge.scm",(void*)f_21920},
{"f_21981ChickenBridge.scm",(void*)f_21981},
{"f_21972ChickenBridge.scm",(void*)f_21972},
{"f_21923ChickenBridge.scm",(void*)f_21923},
{"f_21942ChickenBridge.scm",(void*)f_21942},
{"f_21949ChickenBridge.scm",(void*)f_21949},
{"f_21926ChickenBridge.scm",(void*)f_21926},
{"f_21932ChickenBridge.scm",(void*)f_21932},
{"f_21901ChickenBridge.scm",(void*)f_21901},
{"f_21876ChickenBridge.scm",(void*)f_21876},
{"f_21875ChickenBridge.scm",(void*)f_21875},
{"f_22036ChickenBridge.scm",(void*)f_22036},
{"f_21614ChickenBridge.scm",(void*)f_21614},
{"f_21636ChickenBridge.scm",(void*)f_21636},
{"f_21651ChickenBridge.scm",(void*)f_21651},
{"f_21654ChickenBridge.scm",(void*)f_21654},
{"f_21830ChickenBridge.scm",(void*)f_21830},
{"f_21824ChickenBridge.scm",(void*)f_21824},
{"f_21657ChickenBridge.scm",(void*)f_21657},
{"f_21806ChickenBridge.scm",(void*)f_21806},
{"f_21660ChickenBridge.scm",(void*)f_21660},
{"f_21663ChickenBridge.scm",(void*)f_21663},
{"f_21799ChickenBridge.scm",(void*)f_21799},
{"f_21787ChickenBridge.scm",(void*)f_21787},
{"f_21683ChickenBridge.scm",(void*)f_21683},
{"f_21690ChickenBridge.scm",(void*)f_21690},
{"f_21760ChickenBridge.scm",(void*)f_21760},
{"f_21746ChickenBridge.scm",(void*)f_21746},
{"f_21754ChickenBridge.scm",(void*)f_21754},
{"f_21693ChickenBridge.scm",(void*)f_21693},
{"f_21732ChickenBridge.scm",(void*)f_21732},
{"f_21696ChickenBridge.scm",(void*)f_21696},
{"f_21725ChickenBridge.scm",(void*)f_21725},
{"f_21702ChickenBridge.scm",(void*)f_21702},
{"f_21705ChickenBridge.scm",(void*)f_21705},
{"f_21709ChickenBridge.scm",(void*)f_21709},
{"f_21670ChickenBridge.scm",(void*)f_21670},
{"f_21673ChickenBridge.scm",(void*)f_21673},
{"f_21483ChickenBridge.scm",(void*)f_21483},
{"f_21492ChickenBridge.scm",(void*)f_21492},
{"f_21440ChickenBridge.scm",(void*)f_21440},
{"f_21446ChickenBridge.scm",(void*)f_21446},
{"f_21509ChickenBridge.scm",(void*)f_21509},
{"f_21595ChickenBridge.scm",(void*)f_21595},
{"f_21582ChickenBridge.scm",(void*)f_21582},
{"f_21590ChickenBridge.scm",(void*)f_21590},
{"f_21512ChickenBridge.scm",(void*)f_21512},
{"f_21516ChickenBridge.scm",(void*)f_21516},
{"f_21559ChickenBridge.scm",(void*)f_21559},
{"f_21521ChickenBridge.scm",(void*)f_21521},
{"f_21487ChickenBridge.scm",(void*)f_21487},
{"f_21382ChickenBridge.scm",(void*)f_21382},
{"f_21389ChickenBridge.scm",(void*)f_21389},
{"f_21420ChickenBridge.scm",(void*)f_21420},
{"f_21416ChickenBridge.scm",(void*)f_21416},
{"f_21408ChickenBridge.scm",(void*)f_21408},
{"f_21291ChickenBridge.scm",(void*)f_21291},
{"f_21298ChickenBridge.scm",(void*)f_21298},
{"f_21366ChickenBridge.scm",(void*)f_21366},
{"f_21309ChickenBridge.scm",(void*)f_21309},
{"f_21336ChickenBridge.scm",(void*)f_21336},
{"f_21320ChickenBridge.scm",(void*)f_21320},
{"f_21225ChickenBridge.scm",(void*)f_21225},
{"f_21236ChickenBridge.scm",(void*)f_21236},
{"f_21239ChickenBridge.scm",(void*)f_21239},
{"f_21246ChickenBridge.scm",(void*)f_21246},
{"f_21219ChickenBridge.scm",(void*)f_21219},
{"f_20673ChickenBridge.scm",(void*)f_20673},
{"f_20704ChickenBridge.scm",(void*)f_20704},
{"f_21168ChickenBridge.scm",(void*)f_21168},
{"f_21174ChickenBridge.scm",(void*)f_21174},
{"f_20715ChickenBridge.scm",(void*)f_20715},
{"f_20600ChickenBridge.scm",(void*)f_20600},
{"f_20625ChickenBridge.scm",(void*)f_20625},
{"f_20560ChickenBridge.scm",(void*)f_20560},
{"f_20573ChickenBridge.scm",(void*)f_20573},
{"f_20614ChickenBridge.scm",(void*)f_20614},
{"f_20719ChickenBridge.scm",(void*)f_20719},
{"f_21156ChickenBridge.scm",(void*)f_21156},
{"f_21152ChickenBridge.scm",(void*)f_21152},
{"f_21148ChickenBridge.scm",(void*)f_21148},
{"f_20722ChickenBridge.scm",(void*)f_20722},
{"f_20942ChickenBridge.scm",(void*)f_20942},
{"f_21051ChickenBridge.scm",(void*)f_21051},
{"f_21116ChickenBridge.scm",(void*)f_21116},
{"f_21058ChickenBridge.scm",(void*)f_21058},
{"f_21062ChickenBridge.scm",(void*)f_21062},
{"f_21066ChickenBridge.scm",(void*)f_21066},
{"f_21108ChickenBridge.scm",(void*)f_21108},
{"f_21104ChickenBridge.scm",(void*)f_21104},
{"f_21082ChickenBridge.scm",(void*)f_21082},
{"f_20945ChickenBridge.scm",(void*)f_20945},
{"f_20948ChickenBridge.scm",(void*)f_20948},
{"f_20847ChickenBridge.scm",(void*)f_20847},
{"f_20930ChickenBridge.scm",(void*)f_20930},
{"f_20897ChickenBridge.scm",(void*)f_20897},
{"f_20923ChickenBridge.scm",(void*)f_20923},
{"f_20905ChickenBridge.scm",(void*)f_20905},
{"f_20853ChickenBridge.scm",(void*)f_20853},
{"f_20893ChickenBridge.scm",(void*)f_20893},
{"f_20835ChickenBridge.scm",(void*)f_20835},
{"f_20806ChickenBridge.scm",(void*)f_20806},
{"f_20828ChickenBridge.scm",(void*)f_20828},
{"f_20814ChickenBridge.scm",(void*)f_20814},
{"f_20768ChickenBridge.scm",(void*)f_20768},
{"f_20725ChickenBridge.scm",(void*)f_20725},
{"f_20736ChickenBridge.scm",(void*)f_20736},
{"f_20740ChickenBridge.scm",(void*)f_20740},
{"f_20744ChickenBridge.scm",(void*)f_20744},
{"f_20748ChickenBridge.scm",(void*)f_20748},
{"f_20732ChickenBridge.scm",(void*)f_20732},
{"f_20692ChickenBridge.scm",(void*)f_20692},
{"f_20687ChickenBridge.scm",(void*)f_20687},
{"f_20682ChickenBridge.scm",(void*)f_20682},
{"f_20514ChickenBridge.scm",(void*)f_20514},
{"f_20525ChickenBridge.scm",(void*)f_20525},
{"f_20540ChickenBridge.scm",(void*)f_20540},
{"f_20476ChickenBridge.scm",(void*)f_20476},
{"f_20487ChickenBridge.scm",(void*)f_20487},
{"f_20502ChickenBridge.scm",(void*)f_20502},
{"f_20409ChickenBridge.scm",(void*)f_20409},
{"f_20429ChickenBridge.scm",(void*)f_20429},
{"f_20439ChickenBridge.scm",(void*)f_20439},
{"f_20452ChickenBridge.scm",(void*)f_20452},
{"f_20420ChickenBridge.scm",(void*)f_20420},
{"f_20427ChickenBridge.scm",(void*)f_20427},
{"f_20216ChickenBridge.scm",(void*)f_20216},
{"f_20276ChickenBridge.scm",(void*)f_20276},
{"f_20286ChickenBridge.scm",(void*)f_20286},
{"f_20400ChickenBridge.scm",(void*)f_20400},
{"f_20365ChickenBridge.scm",(void*)f_20365},
{"f_20357ChickenBridge.scm",(void*)f_20357},
{"f_20328ChickenBridge.scm",(void*)f_20328},
{"f_20306ChickenBridge.scm",(void*)f_20306},
{"f_20309ChickenBridge.scm",(void*)f_20309},
{"f_20297ChickenBridge.scm",(void*)f_20297},
{"f_20223ChickenBridge.scm",(void*)f_20223},
{"f_20274ChickenBridge.scm",(void*)f_20274},
{"f_20266ChickenBridge.scm",(void*)f_20266},
{"f_20226ChickenBridge.scm",(void*)f_20226},
{"f_20237ChickenBridge.scm",(void*)f_20237},
{"f_20241ChickenBridge.scm",(void*)f_20241},
{"f_20233ChickenBridge.scm",(void*)f_20233},
{"f_20074ChickenBridge.scm",(void*)f_20074},
{"f_20122ChickenBridge.scm",(void*)f_20122},
{"f_20132ChickenBridge.scm",(void*)f_20132},
{"f_20143ChickenBridge.scm",(void*)f_20143},
{"f_20180ChickenBridge.scm",(void*)f_20180},
{"f_20155ChickenBridge.scm",(void*)f_20155},
{"f_20146ChickenBridge.scm",(void*)f_20146},
{"f_20084ChickenBridge.scm",(void*)f_20084},
{"f_20120ChickenBridge.scm",(void*)f_20120},
{"f_20091ChickenBridge.scm",(void*)f_20091},
{"f_19723ChickenBridge.scm",(void*)f_19723},
{"f_19730ChickenBridge.scm",(void*)f_19730},
{"f_19964ChickenBridge.scm",(void*)f_19964},
{"f_19974ChickenBridge.scm",(void*)f_19974},
{"f_19985ChickenBridge.scm",(void*)f_19985},
{"f_19997ChickenBridge.scm",(void*)f_19997},
{"f_20000ChickenBridge.scm",(void*)f_20000},
{"f_19988ChickenBridge.scm",(void*)f_19988},
{"f_19736ChickenBridge.scm",(void*)f_19736},
{"f_19962ChickenBridge.scm",(void*)f_19962},
{"f_19958ChickenBridge.scm",(void*)f_19958},
{"f_19904ChickenBridge.scm",(void*)f_19904},
{"f_19869ChickenBridge.scm",(void*)f_19869},
{"f_19885ChickenBridge.scm",(void*)f_19885},
{"f_19840ChickenBridge.scm",(void*)f_19840},
{"f_19764ChickenBridge.scm",(void*)f_19764},
{"f_19767ChickenBridge.scm",(void*)f_19767},
{"f_19831ChickenBridge.scm",(void*)f_19831},
{"f_19827ChickenBridge.scm",(void*)f_19827},
{"f_19747ChickenBridge.scm",(void*)f_19747},
{"f_19758ChickenBridge.scm",(void*)f_19758},
{"f_19754ChickenBridge.scm",(void*)f_19754},
{"f_19676ChickenBridge.scm",(void*)f_19676},
{"f_19709ChickenBridge.scm",(void*)f_19709},
{"f_19691ChickenBridge.scm",(void*)f_19691},
{"f_19703ChickenBridge.scm",(void*)f_19703},
{"f_19294ChickenBridge.scm",(void*)f_19294},
{"f_19503ChickenBridge.scm",(void*)f_19503},
{"f_19513ChickenBridge.scm",(void*)f_19513},
{"f_19524ChickenBridge.scm",(void*)f_19524},
{"f_19644ChickenBridge.scm",(void*)f_19644},
{"f_19623ChickenBridge.scm",(void*)f_19623},
{"f_19602ChickenBridge.scm",(void*)f_19602},
{"f_19581ChickenBridge.scm",(void*)f_19581},
{"f_19560ChickenBridge.scm",(void*)f_19560},
{"f_19539ChickenBridge.scm",(void*)f_19539},
{"f_19527ChickenBridge.scm",(void*)f_19527},
{"f_19304ChickenBridge.scm",(void*)f_19304},
{"f_19307ChickenBridge.scm",(void*)f_19307},
{"f_19470ChickenBridge.scm",(void*)f_19470},
{"f_19310ChickenBridge.scm",(void*)f_19310},
{"f_19461ChickenBridge.scm",(void*)f_19461},
{"f_19441ChickenBridge.scm",(void*)f_19441},
{"f_19313ChickenBridge.scm",(void*)f_19313},
{"f_19406ChickenBridge.scm",(void*)f_19406},
{"f_19423ChickenBridge.scm",(void*)f_19423},
{"f_19316ChickenBridge.scm",(void*)f_19316},
{"f_19355ChickenBridge.scm",(void*)f_19355},
{"f_19389ChickenBridge.scm",(void*)f_19389},
{"f_19373ChickenBridge.scm",(void*)f_19373},
{"f_19358ChickenBridge.scm",(void*)f_19358},
{"f_19323ChickenBridge.scm",(void*)f_19323},
{"f_19334ChickenBridge.scm",(void*)f_19334},
{"f_19338ChickenBridge.scm",(void*)f_19338},
{"f_19330ChickenBridge.scm",(void*)f_19330},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19216ChickenBridge.scm",(void*)f_19216},
{"f_19234ChickenBridge.scm",(void*)f_19234},
{"f_19052ChickenBridge.scm",(void*)f_19052},
{"f_19060ChickenBridge.scm",(void*)f_19060},
{"f_19070ChickenBridge.scm",(void*)f_19070},
{"f_19108ChickenBridge.scm",(void*)f_19108},
{"f_19111ChickenBridge.scm",(void*)f_19111},
{"f_19114ChickenBridge.scm",(void*)f_19114},
{"f_19189ChickenBridge.scm",(void*)f_19189},
{"f_19199ChickenBridge.scm",(void*)f_19199},
{"f_19117ChickenBridge.scm",(void*)f_19117},
{"f_19120ChickenBridge.scm",(void*)f_19120},
{"f_19123ChickenBridge.scm",(void*)f_19123},
{"f_19143ChickenBridge.scm",(void*)f_19143},
{"f_19153ChickenBridge.scm",(void*)f_19153},
{"f_19156ChickenBridge.scm",(void*)f_19156},
{"f_19159ChickenBridge.scm",(void*)f_19159},
{"f_19126ChickenBridge.scm",(void*)f_19126},
{"f_19129ChickenBridge.scm",(void*)f_19129},
{"f_19046ChickenBridge.scm",(void*)f_19046},
{"f_19040ChickenBridge.scm",(void*)f_19040},
{"f_19034ChickenBridge.scm",(void*)f_19034},
{"f_18963ChickenBridge.scm",(void*)f_18963},
{"f_19004ChickenBridge.scm",(void*)f_19004},
{"f_19008ChickenBridge.scm",(void*)f_19008},
{"f_19012ChickenBridge.scm",(void*)f_19012},
{"f_19016ChickenBridge.scm",(void*)f_19016},
{"f_19020ChickenBridge.scm",(void*)f_19020},
{"f_19024ChickenBridge.scm",(void*)f_19024},
{"f_19028ChickenBridge.scm",(void*)f_19028},
{"f_19032ChickenBridge.scm",(void*)f_19032},
{"f_18965ChickenBridge.scm",(void*)f_18965},
{"f_18971ChickenBridge.scm",(void*)f_18971},
{"f_18993ChickenBridge.scm",(void*)f_18993},
{"f_18982ChickenBridge.scm",(void*)f_18982},
{"f_18812ChickenBridge.scm",(void*)f_18812},
{"f_18827ChickenBridge.scm",(void*)f_18827},
{"f_18840ChickenBridge.scm",(void*)f_18840},
{"f_18800ChickenBridge.scm",(void*)f_18800},
{"f_18788ChickenBridge.scm",(void*)f_18788},
{"f_18776ChickenBridge.scm",(void*)f_18776},
{"f_18770ChickenBridge.scm",(void*)f_18770},
{"f_18764ChickenBridge.scm",(void*)f_18764},
{"f_18752ChickenBridge.scm",(void*)f_18752},
{"f_18740ChickenBridge.scm",(void*)f_18740},
{"f_18728ChickenBridge.scm",(void*)f_18728},
{"f_18716ChickenBridge.scm",(void*)f_18716},
{"f_18710ChickenBridge.scm",(void*)f_18710},
{"f_18674ChickenBridge.scm",(void*)f_18674},
{"f_18668ChickenBridge.scm",(void*)f_18668},
{"f_18621ChickenBridge.scm",(void*)f_18621},
{"f_18625ChickenBridge.scm",(void*)f_18625},
{"f_18641ChickenBridge.scm",(void*)f_18641},
{"f_18650ChickenBridge.scm",(void*)f_18650},
{"f_18628ChickenBridge.scm",(void*)f_18628},
{"f_18612ChickenBridge.scm",(void*)f_18612},
{"f_18616ChickenBridge.scm",(void*)f_18616},
{"f_18433ChickenBridge.scm",(void*)f_18433},
{"f_18586ChickenBridge.scm",(void*)f_18586},
{"f_18599ChickenBridge.scm",(void*)f_18599},
{"f_18581ChickenBridge.scm",(void*)f_18581},
{"f_18436ChickenBridge.scm",(void*)f_18436},
{"f_18578ChickenBridge.scm",(void*)f_18578},
{"f_18562ChickenBridge.scm",(void*)f_18562},
{"f_18555ChickenBridge.scm",(void*)f_18555},
{"f_18551ChickenBridge.scm",(void*)f_18551},
{"f_18464ChickenBridge.scm",(void*)f_18464},
{"f_18472ChickenBridge.scm",(void*)f_18472},
{"f_18482ChickenBridge.scm",(void*)f_18482},
{"f_18485ChickenBridge.scm",(void*)f_18485},
{"f_18467ChickenBridge.scm",(void*)f_18467},
{"f_18262ChickenBridge.scm",(void*)f_18262},
{"f_18268ChickenBridge.scm",(void*)f_18268},
{"f_18271ChickenBridge.scm",(void*)f_18271},
{"f_16071ChickenBridge.scm",(void*)f_16071},
{"f_16084ChickenBridge.scm",(void*)f_16084},
{"f_16091ChickenBridge.scm",(void*)f_16091},
{"f_16098ChickenBridge.scm",(void*)f_16098},
{"f_16077ChickenBridge.scm",(void*)f_16077},
{"f_18275ChickenBridge.scm",(void*)f_18275},
{"f_18309ChickenBridge.scm",(void*)f_18309},
{"f_18402ChickenBridge.scm",(void*)f_18402},
{"f_18412ChickenBridge.scm",(void*)f_18412},
{"f_18315ChickenBridge.scm",(void*)f_18315},
{"f_18372ChickenBridge.scm",(void*)f_18372},
{"f_18382ChickenBridge.scm",(void*)f_18382},
{"f_18323ChickenBridge.scm",(void*)f_18323},
{"f_18337ChickenBridge.scm",(void*)f_18337},
{"f_18341ChickenBridge.scm",(void*)f_18341},
{"f_18345ChickenBridge.scm",(void*)f_18345},
{"f_18349ChickenBridge.scm",(void*)f_18349},
{"f_18356ChickenBridge.scm",(void*)f_18356},
{"f_18333ChickenBridge.scm",(void*)f_18333},
{"f_18326ChickenBridge.scm",(void*)f_18326},
{"f_18278ChickenBridge.scm",(void*)f_18278},
{"f_17198ChickenBridge.scm",(void*)f_17198},
{"f_17211ChickenBridge.scm",(void*)f_17211},
{"f_17261ChickenBridge.scm",(void*)f_17261},
{"f_17358ChickenBridge.scm",(void*)f_17358},
{"f_17426ChickenBridge.scm",(void*)f_17426},
{"f_17683ChickenBridge.scm",(void*)f_17683},
{"f_17433ChickenBridge.scm",(void*)f_17433},
{"f_17671ChickenBridge.scm",(void*)f_17671},
{"f_17622ChickenBridge.scm",(void*)f_17622},
{"f_17628ChickenBridge.scm",(void*)f_17628},
{"f_17652ChickenBridge.scm",(void*)f_17652},
{"f_17648ChickenBridge.scm",(void*)f_17648},
{"f_17636ChickenBridge.scm",(void*)f_17636},
{"f_17436ChickenBridge.scm",(void*)f_17436},
{"f_17598ChickenBridge.scm",(void*)f_17598},
{"f_17602ChickenBridge.scm",(void*)f_17602},
{"f_17439ChickenBridge.scm",(void*)f_17439},
{"f_17575ChickenBridge.scm",(void*)f_17575},
{"f_17579ChickenBridge.scm",(void*)f_17579},
{"f_17442ChickenBridge.scm",(void*)f_17442},
{"f_17552ChickenBridge.scm",(void*)f_17552},
{"f_17556ChickenBridge.scm",(void*)f_17556},
{"f_17445ChickenBridge.scm",(void*)f_17445},
{"f_17477ChickenBridge.scm",(void*)f_17477},
{"f_17495ChickenBridge.scm",(void*)f_17495},
{"f_17513ChickenBridge.scm",(void*)f_17513},
{"f_17531ChickenBridge.scm",(void*)f_17531},
{"f_17448ChickenBridge.scm",(void*)f_17448},
{"f_17452ChickenBridge.scm",(void*)f_17452},
{"f_17362ChickenBridge.scm",(void*)f_17362},
{"f_17366ChickenBridge.scm",(void*)f_17366},
{"f_17370ChickenBridge.scm",(void*)f_17370},
{"f_17265ChickenBridge.scm",(void*)f_17265},
{"f_17269ChickenBridge.scm",(void*)f_17269},
{"f_17273ChickenBridge.scm",(void*)f_17273},
{"f_17292ChickenBridge.scm",(void*)f_17292},
{"f_17296ChickenBridge.scm",(void*)f_17296},
{"f_17276ChickenBridge.scm",(void*)f_17276},
{"f_17280ChickenBridge.scm",(void*)f_17280},
{"f_17215ChickenBridge.scm",(void*)f_17215},
{"f_17219ChickenBridge.scm",(void*)f_17219},
{"f_17223ChickenBridge.scm",(void*)f_17223},
{"f_17205ChickenBridge.scm",(void*)f_17205},
{"f_17020ChickenBridge.scm",(void*)f_17020},
{"f_17032ChickenBridge.scm",(void*)f_17032},
{"f_17051ChickenBridge.scm",(void*)f_17051},
{"f_17069ChickenBridge.scm",(void*)f_17069},
{"f_17101ChickenBridge.scm",(void*)f_17101},
{"f_17104ChickenBridge.scm",(void*)f_17104},
{"f_17097ChickenBridge.scm",(void*)f_17097},
{"f_17083ChickenBridge.scm",(void*)f_17083},
{"f_17054ChickenBridge.scm",(void*)f_17054},
{"f_16999ChickenBridge.scm",(void*)f_16999},
{"f_17006ChickenBridge.scm",(void*)f_17006},
{"f_17009ChickenBridge.scm",(void*)f_17009},
{"f_17015ChickenBridge.scm",(void*)f_17015},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16943ChickenBridge.scm",(void*)f_16943},
{"f_16966ChickenBridge.scm",(void*)f_16966},
{"f_16956ChickenBridge.scm",(void*)f_16956},
{"f_16890ChickenBridge.scm",(void*)f_16890},
{"f_16878ChickenBridge.scm",(void*)f_16878},
{"f_16776ChickenBridge.scm",(void*)f_16776},
{"f_16728ChickenBridge.scm",(void*)f_16728},
{"f_16109ChickenBridge.scm",(void*)f_16109},
{"f_16113ChickenBridge.scm",(void*)f_16113},
{"f_16116ChickenBridge.scm",(void*)f_16116},
{"f_16542ChickenBridge.scm",(void*)f_16542},
{"f_16538ChickenBridge.scm",(void*)f_16538},
{"f_16534ChickenBridge.scm",(void*)f_16534},
{"f_16119ChickenBridge.scm",(void*)f_16119},
{"f_16242ChickenBridge.scm",(void*)f_16242},
{"f_15475ChickenBridge.scm",(void*)f_15475},
{"f_16248ChickenBridge.scm",(void*)f_16248},
{"f_15491ChickenBridge.scm",(void*)f_15491},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16406ChickenBridge.scm",(void*)f_16406},
{"f_15507ChickenBridge.scm",(void*)f_15507},
{"f_16409ChickenBridge.scm",(void*)f_16409},
{"f_15539ChickenBridge.scm",(void*)f_15539},
{"f_16487ChickenBridge.scm",(void*)f_16487},
{"f_16513ChickenBridge.scm",(void*)f_16513},
{"f_16507ChickenBridge.scm",(void*)f_16507},
{"f_16496ChickenBridge.scm",(void*)f_16496},
{"f_16438ChickenBridge.scm",(void*)f_16438},
{"f_16448ChickenBridge.scm",(void*)f_16448},
{"f_16474ChickenBridge.scm",(void*)f_16474},
{"f_16468ChickenBridge.scm",(void*)f_16468},
{"f_16451ChickenBridge.scm",(void*)f_16451},
{"f_16461ChickenBridge.scm",(void*)f_16461},
{"f_16454ChickenBridge.scm",(void*)f_16454},
{"f_16415ChickenBridge.scm",(void*)f_16415},
{"f_16424ChickenBridge.scm",(void*)f_16424},
{"f_16418ChickenBridge.scm",(void*)f_16418},
{"f_16342ChickenBridge.scm",(void*)f_16342},
{"f_16360ChickenBridge.scm",(void*)f_16360},
{"f_16393ChickenBridge.scm",(void*)f_16393},
{"f_16379ChickenBridge.scm",(void*)f_16379},
{"f_16387ChickenBridge.scm",(void*)f_16387},
{"f_16370ChickenBridge.scm",(void*)f_16370},
{"f_16345ChickenBridge.scm",(void*)f_16345},
{"f_16257ChickenBridge.scm",(void*)f_16257},
{"f_16279ChickenBridge.scm",(void*)f_16279},
{"f_16326ChickenBridge.scm",(void*)f_16326},
{"f_16312ChickenBridge.scm",(void*)f_16312},
{"f_16320ChickenBridge.scm",(void*)f_16320},
{"f_16292ChickenBridge.scm",(void*)f_16292},
{"f_16295ChickenBridge.scm",(void*)f_16295},
{"f_16260ChickenBridge.scm",(void*)f_16260},
{"f_16277ChickenBridge.scm",(void*)f_16277},
{"f_16263ChickenBridge.scm",(void*)f_16263},
{"f_16128ChickenBridge.scm",(void*)f_16128},
{"f_16134ChickenBridge.scm",(void*)f_16134},
{"f_16192ChickenBridge.scm",(void*)f_16192},
{"f_16195ChickenBridge.scm",(void*)f_16195},
{"f_16216ChickenBridge.scm",(void*)f_16216},
{"f_16227ChickenBridge.scm",(void*)f_16227},
{"f_16206ChickenBridge.scm",(void*)f_16206},
{"f_16140ChickenBridge.scm",(void*)f_16140},
{"f_16150ChickenBridge.scm",(void*)f_16150},
{"f_16186ChickenBridge.scm",(void*)f_16186},
{"f_16156ChickenBridge.scm",(void*)f_16156},
{"f_16171ChickenBridge.scm",(void*)f_16171},
{"f_16175ChickenBridge.scm",(void*)f_16175},
{"f_16179ChickenBridge.scm",(void*)f_16179},
{"f_16163ChickenBridge.scm",(void*)f_16163},
{"f_16005ChickenBridge.scm",(void*)f_16005},
{"f_16007ChickenBridge.scm",(void*)f_16007},
{"f_16055ChickenBridge.scm",(void*)f_16055},
{"f_16011ChickenBridge.scm",(void*)f_16011},
{"f_16014ChickenBridge.scm",(void*)f_16014},
{"f_16019ChickenBridge.scm",(void*)f_16019},
{"f_16040ChickenBridge.scm",(void*)f_16040},
{"f_15997ChickenBridge.scm",(void*)f_15997},
{"f_15999ChickenBridge.scm",(void*)f_15999},
{"f_15789ChickenBridge.scm",(void*)f_15789},
{"f_15806ChickenBridge.scm",(void*)f_15806},
{"f_15810ChickenBridge.scm",(void*)f_15810},
{"f_15756ChickenBridge.scm",(void*)f_15756},
{"f_15763ChickenBridge.scm",(void*)f_15763},
{"f_15707ChickenBridge.scm",(void*)f_15707},
{"f_15714ChickenBridge.scm",(void*)f_15714},
{"f_15772ChickenBridge.scm",(void*)f_15772},
{"f_15995ChickenBridge.scm",(void*)f_15995},
{"f_15972ChickenBridge.scm",(void*)f_15972},
{"f_15988ChickenBridge.scm",(void*)f_15988},
{"f_15834ChickenBridge.scm",(void*)f_15834},
{"f_15837ChickenBridge.scm",(void*)f_15837},
{"f_15861ChickenBridge.scm",(void*)f_15861},
{"f_15918ChickenBridge.scm",(void*)f_15918},
{"f_15924ChickenBridge.scm",(void*)f_15924},
{"f_15933ChickenBridge.scm",(void*)f_15933},
{"f_15942ChickenBridge.scm",(void*)f_15942},
{"f_15951ChickenBridge.scm",(void*)f_15951},
{"f_15960ChickenBridge.scm",(void*)f_15960},
{"f_15912ChickenBridge.scm",(void*)f_15912},
{"f_15867ChickenBridge.scm",(void*)f_15867},
{"f_15873ChickenBridge.scm",(void*)f_15873},
{"f_15879ChickenBridge.scm",(void*)f_15879},
{"f_15885ChickenBridge.scm",(void*)f_15885},
{"f_15891ChickenBridge.scm",(void*)f_15891},
{"f_15897ChickenBridge.scm",(void*)f_15897},
{"f_15738ChickenBridge.scm",(void*)f_15738},
{"f_15745ChickenBridge.scm",(void*)f_15745},
{"f_15728ChickenBridge.scm",(void*)f_15728},
{"f_15716ChickenBridge.scm",(void*)f_15716},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_15691ChickenBridge.scm",(void*)f_15691},
{"f_15698ChickenBridge.scm",(void*)f_15698},
{"f_15668ChickenBridge.scm",(void*)f_15668},
{"f_15675ChickenBridge.scm",(void*)f_15675},
{"f_15682ChickenBridge.scm",(void*)f_15682},
{"f_15656ChickenBridge.scm",(void*)f_15656},
{"f_15638ChickenBridge.scm",(void*)f_15638},
{"f_15620ChickenBridge.scm",(void*)f_15620},
{"f_15605ChickenBridge.scm",(void*)f_15605},
{"f_15599ChickenBridge.scm",(void*)f_15599},
{"f_15587ChickenBridge.scm",(void*)f_15587},
{"f_15569ChickenBridge.scm",(void*)f_15569},
{"f_15548ChickenBridge.scm",(void*)f_15548},
{"f_15516ChickenBridge.scm",(void*)f_15516},
{"f_15523ChickenBridge.scm",(void*)f_15523},
{"f_15458ChickenBridge.scm",(void*)f_15458},
{"f_15466ChickenBridge.scm",(void*)f_15466},
{"f_15448ChickenBridge.scm",(void*)f_15448},
{"f_15456ChickenBridge.scm",(void*)f_15456},
{"f_15442ChickenBridge.scm",(void*)f_15442},
{"f_15430ChickenBridge.scm",(void*)f_15430},
{"f_15427ChickenBridge.scm",(void*)f_15427},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_15319ChickenBridge.scm",(void*)f_15319},
{"f_15298ChickenBridge.scm",(void*)f_15298},
{"f_15288ChickenBridge.scm",(void*)f_15288},
{"f_15276ChickenBridge.scm",(void*)f_15276},
{"f_15247ChickenBridge.scm",(void*)f_15247},
{"f_15235ChickenBridge.scm",(void*)f_15235},
{"f_15217ChickenBridge.scm",(void*)f_15217},
{"f_15199ChickenBridge.scm",(void*)f_15199},
{"f_15178ChickenBridge.scm",(void*)f_15178},
{"f_15084ChickenBridge.scm",(void*)f_15084},
{"f_15088ChickenBridge.scm",(void*)f_15088},
{"f_15117ChickenBridge.scm",(void*)f_15117},
{"f_15122ChickenBridge.scm",(void*)f_15122},
{"f_15147ChickenBridge.scm",(void*)f_15147},
{"f_15132ChickenBridge.scm",(void*)f_15132},
{"f_14566ChickenBridge.scm",(void*)f_14566},
{"f_14837ChickenBridge.scm",(void*)f_14837},
{"f_14841ChickenBridge.scm",(void*)f_14841},
{"f_14846ChickenBridge.scm",(void*)f_14846},
{"f_15052ChickenBridge.scm",(void*)f_15052},
{"f_15067ChickenBridge.scm",(void*)f_15067},
{"f_15059ChickenBridge.scm",(void*)f_15059},
{"f_15023ChickenBridge.scm",(void*)f_15023},
{"f_15027ChickenBridge.scm",(void*)f_15027},
{"f_14988ChickenBridge.scm",(void*)f_14988},
{"f_14992ChickenBridge.scm",(void*)f_14992},
{"f_14850ChickenBridge.scm",(void*)f_14850},
{"f_14952ChickenBridge.scm",(void*)f_14952},
{"f_14967ChickenBridge.scm",(void*)f_14967},
{"f_14959ChickenBridge.scm",(void*)f_14959},
{"f_14923ChickenBridge.scm",(void*)f_14923},
{"f_14927ChickenBridge.scm",(void*)f_14927},
{"f_14888ChickenBridge.scm",(void*)f_14888},
{"f_14892ChickenBridge.scm",(void*)f_14892},
{"f_14853ChickenBridge.scm",(void*)f_14853},
{"f_14856ChickenBridge.scm",(void*)f_14856},
{"f_14859ChickenBridge.scm",(void*)f_14859},
{"f_14828ChickenBridge.scm",(void*)f_14828},
{"f_14570ChickenBridge.scm",(void*)f_14570},
{"f_14797ChickenBridge.scm",(void*)f_14797},
{"f_14812ChickenBridge.scm",(void*)f_14812},
{"f_14804ChickenBridge.scm",(void*)f_14804},
{"f_14768ChickenBridge.scm",(void*)f_14768},
{"f_14772ChickenBridge.scm",(void*)f_14772},
{"f_14733ChickenBridge.scm",(void*)f_14733},
{"f_14737ChickenBridge.scm",(void*)f_14737},
{"f_14573ChickenBridge.scm",(void*)f_14573},
{"f_14697ChickenBridge.scm",(void*)f_14697},
{"f_14712ChickenBridge.scm",(void*)f_14712},
{"f_14704ChickenBridge.scm",(void*)f_14704},
{"f_14668ChickenBridge.scm",(void*)f_14668},
{"f_14672ChickenBridge.scm",(void*)f_14672},
{"f_14633ChickenBridge.scm",(void*)f_14633},
{"f_14637ChickenBridge.scm",(void*)f_14637},
{"f_14576ChickenBridge.scm",(void*)f_14576},
{"f_14579ChickenBridge.scm",(void*)f_14579},
{"f_14582ChickenBridge.scm",(void*)f_14582},
{"f_14594ChickenBridge.scm",(void*)f_14594},
{"f_14612ChickenBridge.scm",(void*)f_14612},
{"f_14600ChickenBridge.scm",(void*)f_14600},
{"f_14588ChickenBridge.scm",(void*)f_14588},
{"f_14503ChickenBridge.scm",(void*)f_14503},
{"f_14163ChickenBridge.scm",(void*)f_14163},
{"f_14345ChickenBridge.scm",(void*)f_14345},
{"f_14349ChickenBridge.scm",(void*)f_14349},
{"f_14351ChickenBridge.scm",(void*)f_14351},
{"f_14276ChickenBridge.scm",(void*)f_14276},
{"f_14286ChickenBridge.scm",(void*)f_14286},
{"f_14293ChickenBridge.scm",(void*)f_14293},
{"f_14361ChickenBridge.scm",(void*)f_14361},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14368ChickenBridge.scm",(void*)f_14368},
{"f_14388ChickenBridge.scm",(void*)f_14388},
{"f_14404ChickenBridge.scm",(void*)f_14404},
{"f_14371ChickenBridge.scm",(void*)f_14371},
{"f_14166ChickenBridge.scm",(void*)f_14166},
{"f_14178ChickenBridge.scm",(void*)f_14178},
{"f_14214ChickenBridge.scm",(void*)f_14214},
{"f_14234ChickenBridge.scm",(void*)f_14234},
{"f_14239ChickenBridge.scm",(void*)f_14239},
{"f_13676ChickenBridge.scm",(void*)f_13676},
{"f_13603ChickenBridge.scm",(void*)f_13603},
{"f_13448ChickenBridge.scm",(void*)f_13448},
{"f_13454ChickenBridge.scm",(void*)f_13454},
{"f_13539ChickenBridge.scm",(void*)f_13539},
{"f_13466ChickenBridge.scm",(void*)f_13466},
{"f_13482ChickenBridge.scm",(void*)f_13482},
{"f_13486ChickenBridge.scm",(void*)f_13486},
{"f_13489ChickenBridge.scm",(void*)f_13489},
{"f_13469ChickenBridge.scm",(void*)f_13469},
{"f_13480ChickenBridge.scm",(void*)f_13480},
{"f_13620ChickenBridge.scm",(void*)f_13620},
{"f_14157ChickenBridge.scm",(void*)f_14157},
{"f_13680ChickenBridge.scm",(void*)f_13680},
{"f_14126ChickenBridge.scm",(void*)f_14126},
{"f_14141ChickenBridge.scm",(void*)f_14141},
{"f_14133ChickenBridge.scm",(void*)f_14133},
{"f_14097ChickenBridge.scm",(void*)f_14097},
{"f_14101ChickenBridge.scm",(void*)f_14101},
{"f_14062ChickenBridge.scm",(void*)f_14062},
{"f_14066ChickenBridge.scm",(void*)f_14066},
{"f_14027ChickenBridge.scm",(void*)f_14027},
{"f_14031ChickenBridge.scm",(void*)f_14031},
{"f_13683ChickenBridge.scm",(void*)f_13683},
{"f_13991ChickenBridge.scm",(void*)f_13991},
{"f_14006ChickenBridge.scm",(void*)f_14006},
{"f_13998ChickenBridge.scm",(void*)f_13998},
{"f_13962ChickenBridge.scm",(void*)f_13962},
{"f_13966ChickenBridge.scm",(void*)f_13966},
{"f_13927ChickenBridge.scm",(void*)f_13927},
{"f_13931ChickenBridge.scm",(void*)f_13931},
{"f_13892ChickenBridge.scm",(void*)f_13892},
{"f_13896ChickenBridge.scm",(void*)f_13896},
{"f_13686ChickenBridge.scm",(void*)f_13686},
{"f_13856ChickenBridge.scm",(void*)f_13856},
{"f_13871ChickenBridge.scm",(void*)f_13871},
{"f_13863ChickenBridge.scm",(void*)f_13863},
{"f_13827ChickenBridge.scm",(void*)f_13827},
{"f_13831ChickenBridge.scm",(void*)f_13831},
{"f_13792ChickenBridge.scm",(void*)f_13792},
{"f_13796ChickenBridge.scm",(void*)f_13796},
{"f_13757ChickenBridge.scm",(void*)f_13757},
{"f_13761ChickenBridge.scm",(void*)f_13761},
{"f_13689ChickenBridge.scm",(void*)f_13689},
{"f_13692ChickenBridge.scm",(void*)f_13692},
{"f_13695ChickenBridge.scm",(void*)f_13695},
{"f_13728ChickenBridge.scm",(void*)f_13728},
{"f_13736ChickenBridge.scm",(void*)f_13736},
{"f_13701ChickenBridge.scm",(void*)f_13701},
{"f_13714ChickenBridge.scm",(void*)f_13714},
{"f_13704ChickenBridge.scm",(void*)f_13704},
{"f_13707ChickenBridge.scm",(void*)f_13707},
{"f_13243ChickenBridge.scm",(void*)f_13243},
{"f_13247ChickenBridge.scm",(void*)f_13247},
{"f_13250ChickenBridge.scm",(void*)f_13250},
{"f_13253ChickenBridge.scm",(void*)f_13253},
{"f_13422ChickenBridge.scm",(void*)f_13422},
{"f_13435ChickenBridge.scm",(void*)f_13435},
{"f_13439ChickenBridge.scm",(void*)f_13439},
{"f_13259ChickenBridge.scm",(void*)f_13259},
{"f_13415ChickenBridge.scm",(void*)f_13415},
{"f_13396ChickenBridge.scm",(void*)f_13396},
{"f_13403ChickenBridge.scm",(void*)f_13403},
{"f_13407ChickenBridge.scm",(void*)f_13407},
{"f_13265ChickenBridge.scm",(void*)f_13265},
{"f_13271ChickenBridge.scm",(void*)f_13271},
{"f_13355ChickenBridge.scm",(void*)f_13355},
{"f_13357ChickenBridge.scm",(void*)f_13357},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13386ChickenBridge.scm",(void*)f_13386},
{"f_13390ChickenBridge.scm",(void*)f_13390},
{"f_13376ChickenBridge.scm",(void*)f_13376},
{"f_13372ChickenBridge.scm",(void*)f_13372},
{"f_13313ChickenBridge.scm",(void*)f_13313},
{"f_13330ChickenBridge.scm",(void*)f_13330},
{"f_13340ChickenBridge.scm",(void*)f_13340},
{"f_13316ChickenBridge.scm",(void*)f_13316},
{"f_13275ChickenBridge.scm",(void*)f_13275},
{"f_13283ChickenBridge.scm",(void*)f_13283},
{"f_13285ChickenBridge.scm",(void*)f_13285},
{"f_13306ChickenBridge.scm",(void*)f_13306},
{"f_13131ChickenBridge.scm",(void*)f_13131},
{"f_13241ChickenBridge.scm",(void*)f_13241},
{"f_13200ChickenBridge.scm",(void*)f_13200},
{"f_13233ChickenBridge.scm",(void*)f_13233},
{"f_13229ChickenBridge.scm",(void*)f_13229},
{"f_13214ChickenBridge.scm",(void*)f_13214},
{"f_13138ChickenBridge.scm",(void*)f_13138},
{"f_13146ChickenBridge.scm",(void*)f_13146},
{"f_13191ChickenBridge.scm",(void*)f_13191},
{"f_13179ChickenBridge.scm",(void*)f_13179},
{"f_13163ChickenBridge.scm",(void*)f_13163},
{"f_12364ChickenBridge.scm",(void*)f_12364},
{"f_12681ChickenBridge.scm",(void*)f_12681},
{"f_12688ChickenBridge.scm",(void*)f_12688},
{"f_13093ChickenBridge.scm",(void*)f_13093},
{"f_13108ChickenBridge.scm",(void*)f_13108},
{"f_13100ChickenBridge.scm",(void*)f_13100},
{"f_13064ChickenBridge.scm",(void*)f_13064},
{"f_13068ChickenBridge.scm",(void*)f_13068},
{"f_13029ChickenBridge.scm",(void*)f_13029},
{"f_13033ChickenBridge.scm",(void*)f_13033},
{"f_12994ChickenBridge.scm",(void*)f_12994},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_12691ChickenBridge.scm",(void*)f_12691},
{"f_12958ChickenBridge.scm",(void*)f_12958},
{"f_12973ChickenBridge.scm",(void*)f_12973},
{"f_12965ChickenBridge.scm",(void*)f_12965},
{"f_12929ChickenBridge.scm",(void*)f_12929},
{"f_12933ChickenBridge.scm",(void*)f_12933},
{"f_12894ChickenBridge.scm",(void*)f_12894},
{"f_12898ChickenBridge.scm",(void*)f_12898},
{"f_12859ChickenBridge.scm",(void*)f_12859},
{"f_12863ChickenBridge.scm",(void*)f_12863},
{"f_12694ChickenBridge.scm",(void*)f_12694},
{"f_12823ChickenBridge.scm",(void*)f_12823},
{"f_12838ChickenBridge.scm",(void*)f_12838},
{"f_12830ChickenBridge.scm",(void*)f_12830},
{"f_12794ChickenBridge.scm",(void*)f_12794},
{"f_12798ChickenBridge.scm",(void*)f_12798},
{"f_12759ChickenBridge.scm",(void*)f_12759},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12724ChickenBridge.scm",(void*)f_12724},
{"f_12728ChickenBridge.scm",(void*)f_12728},
{"f_12697ChickenBridge.scm",(void*)f_12697},
{"f_12700ChickenBridge.scm",(void*)f_12700},
{"f_12368ChickenBridge.scm",(void*)f_12368},
{"f_12371ChickenBridge.scm",(void*)f_12371},
{"f_12645ChickenBridge.scm",(void*)f_12645},
{"f_12649ChickenBridge.scm",(void*)f_12649},
{"f_12652ChickenBridge.scm",(void*)f_12652},
{"f_12655ChickenBridge.scm",(void*)f_12655},
{"f_12658ChickenBridge.scm",(void*)f_12658},
{"f_12671ChickenBridge.scm",(void*)f_12671},
{"f_12661ChickenBridge.scm",(void*)f_12661},
{"f_12377ChickenBridge.scm",(void*)f_12377},
{"f_12384ChickenBridge.scm",(void*)f_12384},
{"f_12615ChickenBridge.scm",(void*)f_12615},
{"f_12630ChickenBridge.scm",(void*)f_12630},
{"f_12622ChickenBridge.scm",(void*)f_12622},
{"f_12586ChickenBridge.scm",(void*)f_12586},
{"f_12590ChickenBridge.scm",(void*)f_12590},
{"f_12551ChickenBridge.scm",(void*)f_12551},
{"f_12555ChickenBridge.scm",(void*)f_12555},
{"f_12387ChickenBridge.scm",(void*)f_12387},
{"f_12515ChickenBridge.scm",(void*)f_12515},
{"f_12530ChickenBridge.scm",(void*)f_12530},
{"f_12522ChickenBridge.scm",(void*)f_12522},
{"f_12486ChickenBridge.scm",(void*)f_12486},
{"f_12490ChickenBridge.scm",(void*)f_12490},
{"f_12451ChickenBridge.scm",(void*)f_12451},
{"f_12455ChickenBridge.scm",(void*)f_12455},
{"f_12390ChickenBridge.scm",(void*)f_12390},
{"f_12393ChickenBridge.scm",(void*)f_12393},
{"f_12408ChickenBridge.scm",(void*)f_12408},
{"f_12430ChickenBridge.scm",(void*)f_12430},
{"f_12414ChickenBridge.scm",(void*)f_12414},
{"f_12422ChickenBridge.scm",(void*)f_12422},
{"f_12396ChickenBridge.scm",(void*)f_12396},
{"f_12399ChickenBridge.scm",(void*)f_12399},
{"f_12281ChickenBridge.scm",(void*)f_12281},
{"f_12272ChickenBridge.scm",(void*)f_12272},
{"f_12263ChickenBridge.scm",(void*)f_12263},
{"f_12245ChickenBridge.scm",(void*)f_12245},
{"f_12227ChickenBridge.scm",(void*)f_12227},
{"f_12209ChickenBridge.scm",(void*)f_12209},
{"f_12200ChickenBridge.scm",(void*)f_12200},
{"f_12191ChickenBridge.scm",(void*)f_12191},
{"f_11969ChickenBridge.scm",(void*)f_11969},
{"f_12019ChickenBridge.scm",(void*)f_12019},
{"f_12164ChickenBridge.scm",(void*)f_12164},
{"f_12045ChickenBridge.scm",(void*)f_12045},
{"f_12160ChickenBridge.scm",(void*)f_12160},
{"f_12145ChickenBridge.scm",(void*)f_12145},
{"f_12126ChickenBridge.scm",(void*)f_12126},
{"f_12099ChickenBridge.scm",(void*)f_12099},
{"f_12052ChickenBridge.scm",(void*)f_12052},
{"f_12022ChickenBridge.scm",(void*)f_12022},
{"f_11972ChickenBridge.scm",(void*)f_11972},
{"f_11978ChickenBridge.scm",(void*)f_11978},
{"f_11994ChickenBridge.scm",(void*)f_11994},
{"f_11997ChickenBridge.scm",(void*)f_11997},
{"f_11495ChickenBridge.scm",(void*)f_11495},
{"f_11959ChickenBridge.scm",(void*)f_11959},
{"f_11499ChickenBridge.scm",(void*)f_11499},
{"f_11931ChickenBridge.scm",(void*)f_11931},
{"f_11946ChickenBridge.scm",(void*)f_11946},
{"f_11938ChickenBridge.scm",(void*)f_11938},
{"f_11902ChickenBridge.scm",(void*)f_11902},
{"f_11906ChickenBridge.scm",(void*)f_11906},
{"f_11867ChickenBridge.scm",(void*)f_11867},
{"f_11871ChickenBridge.scm",(void*)f_11871},
{"f_11832ChickenBridge.scm",(void*)f_11832},
{"f_11836ChickenBridge.scm",(void*)f_11836},
{"f_11502ChickenBridge.scm",(void*)f_11502},
{"f_11796ChickenBridge.scm",(void*)f_11796},
{"f_11811ChickenBridge.scm",(void*)f_11811},
{"f_11803ChickenBridge.scm",(void*)f_11803},
{"f_11767ChickenBridge.scm",(void*)f_11767},
{"f_11771ChickenBridge.scm",(void*)f_11771},
{"f_11732ChickenBridge.scm",(void*)f_11732},
{"f_11736ChickenBridge.scm",(void*)f_11736},
{"f_11697ChickenBridge.scm",(void*)f_11697},
{"f_11701ChickenBridge.scm",(void*)f_11701},
{"f_11505ChickenBridge.scm",(void*)f_11505},
{"f_11661ChickenBridge.scm",(void*)f_11661},
{"f_11676ChickenBridge.scm",(void*)f_11676},
{"f_11668ChickenBridge.scm",(void*)f_11668},
{"f_11632ChickenBridge.scm",(void*)f_11632},
{"f_11636ChickenBridge.scm",(void*)f_11636},
{"f_11597ChickenBridge.scm",(void*)f_11597},
{"f_11601ChickenBridge.scm",(void*)f_11601},
{"f_11562ChickenBridge.scm",(void*)f_11562},
{"f_11566ChickenBridge.scm",(void*)f_11566},
{"f_11508ChickenBridge.scm",(void*)f_11508},
{"f_11511ChickenBridge.scm",(void*)f_11511},
{"f_11514ChickenBridge.scm",(void*)f_11514},
{"f_11529ChickenBridge.scm",(void*)f_11529},
{"f_11541ChickenBridge.scm",(void*)f_11541},
{"f_11520ChickenBridge.scm",(void*)f_11520},
{"f_11523ChickenBridge.scm",(void*)f_11523},
{"f_11419ChickenBridge.scm",(void*)f_11419},
{"f_11423ChickenBridge.scm",(void*)f_11423},
{"f_11442ChickenBridge.scm",(void*)f_11442},
{"f_11452ChickenBridge.scm",(void*)f_11452},
{"f_11454ChickenBridge.scm",(void*)f_11454},
{"f_11471ChickenBridge.scm",(void*)f_11471},
{"f_11474ChickenBridge.scm",(void*)f_11474},
{"f_11485ChickenBridge.scm",(void*)f_11485},
{"f_11426ChickenBridge.scm",(void*)f_11426},
{"f_11156ChickenBridge.scm",(void*)f_11156},
{"f_11409ChickenBridge.scm",(void*)f_11409},
{"f_11160ChickenBridge.scm",(void*)f_11160},
{"f_11381ChickenBridge.scm",(void*)f_11381},
{"f_11396ChickenBridge.scm",(void*)f_11396},
{"f_11388ChickenBridge.scm",(void*)f_11388},
{"f_11352ChickenBridge.scm",(void*)f_11352},
{"f_11356ChickenBridge.scm",(void*)f_11356},
{"f_11317ChickenBridge.scm",(void*)f_11317},
{"f_11321ChickenBridge.scm",(void*)f_11321},
{"f_11163ChickenBridge.scm",(void*)f_11163},
{"f_11281ChickenBridge.scm",(void*)f_11281},
{"f_11296ChickenBridge.scm",(void*)f_11296},
{"f_11288ChickenBridge.scm",(void*)f_11288},
{"f_11252ChickenBridge.scm",(void*)f_11252},
{"f_11256ChickenBridge.scm",(void*)f_11256},
{"f_11217ChickenBridge.scm",(void*)f_11217},
{"f_11221ChickenBridge.scm",(void*)f_11221},
{"f_11166ChickenBridge.scm",(void*)f_11166},
{"f_11169ChickenBridge.scm",(void*)f_11169},
{"f_11172ChickenBridge.scm",(void*)f_11172},
{"f_11184ChickenBridge.scm",(void*)f_11184},
{"f_11196ChickenBridge.scm",(void*)f_11196},
{"f_11178ChickenBridge.scm",(void*)f_11178},
{"f_11120ChickenBridge.scm",(void*)f_11120},
{"f_11124ChickenBridge.scm",(void*)f_11124},
{"f_11146ChickenBridge.scm",(void*)f_11146},
{"f_11140ChickenBridge.scm",(void*)f_11140},
{"f_11133ChickenBridge.scm",(void*)f_11133},
{"f_10873ChickenBridge.scm",(void*)f_10873},
{"f_10877ChickenBridge.scm",(void*)f_10877},
{"f_11090ChickenBridge.scm",(void*)f_11090},
{"f_11105ChickenBridge.scm",(void*)f_11105},
{"f_11097ChickenBridge.scm",(void*)f_11097},
{"f_11061ChickenBridge.scm",(void*)f_11061},
{"f_11065ChickenBridge.scm",(void*)f_11065},
{"f_11026ChickenBridge.scm",(void*)f_11026},
{"f_11030ChickenBridge.scm",(void*)f_11030},
{"f_10880ChickenBridge.scm",(void*)f_10880},
{"f_10990ChickenBridge.scm",(void*)f_10990},
{"f_11005ChickenBridge.scm",(void*)f_11005},
{"f_10997ChickenBridge.scm",(void*)f_10997},
{"f_10961ChickenBridge.scm",(void*)f_10961},
{"f_10965ChickenBridge.scm",(void*)f_10965},
{"f_10926ChickenBridge.scm",(void*)f_10926},
{"f_10930ChickenBridge.scm",(void*)f_10930},
{"f_10883ChickenBridge.scm",(void*)f_10883},
{"f_10886ChickenBridge.scm",(void*)f_10886},
{"f_10889ChickenBridge.scm",(void*)f_10889},
{"f_10897ChickenBridge.scm",(void*)f_10897},
{"f_10905ChickenBridge.scm",(void*)f_10905},
{"f_10895ChickenBridge.scm",(void*)f_10895},
{"f_10658ChickenBridge.scm",(void*)f_10658},
{"f_10662ChickenBridge.scm",(void*)f_10662},
{"f_10871ChickenBridge.scm",(void*)f_10871},
{"f_10824ChickenBridge.scm",(void*)f_10824},
{"f_10836ChickenBridge.scm",(void*)f_10836},
{"f_10692ChickenBridge.scm",(void*)f_10692},
{"f_10695ChickenBridge.scm",(void*)f_10695},
{"f_10701ChickenBridge.scm",(void*)f_10701},
{"f_10704ChickenBridge.scm",(void*)f_10704},
{"f_10792ChickenBridge.scm",(void*)f_10792},
{"f_10707ChickenBridge.scm",(void*)f_10707},
{"f_10786ChickenBridge.scm",(void*)f_10786},
{"f_10713ChickenBridge.scm",(void*)f_10713},
{"f_10716ChickenBridge.scm",(void*)f_10716},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10671ChickenBridge.scm",(void*)f_10671},
{"f_10678ChickenBridge.scm",(void*)f_10678},
{"f_10188ChickenBridge.scm",(void*)f_10188},
{"f_10192ChickenBridge.scm",(void*)f_10192},
{"f_10628ChickenBridge.scm",(void*)f_10628},
{"f_10643ChickenBridge.scm",(void*)f_10643},
{"f_10635ChickenBridge.scm",(void*)f_10635},
{"f_10599ChickenBridge.scm",(void*)f_10599},
{"f_10603ChickenBridge.scm",(void*)f_10603},
{"f_10564ChickenBridge.scm",(void*)f_10564},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10529ChickenBridge.scm",(void*)f_10529},
{"f_10533ChickenBridge.scm",(void*)f_10533},
{"f_10195ChickenBridge.scm",(void*)f_10195},
{"f_10493ChickenBridge.scm",(void*)f_10493},
{"f_10508ChickenBridge.scm",(void*)f_10508},
{"f_10500ChickenBridge.scm",(void*)f_10500},
{"f_10464ChickenBridge.scm",(void*)f_10464},
{"f_10468ChickenBridge.scm",(void*)f_10468},
{"f_10429ChickenBridge.scm",(void*)f_10429},
{"f_10433ChickenBridge.scm",(void*)f_10433},
{"f_10394ChickenBridge.scm",(void*)f_10394},
{"f_10398ChickenBridge.scm",(void*)f_10398},
{"f_10198ChickenBridge.scm",(void*)f_10198},
{"f_10358ChickenBridge.scm",(void*)f_10358},
{"f_10373ChickenBridge.scm",(void*)f_10373},
{"f_10365ChickenBridge.scm",(void*)f_10365},
{"f_10329ChickenBridge.scm",(void*)f_10329},
{"f_10333ChickenBridge.scm",(void*)f_10333},
{"f_10294ChickenBridge.scm",(void*)f_10294},
{"f_10298ChickenBridge.scm",(void*)f_10298},
{"f_10259ChickenBridge.scm",(void*)f_10259},
{"f_10263ChickenBridge.scm",(void*)f_10263},
{"f_10201ChickenBridge.scm",(void*)f_10201},
{"f_10204ChickenBridge.scm",(void*)f_10204},
{"f_10207ChickenBridge.scm",(void*)f_10207},
{"f_10230ChickenBridge.scm",(void*)f_10230},
{"f_10238ChickenBridge.scm",(void*)f_10238},
{"f_10213ChickenBridge.scm",(void*)f_10213},
{"f_10216ChickenBridge.scm",(void*)f_10216},
{"f_10108ChickenBridge.scm",(void*)f_10108},
{"f_10099ChickenBridge.scm",(void*)f_10099},
{"f_10027ChickenBridge.scm",(void*)f_10027},
{"f_10031ChickenBridge.scm",(void*)f_10031},
{"f_10034ChickenBridge.scm",(void*)f_10034},
{"f_9772ChickenBridge.scm",(void*)f_9772},
{"f_9776ChickenBridge.scm",(void*)f_9776},
{"f_9997ChickenBridge.scm",(void*)f_9997},
{"f_10012ChickenBridge.scm",(void*)f_10012},
{"f_10004ChickenBridge.scm",(void*)f_10004},
{"f_9968ChickenBridge.scm",(void*)f_9968},
{"f_9972ChickenBridge.scm",(void*)f_9972},
{"f_9933ChickenBridge.scm",(void*)f_9933},
{"f_9937ChickenBridge.scm",(void*)f_9937},
{"f_9779ChickenBridge.scm",(void*)f_9779},
{"f_9897ChickenBridge.scm",(void*)f_9897},
{"f_9912ChickenBridge.scm",(void*)f_9912},
{"f_9904ChickenBridge.scm",(void*)f_9904},
{"f_9868ChickenBridge.scm",(void*)f_9868},
{"f_9872ChickenBridge.scm",(void*)f_9872},
{"f_9833ChickenBridge.scm",(void*)f_9833},
{"f_9837ChickenBridge.scm",(void*)f_9837},
{"f_9782ChickenBridge.scm",(void*)f_9782},
{"f_9785ChickenBridge.scm",(void*)f_9785},
{"f_9788ChickenBridge.scm",(void*)f_9788},
{"f_9800ChickenBridge.scm",(void*)f_9800},
{"f_9812ChickenBridge.scm",(void*)f_9812},
{"f_9794ChickenBridge.scm",(void*)f_9794},
{"f_9657ChickenBridge.scm",(void*)f_9657},
{"f_9770ChickenBridge.scm",(void*)f_9770},
{"f_9667ChickenBridge.scm",(void*)f_9667},
{"f_9755ChickenBridge.scm",(void*)f_9755},
{"f_9766ChickenBridge.scm",(void*)f_9766},
{"f_9762ChickenBridge.scm",(void*)f_9762},
{"f_9670ChickenBridge.scm",(void*)f_9670},
{"f_9752ChickenBridge.scm",(void*)f_9752},
{"f_9678ChickenBridge.scm",(void*)f_9678},
{"f_9742ChickenBridge.scm",(void*)f_9742},
{"f_9687ChickenBridge.scm",(void*)f_9687},
{"f_9706ChickenBridge.scm",(void*)f_9706},
{"f_9735ChickenBridge.scm",(void*)f_9735},
{"f_9716ChickenBridge.scm",(void*)f_9716},
{"f_9731ChickenBridge.scm",(void*)f_9731},
{"f_9719ChickenBridge.scm",(void*)f_9719},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9700ChickenBridge.scm",(void*)f_9700},
{"f_9681ChickenBridge.scm",(void*)f_9681},
{"f_9684ChickenBridge.scm",(void*)f_9684},
{"f_9611ChickenBridge.scm",(void*)f_9611},
{"f_9602ChickenBridge.scm",(void*)f_9602},
{"f_9301ChickenBridge.scm",(void*)f_9301},
{"f_9308ChickenBridge.scm",(void*)f_9308},
{"f_9597ChickenBridge.scm",(void*)f_9597},
{"f_9311ChickenBridge.scm",(void*)f_9311},
{"f_9582ChickenBridge.scm",(void*)f_9582},
{"f_9574ChickenBridge.scm",(void*)f_9574},
{"f_9566ChickenBridge.scm",(void*)f_9566},
{"f_9569ChickenBridge.scm",(void*)f_9569},
{"f_9537ChickenBridge.scm",(void*)f_9537},
{"f_9560ChickenBridge.scm",(void*)f_9560},
{"f_9543ChickenBridge.scm",(void*)f_9543},
{"f_9547ChickenBridge.scm",(void*)f_9547},
{"f_9314ChickenBridge.scm",(void*)f_9314},
{"f_9320ChickenBridge.scm",(void*)f_9320},
{"f_9412ChickenBridge.scm",(void*)f_9412},
{"f_9524ChickenBridge.scm",(void*)f_9524},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_9435ChickenBridge.scm",(void*)f_9435},
{"f_9437ChickenBridge.scm",(void*)f_9437},
{"f_9486ChickenBridge.scm",(void*)f_9486},
{"f_9521ChickenBridge.scm",(void*)f_9521},
{"f_9510ChickenBridge.scm",(void*)f_9510},
{"f_9655ChickenBridge.scm",(void*)f_9655},
{"f_9630ChickenBridge.scm",(void*)f_9630},
{"f_9651ChickenBridge.scm",(void*)f_9651},
{"f_9647ChickenBridge.scm",(void*)f_9647},
{"f_9639ChickenBridge.scm",(void*)f_9639},
{"f_9503ChickenBridge.scm",(void*)f_9503},
{"f_9496ChickenBridge.scm",(void*)f_9496},
{"f_9444ChickenBridge.scm",(void*)f_9444},
{"f_9484ChickenBridge.scm",(void*)f_9484},
{"f_9448ChickenBridge.scm",(void*)f_9448},
{"f_9480ChickenBridge.scm",(void*)f_9480},
{"f_9467ChickenBridge.scm",(void*)f_9467},
{"f_9475ChickenBridge.scm",(void*)f_9475},
{"f_9471ChickenBridge.scm",(void*)f_9471},
{"f_9451ChickenBridge.scm",(void*)f_9451},
{"f_9454ChickenBridge.scm",(void*)f_9454},
{"f_9428ChickenBridge.scm",(void*)f_9428},
{"f_9415ChickenBridge.scm",(void*)f_9415},
{"f_9424ChickenBridge.scm",(void*)f_9424},
{"f_9419ChickenBridge.scm",(void*)f_9419},
{"f_9326ChickenBridge.scm",(void*)f_9326},
{"f_9406ChickenBridge.scm",(void*)f_9406},
{"f_9386ChickenBridge.scm",(void*)f_9386},
{"f_9392ChickenBridge.scm",(void*)f_9392},
{"f_9403ChickenBridge.scm",(void*)f_9403},
{"f_9383ChickenBridge.scm",(void*)f_9383},
{"f_9371ChickenBridge.scm",(void*)f_9371},
{"f_9374ChickenBridge.scm",(void*)f_9374},
{"f_9329ChickenBridge.scm",(void*)f_9329},
{"f_9365ChickenBridge.scm",(void*)f_9365},
{"f_9360ChickenBridge.scm",(void*)f_9360},
{"f_9332ChickenBridge.scm",(void*)f_9332},
{"f_9345ChickenBridge.scm",(void*)f_9345},
{"f_9335ChickenBridge.scm",(void*)f_9335},
{"f_9338ChickenBridge.scm",(void*)f_9338},
{"f_9341ChickenBridge.scm",(void*)f_9341},
{"f_9178ChickenBridge.scm",(void*)f_9178},
{"f_9237ChickenBridge.scm",(void*)f_9237},
{"f_9247ChickenBridge.scm",(void*)f_9247},
{"f_9249ChickenBridge.scm",(void*)f_9249},
{"f_9278ChickenBridge.scm",(void*)f_9278},
{"f_9283ChickenBridge.scm",(void*)f_9283},
{"f_9268ChickenBridge.scm",(void*)f_9268},
{"f_9199ChickenBridge.scm",(void*)f_9199},
{"f_9231ChickenBridge.scm",(void*)f_9231},
{"f_9159ChickenBridge.scm",(void*)f_9159},
{"f_9166ChickenBridge.scm",(void*)f_9166},
{"f_9173ChickenBridge.scm",(void*)f_9173},
{"f_9140ChickenBridge.scm",(void*)f_9140},
{"f_9147ChickenBridge.scm",(void*)f_9147},
{"f_9154ChickenBridge.scm",(void*)f_9154},
{"f_8960ChickenBridge.scm",(void*)f_8960},
{"f_8964ChickenBridge.scm",(void*)f_8964},
{"f_8967ChickenBridge.scm",(void*)f_8967},
{"f_8970ChickenBridge.scm",(void*)f_8970},
{"f_8973ChickenBridge.scm",(void*)f_8973},
{"f_9130ChickenBridge.scm",(void*)f_9130},
{"f_9137ChickenBridge.scm",(void*)f_9137},
{"f_8976ChickenBridge.scm",(void*)f_8976},
{"f_8979ChickenBridge.scm",(void*)f_8979},
{"f_8985ChickenBridge.scm",(void*)f_8985},
{"f_8991ChickenBridge.scm",(void*)f_8991},
{"f_9054ChickenBridge.scm",(void*)f_9054},
{"f_9068ChickenBridge.scm",(void*)f_9068},
{"f_8994ChickenBridge.scm",(void*)f_8994},
{"f_8997ChickenBridge.scm",(void*)f_8997},
{"f_9003ChickenBridge.scm",(void*)f_9003},
{"f_9016ChickenBridge.scm",(void*)f_9016},
{"f_9006ChickenBridge.scm",(void*)f_9006},
{"f_9009ChickenBridge.scm",(void*)f_9009},
{"f_8950ChickenBridge.scm",(void*)f_8950},
{"f_8895ChickenBridge.scm",(void*)f_8895},
{"f_8886ChickenBridge.scm",(void*)f_8886},
{"f_8769ChickenBridge.scm",(void*)f_8769},
{"f_8760ChickenBridge.scm",(void*)f_8760},
{"f_8751ChickenBridge.scm",(void*)f_8751},
{"f_8742ChickenBridge.scm",(void*)f_8742},
{"f_8733ChickenBridge.scm",(void*)f_8733},
{"f_8715ChickenBridge.scm",(void*)f_8715},
{"f_8706ChickenBridge.scm",(void*)f_8706},
{"f_8697ChickenBridge.scm",(void*)f_8697},
{"f_8679ChickenBridge.scm",(void*)f_8679},
{"f_8670ChickenBridge.scm",(void*)f_8670},
{"f_8661ChickenBridge.scm",(void*)f_8661},
{"f_8646ChickenBridge.scm",(void*)f_8646},
{"f_8601ChickenBridge.scm",(void*)f_8601},
{"f_8583ChickenBridge.scm",(void*)f_8583},
{"f_8574ChickenBridge.scm",(void*)f_8574},
{"f_8547ChickenBridge.scm",(void*)f_8547},
{"f_8529ChickenBridge.scm",(void*)f_8529},
{"f_8511ChickenBridge.scm",(void*)f_8511},
{"f_8502ChickenBridge.scm",(void*)f_8502},
{"f_8490ChickenBridge.scm",(void*)f_8490},
{"f_8324ChickenBridge.scm",(void*)f_8324},
{"f_8425ChickenBridge.scm",(void*)f_8425},
{"f_8474ChickenBridge.scm",(void*)f_8474},
{"f_8470ChickenBridge.scm",(void*)f_8470},
{"f_8442ChickenBridge.scm",(void*)f_8442},
{"f_8377ChickenBridge.scm",(void*)f_8377},
{"f_8386ChickenBridge.scm",(void*)f_8386},
{"f_8370ChickenBridge.scm",(void*)f_8370},
{"f_8189ChickenBridge.scm",(void*)f_8189},
{"f_8315ChickenBridge.scm",(void*)f_8315},
{"f_8311ChickenBridge.scm",(void*)f_8311},
{"f_8289ChickenBridge.scm",(void*)f_8289},
{"f_8219ChickenBridge.scm",(void*)f_8219},
{"f_8235ChickenBridge.scm",(void*)f_8235},
{"f_8144ChickenBridge.scm",(void*)f_8144},
{"f_8187ChickenBridge.scm",(void*)f_8187},
{"f_8176ChickenBridge.scm",(void*)f_8176},
{"f_8028ChickenBridge.scm",(void*)f_8028},
{"f_8142ChickenBridge.scm",(void*)f_8142},
{"f_8043ChickenBridge.scm",(void*)f_8043},
{"f_8073ChickenBridge.scm",(void*)f_8073},
{"f_8092ChickenBridge.scm",(void*)f_8092},
{"f_8077ChickenBridge.scm",(void*)f_8077},
{"f_8056ChickenBridge.scm",(void*)f_8056},
{"f_7906ChickenBridge.scm",(void*)f_7906},
{"f_8026ChickenBridge.scm",(void*)f_8026},
{"f_7921ChickenBridge.scm",(void*)f_7921},
{"f_7951ChickenBridge.scm",(void*)f_7951},
{"f_7970ChickenBridge.scm",(void*)f_7970},
{"f_7955ChickenBridge.scm",(void*)f_7955},
{"f_7934ChickenBridge.scm",(void*)f_7934},
{"f_7809ChickenBridge.scm",(void*)f_7809},
{"f_7904ChickenBridge.scm",(void*)f_7904},
{"f_7824ChickenBridge.scm",(void*)f_7824},
{"f_7870ChickenBridge.scm",(void*)f_7870},
{"f_7855ChickenBridge.scm",(void*)f_7855},
{"f_7837ChickenBridge.scm",(void*)f_7837},
{"f_7756ChickenBridge.scm",(void*)f_7756},
{"f_7794ChickenBridge.scm",(void*)f_7794},
{"f_7801ChickenBridge.scm",(void*)f_7801},
{"f_7779ChickenBridge.scm",(void*)f_7779},
{"f_7754ChickenBridge.scm",(void*)f_7754},
{"f_7726ChickenBridge.scm",(void*)f_7726},
{"f_7728ChickenBridge.scm",(void*)f_7728},
{"f_7706ChickenBridge.scm",(void*)f_7706},
{"f_7654ChickenBridge.scm",(void*)f_7654},
{"f_7691ChickenBridge.scm",(void*)f_7691},
{"f_7658ChickenBridge.scm",(void*)f_7658},
{"f_7674ChickenBridge.scm",(void*)f_7674},
{"f_7676ChickenBridge.scm",(void*)f_7676},
{"f_7641ChickenBridge.scm",(void*)f_7641},
{"f_7635ChickenBridge.scm",(void*)f_7635},
{"f_7616ChickenBridge.scm",(void*)f_7616},
{"f_7597ChickenBridge.scm",(void*)f_7597},
{"f_7591ChickenBridge.scm",(void*)f_7591},
{"f_7551ChickenBridge.scm",(void*)f_7551},
{"f_7532ChickenBridge.scm",(void*)f_7532},
{"f_7304ChickenBridge.scm",(void*)f_7304},
{"f_7509ChickenBridge.scm",(void*)f_7509},
{"f_7524ChickenBridge.scm",(void*)f_7524},
{"f_7516ChickenBridge.scm",(void*)f_7516},
{"f_7480ChickenBridge.scm",(void*)f_7480},
{"f_7484ChickenBridge.scm",(void*)f_7484},
{"f_7445ChickenBridge.scm",(void*)f_7445},
{"f_7449ChickenBridge.scm",(void*)f_7449},
{"f_7308ChickenBridge.scm",(void*)f_7308},
{"f_7409ChickenBridge.scm",(void*)f_7409},
{"f_7424ChickenBridge.scm",(void*)f_7424},
{"f_7416ChickenBridge.scm",(void*)f_7416},
{"f_7380ChickenBridge.scm",(void*)f_7380},
{"f_7384ChickenBridge.scm",(void*)f_7384},
{"f_7345ChickenBridge.scm",(void*)f_7345},
{"f_7349ChickenBridge.scm",(void*)f_7349},
{"f_7311ChickenBridge.scm",(void*)f_7311},
{"f_7314ChickenBridge.scm",(void*)f_7314},
{"f_7317ChickenBridge.scm",(void*)f_7317},
{"f_7298ChickenBridge.scm",(void*)f_7298},
{"f_7292ChickenBridge.scm",(void*)f_7292},
{"f_7286ChickenBridge.scm",(void*)f_7286},
{"f_7058ChickenBridge.scm",(void*)f_7058},
{"f_7263ChickenBridge.scm",(void*)f_7263},
{"f_7278ChickenBridge.scm",(void*)f_7278},
{"f_7270ChickenBridge.scm",(void*)f_7270},
{"f_7234ChickenBridge.scm",(void*)f_7234},
{"f_7238ChickenBridge.scm",(void*)f_7238},
{"f_7199ChickenBridge.scm",(void*)f_7199},
{"f_7203ChickenBridge.scm",(void*)f_7203},
{"f_7062ChickenBridge.scm",(void*)f_7062},
{"f_7163ChickenBridge.scm",(void*)f_7163},
{"f_7178ChickenBridge.scm",(void*)f_7178},
{"f_7170ChickenBridge.scm",(void*)f_7170},
{"f_7134ChickenBridge.scm",(void*)f_7134},
{"f_7138ChickenBridge.scm",(void*)f_7138},
{"f_7099ChickenBridge.scm",(void*)f_7099},
{"f_7103ChickenBridge.scm",(void*)f_7103},
{"f_7065ChickenBridge.scm",(void*)f_7065},
{"f_7068ChickenBridge.scm",(void*)f_7068},
{"f_7078ChickenBridge.scm",(void*)f_7078},
{"f_7010ChickenBridge.scm",(void*)f_7010},
{"f_7048ChickenBridge.scm",(void*)f_7048},
{"f_7037ChickenBridge.scm",(void*)f_7037},
{"f_6989ChickenBridge.scm",(void*)f_6989},
{"f_6965ChickenBridge.scm",(void*)f_6965},
{"f_6959ChickenBridge.scm",(void*)f_6959},
{"f_6900ChickenBridge.scm",(void*)f_6900},
{"f_6913ChickenBridge.scm",(void*)f_6913},
{"f_6949ChickenBridge.scm",(void*)f_6949},
{"f_6873ChickenBridge.scm",(void*)f_6873},
{"f_6778ChickenBridge.scm",(void*)f_6778},
{"f_6782ChickenBridge.scm",(void*)f_6782},
{"f_6785ChickenBridge.scm",(void*)f_6785},
{"f_6797ChickenBridge.scm",(void*)f_6797},
{"f_6819ChickenBridge.scm",(void*)f_6819},
{"f_6763ChickenBridge.scm",(void*)f_6763},
{"f_6748ChickenBridge.scm",(void*)f_6748},
{"f_6688ChickenBridge.scm",(void*)f_6688},
{"f_6700ChickenBridge.scm",(void*)f_6700},
{"f_6695ChickenBridge.scm",(void*)f_6695},
{"f_6690ChickenBridge.scm",(void*)f_6690},
{"f_6669ChickenBridge.scm",(void*)f_6669},
{"f_6648ChickenBridge.scm",(void*)f_6648},
{"f_6660ChickenBridge.scm",(void*)f_6660},
{"f_6633ChickenBridge.scm",(void*)f_6633},
{"f_6551ChickenBridge.scm",(void*)f_6551},
{"f_6565ChickenBridge.scm",(void*)f_6565},
{"f_6517ChickenBridge.scm",(void*)f_6517},
{"f_6529ChickenBridge.scm",(void*)f_6529},
{"f_6504ChickenBridge.scm",(void*)f_6504},
{"f_6494ChickenBridge.scm",(void*)f_6494},
{"f_6476ChickenBridge.scm",(void*)f_6476},
{"f_6465ChickenBridge.scm",(void*)f_6465},
{"f_6427ChickenBridge.scm",(void*)f_6427},
{"f_6420ChickenBridge.scm",(void*)f_6420},
{"f_6396ChickenBridge.scm",(void*)f_6396},
{"f_6389ChickenBridge.scm",(void*)f_6389},
{"f_6382ChickenBridge.scm",(void*)f_6382},
{"f_6356ChickenBridge.scm",(void*)f_6356},
{"f_6345ChickenBridge.scm",(void*)f_6345},
{"f_6311ChickenBridge.scm",(void*)f_6311},
{"f_6284ChickenBridge.scm",(void*)f_6284},
{"f_6243ChickenBridge.scm",(void*)f_6243},
{"f_6249ChickenBridge.scm",(void*)f_6249},
{"f_6259ChickenBridge.scm",(void*)f_6259},
{"f_6157ChickenBridge.scm",(void*)f_6157},
{"f_6109ChickenBridge.scm",(void*)f_6109},
{"f_6121ChickenBridge.scm",(void*)f_6121},
{"f_6138ChickenBridge.scm",(void*)f_6138},
{"f_6099ChickenBridge.scm",(void*)f_6099},
{"f_6059ChickenBridge.scm",(void*)f_6059},
{"f_6089ChickenBridge.scm",(void*)f_6089},
{"f_6011ChickenBridge.scm",(void*)f_6011},
{"f_6045ChickenBridge.scm",(void*)f_6045},
{"f_5988ChickenBridge.scm",(void*)f_5988},
{"f_5982ChickenBridge.scm",(void*)f_5982},
{"f_5967ChickenBridge.scm",(void*)f_5967},
{"f_5953ChickenBridge.scm",(void*)f_5953},
{"f_5943ChickenBridge.scm",(void*)f_5943},
{"f_5933ChickenBridge.scm",(void*)f_5933},
{"f_5923ChickenBridge.scm",(void*)f_5923},
{"f_5913ChickenBridge.scm",(void*)f_5913},
{"f_5884ChickenBridge.scm",(void*)f_5884},
{"f_5893ChickenBridge.scm",(void*)f_5893},
{"f_5898ChickenBridge.scm",(void*)f_5898},
{"f_5873ChickenBridge.scm",(void*)f_5873},
{"f_5878ChickenBridge.scm",(void*)f_5878},
{"f_5580ChickenBridge.scm",(void*)f_5580},
{"f_5590ChickenBridge.scm",(void*)f_5590},
{"f_5841ChickenBridge.scm",(void*)f_5841},
{"f_5593ChickenBridge.scm",(void*)f_5593},
{"f_5596ChickenBridge.scm",(void*)f_5596},
{"f_5611ChickenBridge.scm",(void*)f_5611},
{"f_5621ChickenBridge.scm",(void*)f_5621},
{"f_5623ChickenBridge.scm",(void*)f_5623},
{"f_5682ChickenBridge.scm",(void*)f_5682},
{"f_5692ChickenBridge.scm",(void*)f_5692},
{"f_5809ChickenBridge.scm",(void*)f_5809},
{"f_5797ChickenBridge.scm",(void*)f_5797},
{"f_5795ChickenBridge.scm",(void*)f_5795},
{"f_5782ChickenBridge.scm",(void*)f_5782},
{"f_5736ChickenBridge.scm",(void*)f_5736},
{"f_5763ChickenBridge.scm",(void*)f_5763},
{"f_5742ChickenBridge.scm",(void*)f_5742},
{"f_5676ChickenBridge.scm",(void*)f_5676},
{"f_5635ChickenBridge.scm",(void*)f_5635},
{"f_5648ChickenBridge.scm",(void*)f_5648},
{"f_5858ChickenBridge.scm",(void*)f_5858},
{"f_5849ChickenBridge.scm",(void*)f_5849},
{"f_5857ChickenBridge.scm",(void*)f_5857},
{"f_5860ChickenBridge.scm",(void*)f_5860},
{"f_5868ChickenBridge.scm",(void*)f_5868},
{"f_5282ChickenBridge.scm",(void*)f_5282},
{"f_5535ChickenBridge.scm",(void*)f_5535},
{"f_5568ChickenBridge.scm",(void*)f_5568},
{"f_5564ChickenBridge.scm",(void*)f_5564},
{"f_5553ChickenBridge.scm",(void*)f_5553},
{"f_5549ChickenBridge.scm",(void*)f_5549},
{"f_5443ChickenBridge.scm",(void*)f_5443},
{"f_5446ChickenBridge.scm",(void*)f_5446},
{"f_5449ChickenBridge.scm",(void*)f_5449},
{"f_5529ChickenBridge.scm",(void*)f_5529},
{"f_5354ChickenBridge.scm",(void*)f_5354},
{"f_5295ChickenBridge.scm",(void*)f_5295},
{"f_5452ChickenBridge.scm",(void*)f_5452},
{"f_5459ChickenBridge.scm",(void*)f_5459},
{"f_5519ChickenBridge.scm",(void*)f_5519},
{"f_5505ChickenBridge.scm",(void*)f_5505},
{"f_5471ChickenBridge.scm",(void*)f_5471},
{"f_5497ChickenBridge.scm",(void*)f_5497},
{"f_5432ChickenBridge.scm",(void*)f_5432},
{"f_5479ChickenBridge.scm",(void*)f_5479},
{"f_5475ChickenBridge.scm",(void*)f_5475},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
