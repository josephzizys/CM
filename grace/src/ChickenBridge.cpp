/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-04 20:40
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[911];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,49,57,54,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,50,49,56,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,50,50,56,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,50,51,52,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,53,54,48,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,53,52,57,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,53,53,56,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,52,57,54,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,53,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,53,55,56,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,53,57,51,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,52,55,32,112,114,111,112,49,52,56,32,46,32,100,101,102,49,52,57,41,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,12),40,100,111,49,53,53,32,102,49,53,55,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,53,51,32,98,49,53,52,41};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,56,54,49,56,57,32,97,49,56,53,49,57,48,32,97,49,56,52,49,57,49,32,97,49,56,51,49,57,50,32,97,49,56,50,49,57,51,32,97,49,56,49,49,57,52,41,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,48,49,50,48,52,32,97,50,48,48,50,48,53,32,97,49,57,57,50,48,54,32,97,49,57,56,50,48,55,32,97,49,57,55,50,48,56,32,97,49,57,54,50,48,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,49,48,50,49,51,41};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,50,50,50,50,53,32,97,50,50,49,50,50,54,41,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,51,48,50,51,51,32,97,50,50,57,50,51,52,32,97,50,50,56,50,51,53,41,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,51,55,50,52,48,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,52,50,50,52,53,41,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,52,57,50,53,50,32,97,50,52,56,50,53,51,32,97,50,52,55,50,53,52,32,97,50,52,54,50,53,53,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,54,48,50,54,51,32,97,50,53,57,50,54,52,32,97,50,53,56,50,54,53,32,97,50,53,55,50,54,54,41,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,54,56,50,55,49,41,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,56,50,50,56,53,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,56,54,50,56,57,41,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,57,48,50,57,51,41,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,49,56,51,50,49,32,97,51,49,55,51,50,50,41,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,50,52,51,50,55,41,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,51,54,51,51,57,41,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,52,52,51,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,12),40,97,55,52,56,52,32,122,51,54,57,41,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,54,51,32,120,49,51,54,52,32,120,50,51,54,53,32,121,49,51,54,54,32,121,50,51,54,55,32,46,32,98,51,54,56,41,0,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,12),40,97,55,53,50,52,32,122,51,56,49,41,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,12),40,97,55,53,53,48,32,122,51,56,50,41,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,55,48,32,120,49,51,55,49,32,120,50,51,55,50,32,105,49,51,55,51,32,46,32,97,114,103,115,51,55,52,41,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,56,52,41,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,56,53,41};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,56,54,32,46,32,97,114,103,115,51,56,55,41};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,12),40,97,55,55,49,50,32,110,51,57,48,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,56,56,32,115,116,101,112,115,51,56,57,41,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,55,55,51,54,32,118,51,57,52,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,51,57,49,32,112,108,97,99,101,115,51,57,50,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,12),40,97,55,55,56,50,32,120,52,51,53,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,57,53,32,46,32,97,114,103,115,51,57,54,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,52,48,41,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,15),40,100,111,52,52,57,32,116,97,105,108,52,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,52,49,32,99,111,111,114,100,115,52,52,50,32,98,97,115,101,52,52,51,41};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,53,57,32,46,32,97,114,103,115,52,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,54,50,32,108,111,119,52,54,51,32,104,105,103,104,52,54,52,32,46,32,97,114,103,115,52,54,53,41};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,52,55,56,32,108,98,52,55,57,32,117,98,52,56,48,32,109,111,100,101,52,56,49,41,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,12),40,97,56,51,51,55,32,110,52,56,54,41,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,55,49,32,108,98,52,55,50,32,117,98,52,55,51,32,46,32,109,111,100,101,52,55,52,41,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,27),40,100,111,52,57,56,32,105,53,48,48,32,107,53,48,49,32,108,53,48,50,32,116,53,48,51,41,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,52,57,48,32,107,101,121,110,117,109,52,57,49,32,46,32,97,114,103,115,52,57,50,41,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,49,50,32,98,53,49,51,41,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,49,52,41};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,49,53,32,46,32,97,114,103,115,53,49,54,41,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,54,50,32,118,97,114,105,53,54,51,32,109,111,100,101,53,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,12),40,97,56,56,54,54,32,118,53,54,57,41,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,53,56,32,118,97,114,105,53,53,57,32,46,32,109,111,100,101,53,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,22),40,100,111,53,55,53,32,105,53,55,55,32,106,53,55,56,32,118,53,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,53,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,53,56,52,41,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,53,56,53,41,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,50,56,41,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,50,57,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,51,49,41,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,12),40,100,111,54,52,51,32,105,54,52,53,41,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,15),40,100,111,54,53,57,32,116,97,105,108,54,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,17),40,100,111,54,53,53,32,105,54,53,55,32,110,54,53,56,41,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,51,50,32,115,117,109,54,51,51,32,46,32,97,114,103,115,54,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,7),40,97,57,53,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,7),40,97,57,53,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,49,50,32,111,99,116,55,49,51,32,101,114,114,55,49,52,41,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,7),40,97,57,53,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,7),40,97,57,54,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,50,48,32,100,111,99,116,55,50,49,32,101,114,114,63,55,50,50,41,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,39),40,100,111,55,50,53,32,116,97,105,108,55,50,55,32,100,101,102,111,55,50,56,32,116,104,105,115,55,50,57,32,114,101,115,108,55,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,39),40,100,111,55,51,57,32,116,97,105,108,55,52,49,32,100,101,102,111,55,52,50,32,116,104,105,115,55,52,51,32,114,101,115,108,55,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,51,55,41,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,53,32,116,97,105,108,55,53,55,32,100,101,102,111,55,53,56,32,116,104,105,115,55,53,57,32,114,101,115,108,55,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,53,51,41,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,55,54,57,41,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,23),40,100,111,55,55,53,32,116,97,105,108,55,55,55,32,108,97,115,116,55,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,55,55,50,41,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,13),40,97,49,48,49,54,55,32,122,55,56,50,41,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,55,55,48,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,23),40,100,111,55,57,48,32,116,97,105,108,55,57,50,32,108,97,115,116,55,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,55,56,55,32,111,114,105,103,55,56,56,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,13),40,97,49,48,51,50,48,32,122,55,57,55,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,55,56,51,32,121,55,56,52,41,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,107,116,114,117,109,32,116,105,109,101,56,56,52,32,115,105,122,101,56,56,53,32,102,114,101,113,115,56,56,54,32,97,109,112,115,56,56,55,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,116,105,109,101,32,120,56,57,50,41,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,115,105,122,101,32,120,56,57,56,41,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,21),40,115,112,101,107,116,114,117,109,45,102,114,101,113,115,32,120,57,48,52,41,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,97,109,112,115,32,120,57,49,48,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,102,114,101,113,115,57,50,48,32,46,32,97,114,103,115,57,50,49,41,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,12),40,100,111,57,51,48,32,105,57,51,50,41,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,50,52,41,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,13),40,97,49,48,55,50,57,32,97,57,52,49,41,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,51,56,41,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,13),40,97,49,48,55,54,48,32,97,57,52,56,41,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,52,53,41,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,55,57,48,32,120,57,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,50,51,32,120,57,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,51,51,32,104,57,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,52,51,32,104,57,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,53,55,32,104,57,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,55,50,32,104,57,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,52,49,32,97,57,55,56,32,98,57,55,57,41,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,53,54,32,97,57,56,48,32,98,57,56,49,41,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,55,52,32,97,57,56,50,32,98,57,56,51,41,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,56,57,32,97,57,56,52,32,98,57,56,53,41,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,38),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,57,57,57,32,46,32,97,114,103,115,49,48,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,35),40,100,111,49,49,53,52,32,116,97,105,108,49,49,53,54,32,115,105,122,101,49,49,53,55,32,97,109,112,108,49,49,53,56,41,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,51,50,32,105,49,49,51,52,32,102,49,49,51,53,32,120,49,49,51,54,41,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,24),40,100,111,49,49,50,54,32,110,101,103,49,49,50,56,32,112,111,115,49,49,50,57,41};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,24),40,102,95,55,52,54,50,32,97,51,53,55,51,54,48,32,97,51,53,54,51,54,49,41};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,20),40,100,111,49,49,49,56,32,107,49,49,50,48,32,97,49,49,50,49,41,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,49,49,48,32,109,114,97,116,105,111,49,49,49,49,32,105,110,100,101,120,49,49,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,49,56,50,32,108,101,110,103,116,104,49,49,56,51,32,115,116,114,101,97,109,49,49,56,52,32,100,101,102,97,117,108,116,49,49,56,53,32,111,109,105,116,49,49,56,54,32,114,101,112,115,49,49,56,55,41,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,49,56,57,32,118,97,108,49,49,57,48,41,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,49,57,50,41,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,49,57,56,41,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,50,48,52,41,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,50,49,51,32,118,97,108,49,50,49,52,41};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,50,49,54,41,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,50,50,50,41,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,50,52,56,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,50,53,50,41,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,50,53,53,32,118,97,108,49,50,53,54,41,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,50,53,56,41,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,50,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,50,54,55,32,118,97,108,49,50,54,56,41,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,50,55,48,41,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,50,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,50,55,57,32,118,97,108,49,50,56,48,41,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,50,57,48,32,120,49,50,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,50,56,53,32,118,97,108,49,50,56,54,41,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,50,56,56,41,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,51,50,55,32,118,97,108,49,51,50,56,41,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,51,51,48,41,0,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,14),40,97,49,50,54,54,56,32,120,49,51,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,51,53,48,32,100,97,116,97,49,51,53,49,32,102,111,114,49,51,53,50,32,114,101,112,49,51,53,51,32,102,108,97,103,115,49,51,53,52,32,108,101,110,49,51,53,53,32,100,112,101,114,49,51,53,54,32,103,101,116,114,49,51,53,55,32,109,97,112,114,49,51,53,56,41,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,51,56,53,41,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,51,56,54,41,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,20),40,100,111,49,51,57,49,32,105,49,51,57,51,32,101,49,51,57,52,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,57,56,32,110,49,52,48,48,32,101,49,52,48,49,32,102,49,52,48,50,41,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,51,56,55,32,46,32,97,114,103,115,49,51,56,56,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,8),40,100,111,49,52,50,54,41};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,50,50,32,100,121,110,63,49,52,50,52,32,115,116,111,112,49,52,50,53,41,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,52,48,56,41};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,52,52,54,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,52,52,55,32,111,98,106,49,52,52,56,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,14),40,97,49,51,50,52,52,32,120,49,52,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,52,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,23),40,97,49,51,51,51,56,32,102,110,49,53,48,57,32,111,98,106,49,53,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,52,54,54,32,46,32,97,114,103,115,49,52,54,55,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,53,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,53,51,54,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,53,51,57,32,118,97,108,49,53,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,23),40,97,49,51,55,54,56,32,102,110,49,54,51,55,32,111,98,106,49,54,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,53,54,53,32,46,32,97,114,103,115,49,53,54,54,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,54,52,54,41,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,23),40,97,49,52,52,51,53,32,102,110,49,55,48,56,32,111,98,106,49,55,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,54,54,53,32,46,32,97,114,103,115,49,54,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,55,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,23),40,97,49,52,55,50,50,32,102,110,49,55,54,51,32,111,98,106,49,55,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,55,50,48,32,46,32,97,114,103,115,49,55,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,55,52,32,105,49,55,55,54,32,106,49,55,55,55,32,118,49,55,55,56,41,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,55,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,23),40,97,49,53,48,54,55,32,102,110,49,56,53,56,32,111,98,106,49,56,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,55,56,54,32,46,32,97,114,103,115,49,55,56,55,41,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,14),40,100,111,49,56,55,52,32,105,49,56,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,56,54,57,32,115,116,97,114,116,49,56,55,48,32,115,116,101,112,49,56,55,49,32,119,105,100,116,104,49,56,55,50,32,101,110,100,49,56,55,51,41,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,56,54,55,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,57,48,49,41,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,57,48,52,32,118,97,108,49,57,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,57,48,55,41,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,57,49,51,41,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,57,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,57,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,57,50,56,32,118,97,108,49,57,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,57,51,49,41,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,14),40,97,49,53,57,53,50,32,105,50,48,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,23),40,97,49,53,57,52,54,32,102,110,50,48,49,50,32,111,98,106,50,48,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,17),40,97,49,54,49,56,51,32,105,116,101,109,49,57,54,55,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,48,50,53,41,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,57,53,55,32,46,32,97,114,103,115,49,57,53,56,41,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,37),40,100,111,50,49,49,50,32,116,97,105,108,50,49,49,52,32,105,110,100,101,120,50,49,49,53,32,116,111,116,97,108,50,49,49,54,41,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,48,54,32,116,97,105,108,50,49,48,56,41,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,49,48,50,32,102,105,120,63,50,49,48,51,41,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,27),40,100,111,50,49,51,52,32,116,97,105,108,50,49,51,54,32,105,110,100,101,120,50,49,51,55,41,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,49,51,50,32,114,50,49,51,51,41,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,52,51,32,116,97,105,108,50,49,52,53,41,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,51,57,32,105,116,101,109,50,49,52,49,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,49,50,50,41,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,23),40,97,49,55,50,54,54,32,102,110,50,50,55,49,32,111,98,106,50,50,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,14),40,97,49,55,48,50,48,32,115,50,49,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,8),40,100,111,50,49,54,53,41};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,41),40,100,111,50,49,56,55,32,116,97,105,108,50,49,56,57,32,111,114,100,101,114,50,49,57,48,32,108,105,115,50,49,57,49,32,112,50,49,57,50,41,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,49,57,57,32,46,32,97,114,103,115,50,50,48,48,41,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,57,54,32,116,97,105,108,50,50,57,56,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,33),40,100,111,50,50,56,54,32,116,97,105,108,50,50,56,56,32,111,117,116,50,50,56,57,32,115,117,109,50,50,57,48,41,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,50,56,52,32,111,117,116,112,117,116,115,50,50,56,53,41,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,50,54,32,108,97,115,116,50,51,50,56,41,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,26),40,100,111,50,51,48,50,32,105,50,51,48,52,32,106,50,51,48,53,32,102,50,51,48,54,41,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,35),40,100,111,50,51,49,55,32,116,97,105,108,50,51,49,57,32,112,97,115,116,50,51,50,48,32,105,116,101,109,50,51,50,49,41,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,50,56,49,41};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,51,52,54,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,14),40,97,49,56,49,51,56,32,110,50,52,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,23),40,97,49,56,49,51,50,32,102,110,50,52,49,48,32,111,98,106,50,52,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,28),40,97,49,56,51,56,52,32,105,116,101,109,50,52,50,50,32,46,32,97,114,103,115,50,52,50,51,41,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,52,50,49,41,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,51,54,55,32,46,32,97,114,103,115,50,51,54,56,41};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,54,32,116,97,105,108,50,52,55,56,41,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,52,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,48,54,32,120,50,53,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,53,48,48,32,110,101,120,116,50,53,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,53,52,32,122,50,53,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,54,52,32,122,50,53,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,53,48,53,32,121,50,53,48,54,32,108,50,53,48,55,41,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,16),40,97,49,56,57,54,57,32,114,111,119,50,54,51,51,41};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,48,56,32,105,50,54,49,48,32,109,50,54,49,49,41,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,48,49,32,108,50,54,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,20),40,100,111,50,53,57,52,32,105,50,53,57,54,32,109,50,53,57,55,41,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,20),40,100,111,50,53,56,56,32,105,50,53,57,48,32,109,50,53,57,49,41,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,49,52,32,120,50,53,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,56,50,32,116,97,105,108,50,53,56,52,41,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,20),40,100,111,50,53,55,50,32,105,50,53,55,52,32,109,50,53,55,53,41,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,54,55,32,108,50,53,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,54,50,32,105,50,53,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,20),40,97,49,57,50,54,53,32,120,50,53,53,56,32,121,50,53,53,57,41,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,52,57,32,101,50,53,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,20),40,100,111,50,53,52,51,32,101,50,53,52,53,32,115,50,53,52,54,41,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,25),40,100,111,50,53,51,53,32,116,97,105,108,50,53,51,55,32,108,101,110,50,53,51,56,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,20),40,97,49,57,52,49,52,32,120,50,53,51,51,32,121,50,53,51,52,41,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,29),40,100,111,50,53,50,50,32,112,114,101,118,50,53,50,52,32,106,50,53,50,53,32,120,50,53,50,54,41,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,49,57,32,105,50,53,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,52,56,52,32,46,32,97,114,103,115,50,52,56,53,41,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,54,55,55,32,115,116,114,105,110,103,50,54,55,56,32,112,111,115,105,116,105,111,110,50,54,55,57,41,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,54,56,52,41,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,54,57,48,41,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,54,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,55,48,53,41,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,55,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,55,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,55,49,48,32,116,121,112,101,50,55,49,49,32,112,97,116,116,101,114,110,50,55,49,50,32,112,97,114,115,101,114,50,55,49,51,32,101,109,105,116,101,114,50,55,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,55,49,57,41,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,55,54,51,32,100,101,102,50,55,54,52,41,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,55,54,54,41,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,55,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,55,54,57,41,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,55,55,48,41,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,55,55,49,32,105,50,55,55,50,41,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,55,55,54,41,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,55,55,56,32,112,111,115,105,116,105,111,110,50,55,55,57,41,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,55,56,52,41,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,55,57,48,41,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,55,57,56,32,112,97,114,115,101,100,50,55,57,57,32,112,111,115,105,116,105,111,110,50,56,48,48,41,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,56,48,49,41,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,56,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,56,49,49,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,56,49,55,41,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,56,50,55,41,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,56,50,56,32,116,121,112,50,56,50,57,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,56,51,49,32,105,110,102,111,50,56,51,50,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,56,51,52,32,100,97,116,97,50,56,51,53,32,105,110,102,111,50,56,51,54,41,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,56,51,55,32,100,97,116,97,50,56,51,56,32,105,110,102,111,50,56,51,57,41,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,56,52,50,32,105,110,102,111,50,56,52,51,32,101,114,114,102,50,56,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,56,52,53,32,105,110,102,111,50,56,52,54,32,101,114,114,102,50,56,52,55,41,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,27),40,102,95,50,48,51,55,56,32,97,114,103,115,50,56,54,48,32,101,114,114,102,50,56,54,49,41,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,56,53,57,41,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,54,57,32,116,97,105,108,50,56,55,49,41,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,36),40,102,95,50,48,51,56,54,32,117,110,105,116,50,56,54,51,32,105,110,102,111,50,56,54,52,32,101,114,114,102,50,56,54,53,41,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,56,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,8),40,97,50,48,53,56,52,41};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,26),40,97,50,48,53,57,52,32,97,50,57,48,49,32,98,50,57,48,50,32,99,50,57,48,51,41,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,8),40,97,50,48,54,57,48,41};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,26),40,97,50,48,55,48,52,32,97,50,57,49,55,32,98,50,57,49,56,32,99,50,57,49,57,41,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,49,50,32,105,50,57,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,8),40,97,50,48,55,53,55,41};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,26),40,97,50,48,55,55,49,32,97,50,57,51,57,32,98,50,57,52,48,32,99,50,57,52,49,41,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,51,52,32,105,50,57,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,8),40,97,50,48,56,52,54,41};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,26),40,97,50,48,56,53,50,32,97,50,57,53,56,32,98,50,57,53,57,32,99,50,57,54,48,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,8),40,100,111,50,57,53,52,41};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,8),40,97,50,48,56,56,53,41};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,26),40,97,50,48,56,57,49,32,97,50,57,55,54,32,98,50,57,55,55,32,99,50,57,55,56,41,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,56,56,56,32,116,111,107,101,110,115,50,56,56,57,32,102,111,114,99,101,45,97,110,100,50,56,57,48,32,108,101,118,101,108,50,56,57,49,32,116,114,97,99,101,50,56,57,50,32,101,114,114,102,50,56,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,49,53,51,41,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,49,53,55,41,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,49,54,54,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,49,54,55,32,116,121,112,50,51,49,54,56,41,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,49,55,32,116,111,107,115,51,50,49,57,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,50,49,51,32,116,121,112,51,50,49,52,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,50,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,29),40,100,111,51,50,53,51,32,119,50,51,50,53,53,32,111,107,51,50,53,54,32,108,105,51,50,53,55,41,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,8),40,100,111,51,50,53,49,41};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,50,52,54,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,52,49,50,32,101,114,114,102,51,52,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,50,50,32,102,51,54,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,49,53,32,102,51,54,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,8),40,97,50,48,52,53,53,41};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,44),40,97,50,48,52,54,50,32,115,117,99,99,101,115,115,50,56,56,51,32,114,101,115,117,108,116,115,50,56,56,52,32,114,101,109,97,105,110,115,50,56,56,53,41,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,17),40,97,50,48,52,52,57,32,101,114,114,102,50,56,56,49,41,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,53,57,57,32,114,117,108,101,51,54,48,48,32,116,111,107,101,110,115,51,54,48,49,32,116,114,97,99,101,63,51,54,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,52,50,32,116,97,105,108,51,54,52,52,41,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,54,52,48,32,108,101,118,51,54,52,49,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,53,48,32,116,97,105,108,51,54,53,50,41,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,54,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,54,53,55,41,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,54,53,57,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,54,54,51,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,54,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,55,57,53,32,120,51,55,57,54,41};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,55,57,55,41,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,56,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,56,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,56,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,56,48,57,41,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,56,49,48,32,120,51,56,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,56,49,50,41,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,56,49,53,41,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,56,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,50,51,32,97,51,56,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,56,50,49,41,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,51,53,32,108,51,56,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,56,51,51,32,97,99,99,101,115,115,111,114,51,56,51,52,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,56,51,48,32,99,108,97,117,115,101,115,51,56,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,56,52,49,32,111,112,115,51,56,52,50,41};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,56,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,56,52,52,32,118,97,108,51,56,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,54,55,32,116,97,105,108,51,56,54,57,41,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,54,50,32,116,97,105,108,51,56,54,52,41,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,20),40,100,111,51,56,53,50,32,104,51,56,53,52,32,108,51,56,53,53,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,56,52,54,32,102,111,114,109,115,51,56,52,55,32,97,114,103,115,51,56,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,56,56,49,32,99,108,97,117,115,101,115,51,56,56,50,32,111,112,115,51,56,56,51,41,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,48,49,32,110,101,120,116,51,57,48,51,41,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,56,56,55,32,99,108,97,117,115,101,115,51,56,56,56,32,111,112,115,51,56,56,57,41,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,8),40,97,50,52,48,51,52,41};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,30),40,97,50,52,48,53,50,32,99,108,97,117,115,101,51,57,56,50,32,105,103,110,111,114,101,51,57,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,57,55,57,32,99,108,97,117,115,101,115,51,57,56,48,32,111,112,115,51,57,56,49,41,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,48,48,32,110,101,120,116,52,48,48,50,41,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,57,56,53,32,99,108,97,117,115,101,115,51,57,56,54,32,111,112,115,51,57,56,55,41};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,54,55,32,110,101,120,116,52,48,54,57,41,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,48,53,55,32,99,108,97,117,115,101,115,52,48,53,56,32,111,112,115,52,48,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,26),40,100,111,52,49,48,53,32,110,101,101,100,52,49,48,55,32,110,101,120,116,52,49,48,56,41,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,48,57,53,32,99,108,97,117,115,101,115,52,48,57,54,32,111,112,115,52,48,57,55,41,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,8),40,100,111,52,49,52,57,41};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,49,52,48,32,99,108,97,117,115,101,115,52,49,52,49,32,111,112,115,52,49,52,50,41};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,49,53,57,32,99,108,97,117,115,101,115,52,49,54,48,32,111,112,115,52,49,54,49,41,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,49,55,51,32,99,108,97,117,115,101,115,52,49,55,52,32,111,112,115,52,49,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,50,52,48,32,116,121,112,101,52,50,52,49,32,97,99,99,52,50,52,50,32,104,101,97,100,52,50,52,51,41,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,50,52,52,41};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,50,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,14),40,100,111,52,49,57,50,32,97,52,49,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,48,48,32,99,52,50,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,50,49,57,32,99,108,97,117,115,101,115,52,50,50,48,32,111,112,115,52,50,50,49,41,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,51,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,51,50,49,32,99,108,97,117,115,101,115,52,51,50,50,32,111,112,115,52,51,50,51,41,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,51,52,50,32,99,108,97,117,115,101,115,52,51,52,51,32,111,112,115,52,51,52,52,41,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,51,53,56,32,99,108,97,117,115,101,115,52,51,53,57,32,111,112,115,52,51,54,48,41,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,8),40,97,50,53,57,50,53,41};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,20),40,97,50,53,57,51,56,32,97,52,51,56,53,32,98,52,51,56,54,41,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,38),40,100,111,52,51,55,56,32,111,112,52,51,56,48,32,99,108,97,117,115,101,52,51,56,49,32,114,101,109,97,105,110,115,52,51,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,51,55,50,32,99,108,97,117,115,101,115,52,51,55,51,32,111,112,115,52,51,55,52,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,8),40,97,50,54,48,56,57,41};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,20),40,97,50,54,49,48,51,32,97,52,52,49,52,32,98,52,52,49,53,41,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,8),40,97,50,54,49,54,55,41};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,20),40,97,50,54,49,55,51,32,97,52,52,49,49,32,98,52,52,49,50,41,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,51,57,56,32,99,108,97,117,115,101,115,52,51,57,57,32,111,112,115,52,52,48,48,41,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,52,52,49,32,116,121,112,101,52,52,52,50,41,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,8),40,97,50,54,51,49,53,41};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,20),40,97,50,54,51,50,52,32,97,52,52,53,52,32,98,52,52,53,53,41,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,47),40,100,111,52,52,52,53,32,111,112,52,52,52,55,32,99,108,97,117,115,101,52,52,52,56,32,114,101,109,97,105,110,115,52,52,52,57,32,98,111,100,121,52,52,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,52,54,55,32,102,111,114,109,115,52,52,54,56,32,111,112,115,52,52,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,55,51,48,32,97,52,54,52,54,52,54,52,57,32,97,52,54,52,53,52,54,53,48,32,97,52,54,52,52,52,54,53,49,32,97,52,54,52,51,52,54,53,50,32,97,52,54,52,50,52,54,53,51,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,53,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,52,52,52,32,97,52,54,54,50,52,54,54,54,32,97,52,54,54,49,52,54,54,55,41,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,54,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,55,53,32,97,52,55,52,49,52,55,52,52,32,97,52,55,52,48,52,55,52,53,32,97,52,55,51,57,52,55,52,54,32,97,52,55,51,56,52,55,52,55,32,97,52,55,51,55,52,55,52,56,41,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,54,54,57,41};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,57,49,52,32,97,52,55,53,54,52,55,54,48,32,97,52,55,53,53,52,55,54,49,41,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,55,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,57,52,56,32,97,52,56,55,50,52,56,55,53,32,97,52,56,55,49,52,56,55,54,32,97,52,56,55,48,52,56,55,55,32,97,52,56,54,57,52,56,55,56,32,97,52,56,54,56,52,56,55,57,41,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,55,54,51,41,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,54,54,50,32,97,52,56,56,56,52,56,57,50,32,97,52,56,56,55,52,56,57,51,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,56,56,54,41,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,59),40,102,95,50,56,54,57,54,32,97,53,48,48,52,53,48,48,55,32,97,53,48,48,51,53,48,48,56,32,97,53,48,48,50,53,48,48,57,32,97,53,48,48,49,53,48,49,48,32,97,53,48,48,48,53,48,49,49,41,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,56,57,53,41,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,52,49,48,32,97,53,48,50,48,53,48,50,52,32,97,53,48,49,57,53,48,50,53,41,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,48,49,56,41};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,52,52,49,32,97,53,48,57,57,53,49,48,50,32,97,53,48,57,56,53,49,48,51,32,97,53,48,57,55,53,49,48,52,32,97,53,48,57,54,53,49,48,53,32,97,53,48,57,53,53,49,48,54,41,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,48,50,55,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,56,56,48,32,97,53,49,49,52,53,49,49,56,32,97,53,49,49,51,53,49,49,57,41,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,49,49,50,41};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,57,49,49,32,97,53,49,57,51,53,49,57,54,32,97,53,49,57,50,53,49,57,55,32,97,53,49,57,49,53,49,57,56,32,97,53,49,57,48,53,49,57,57,32,97,53,49,56,57,53,50,48,48,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,49,50,49,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,51,53,48,32,97,53,50,48,56,53,50,49,50,32,97,53,50,48,55,53,50,49,51,41,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,50,48,54,41,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,51,56,49,32,97,53,50,56,55,53,50,57,48,32,97,53,50,56,54,53,50,57,49,32,97,53,50,56,53,53,50,57,50,32,97,53,50,56,52,53,50,57,51,32,97,53,50,56,51,53,50,57,52,41,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,50,49,53,41,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,19),40,102,95,51,48,56,52,50,32,97,53,51,49,48,53,51,49,52,41,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,51,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,19),40,102,95,51,48,56,53,55,32,97,53,51,49,56,53,51,50,50,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,51,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,19),40,102,95,51,48,56,55,50,32,97,53,51,50,54,53,51,51,48,41,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,51,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,56,56,55,32,97,53,51,51,54,53,51,52,48,32,97,53,51,51,53,53,51,52,49,41,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,51,51,51,32,116,53,51,51,52,41,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,19),40,102,95,51,48,57,48,54,32,97,53,51,52,53,53,51,52,57,41,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,51,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,57,50,49,32,97,53,51,53,52,53,51,53,56,32,97,53,51,53,51,53,51,53,57,41,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,51,53,49,32,99,53,51,53,50,41,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,57,52,48,32,97,53,51,54,52,53,51,54,56,32,97,53,51,54,51,53,51,54,57,41,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,51,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,39),40,102,95,51,48,57,53,57,32,97,53,51,55,53,53,51,55,57,32,97,53,51,55,52,53,51,56,48,32,97,53,51,55,51,53,51,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,51,55,49,32,107,53,51,55,50,41,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,57,56,50,32,97,53,51,56,54,53,51,57,48,32,97,53,51,56,53,53,51,57,49,41,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,51,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,48,48,49,32,97,53,51,57,55,53,52,48,49,32,97,53,51,57,54,53,52,48,50,32,97,53,51,57,53,53,52,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,51,57,51,32,118,53,51,57,52,41,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,48,51,51,32,97,53,52,49,48,53,52,49,52,32,97,53,52,48,57,53,52,49,53,41,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,48,52,57,32,97,53,52,49,56,53,52,50,50,32,97,53,52,49,55,53,52,50,51,41,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,52,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,48,56,48,32,97,53,52,51,49,53,52,51,53,32,97,53,52,51,48,53,52,51,54,32,97,53,52,50,57,53,52,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,49,48,48,32,97,53,52,52,49,53,52,52,53,32,97,53,52,52,48,53,52,52,54,32,97,53,52,51,57,53,52,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,52,50,53,32,118,53,52,50,54,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,49,50,54,32,97,53,52,53,50,53,52,53,54,32,97,53,52,53,49,53,52,53,55,41,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,52,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,49,52,53,32,97,53,52,54,51,53,52,54,55,32,97,53,52,54,50,53,52,54,56,32,97,53,52,54,49,53,52,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,52,53,57,32,118,53,52,54,48,41,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,49,54,56,32,97,53,52,56,49,53,52,56,52,32,97,53,52,56,48,53,52,56,53,32,97,53,52,55,57,53,52,56,54,32,97,53,52,55,56,53,52,56,55,32,97,53,52,55,55,53,52,56,56,41,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,52,55,50,32,100,117,114,53,52,55,51,32,107,101,121,53,52,55,52,32,97,109,112,53,52,55,53,32,99,104,97,110,53,52,55,54,41,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,49,57,54,32,97,53,52,57,56,53,53,48,49,32,97,53,52,57,55,53,53,48,50,32,97,53,52,57,54,53,53,48,51,32,97,53,52,57,53,53,53,48,52,32,97,53,52,57,52,53,53,48,53,41,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,52,56,57,32,100,117,114,53,52,57,48,32,107,101,121,53,52,57,49,32,97,109,112,53,52,57,50,32,99,104,97,110,53,52,57,51,41,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,50,50,52,32,97,53,53,49,51,53,53,49,54,32,97,53,53,49,50,53,53,49,55,32,97,53,53,49,49,53,53,49,56,32,97,53,53,49,48,53,53,49,57,32,97,53,53,48,57,53,53,50,48,41,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,53,48,54,32,107,101,121,53,53,48,55,32,99,104,97,110,53,53,48,56,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,50,53,50,32,97,53,53,50,57,53,53,51,50,32,97,53,53,50,56,53,53,51,51,32,97,53,53,50,55,53,53,51,52,32,97,53,53,50,54,53,53,51,53,32,97,53,53,50,53,53,53,51,54,41,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,53,50,49,32,107,101,121,53,53,50,50,32,118,101,108,53,53,50,51,32,99,104,97,110,53,53,50,52,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,50,56,48,32,97,53,53,52,53,53,53,52,56,32,97,53,53,52,52,53,53,52,57,32,97,53,53,52,51,53,53,53,48,32,97,53,53,52,50,53,53,53,49,32,97,53,53,52,49,53,53,53,50,41,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,53,51,55,32,107,101,121,53,53,51,56,32,118,97,108,53,53,51,57,32,99,104,97,110,53,53,52,48,41,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,48,56,32,97,53,53,54,49,53,53,54,52,32,97,53,53,54,48,53,53,54,53,32,97,53,53,53,57,53,53,54,54,32,97,53,53,53,56,53,53,54,55,32,97,53,53,53,55,53,53,54,56,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,53,53,51,32,110,117,109,53,53,53,52,32,118,97,108,53,53,53,53,32,99,104,97,110,53,53,53,54,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,51,54,32,97,53,53,55,54,53,53,55,57,32,97,53,53,55,53,53,53,56,48,32,97,53,53,55,52,53,53,56,49,32,97,53,53,55,51,53,53,56,50,32,97,53,53,55,50,53,53,56,51,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,53,54,57,32,118,97,108,53,53,55,48,32,99,104,97,110,53,53,55,49,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,54,52,32,97,53,53,57,49,53,53,57,52,32,97,53,53,57,48,53,53,57,53,32,97,53,53,56,57,53,53,57,54,32,97,53,53,56,56,53,53,57,55,32,97,53,53,56,55,53,53,57,56,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,53,56,52,32,118,97,108,53,53,56,53,32,99,104,97,110,53,53,56,54,41,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,57,50,32,97,53,54,48,54,53,54,48,57,32,97,53,54,48,53,53,54,49,48,32,97,53,54,48,52,53,54,49,49,32,97,53,54,48,51,53,54,49,50,32,97,53,54,48,50,53,54,49,51,41,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,53,57,57,32,118,97,108,53,54,48,48,32,99,104,97,110,53,54,48,49,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,52,50,48,32,97,53,54,49,53,53,54,49,57,41,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,54,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,17),40,97,51,49,52,53,51,32,37,101,114,114,53,54,50,56,41,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,8),40,97,51,49,52,55,51,41};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,18),40,97,51,49,52,52,55,32,37,99,111,110,116,53,54,50,55,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,17),40,97,51,49,52,52,49,32,37,109,115,103,53,54,50,54,41,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,52,55,57,32,97,53,54,50,50,53,54,50,53,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,52,56,52,32,97,53,54,51,49,53,54,51,52,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,54,50,49,41,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,53,52,49,32,97,53,54,56,55,53,54,57,48,32,97,53,54,56,54,53,54,57,49,32,97,53,54,56,53,53,54,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,54,56,52,41,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,53,57,56,32,97,53,54,57,56,53,55,48,49,32,97,53,54,57,55,53,55,48,50,32,97,53,54,57,54,53,55,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,54,57,53,41,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,9),40,102,95,51,49,54,51,57,41,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,14),40,100,111,53,55,50,56,32,120,53,55,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,26),40,100,111,53,55,49,52,32,101,53,55,50,53,32,118,53,55,50,54,32,121,53,55,50,55,41,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,55,49,51,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,55,51,57,53,55,52,51,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,55,52,53,53,55,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,55,54,49,53,55,54,52,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,55,54,57,53,55,55,50,32,97,53,55,54,56,53,55,55,51,32,97,53,55,54,55,53,55,55,52,41};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,55,56,57,53,55,57,50,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,57,54,52,32,97,53,56,48,48,53,56,48,52,41,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,55,57,57,41};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,14),40,100,111,53,56,50,52,32,112,53,56,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,56,49,48,32,115,116,97,114,116,53,56,49,54,32,105,100,53,56,49,55,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,56,49,51,32,37,115,116,97,114,116,53,56,48,56,53,56,51,50,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,56,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,56,48,54,32,46,32,97,114,103,115,53,56,48,55,41,0,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,56,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,17),40,100,111,53,56,53,51,32,116,97,105,108,53,56,53,53,41,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,56,53,50,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,53,56,54,48,32,99,108,97,117,115,101,115,53,56,54,49,32,111,112,115,53,56,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,53,56,57,48,32,115,116,111,112,53,56,57,49,41,0,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,31),40,97,51,50,54,55,55,32,102,111,114,109,97,108,115,53,57,49,49,32,46,32,98,111,100,121,53,57,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,17),40,97,51,50,55,48,54,32,97,114,103,115,53,57,49,48,41,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,16),40,100,111,53,56,56,51,32,111,112,115,53,56,56,53,41};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,17),40,97,51,50,55,55,53,32,97,114,103,115,52,52,56,48,41,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,16),40,97,51,50,57,49,55,32,115,121,109,51,55,57,51,41};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,16),40,97,51,50,57,50,48,32,115,121,109,51,55,57,49,41};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,24),40,97,51,50,57,52,57,32,118,97,108,51,55,56,57,32,115,121,109,51,55,57,48,41};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,17),40,97,51,50,57,54,51,32,97,114,103,115,51,55,56,56,41,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,26),40,97,51,50,57,55,55,32,97,114,103,115,51,53,57,52,32,101,114,114,102,51,53,57,53,41,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,35),40,97,51,50,57,57,49,32,117,110,105,116,51,53,57,54,32,105,110,102,111,51,53,57,55,32,101,114,114,102,51,53,57,56,41,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,26),40,97,51,51,48,57,55,32,97,114,103,115,51,53,52,51,32,101,114,114,102,51,53,52,52,41,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,53,53,32,114,101,115,116,51,53,53,55,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,56,49,32,97,114,103,115,51,53,56,51,32,116,97,105,108,51,53,56,52,41,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,35),40,97,51,51,49,51,54,32,117,110,105,116,51,53,52,56,32,105,110,102,111,51,53,52,57,32,101,114,114,102,51,53,53,48,41,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,26),40,97,51,51,53,53,52,32,97,114,103,115,51,53,51,54,32,101,114,114,102,51,53,51,55,41,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,26),40,97,51,51,54,57,57,32,97,114,103,115,51,53,50,50,32,101,114,114,102,51,53,50,51,41,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,57,57,32,116,97,105,108,51,53,48,49,41,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,57,52,32,116,97,105,108,51,52,57,54,41,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,20),40,100,111,51,52,56,51,32,99,108,97,117,115,101,115,51,52,56,53,41,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,56,48,32,116,97,105,108,51,52,56,50,41,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,35),40,97,51,51,55,52,53,32,117,110,105,116,51,53,51,50,32,105,110,102,111,51,53,51,51,32,101,114,114,102,51,53,51,52,41,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,26),40,97,51,52,49,57,57,32,97,114,103,115,51,51,57,54,32,101,114,114,102,51,51,57,55,41,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,35),40,97,51,52,50,54,55,32,117,110,105,116,51,52,48,56,32,105,110,102,111,51,52,48,57,32,101,114,114,102,51,52,49,48,41,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,26),40,97,51,52,51,57,54,32,97,114,103,115,51,51,56,52,32,101,114,114,102,51,51,56,53,41,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,35),40,97,51,52,52,50,50,32,117,110,105,116,51,51,56,57,32,105,110,102,111,51,51,57,48,32,101,114,114,102,51,51,57,49,41,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,26),40,97,51,52,53,49,48,32,97,114,103,115,51,51,54,50,32,101,114,114,102,51,51,54,51,41,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,55,48,32,105,116,101,114,51,51,55,50,41,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,35),40,97,51,52,53,53,51,32,117,110,105,116,51,51,54,52,32,105,110,102,111,51,51,54,53,32,101,114,114,102,51,51,54,54,41,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,26),40,97,51,52,55,57,48,32,97,114,103,115,51,51,53,57,32,101,114,114,102,51,51,54,48,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,26),40,97,51,52,56,55,54,32,97,114,103,115,51,51,53,49,32,101,114,114,102,51,51,53,50,41,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,14),40,97,51,52,57,50,56,32,101,51,51,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,35),40,97,51,52,57,49,57,32,117,110,105,116,51,51,53,51,32,105,110,102,111,51,51,53,52,32,101,114,114,102,51,51,53,53,41,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,26),40,97,51,52,57,55,56,32,97,114,103,115,51,51,52,52,32,101,114,114,102,51,51,52,53,41,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,14),40,97,51,53,48,49,57,32,101,51,51,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,35),40,97,51,53,48,49,51,32,117,110,105,116,51,51,52,54,32,105,110,102,111,51,51,52,55,32,101,114,114,102,51,51,52,56,41,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,35),40,97,51,53,48,55,51,32,117,110,105,116,51,51,51,55,32,105,110,102,111,51,51,51,56,32,101,114,114,102,51,51,51,57,41,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,35),40,97,51,53,49,51,52,32,117,110,105,116,51,51,51,49,32,105,110,102,111,51,51,51,50,32,101,114,114,102,51,51,51,51,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,26),40,97,51,53,49,56,56,32,97,114,103,115,51,51,50,53,32,101,114,114,102,51,51,50,54,41,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,35),40,97,51,53,50,49,56,32,117,110,105,116,51,51,50,55,32,105,110,102,111,51,51,50,56,32,101,114,114,102,51,51,50,57,41,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,26),40,97,51,53,52,51,55,32,97,114,103,115,51,51,49,56,32,101,114,114,102,51,51,49,57,41,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,26),40,97,51,53,52,54,51,32,97,114,103,115,51,51,48,53,32,101,114,114,102,51,51,48,54,41,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,27),40,97,51,53,53,53,56,32,115,116,114,51,51,49,53,32,46,32,97,114,103,115,51,51,49,54,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,35),40,97,51,53,53,51,56,32,117,110,105,116,51,51,49,48,32,105,110,102,111,51,51,49,49,32,101,114,114,102,51,51,49,50,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,26),40,97,51,53,54,55,54,32,97,114,103,115,51,50,57,56,32,101,114,114,102,51,50,57,57,41,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,35),40,97,51,53,54,57,56,32,117,110,105,116,51,51,48,48,32,105,110,102,111,51,51,48,49,32,101,114,114,102,51,51,48,50,41,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,26),40,97,51,53,55,53,49,32,97,114,103,115,51,50,56,52,32,101,114,114,102,51,50,56,53,41,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,57,49,32,97,114,103,115,51,50,57,51,41,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,35),40,97,51,53,55,55,51,32,117,110,105,116,51,50,56,54,32,105,110,102,111,51,50,56,55,32,101,114,114,102,51,50,56,56,41,0,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,26),40,97,51,53,57,48,53,32,97,114,103,115,51,50,55,55,32,101,114,114,102,51,50,55,56,41,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,35),40,97,51,53,57,51,49,32,117,110,105,116,51,50,55,57,32,105,110,102,111,51,50,56,48,32,101,114,114,102,51,50,56,49,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,51,54,48,52,49,32,97,114,103,115,51,50,55,51,32,101,114,114,102,51,50,55,52,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,26),40,97,51,54,49,57,55,32,97,114,103,115,51,50,51,54,32,101,114,114,102,51,50,51,55,41,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,35),40,97,51,54,50,49,53,32,117,110,105,116,51,50,51,56,32,105,110,102,111,51,50,51,57,32,101,114,114,102,51,50,52,48,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,97,51,54,50,54,56,32,97,114,103,115,51,50,51,48,32,101,114,114,102,51,50,51,49,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,26),40,97,51,54,52,50,48,32,97,114,103,115,51,50,50,55,32,101,114,114,102,51,50,50,56,41,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,51,54,53,53,57,32,97,114,103,115,51,50,50,52,32,101,114,114,102,51,50,50,53,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,26),40,97,51,54,54,55,57,32,97,114,103,115,51,50,48,51,32,101,114,114,102,51,50,48,52,41,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,35),40,97,51,54,55,49,48,32,117,110,105,116,51,50,48,54,32,105,110,102,111,51,50,48,55,32,101,114,114,102,51,50,48,56,41,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,51,54,56,48,50,32,97,114,103,115,51,49,57,55,32,101,114,114,102,51,49,57,56,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,35),40,97,51,54,56,50,48,32,117,110,105,116,51,49,57,57,32,105,110,102,111,51,50,48,48,32,101,114,114,102,51,50,48,49,41,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,35),40,97,51,54,56,57,52,32,117,110,105,116,51,49,56,54,32,105,110,102,111,51,49,56,55,32,101,114,114,102,51,49,56,56,41,0,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,51,54,57,57,48,32,97,114,103,115,51,49,55,52,32,101,114,114,102,51,49,55,53,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,35),40,97,51,55,48,48,48,32,117,110,105,116,51,49,55,54,32,105,110,102,111,51,49,55,55,32,101,114,114,102,51,49,55,56,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,20),40,97,51,55,49,55,54,32,117,50,56,50,52,32,112,50,56,50,53,41,0,0,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,20),40,97,51,55,50,48,50,32,101,50,55,57,54,32,112,50,55,57,55,41,0,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,55,53,57,41,0,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,35),40,97,51,55,50,49,54,32,116,121,112,50,55,53,53,32,112,97,116,50,55,53,54,32,46,32,97,114,103,115,50,55,53,55,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,20),40,97,51,55,51,49,57,32,114,50,55,53,50,32,112,50,55,53,51,41,0,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,20),40,97,51,55,51,50,57,32,116,50,55,48,51,32,112,50,55,48,52,41,0,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,23),40,97,51,55,51,52,51,32,111,98,106,57,49,56,32,112,111,114,116,57,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,71),40,100,111,54,56,48,32,100,54,56,50,32,107,54,56,51,32,112,54,56,52,32,107,60,54,56,53,32,107,62,54,56,54,32,102,54,56,55,32,102,62,54,56,56,32,102,60,54,56,57,32,111,54,57,48,32,120,54,57,49,32,110,54,57,50,32,101,54,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,14),40,100,111,54,55,52,32,107,101,121,54,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,24),40,97,51,55,53,54,57,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,22),40,97,51,55,53,55,53,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,24),40,97,51,55,54,50,55,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k31967 */
static C_word C_fcall stub5801(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5801(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k31952 in hush in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
C_noret_decl(stub5795)
static void C_ccall stub5795(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5795(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31946 */
C_noret_decl(stub5790)
static void C_ccall stub5790(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5790(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31930 in cont in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
C_noret_decl(stub5785)
static void C_ccall stub5785(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5785(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31921 in pause in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
C_noret_decl(stub5781)
static void C_ccall stub5781(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5781(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31912 in paused? in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
C_noret_decl(stub5777)
static void C_ccall stub5777(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5777(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31906 */
C_noret_decl(stub5770)
static void C_ccall stub5770(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5770(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31886 in scheduler-set-time-milliseconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
C_noret_decl(stub5762)
static void C_ccall stub5762(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5762(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k31877 in time-format in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
C_noret_decl(stub5757)
static void C_ccall stub5757(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5757(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5754(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5754(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5751(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5751(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k31858 in print-error in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub5746(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5746(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k31844 in print-message in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub5740(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5740(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_31639 in cs:clear in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub5706(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5706(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k31605 */
static C_word C_fcall stub5699(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5699(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k31548 */
static C_word C_fcall stub5688(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5688(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_31484 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub5632(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5632(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_31479 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub5623(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5623(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k31423 */
static C_word C_fcall stub5616(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5616(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k31411 */
static C_word C_fcall stub5607(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5607(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31383 */
static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5592(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31355 */
static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31327 */
static C_word C_fcall stub5562(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5562(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31299 */
static C_word C_fcall stub5546(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5546(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31271 */
static C_word C_fcall stub5530(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5530(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31243 */
static C_word C_fcall stub5514(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5514(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31215 */
static C_word C_fcall stub5499(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5499(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k31187 */
static C_word C_fcall stub5482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k31156 */
static C_word C_fcall stub5464(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5464(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31133 */
static C_word C_fcall stub5453(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5453(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31111 */
static C_word C_fcall stub5442(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5442(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31091 */
static C_word C_fcall stub5432(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5432(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31056 */
static C_word C_fcall stub5419(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5419(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31040 */
static C_word C_fcall stub5411(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5411(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31012 */
static C_word C_fcall stub5398(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5398(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k30989 */
static C_word C_fcall stub5387(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5387(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k30970 */
static C_word C_fcall stub5376(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5376(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k30947 */
static C_word C_fcall stub5365(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5365(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k30928 */
static C_word C_fcall stub5355(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5355(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k30909 */
static C_word C_fcall stub5346(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5346(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k30894 */
static C_word C_fcall stub5337(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5337(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k30875 */
static C_word C_fcall stub5327(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5327(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k30860 */
static C_word C_fcall stub5319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k30845 */
static C_word C_fcall stub5311(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5311(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k30827 */
static C_word C_fcall stub5303(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5303(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30400 */
static C_word C_fcall stub5288(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5288(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30357 */
static C_word C_fcall stub5209(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5209(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29930 */
static C_word C_fcall stub5194(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5194(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k29887 */
static C_word C_fcall stub5115(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5115(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29460 */
static C_word C_fcall stub5100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k29417 */
static C_word C_fcall stub5021(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5021(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k28715 */
static C_word C_fcall stub5005(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5005(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k28669 */
static C_word C_fcall stub4889(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4889(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27967 */
static C_word C_fcall stub4873(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4873(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k27921 */
static C_word C_fcall stub4757(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4757(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27494 */
static C_word C_fcall stub4742(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4742(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k27451 */
static C_word C_fcall stub4663(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4663(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26749 */
static C_word C_fcall stub4647(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4647(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k7469 */
static C_word C_fcall stub358(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub358(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub351(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub351(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub348(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub348(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7447 */
static C_word C_fcall stub345(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub345(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub341(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub341(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7437 */
static C_word C_fcall stub337(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub337(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7430 */
static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7419 */
static C_word C_fcall stub325(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub325(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7412 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub314(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub314(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub311(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub311(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub308(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub308(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k7392 */
static C_word C_fcall stub303(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub303(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k7381 */
static C_word C_fcall stub297(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub297(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k7370 */
static C_word C_fcall stub291(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub291(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k7363 */
static C_word C_fcall stub287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub283(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub283(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k7353 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k7346 */
static C_word C_fcall stub274(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub274(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7339 */
static C_word C_fcall stub269(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub269(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7332 */
static C_word C_fcall stub261(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub261(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7313 */
static C_word C_fcall stub250(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub250(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7294 */
static C_word C_fcall stub243(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub243(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7287 */
static C_word C_fcall stub238(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub238(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7280 */
static C_word C_fcall stub231(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub231(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7265 */
static C_word C_fcall stub223(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub223(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7254 */
static C_word C_fcall stub216(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub216(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k7243 */
static C_word C_fcall stub211(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7236 */
static C_word C_fcall stub202(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub202(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7209 */
static C_word C_fcall stub187(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub187(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6596 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6578 in cwd in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5971)
static void C_ccall f_5971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5974)
static void C_ccall f_5974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5977)
static void C_ccall f_5977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5980)
static void C_ccall f_5980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37628)
static void C_ccall f_37628(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37628)
static void C_ccall f_37628r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6271)
static void C_ccall f_6271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6275)
static void C_ccall f_6275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37576)
static void C_ccall f_37576(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37623)
static void C_ccall f_37623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37613)
static void C_ccall f_37613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37580)
static void C_ccall f_37580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6278)
static void C_ccall f_6278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37570)
static void C_ccall f_37570(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37570)
static void C_ccall f_37570r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6571)
static void C_ccall f_6571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9528)
static void C_ccall f_9528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37354)
static void C_fcall f_37354(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37568)
static void C_ccall f_37568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37388)
static void C_ccall f_37388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37400)
static void C_ccall f_37400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37404)
static void C_ccall f_37404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37408)
static void C_ccall f_37408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37552)
static void C_ccall f_37552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37414)
static void C_fcall f_37414(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_37434)
static void C_fcall f_37434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37437)
static void C_fcall f_37437(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37445)
static void C_ccall f_37445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37452)
static void C_ccall f_37452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37455)
static void C_ccall f_37455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37459)
static void C_ccall f_37459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37466)
static void C_ccall f_37466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37469)
static void C_ccall f_37469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37473)
static void C_ccall f_37473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37480)
static void C_ccall f_37480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37424)
static void C_ccall f_37424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37377)
static void C_ccall f_37377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37367)
static void C_ccall f_37367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37370)
static void C_ccall f_37370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_ccall f_9531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37344)
static void C_ccall f_37344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37352)
static void C_ccall f_37352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10596)
static void C_ccall f_10596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37330)
static void C_ccall f_37330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37338)
static void C_ccall f_37338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37342)
static void C_ccall f_37342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19624)
static void C_ccall f_19624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19675)
static void C_ccall f_19675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37320)
static void C_ccall f_37320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37328)
static void C_ccall f_37328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19780)
static void C_ccall f_19780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37217)
static void C_ccall f_37217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_37217)
static void C_ccall f_37217r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_37280)
static void C_ccall f_37280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37284)
static void C_ccall f_37284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37298)
static void C_fcall f_37298(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37220)
static void C_fcall f_37220(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37240)
static void C_ccall f_37240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37244)
static void C_ccall f_37244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19783)
static void C_ccall f_19783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37203)
static void C_ccall f_37203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37211)
static void C_ccall f_37211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37215)
static void C_ccall f_37215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19976)
static void C_ccall f_19976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37177)
static void C_ccall f_37177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37181)
static void C_ccall f_37181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37187)
static void C_ccall f_37187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37198)
static void C_ccall f_37198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37194)
static void C_ccall f_37194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20045)
static void C_ccall f_20045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37155)
static void C_ccall f_37155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21290)
static void C_ccall f_21290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37135)
static void C_ccall f_37135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21293)
static void C_ccall f_21293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37095)
static void C_ccall f_37095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21296)
static void C_ccall f_21296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37001)
static void C_ccall f_37001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37005)
static void C_ccall f_37005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37008)
static void C_ccall f_37008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37026)
static void C_ccall f_37026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37029)
static void C_ccall f_37029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37060)
static void C_ccall f_37060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37032)
static void C_fcall f_37032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37038)
static void C_ccall f_37038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36991)
static void C_ccall f_36991(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36985)
static void C_ccall f_36985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21299)
static void C_ccall f_21299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36893)
static void C_ccall f_36893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36895)
static void C_ccall f_36895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36899)
static void C_ccall f_36899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36902)
static void C_ccall f_36902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36905)
static void C_ccall f_36905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36945)
static void C_ccall f_36945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36937)
static void C_ccall f_36937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36908)
static void C_ccall f_36908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36911)
static void C_ccall f_36911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36914)
static void C_ccall f_36914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36885)
static void C_ccall f_36885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21302)
static void C_ccall f_21302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36857)
static void C_ccall f_36857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21305)
static void C_ccall f_21305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36821)
static void C_ccall f_36821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36833)
static void C_ccall f_36833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36829)
static void C_ccall f_36829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36803)
static void C_ccall f_36803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36797)
static void C_ccall f_36797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21308)
static void C_ccall f_21308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36711)
static void C_ccall f_36711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36715)
static void C_ccall f_36715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36718)
static void C_ccall f_36718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36721)
static void C_ccall f_36721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36734)
static void C_ccall f_36734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36680)
static void C_ccall f_36680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36684)
static void C_ccall f_36684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36699)
static void C_ccall f_36699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36674)
static void C_ccall f_36674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21311)
static void C_ccall f_21311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36560)
static void C_ccall f_36560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36576)
static void C_ccall f_36576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36587)
static void C_ccall f_36587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36554)
static void C_ccall f_36554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21367)
static void C_ccall f_21367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36421)
static void C_ccall f_36421(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36444)
static void C_ccall f_36444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36441)
static void C_ccall f_36441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36415)
static void C_ccall f_36415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21370)
static void C_ccall f_21370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36269)
static void C_ccall f_36269(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36287)
static void C_ccall f_36287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36296)
static void C_ccall f_36296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36263)
static void C_ccall f_36263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21373)
static void C_ccall f_21373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36216)
static void C_ccall f_36216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36220)
static void C_ccall f_36220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36223)
static void C_ccall f_36223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36239)
static void C_ccall f_36239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36198)
static void C_ccall f_36198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36192)
static void C_ccall f_36192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21376)
static void C_ccall f_21376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36116)
static void C_ccall f_36116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21515)
static void C_ccall f_21515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36042)
static void C_ccall f_36042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36049)
static void C_ccall f_36049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36036)
static void C_ccall f_36036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21518)
static void C_ccall f_21518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35932)
static void C_ccall f_35932(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35940)
static void C_ccall f_35940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35906)
static void C_ccall f_35906(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35923)
static void C_ccall f_35923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35914)
static void C_fcall f_35914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35900)
static void C_ccall f_35900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21521)
static void C_ccall f_21521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35856)
static void C_ccall f_35856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35774)
static void C_ccall f_35774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35785)
static void C_ccall f_35785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35787)
static void C_fcall f_35787(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35816)
static void C_ccall f_35816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35752)
static void C_ccall f_35752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35768)
static void C_ccall f_35768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35746)
static void C_ccall f_35746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21527)
static void C_ccall f_21527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35699)
static void C_ccall f_35699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35703)
static void C_ccall f_35703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35710)
static void C_ccall f_35710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35677)
static void C_ccall f_35677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35693)
static void C_ccall f_35693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35671)
static void C_ccall f_35671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21530)
static void C_ccall f_21530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35539)
static void C_ccall f_35539(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35579)
static void C_ccall f_35579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35543)
static void C_ccall f_35543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35559)
static void C_ccall f_35559(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35559)
static void C_ccall f_35559r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_35571)
static void C_ccall f_35571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35575)
static void C_ccall f_35575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35567)
static void C_ccall f_35567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35464)
static void C_ccall f_35464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35507)
static void C_ccall f_35507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35511)
static void C_ccall f_35511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35471)
static void C_fcall f_35471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35482)
static void C_ccall f_35482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35458)
static void C_ccall f_35458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21533)
static void C_ccall f_21533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35438)
static void C_ccall f_35438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35432)
static void C_ccall f_35432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21536)
static void C_ccall f_21536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35412)
static void C_ccall f_35412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35416)
static void C_ccall f_35416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35404)
static void C_ccall f_35404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21539)
static void C_ccall f_21539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35384)
static void C_ccall f_35384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35388)
static void C_ccall f_35388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35376)
static void C_ccall f_35376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21542)
static void C_ccall f_21542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35356)
static void C_ccall f_35356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35360)
static void C_ccall f_35360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35348)
static void C_ccall f_35348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21545)
static void C_ccall f_21545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35328)
static void C_ccall f_35328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35332)
static void C_ccall f_35332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35320)
static void C_ccall f_35320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21548)
static void C_ccall f_21548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35219)
static void C_ccall f_35219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35189)
static void C_ccall f_35189(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35213)
static void C_ccall f_35213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35183)
static void C_ccall f_35183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21551)
static void C_ccall f_21551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35133)
static void C_ccall f_35133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35135)
static void C_ccall f_35135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35139)
static void C_ccall f_35139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35167)
static void C_ccall f_35167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35159)
static void C_ccall f_35159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35155)
static void C_ccall f_35155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35142)
static void C_ccall f_35142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35125)
static void C_ccall f_35125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21554)
static void C_ccall f_21554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35072)
static void C_ccall f_35072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35074)
static void C_ccall f_35074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35078)
static void C_ccall f_35078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35109)
static void C_ccall f_35109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35101)
static void C_ccall f_35101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35097)
static void C_ccall f_35097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35081)
static void C_ccall f_35081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35084)
static void C_ccall f_35084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35064)
static void C_ccall f_35064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21557)
static void C_ccall f_21557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35014)
static void C_ccall f_35014(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35028)
static void C_ccall f_35028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35020)
static void C_ccall f_35020(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34979)
static void C_ccall f_34979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35012)
static void C_ccall f_35012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34973)
static void C_ccall f_34973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21560)
static void C_ccall f_21560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34920)
static void C_ccall f_34920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34924)
static void C_ccall f_34924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34937)
static void C_ccall f_34937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34929)
static void C_ccall f_34929(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34877)
static void C_ccall f_34877(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34910)
static void C_ccall f_34910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34871)
static void C_ccall f_34871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21563)
static void C_ccall f_21563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34791)
static void C_ccall f_34791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34785)
static void C_ccall f_34785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21566)
static void C_ccall f_21566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34554)
static void C_ccall f_34554(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34558)
static void C_ccall f_34558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34566)
static void C_fcall f_34566(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34589)
static void C_ccall f_34589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34592)
static void C_ccall f_34592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34595)
static void C_ccall f_34595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34598)
static void C_ccall f_34598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34658)
static void C_ccall f_34658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34665)
static void C_ccall f_34665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34675)
static void C_ccall f_34675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34685)
static void C_ccall f_34685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34699)
static void C_ccall f_34699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34709)
static void C_ccall f_34709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34719)
static void C_ccall f_34719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34729)
static void C_ccall f_34729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34601)
static void C_fcall f_34601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34625)
static void C_fcall f_34625(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34604)
static void C_fcall f_34604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34511)
static void C_ccall f_34511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34544)
static void C_ccall f_34544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34505)
static void C_ccall f_34505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21569)
static void C_ccall f_21569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34423)
static void C_ccall f_34423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34427)
static void C_ccall f_34427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34433)
static void C_ccall f_34433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34453)
static void C_ccall f_34453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34397)
static void C_ccall f_34397(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34407)
static void C_fcall f_34407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34391)
static void C_ccall f_34391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21572)
static void C_ccall f_21572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34268)
static void C_ccall f_34268(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34272)
static void C_ccall f_34272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34200)
static void C_ccall f_34200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34219)
static void C_ccall f_34219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34254)
static void C_ccall f_34254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34225)
static void C_fcall f_34225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34229)
static void C_ccall f_34229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34243)
static void C_ccall f_34243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34232)
static void C_fcall f_34232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34213)
static void C_fcall f_34213(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34194)
static void C_ccall f_34194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21575)
static void C_ccall f_21575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33922)
static void C_ccall f_33922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22098)
static void C_ccall f_22098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33874)
static void C_ccall f_33874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33866)
static void C_ccall f_33866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22101)
static void C_ccall f_22101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33746)
static void C_ccall f_33746(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22107)
static void C_ccall f_22107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22566)
static void C_ccall f_22566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22600)
static void C_ccall f_22600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22592)
static void C_ccall f_22592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22588)
static void C_ccall f_22588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22573)
static void C_ccall f_22573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22577)
static void C_ccall f_22577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22570)
static void C_ccall f_22570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22125)
static void C_fcall f_22125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22559)
static void C_ccall f_22559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22555)
static void C_ccall f_22555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22132)
static void C_fcall f_22132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22430)
static void C_fcall f_22430(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22451)
static void C_ccall f_22451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22453)
static void C_fcall f_22453(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22467)
static void C_ccall f_22467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22520)
static void C_ccall f_22520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22470)
static void C_fcall f_22470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22505)
static void C_ccall f_22505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22473)
static void C_fcall f_22473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22486)
static void C_ccall f_22486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22498)
static void C_ccall f_22498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22490)
static void C_ccall f_22490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22476)
static void C_fcall f_22476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22440)
static void C_ccall f_22440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22135)
static void C_ccall f_22135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22394)
static void C_fcall f_22394(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22420)
static void C_ccall f_22420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22405)
static void C_ccall f_22405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22138)
static void C_ccall f_22138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22142)
static void C_ccall f_22142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22338)
static void C_fcall f_22338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22348)
static void C_ccall f_22348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22351)
static void C_ccall f_22351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22372)
static void C_ccall f_22372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22354)
static void C_fcall f_22354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22358)
static void C_ccall f_22358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22145)
static void C_ccall f_22145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22148)
static void C_fcall f_22148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22301)
static void C_ccall f_22301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22309)
static void C_ccall f_22309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22305)
static void C_ccall f_22305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22151)
static void C_fcall f_22151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22179)
static void C_ccall f_22179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22182)
static void C_ccall f_22182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22185)
static void C_ccall f_22185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22188)
static void C_ccall f_22188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22191)
static void C_ccall f_22191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22250)
static void C_ccall f_22250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33700)
static void C_ccall f_33700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33716)
static void C_ccall f_33716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33719)
static void C_ccall f_33719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33722)
static void C_fcall f_33722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33725)
static void C_fcall f_33725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33736)
static void C_ccall f_33736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33694)
static void C_ccall f_33694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22607)
static void C_ccall f_22607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33555)
static void C_ccall f_33555(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33594)
static void C_ccall f_33594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33568)
static void C_fcall f_33568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33549)
static void C_ccall f_33549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22610)
static void C_ccall f_22610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33137)
static void C_ccall f_33137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33141)
static void C_ccall f_33141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33153)
static void C_ccall f_33153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33211)
static void C_ccall f_33211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33214)
static void C_ccall f_33214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33217)
static void C_ccall f_33217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33429)
static void C_ccall f_33429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33367)
static void C_ccall f_33367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33401)
static void C_ccall f_33401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33376)
static void C_fcall f_33376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33387)
static void C_ccall f_33387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33383)
static void C_ccall f_33383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33226)
static void C_fcall f_33226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33304)
static void C_ccall f_33304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33345)
static void C_ccall f_33345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33349)
static void C_ccall f_33349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33353)
static void C_ccall f_33353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33308)
static void C_ccall f_33308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33312)
static void C_ccall f_33312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33339)
static void C_ccall f_33339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33315)
static void C_fcall f_33315(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33229)
static void C_fcall f_33229(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33301)
static void C_ccall f_33301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33243)
static void C_ccall f_33243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33245)
static void C_fcall f_33245(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33293)
static void C_ccall f_33293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33264)
static void C_ccall f_33264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33281)
static void C_ccall f_33281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33267)
static void C_fcall f_33267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33260)
static void C_ccall f_33260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33232)
static void C_ccall f_33232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33162)
static void C_fcall f_33162(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33172)
static void C_ccall f_33172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33178)
static void C_ccall f_33178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33150)
static void C_ccall f_33150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33098)
static void C_ccall f_33098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33115)
static void C_ccall f_33115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33131)
static void C_ccall f_33131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33109)
static void C_fcall f_33109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33092)
static void C_ccall f_33092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22613)
static void C_ccall f_22613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33016)
static void C_ccall f_33016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22616)
static void C_ccall f_22616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32992)
static void C_ccall f_32992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33004)
static void C_ccall f_33004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33000)
static void C_ccall f_33000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32978)
static void C_ccall f_32978(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32986)
static void C_ccall f_32986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32972)
static void C_ccall f_32972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22619)
static void C_ccall f_22619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32964)
static void C_ccall f_32964(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26390)
static void C_ccall f_26390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26393)
static void C_ccall f_26393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26559)
static void C_ccall f_26559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26555)
static void C_ccall f_26555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26545)
static void C_fcall f_26545(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26400)
static void C_ccall f_26400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26404)
static void C_ccall f_26404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26407)
static void C_fcall f_26407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26418)
static void C_ccall f_26418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26426)
static void C_ccall f_26426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26506)
static void C_ccall f_26506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26502)
static void C_ccall f_26502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26494)
static void C_ccall f_26494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26490)
static void C_ccall f_26490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26462)
static void C_ccall f_26462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26458)
static void C_ccall f_26458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26422)
static void C_ccall f_26422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23037)
static void C_ccall f_23037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32950)
static void C_ccall f_32950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23040)
static void C_ccall f_23040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32921)
static void C_ccall f_32921(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32925)
static void C_ccall f_32925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23043)
static void C_ccall f_23043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32918)
static void C_ccall f_32918(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23046)
static void C_ccall f_23046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32776)
static void C_ccall f_32776(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26572)
static void C_ccall f_26572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26704)
static void C_ccall f_26704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26575)
static void C_ccall f_26575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26586)
static void C_ccall f_26586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26594)
static void C_ccall f_26594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26618)
static void C_ccall f_26618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26621)
static void C_fcall f_26621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26629)
static void C_ccall f_26629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26637)
static void C_ccall f_26637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26657)
static void C_ccall f_26657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26653)
static void C_ccall f_26653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26633)
static void C_ccall f_26633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26625)
static void C_ccall f_26625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26614)
static void C_ccall f_26614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26590)
static void C_ccall f_26590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26566)
static void C_ccall f_26566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31488)
static void C_ccall f_31488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31491)
static void C_ccall f_31491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31494)
static void C_ccall f_31494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31500)
static void C_ccall f_31500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31503)
static void C_ccall f_31503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31506)
static void C_ccall f_31506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31509)
static void C_ccall f_31509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31512)
static void C_ccall f_31512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31515)
static void C_ccall f_31515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31518)
static void C_ccall f_31518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31643)
static void C_ccall f_31643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31646)
static void C_ccall f_31646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31649)
static void C_ccall f_31649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32713)
static void C_fcall f_32713(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32741)
static void C_fcall f_32741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32380)
static void C_ccall f_32380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32707)
static void C_ccall f_32707(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32425)
static void C_ccall f_32425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32431)
static void C_ccall f_32431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32434)
static void C_ccall f_32434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32437)
static void C_ccall f_32437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32441)
static void C_ccall f_32441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32651)
static void C_ccall f_32651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32663)
static void C_ccall f_32663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32659)
static void C_ccall f_32659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32444)
static void C_fcall f_32444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32608)
static void C_fcall f_32608(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32644)
static void C_ccall f_32644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32637)
static void C_ccall f_32637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32447)
static void C_ccall f_32447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32546)
static void C_ccall f_32546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32554)
static void C_ccall f_32554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32550)
static void C_ccall f_32550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32542)
static void C_ccall f_32542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32538)
static void C_ccall f_32538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32494)
static void C_ccall f_32494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32490)
static void C_ccall f_32490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32457)
static void C_fcall f_32457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32468)
static void C_ccall f_32468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32476)
static void C_ccall f_32476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32472)
static void C_ccall f_32472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32670)
static void C_ccall f_32670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32678)
static void C_ccall f_32678(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32678)
static void C_ccall f_32678r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32692)
static void C_fcall f_32692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32682)
static void C_ccall f_32682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32673)
static void C_ccall f_32673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32676)
static void C_ccall f_32676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32382)
static void C_fcall f_32382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32398)
static void C_ccall f_32398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32309)
static void C_ccall f_32309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32320)
static void C_ccall f_32320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32323)
static void C_fcall f_32323(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32330)
static void C_ccall f_32330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32299)
static void C_ccall f_32299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31954)
static void C_ccall f_31954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32303)
static void C_ccall f_32303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32241)
static void C_ccall f_32241(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32241)
static void C_ccall f_32241r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32259)
static void C_fcall f_32259(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32269)
static void C_ccall f_32269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32245)
static void C_ccall f_32245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32232)
static void C_ccall f_32232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31932)
static void C_ccall f_31932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32236)
static void C_ccall f_32236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32226)
static void C_ccall f_32226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31914)
static void C_ccall f_31914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32217)
static void C_ccall f_32217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31923)
static void C_ccall f_31923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32221)
static void C_ccall f_32221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32154)
static void C_ccall f_32154(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32154)
static void C_ccall f_32154r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32179)
static void C_fcall f_32179(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31879)
static void C_ccall f_31879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32167)
static void C_ccall f_32167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31978)
static void C_ccall f_31978(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31978)
static void C_ccall f_31978r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32105)
static void C_fcall f_32105(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32100)
static void C_fcall f_32100(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31980)
static void C_fcall f_31980(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32099)
static void C_ccall f_32099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32095)
static void C_ccall f_32095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32087)
static void C_ccall f_32087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32051)
static void C_fcall f_32051(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32084)
static void C_ccall f_32084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32080)
static void C_ccall f_32080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32061)
static void C_ccall f_32061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32040)
static void C_ccall f_32040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32010)
static void C_fcall f_32010(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31982)
static void C_fcall f_31982(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31959)
static void C_ccall f_31959(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31964)
static void C_ccall f_31964(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31969)
static void C_ccall f_31969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31937)
static void C_fcall f_31937(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31941)
static void C_ccall f_31941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31893)
static void C_fcall f_31893(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31897)
static void C_ccall f_31897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31884)
static void C_fcall f_31884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31888)
static void C_ccall f_31888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31872)
static void C_ccall f_31872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31869)
static void C_ccall f_31869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31855)
static void C_ccall f_31855(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31860)
static void C_ccall f_31860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31841)
static void C_ccall f_31841(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31846)
static void C_ccall f_31846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31651)
static void C_ccall f_31651(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31712)
static void C_ccall f_31712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31714)
static void C_fcall f_31714(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31724)
static void C_ccall f_31724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31743)
static void C_fcall f_31743(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31783)
static void C_ccall f_31783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31825)
static void C_ccall f_31825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31795)
static void C_ccall f_31795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31780)
static void C_fcall f_31780(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31698)
static void C_ccall f_31698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31663)
static void C_ccall f_31663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31690)
static void C_ccall f_31690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31671)
static void C_ccall f_31671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31678)
static void C_ccall f_31678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31682)
static void C_ccall f_31682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31686)
static void C_ccall f_31686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31763)
static void C_ccall f_31763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31741)
static void C_ccall f_31741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31727)
static void C_ccall f_31727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31730)
static void C_ccall f_31730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31705)
static void C_ccall f_31705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31634)
static void C_ccall f_31634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31639)
static void C_ccall f_31639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31577)
static void C_ccall f_31577(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31577)
static void C_ccall f_31577r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31610)
static void C_fcall f_31610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31590)
static void C_fcall f_31590(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31598)
static void C_ccall f_31598(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31581)
static void C_ccall f_31581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31520)
static void C_ccall f_31520(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31520)
static void C_ccall f_31520r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31553)
static void C_fcall f_31553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31533)
static void C_fcall f_31533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31541)
static void C_ccall f_31541(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31524)
static void C_ccall f_31524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31430)
static void C_ccall f_31430(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31484)
static void C_ccall f_31484(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31479)
static void C_ccall f_31479(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31442)
static void C_ccall f_31442(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31448)
static void C_ccall f_31448(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31474)
static void C_ccall f_31474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31478)
static void C_ccall f_31478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31454)
static void C_ccall f_31454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31472)
static void C_ccall f_31472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31469)
static void C_ccall f_31469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31465)
static void C_ccall f_31465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31458)
static void C_ccall f_31458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31415)
static void C_ccall f_31415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31420)
static void C_ccall f_31420(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31387)
static void C_ccall f_31387(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31392)
static void C_ccall f_31392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31359)
static void C_ccall f_31359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31364)
static void C_ccall f_31364(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31331)
static void C_ccall f_31331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31336)
static void C_ccall f_31336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31303)
static void C_ccall f_31303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31308)
static void C_ccall f_31308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31275)
static void C_ccall f_31275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31280)
static void C_ccall f_31280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31247)
static void C_ccall f_31247(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31252)
static void C_ccall f_31252(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31219)
static void C_ccall f_31219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31224)
static void C_ccall f_31224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31191)
static void C_ccall f_31191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31196)
static void C_ccall f_31196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31163)
static void C_ccall f_31163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31168)
static void C_ccall f_31168(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31140)
static void C_ccall f_31140(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31145)
static void C_ccall f_31145(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31144)
static void C_ccall f_31144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31121)
static void C_ccall f_31121(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31126)
static void C_ccall f_31126(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31066)
static void C_ccall f_31066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31073)
static void C_ccall f_31073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31076)
static void C_ccall f_31076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31100)
static void C_ccall f_31100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31080)
static void C_ccall f_31080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31070)
static void C_ccall f_31070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31019)
static void C_ccall f_31019(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31026)
static void C_ccall f_31026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31029)
static void C_ccall f_31029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31049)
static void C_ccall f_31049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31033)
static void C_ccall f_31033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30996)
static void C_ccall f_30996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31001)
static void C_ccall f_31001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31000)
static void C_ccall f_31000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30977)
static void C_ccall f_30977(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30982)
static void C_ccall f_30982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30954)
static void C_ccall f_30954(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30959)
static void C_ccall f_30959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30958)
static void C_ccall f_30958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30935)
static void C_ccall f_30935(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30940)
static void C_ccall f_30940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30916)
static void C_ccall f_30916(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30921)
static void C_ccall f_30921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30920)
static void C_ccall f_30920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30901)
static void C_ccall f_30901(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30906)
static void C_ccall f_30906(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30882)
static void C_ccall f_30882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30887)
static void C_ccall f_30887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30886)
static void C_ccall f_30886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30867)
static void C_ccall f_30867(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30872)
static void C_ccall f_30872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30852)
static void C_ccall f_30852(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30857)
static void C_ccall f_30857(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30834)
static void C_ccall f_30834(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30842)
static void C_ccall f_30842(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30838)
static void C_ccall f_30838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30364)
static void C_ccall f_30364(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30364)
static void C_ccall f_30364r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30792)
static void C_ccall f_30792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30807)
static void C_ccall f_30807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30799)
static void C_ccall f_30799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30763)
static void C_ccall f_30763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30767)
static void C_ccall f_30767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30728)
static void C_ccall f_30728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30732)
static void C_ccall f_30732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30693)
static void C_ccall f_30693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30697)
static void C_ccall f_30697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30368)
static void C_fcall f_30368(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30657)
static void C_ccall f_30657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30672)
static void C_ccall f_30672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30664)
static void C_ccall f_30664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30628)
static void C_ccall f_30628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30632)
static void C_ccall f_30632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30593)
static void C_ccall f_30593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30597)
static void C_ccall f_30597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30558)
static void C_ccall f_30558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30562)
static void C_ccall f_30562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30371)
static void C_fcall f_30371(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30522)
static void C_ccall f_30522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30537)
static void C_ccall f_30537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30529)
static void C_ccall f_30529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30493)
static void C_ccall f_30493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30497)
static void C_ccall f_30497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30458)
static void C_ccall f_30458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30462)
static void C_ccall f_30462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30423)
static void C_ccall f_30423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30427)
static void C_ccall f_30427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30374)
static void C_fcall f_30374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30377)
static void C_ccall f_30377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30381)
static void C_ccall f_30381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30345)
static void C_ccall f_30345(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30350)
static void C_ccall f_30350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29894)
static void C_ccall f_29894(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29894)
static void C_ccall f_29894r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30322)
static void C_ccall f_30322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30337)
static void C_ccall f_30337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30329)
static void C_ccall f_30329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30293)
static void C_ccall f_30293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30297)
static void C_ccall f_30297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30258)
static void C_ccall f_30258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30262)
static void C_ccall f_30262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30223)
static void C_ccall f_30223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30227)
static void C_ccall f_30227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29898)
static void C_fcall f_29898(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30187)
static void C_ccall f_30187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30202)
static void C_ccall f_30202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30194)
static void C_ccall f_30194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30158)
static void C_ccall f_30158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30162)
static void C_ccall f_30162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30123)
static void C_ccall f_30123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30127)
static void C_ccall f_30127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30088)
static void C_ccall f_30088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30092)
static void C_ccall f_30092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29901)
static void C_fcall f_29901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30052)
static void C_ccall f_30052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30067)
static void C_ccall f_30067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30059)
static void C_ccall f_30059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30023)
static void C_ccall f_30023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30027)
static void C_ccall f_30027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29988)
static void C_ccall f_29988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29992)
static void C_ccall f_29992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29953)
static void C_ccall f_29953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29957)
static void C_ccall f_29957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29904)
static void C_fcall f_29904(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29907)
static void C_ccall f_29907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29911)
static void C_ccall f_29911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29875)
static void C_ccall f_29875(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29880)
static void C_ccall f_29880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29424)
static void C_ccall f_29424(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29424)
static void C_ccall f_29424r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29852)
static void C_ccall f_29852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29867)
static void C_ccall f_29867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29859)
static void C_ccall f_29859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29823)
static void C_ccall f_29823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29827)
static void C_ccall f_29827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29788)
static void C_ccall f_29788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29792)
static void C_ccall f_29792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29753)
static void C_ccall f_29753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29757)
static void C_ccall f_29757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29428)
static void C_fcall f_29428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29717)
static void C_ccall f_29717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29732)
static void C_ccall f_29732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29724)
static void C_ccall f_29724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29688)
static void C_ccall f_29688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29692)
static void C_ccall f_29692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29653)
static void C_ccall f_29653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29657)
static void C_ccall f_29657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29618)
static void C_ccall f_29618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29622)
static void C_ccall f_29622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29431)
static void C_fcall f_29431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29582)
static void C_ccall f_29582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29597)
static void C_ccall f_29597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29589)
static void C_ccall f_29589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29553)
static void C_ccall f_29553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29557)
static void C_ccall f_29557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29518)
static void C_ccall f_29518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29522)
static void C_ccall f_29522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29483)
static void C_ccall f_29483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29487)
static void C_ccall f_29487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29434)
static void C_fcall f_29434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29437)
static void C_ccall f_29437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29441)
static void C_ccall f_29441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29405)
static void C_ccall f_29405(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29410)
static void C_ccall f_29410(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28676)
static void C_ccall f_28676(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28676)
static void C_ccall f_28676r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29382)
static void C_ccall f_29382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29397)
static void C_ccall f_29397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29389)
static void C_ccall f_29389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29353)
static void C_ccall f_29353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29357)
static void C_ccall f_29357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29318)
static void C_ccall f_29318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29322)
static void C_ccall f_29322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29283)
static void C_ccall f_29283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29287)
static void C_ccall f_29287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29248)
static void C_ccall f_29248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29252)
static void C_ccall f_29252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28680)
static void C_fcall f_28680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29212)
static void C_ccall f_29212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29227)
static void C_ccall f_29227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29219)
static void C_ccall f_29219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29183)
static void C_ccall f_29183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29187)
static void C_ccall f_29187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29148)
static void C_ccall f_29148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29152)
static void C_ccall f_29152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29113)
static void C_ccall f_29113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29117)
static void C_ccall f_29117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29078)
static void C_ccall f_29078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29082)
static void C_ccall f_29082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28683)
static void C_fcall f_28683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29042)
static void C_ccall f_29042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29057)
static void C_ccall f_29057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29049)
static void C_ccall f_29049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29013)
static void C_ccall f_29013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29017)
static void C_ccall f_29017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28978)
static void C_ccall f_28978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28982)
static void C_ccall f_28982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28943)
static void C_ccall f_28943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28947)
static void C_ccall f_28947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28908)
static void C_ccall f_28908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28912)
static void C_ccall f_28912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28686)
static void C_fcall f_28686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28872)
static void C_ccall f_28872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28887)
static void C_ccall f_28887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28879)
static void C_ccall f_28879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28843)
static void C_ccall f_28843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28847)
static void C_ccall f_28847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28808)
static void C_ccall f_28808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28812)
static void C_ccall f_28812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28773)
static void C_ccall f_28773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28777)
static void C_ccall f_28777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28738)
static void C_ccall f_28738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28742)
static void C_ccall f_28742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28689)
static void C_fcall f_28689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28692)
static void C_ccall f_28692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28696)
static void C_ccall f_28696(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28657)
static void C_ccall f_28657(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28662)
static void C_ccall f_28662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27928)
static void C_ccall f_27928(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27928)
static void C_ccall f_27928r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28634)
static void C_ccall f_28634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28649)
static void C_ccall f_28649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28641)
static void C_ccall f_28641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28605)
static void C_ccall f_28605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28609)
static void C_ccall f_28609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28570)
static void C_ccall f_28570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28574)
static void C_ccall f_28574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28535)
static void C_ccall f_28535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28539)
static void C_ccall f_28539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28500)
static void C_ccall f_28500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28504)
static void C_ccall f_28504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27932)
static void C_fcall f_27932(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28464)
static void C_ccall f_28464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28479)
static void C_ccall f_28479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28471)
static void C_ccall f_28471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28435)
static void C_ccall f_28435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28439)
static void C_ccall f_28439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28400)
static void C_ccall f_28400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28404)
static void C_ccall f_28404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28365)
static void C_ccall f_28365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28369)
static void C_ccall f_28369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28330)
static void C_ccall f_28330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28334)
static void C_ccall f_28334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27935)
static void C_fcall f_27935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28294)
static void C_ccall f_28294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28309)
static void C_ccall f_28309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28301)
static void C_ccall f_28301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28265)
static void C_ccall f_28265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28269)
static void C_ccall f_28269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28230)
static void C_ccall f_28230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28234)
static void C_ccall f_28234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28195)
static void C_ccall f_28195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28199)
static void C_ccall f_28199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28160)
static void C_ccall f_28160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28164)
static void C_ccall f_28164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27938)
static void C_fcall f_27938(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28124)
static void C_ccall f_28124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28139)
static void C_ccall f_28139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28131)
static void C_ccall f_28131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28095)
static void C_ccall f_28095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28099)
static void C_ccall f_28099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28060)
static void C_ccall f_28060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28064)
static void C_ccall f_28064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28025)
static void C_ccall f_28025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28029)
static void C_ccall f_28029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27990)
static void C_ccall f_27990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27994)
static void C_ccall f_27994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27941)
static void C_fcall f_27941(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27944)
static void C_ccall f_27944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27948)
static void C_ccall f_27948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27909)
static void C_ccall f_27909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27914)
static void C_ccall f_27914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27458)
static void C_ccall f_27458(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27458)
static void C_ccall f_27458r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27886)
static void C_ccall f_27886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27901)
static void C_ccall f_27901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27893)
static void C_ccall f_27893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27857)
static void C_ccall f_27857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27861)
static void C_ccall f_27861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27822)
static void C_ccall f_27822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27826)
static void C_ccall f_27826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27787)
static void C_ccall f_27787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27791)
static void C_ccall f_27791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27462)
static void C_fcall f_27462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27751)
static void C_ccall f_27751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27766)
static void C_ccall f_27766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27758)
static void C_ccall f_27758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27722)
static void C_ccall f_27722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27726)
static void C_ccall f_27726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27687)
static void C_ccall f_27687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27691)
static void C_ccall f_27691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27652)
static void C_ccall f_27652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27656)
static void C_ccall f_27656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27465)
static void C_fcall f_27465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27616)
static void C_ccall f_27616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27631)
static void C_ccall f_27631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27623)
static void C_ccall f_27623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27587)
static void C_ccall f_27587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27591)
static void C_ccall f_27591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27552)
static void C_ccall f_27552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27556)
static void C_ccall f_27556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27517)
static void C_ccall f_27517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27521)
static void C_ccall f_27521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27468)
static void C_fcall f_27468(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27471)
static void C_ccall f_27471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27475)
static void C_ccall f_27475(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27439)
static void C_ccall f_27439(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27444)
static void C_ccall f_27444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26710)
static void C_ccall f_26710(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26710)
static void C_ccall f_26710r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27416)
static void C_ccall f_27416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27431)
static void C_ccall f_27431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27423)
static void C_ccall f_27423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27387)
static void C_ccall f_27387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27391)
static void C_ccall f_27391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27352)
static void C_ccall f_27352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27356)
static void C_ccall f_27356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27317)
static void C_ccall f_27317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27321)
static void C_ccall f_27321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27282)
static void C_ccall f_27282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27286)
static void C_ccall f_27286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26714)
static void C_fcall f_26714(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27246)
static void C_ccall f_27246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27261)
static void C_ccall f_27261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27253)
static void C_ccall f_27253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27217)
static void C_ccall f_27217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27221)
static void C_ccall f_27221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27182)
static void C_ccall f_27182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27186)
static void C_ccall f_27186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27147)
static void C_ccall f_27147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27151)
static void C_ccall f_27151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27112)
static void C_ccall f_27112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27116)
static void C_ccall f_27116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26717)
static void C_fcall f_26717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27076)
static void C_ccall f_27076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27091)
static void C_ccall f_27091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27083)
static void C_ccall f_27083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27047)
static void C_ccall f_27047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27051)
static void C_ccall f_27051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27012)
static void C_ccall f_27012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27016)
static void C_ccall f_27016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26977)
static void C_ccall f_26977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26981)
static void C_ccall f_26981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26942)
static void C_ccall f_26942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26946)
static void C_ccall f_26946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26720)
static void C_fcall f_26720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26906)
static void C_ccall f_26906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26921)
static void C_ccall f_26921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26913)
static void C_ccall f_26913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26877)
static void C_ccall f_26877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26881)
static void C_ccall f_26881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26842)
static void C_ccall f_26842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26846)
static void C_ccall f_26846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26807)
static void C_ccall f_26807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26811)
static void C_ccall f_26811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26772)
static void C_ccall f_26772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26776)
static void C_ccall f_26776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26723)
static void C_fcall f_26723(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26726)
static void C_ccall f_26726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26730)
static void C_ccall f_26730(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26372)
static void C_fcall f_26372(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26212)
static void C_fcall f_26212(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26247)
static void C_fcall f_26247(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26257)
static void C_fcall f_26257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26261)
static void C_ccall f_26261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26264)
static void C_ccall f_26264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26325)
static void C_ccall f_26325(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26316)
static void C_ccall f_26316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26267)
static void C_ccall f_26267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26286)
static void C_ccall f_26286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26293)
static void C_ccall f_26293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26270)
static void C_ccall f_26270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26276)
static void C_ccall f_26276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26245)
static void C_ccall f_26245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26220)
static void C_fcall f_26220(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26219)
static void C_ccall f_26219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26380)
static void C_fcall f_26380(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25958)
static void C_ccall f_25958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25980)
static void C_ccall f_25980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25995)
static void C_ccall f_25995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25998)
static void C_fcall f_25998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26174)
static void C_ccall f_26174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26168)
static void C_ccall f_26168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26001)
static void C_ccall f_26001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26150)
static void C_ccall f_26150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26004)
static void C_fcall f_26004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26007)
static void C_ccall f_26007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26143)
static void C_ccall f_26143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26131)
static void C_ccall f_26131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26027)
static void C_fcall f_26027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26034)
static void C_ccall f_26034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26104)
static void C_ccall f_26104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26090)
static void C_ccall f_26090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26098)
static void C_ccall f_26098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26037)
static void C_ccall f_26037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26076)
static void C_ccall f_26076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26040)
static void C_fcall f_26040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26069)
static void C_ccall f_26069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26049)
static void C_ccall f_26049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26053)
static void C_ccall f_26053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26014)
static void C_fcall f_26014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26017)
static void C_ccall f_26017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25827)
static void C_fcall f_25827(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25836)
static void C_fcall f_25836(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25784)
static void C_ccall f_25784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25790)
static void C_fcall f_25790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25853)
static void C_ccall f_25853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25939)
static void C_ccall f_25939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25926)
static void C_ccall f_25926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25934)
static void C_ccall f_25934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25856)
static void C_ccall f_25856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25860)
static void C_ccall f_25860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25903)
static void C_ccall f_25903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25865)
static void C_ccall f_25865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25831)
static void C_ccall f_25831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25726)
static void C_ccall f_25726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25733)
static void C_ccall f_25733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25764)
static void C_ccall f_25764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25760)
static void C_ccall f_25760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25752)
static void C_ccall f_25752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25635)
static void C_ccall f_25635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25642)
static void C_ccall f_25642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25710)
static void C_ccall f_25710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25653)
static void C_fcall f_25653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25680)
static void C_ccall f_25680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25664)
static void C_ccall f_25664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25569)
static void C_ccall f_25569(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25580)
static void C_ccall f_25580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25583)
static void C_fcall f_25583(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25590)
static void C_ccall f_25590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25563)
static void C_ccall f_25563(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25017)
static void C_ccall f_25017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25048)
static void C_ccall f_25048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25512)
static void C_ccall f_25512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25518)
static void C_ccall f_25518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25059)
static void C_ccall f_25059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24944)
static void C_fcall f_24944(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24969)
static void C_ccall f_24969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24904)
static void C_fcall f_24904(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24917)
static void C_fcall f_24917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24958)
static void C_ccall f_24958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25063)
static void C_ccall f_25063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25500)
static void C_ccall f_25500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25496)
static void C_fcall f_25496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25492)
static void C_ccall f_25492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25066)
static void C_ccall f_25066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25286)
static void C_fcall f_25286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25395)
static void C_ccall f_25395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25460)
static void C_ccall f_25460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25402)
static void C_fcall f_25402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25406)
static void C_ccall f_25406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25410)
static void C_ccall f_25410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25452)
static void C_ccall f_25452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25448)
static void C_ccall f_25448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25426)
static void C_ccall f_25426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25289)
static void C_fcall f_25289(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25292)
static void C_fcall f_25292(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25191)
static void C_ccall f_25191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25274)
static void C_ccall f_25274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25241)
static void C_ccall f_25241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25267)
static void C_ccall f_25267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25249)
static void C_ccall f_25249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25197)
static void C_fcall f_25197(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25237)
static void C_ccall f_25237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25179)
static void C_ccall f_25179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25150)
static void C_ccall f_25150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25172)
static void C_ccall f_25172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25158)
static void C_ccall f_25158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25112)
static void C_fcall f_25112(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25069)
static void C_fcall f_25069(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25080)
static void C_ccall f_25080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25084)
static void C_ccall f_25084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25088)
static void C_ccall f_25088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25092)
static void C_ccall f_25092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25076)
static void C_ccall f_25076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25036)
static void C_fcall f_25036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25031)
static void C_fcall f_25031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25026)
static void C_fcall f_25026(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24858)
static void C_ccall f_24858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24869)
static void C_ccall f_24869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24884)
static void C_ccall f_24884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24820)
static void C_ccall f_24820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24831)
static void C_ccall f_24831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24846)
static void C_ccall f_24846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24753)
static void C_ccall f_24753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24773)
static void C_fcall f_24773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24783)
static void C_ccall f_24783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24796)
static void C_ccall f_24796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24764)
static void C_ccall f_24764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24771)
static void C_ccall f_24771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24560)
static void C_ccall f_24560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24620)
static void C_fcall f_24620(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24630)
static void C_ccall f_24630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24744)
static void C_ccall f_24744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24709)
static void C_ccall f_24709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24701)
static void C_ccall f_24701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24672)
static void C_ccall f_24672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24650)
static void C_ccall f_24650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24653)
static void C_ccall f_24653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24641)
static void C_ccall f_24641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24567)
static void C_ccall f_24567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24618)
static void C_ccall f_24618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24610)
static void C_ccall f_24610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24570)
static void C_ccall f_24570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24581)
static void C_ccall f_24581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24585)
static void C_ccall f_24585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24577)
static void C_ccall f_24577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24418)
static void C_ccall f_24418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24466)
static void C_fcall f_24466(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24476)
static void C_ccall f_24476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24487)
static void C_ccall f_24487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24524)
static void C_ccall f_24524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24499)
static void C_ccall f_24499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24490)
static void C_ccall f_24490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24428)
static void C_ccall f_24428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24464)
static void C_ccall f_24464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24435)
static void C_ccall f_24435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24067)
static void C_ccall f_24067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24074)
static void C_ccall f_24074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24308)
static void C_fcall f_24308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24318)
static void C_ccall f_24318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24329)
static void C_ccall f_24329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24341)
static void C_fcall f_24341(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24344)
static void C_ccall f_24344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24332)
static void C_ccall f_24332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24080)
static void C_ccall f_24080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24306)
static void C_ccall f_24306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24302)
static void C_ccall f_24302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24248)
static void C_fcall f_24248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24213)
static void C_fcall f_24213(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24229)
static void C_fcall f_24229(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24184)
static void C_fcall f_24184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24108)
static void C_ccall f_24108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24111)
static void C_ccall f_24111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24175)
static void C_ccall f_24175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24171)
static void C_ccall f_24171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24091)
static void C_fcall f_24091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24102)
static void C_ccall f_24102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24098)
static void C_ccall f_24098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24020)
static void C_ccall f_24020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24053)
static void C_ccall f_24053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24035)
static void C_ccall f_24035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24047)
static void C_ccall f_24047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23638)
static void C_ccall f_23638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23847)
static void C_fcall f_23847(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23857)
static void C_ccall f_23857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23868)
static void C_ccall f_23868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23988)
static void C_ccall f_23988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23967)
static void C_ccall f_23967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23946)
static void C_ccall f_23946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23925)
static void C_ccall f_23925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23904)
static void C_ccall f_23904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23883)
static void C_ccall f_23883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23871)
static void C_ccall f_23871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23648)
static void C_ccall f_23648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23651)
static void C_fcall f_23651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23814)
static void C_fcall f_23814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23654)
static void C_fcall f_23654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23805)
static void C_ccall f_23805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23785)
static void C_ccall f_23785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23657)
static void C_fcall f_23657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23750)
static void C_ccall f_23750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23660)
static void C_fcall f_23660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23699)
static void C_ccall f_23699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23733)
static void C_ccall f_23733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23717)
static void C_ccall f_23717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23702)
static void C_fcall f_23702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23667)
static void C_fcall f_23667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23678)
static void C_ccall f_23678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23682)
static void C_ccall f_23682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23674)
static void C_ccall f_23674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23556)
static void C_ccall f_23556(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23560)
static void C_ccall f_23560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23578)
static void C_ccall f_23578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23396)
static void C_fcall f_23396(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23404)
static void C_fcall f_23404(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23414)
static void C_ccall f_23414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23452)
static void C_ccall f_23452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23455)
static void C_ccall f_23455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23458)
static void C_ccall f_23458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23533)
static void C_fcall f_23533(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23543)
static void C_ccall f_23543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23461)
static void C_ccall f_23461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23464)
static void C_ccall f_23464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23467)
static void C_ccall f_23467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23487)
static void C_fcall f_23487(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23497)
static void C_ccall f_23497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23500)
static void C_ccall f_23500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23503)
static void C_ccall f_23503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23470)
static void C_ccall f_23470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23473)
static void C_ccall f_23473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23390)
static void C_fcall f_23390(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23384)
static void C_fcall f_23384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23378)
static void C_fcall f_23378(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23307)
static void C_fcall f_23307(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23348)
static void C_ccall f_23348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23352)
static void C_ccall f_23352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23356)
static void C_ccall f_23356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23360)
static void C_ccall f_23360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23364)
static void C_ccall f_23364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23368)
static void C_ccall f_23368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23372)
static void C_ccall f_23372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23376)
static void C_ccall f_23376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23309)
static void C_fcall f_23309(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23315)
static void C_fcall f_23315(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23337)
static void C_ccall f_23337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23326)
static void C_ccall f_23326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23156)
static void C_fcall f_23156(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23171)
static void C_fcall f_23171(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23184)
static void C_ccall f_23184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23144)
static void C_ccall f_23144(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23132)
static void C_ccall f_23132(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23120)
static void C_ccall f_23120(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23114)
static void C_fcall f_23114(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23108)
static void C_ccall f_23108(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23096)
static void C_ccall f_23096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23084)
static void C_ccall f_23084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23072)
static void C_ccall f_23072(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23060)
static void C_ccall f_23060(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23054)
static void C_fcall f_23054(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23018)
static void C_ccall f_23018(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23012)
static void C_ccall f_23012(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22965)
static void C_ccall f_22965(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22969)
static void C_ccall f_22969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22985)
static void C_ccall f_22985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22994)
static void C_ccall f_22994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22972)
static void C_ccall f_22972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22956)
static void C_ccall f_22956(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22960)
static void C_ccall f_22960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22803)
static void C_ccall f_22803(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22803)
static void C_ccall f_22803r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22930)
static void C_fcall f_22930(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22943)
static void C_ccall f_22943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22925)
static void C_ccall f_22925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22806)
static void C_fcall f_22806(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22922)
static void C_ccall f_22922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22906)
static void C_ccall f_22906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22834)
static void C_ccall f_22834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22842)
static void C_fcall f_22842(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22852)
static void C_ccall f_22852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22855)
static void C_ccall f_22855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22837)
static void C_ccall f_22837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22626)
static void C_ccall f_22626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22630)
static void C_ccall f_22630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22635)
static void C_ccall f_22635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22638)
static void C_fcall f_22638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20450)
static void C_ccall f_20450(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20463)
static void C_ccall f_20463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20470)
static void C_fcall f_20470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20477)
static void C_ccall f_20477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20456)
static void C_ccall f_20456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22642)
static void C_ccall f_22642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22679)
static void C_ccall f_22679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22772)
static void C_fcall f_22772(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22782)
static void C_fcall f_22782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22685)
static void C_ccall f_22685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22742)
static void C_fcall f_22742(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22752)
static void C_fcall f_22752(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22693)
static void C_ccall f_22693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22707)
static void C_ccall f_22707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22711)
static void C_ccall f_22711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22715)
static void C_ccall f_22715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22719)
static void C_ccall f_22719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22726)
static void C_ccall f_22726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22703)
static void C_ccall f_22703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22696)
static void C_ccall f_22696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22645)
static void C_ccall f_22645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21577)
static void C_ccall f_21577(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21590)
static void C_ccall f_21590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21640)
static void C_ccall f_21640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21737)
static void C_ccall f_21737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21805)
static void C_ccall f_21805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22062)
static void C_ccall f_22062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21812)
static void C_fcall f_21812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22050)
static void C_ccall f_22050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22001)
static void C_ccall f_22001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22007)
static void C_ccall f_22007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22031)
static void C_ccall f_22031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22027)
static void C_ccall f_22027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22015)
static void C_ccall f_22015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21815)
static void C_fcall f_21815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21977)
static void C_ccall f_21977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21981)
static void C_ccall f_21981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21818)
static void C_fcall f_21818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21954)
static void C_ccall f_21954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21958)
static void C_ccall f_21958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21821)
static void C_fcall f_21821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21931)
static void C_ccall f_21931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21935)
static void C_ccall f_21935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21824)
static void C_fcall f_21824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21856)
static void C_ccall f_21856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21874)
static void C_ccall f_21874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21892)
static void C_ccall f_21892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21910)
static void C_ccall f_21910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21827)
static void C_fcall f_21827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21831)
static void C_ccall f_21831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21741)
static void C_ccall f_21741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21745)
static void C_ccall f_21745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21749)
static void C_ccall f_21749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21644)
static void C_ccall f_21644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21648)
static void C_ccall f_21648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21652)
static void C_ccall f_21652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21671)
static void C_ccall f_21671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21675)
static void C_ccall f_21675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21655)
static void C_fcall f_21655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21659)
static void C_ccall f_21659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21594)
static void C_ccall f_21594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21598)
static void C_ccall f_21598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21602)
static void C_ccall f_21602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21584)
static void C_fcall f_21584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21399)
static void C_fcall f_21399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21411)
static void C_fcall f_21411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21430)
static void C_ccall f_21430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21448)
static void C_fcall f_21448(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21480)
static void C_ccall f_21480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21483)
static void C_fcall f_21483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21476)
static void C_ccall f_21476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21462)
static void C_ccall f_21462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21433)
static void C_ccall f_21433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21378)
static void C_fcall f_21378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21385)
static void C_ccall f_21385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21388)
static void C_ccall f_21388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21394)
static void C_ccall f_21394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21313)
static void C_fcall f_21313(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21322)
static void C_fcall f_21322(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21345)
static void C_ccall f_21345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21335)
static void C_fcall f_21335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21269)
static void C_fcall f_21269(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21257)
static void C_fcall f_21257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21155)
static void C_fcall f_21155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21107)
static void C_fcall f_21107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20488)
static void C_fcall f_20488(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_20492)
static void C_ccall f_20492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20495)
static void C_ccall f_20495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20921)
static void C_ccall f_20921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20917)
static void C_ccall f_20917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20913)
static void C_ccall f_20913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20498)
static void C_fcall f_20498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20621)
static void C_ccall f_20621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19854)
static void C_ccall f_19854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20627)
static void C_fcall f_20627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19870)
static void C_ccall f_19870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20715)
static void C_fcall f_20715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20785)
static void C_ccall f_20785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19886)
static void C_ccall f_19886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20788)
static void C_fcall f_20788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19918)
static void C_ccall f_19918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20866)
static void C_fcall f_20866(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20892)
static void C_ccall f_20892(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20886)
static void C_ccall f_20886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20875)
static void C_ccall f_20875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20817)
static void C_fcall f_20817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20827)
static void C_ccall f_20827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20853)
static void C_ccall f_20853(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20847)
static void C_ccall f_20847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20830)
static void C_ccall f_20830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20840)
static void C_ccall f_20840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20833)
static void C_fcall f_20833(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20794)
static void C_ccall f_20794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20803)
static void C_ccall f_20803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20797)
static void C_fcall f_20797(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20721)
static void C_ccall f_20721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20739)
static void C_fcall f_20739(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20772)
static void C_ccall f_20772(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20758)
static void C_ccall f_20758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20766)
static void C_ccall f_20766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20749)
static void C_ccall f_20749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20724)
static void C_ccall f_20724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20636)
static void C_ccall f_20636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20658)
static void C_fcall f_20658(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20705)
static void C_ccall f_20705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20691)
static void C_ccall f_20691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20699)
static void C_ccall f_20699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20671)
static void C_ccall f_20671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20674)
static void C_fcall f_20674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20639)
static void C_ccall f_20639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20656)
static void C_ccall f_20656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20642)
static void C_fcall f_20642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20507)
static void C_ccall f_20507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20513)
static void C_ccall f_20513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20571)
static void C_ccall f_20571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20574)
static void C_ccall f_20574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20595)
static void C_ccall f_20595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20606)
static void C_ccall f_20606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20585)
static void C_ccall f_20585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20519)
static void C_ccall f_20519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20529)
static void C_ccall f_20529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20565)
static void C_ccall f_20565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20535)
static void C_ccall f_20535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20550)
static void C_ccall f_20550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20554)
static void C_ccall f_20554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20558)
static void C_ccall f_20558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20542)
static void C_ccall f_20542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20384)
static void C_fcall f_20384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20386)
static void C_ccall f_20386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20434)
static void C_ccall f_20434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20390)
static void C_ccall f_20390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20393)
static void C_fcall f_20393(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20398)
static void C_fcall f_20398(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20419)
static void C_ccall f_20419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20376)
static void C_fcall f_20376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20378)
static void C_ccall f_20378(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20168)
static void C_fcall f_20168(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20185)
static void C_ccall f_20185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20189)
static void C_ccall f_20189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20135)
static void C_fcall f_20135(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20142)
static void C_ccall f_20142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20086)
static void C_ccall f_20086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20093)
static void C_ccall f_20093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20151)
static void C_ccall f_20151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20374)
static void C_ccall f_20374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20351)
static void C_ccall f_20351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20367)
static void C_ccall f_20367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20213)
static void C_ccall f_20213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20216)
static void C_ccall f_20216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20240)
static void C_ccall f_20240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20297)
static void C_ccall f_20297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20303)
static void C_ccall f_20303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20312)
static void C_ccall f_20312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20321)
static void C_ccall f_20321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20330)
static void C_ccall f_20330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20339)
static void C_ccall f_20339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20291)
static void C_ccall f_20291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20246)
static void C_ccall f_20246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20252)
static void C_ccall f_20252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20258)
static void C_ccall f_20258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20264)
static void C_ccall f_20264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20270)
static void C_ccall f_20270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20276)
static void C_ccall f_20276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20117)
static void C_fcall f_20117(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20124)
static void C_ccall f_20124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20107)
static void C_fcall f_20107(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20095)
static void C_fcall f_20095(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20063)
static void C_fcall f_20063(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20070)
static void C_ccall f_20070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20077)
static void C_ccall f_20077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20047)
static void C_fcall f_20047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20054)
static void C_ccall f_20054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20061)
static void C_ccall f_20061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20035)
static void C_fcall f_20035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20017)
static void C_fcall f_20017(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19999)
static void C_fcall f_19999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19984)
static void C_fcall f_19984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19978)
static void C_fcall f_19978(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19966)
static void C_fcall f_19966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19948)
static void C_fcall f_19948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19927)
static void C_fcall f_19927(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19895)
static void C_fcall f_19895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19902)
static void C_ccall f_19902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19837)
static void C_fcall f_19837(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19845)
static void C_ccall f_19845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19827)
static void C_fcall f_19827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19835)
static void C_ccall f_19835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19821)
static void C_fcall f_19821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19809)
static void C_fcall f_19809(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19806)
static void C_ccall f_19806(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19785)
static void C_fcall f_19785(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19698)
static void C_fcall f_19698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19677)
static void C_fcall f_19677(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19667)
static void C_fcall f_19667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19655)
static void C_fcall f_19655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19626)
static void C_ccall f_19626(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19614)
static void C_fcall f_19614(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19596)
static void C_fcall f_19596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19578)
static void C_fcall f_19578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19557)
static void C_ccall f_19557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18717)
static void C_ccall f_18717(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18717)
static void C_ccall f_18717r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19539)
static void C_fcall f_19539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18733)
static void C_ccall f_18733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19447)
static void C_fcall f_19447(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19470)
static void C_fcall f_19470(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19523)
static void C_ccall f_19523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19505)
static void C_fcall f_19505(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19498)
static void C_ccall f_19498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19480)
static void C_ccall f_19480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19457)
static void C_ccall f_19457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18927)
static void C_ccall f_18927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19409)
static void C_fcall f_19409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19431)
static void C_ccall f_19431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19415)
static void C_ccall f_19415(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19423)
static void C_ccall f_19423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19427)
static void C_ccall f_19427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19413)
static void C_ccall f_19413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19403)
static void C_ccall f_19403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18930)
static void C_fcall f_18930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19280)
static void C_fcall f_19280(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19304)
static void C_ccall f_19304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19366)
static void C_fcall f_19366(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19307)
static void C_ccall f_19307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19323)
static void C_fcall f_19323(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19348)
static void C_ccall f_19348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19314)
static void C_ccall f_19314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19291)
static void C_ccall f_19291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18933)
static void C_ccall f_18933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19266)
static void C_ccall f_19266(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18937)
static void C_ccall f_18937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18988)
static void C_ccall f_18988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18991)
static void C_ccall f_18991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19247)
static void C_fcall f_19247(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19257)
static void C_ccall f_19257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18994)
static void C_ccall f_18994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19185)
static void C_fcall f_19185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19195)
static void C_ccall f_19195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19198)
static void C_ccall f_19198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19218)
static void C_ccall f_19218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19220)
static void C_fcall f_19220(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19230)
static void C_ccall f_19230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19204)
static void C_ccall f_19204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19207)
static void C_ccall f_19207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18997)
static void C_ccall f_18997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19005)
static void C_fcall f_19005(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19018)
static void C_ccall f_19018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18885)
static void C_ccall f_18885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18894)
static void C_fcall f_18894(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18916)
static void C_ccall f_18916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18905)
static void C_ccall f_18905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19021)
static void C_ccall f_19021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19156)
static void C_ccall f_19156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19158)
static void C_fcall f_19158(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19168)
static void C_ccall f_19168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19027)
static void C_ccall f_19027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19129)
static void C_ccall f_19129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19131)
static void C_fcall f_19131(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19141)
static void C_ccall f_19141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19030)
static void C_ccall f_19030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19042)
static void C_fcall f_19042(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19068)
static void C_ccall f_19068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19074)
static void C_ccall f_19074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19080)
static void C_ccall f_19080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19090)
static void C_ccall f_19090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19092)
static void C_fcall f_19092(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19102)
static void C_ccall f_19102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19083)
static void C_ccall f_19083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19055)
static void C_ccall f_19055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19033)
static void C_ccall f_19033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19000)
static void C_ccall f_19000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18940)
static void C_ccall f_18940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18970)
static void C_ccall f_18970(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18968)
static void C_ccall f_18968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18943)
static void C_fcall f_18943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18817)
static void C_fcall f_18817(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18865)
static void C_ccall f_18865(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18827)
static void C_ccall f_18827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18855)
static void C_ccall f_18855(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18830)
static void C_ccall f_18830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18735)
static void C_fcall f_18735(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18807)
static void C_ccall f_18807(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18739)
static void C_ccall f_18739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18757)
static void C_ccall f_18757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18789)
static void C_ccall f_18789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18623)
static void C_ccall f_18623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18627)
static void C_ccall f_18627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18656)
static void C_ccall f_18656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18661)
static void C_fcall f_18661(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18686)
static void C_fcall f_18686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18671)
static void C_ccall f_18671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18105)
static void C_ccall f_18105(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18105)
static void C_ccall f_18105r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18376)
static void C_ccall f_18376(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18380)
static void C_ccall f_18380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18385)
static void C_ccall f_18385(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18385)
static void C_ccall f_18385r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18591)
static void C_ccall f_18591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18606)
static void C_ccall f_18606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18598)
static void C_ccall f_18598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18562)
static void C_ccall f_18562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18566)
static void C_ccall f_18566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18527)
static void C_ccall f_18527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18531)
static void C_ccall f_18531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18389)
static void C_fcall f_18389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18491)
static void C_ccall f_18491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18506)
static void C_ccall f_18506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18498)
static void C_ccall f_18498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18462)
static void C_ccall f_18462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18466)
static void C_ccall f_18466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18427)
static void C_ccall f_18427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18431)
static void C_ccall f_18431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18392)
static void C_fcall f_18392(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18395)
static void C_ccall f_18395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18398)
static void C_fcall f_18398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18367)
static void C_ccall f_18367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18109)
static void C_ccall f_18109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18336)
static void C_ccall f_18336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18351)
static void C_ccall f_18351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18343)
static void C_ccall f_18343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18307)
static void C_ccall f_18307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18311)
static void C_ccall f_18311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18272)
static void C_ccall f_18272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18276)
static void C_ccall f_18276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18112)
static void C_fcall f_18112(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18236)
static void C_ccall f_18236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18251)
static void C_ccall f_18251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18243)
static void C_ccall f_18243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18207)
static void C_ccall f_18207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18211)
static void C_ccall f_18211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18172)
static void C_ccall f_18172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18176)
static void C_ccall f_18176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18115)
static void C_fcall f_18115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18118)
static void C_ccall f_18118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18121)
static void C_ccall f_18121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18133)
static void C_ccall f_18133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18151)
static void C_ccall f_18151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18139)
static void C_ccall f_18139(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18127)
static void C_ccall f_18127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18042)
static void C_fcall f_18042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17702)
static void C_ccall f_17702(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17884)
static void C_ccall f_17884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17888)
static void C_ccall f_17888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17890)
static void C_fcall f_17890(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17815)
static void C_fcall f_17815(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17825)
static void C_fcall f_17825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17832)
static void C_fcall f_17832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17900)
static void C_ccall f_17900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17903)
static void C_ccall f_17903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17907)
static void C_ccall f_17907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17927)
static void C_fcall f_17927(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17943)
static void C_ccall f_17943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17910)
static void C_ccall f_17910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17705)
static void C_fcall f_17705(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17717)
static void C_fcall f_17717(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17753)
static void C_ccall f_17753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17773)
static void C_ccall f_17773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17778)
static void C_fcall f_17778(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17215)
static void C_ccall f_17215(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17215)
static void C_ccall f_17215r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17142)
static void C_fcall f_17142(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_16987)
static void C_ccall f_16987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16993)
static void C_ccall f_16993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17078)
static void C_fcall f_17078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17005)
static void C_ccall f_17005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17021)
static void C_ccall f_17021(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17025)
static void C_fcall f_17025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17028)
static void C_fcall f_17028(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17008)
static void C_ccall f_17008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17019)
static void C_ccall f_17019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17159)
static void C_ccall f_17159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17696)
static void C_ccall f_17696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17219)
static void C_ccall f_17219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17665)
static void C_ccall f_17665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17680)
static void C_ccall f_17680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17672)
static void C_ccall f_17672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17636)
static void C_ccall f_17636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17640)
static void C_ccall f_17640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17601)
static void C_ccall f_17601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17605)
static void C_ccall f_17605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17566)
static void C_ccall f_17566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17570)
static void C_ccall f_17570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17222)
static void C_fcall f_17222(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17530)
static void C_ccall f_17530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17545)
static void C_ccall f_17545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17537)
static void C_ccall f_17537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17501)
static void C_ccall f_17501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17505)
static void C_ccall f_17505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17466)
static void C_ccall f_17466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17470)
static void C_ccall f_17470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17431)
static void C_ccall f_17431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17435)
static void C_ccall f_17435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17225)
static void C_fcall f_17225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17395)
static void C_ccall f_17395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17410)
static void C_ccall f_17410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17402)
static void C_ccall f_17402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17366)
static void C_ccall f_17366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17370)
static void C_ccall f_17370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17331)
static void C_ccall f_17331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17335)
static void C_ccall f_17335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17296)
static void C_ccall f_17296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17300)
static void C_ccall f_17300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17228)
static void C_fcall f_17228(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17231)
static void C_ccall f_17231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17234)
static void C_ccall f_17234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17267)
static void C_ccall f_17267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17275)
static void C_ccall f_17275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17240)
static void C_ccall f_17240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17253)
static void C_ccall f_17253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_fcall f_17243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17246)
static void C_ccall f_17246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16782)
static void C_ccall f_16782(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16786)
static void C_ccall f_16786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16789)
static void C_ccall f_16789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16792)
static void C_ccall f_16792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16961)
static void C_ccall f_16961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16974)
static void C_ccall f_16974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16978)
static void C_ccall f_16978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16798)
static void C_ccall f_16798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16954)
static void C_ccall f_16954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16935)
static void C_ccall f_16935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16942)
static void C_ccall f_16942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16946)
static void C_ccall f_16946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16804)
static void C_fcall f_16804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16810)
static void C_ccall f_16810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16894)
static void C_ccall f_16894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16896)
static void C_fcall f_16896(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16918)
static void C_ccall f_16918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16925)
static void C_ccall f_16925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16929)
static void C_ccall f_16929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16915)
static void C_fcall f_16915(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16911)
static void C_ccall f_16911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16852)
static void C_ccall f_16852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16869)
static void C_fcall f_16869(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16879)
static void C_ccall f_16879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16855)
static void C_ccall f_16855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16814)
static void C_fcall f_16814(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16822)
static void C_ccall f_16822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16824)
static void C_fcall f_16824(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16845)
static void C_ccall f_16845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16670)
static void C_fcall f_16670(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16780)
static void C_ccall f_16780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16739)
static void C_fcall f_16739(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16772)
static void C_ccall f_16772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16768)
static void C_ccall f_16768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16753)
static void C_ccall f_16753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16677)
static void C_ccall f_16677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16685)
static void C_fcall f_16685(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16730)
static void C_ccall f_16730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16718)
static void C_ccall f_16718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16702)
static void C_ccall f_16702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15903)
static void C_ccall f_15903(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15903)
static void C_ccall f_15903r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16220)
static void C_ccall f_16220(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16227)
static void C_fcall f_16227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16632)
static void C_ccall f_16632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16647)
static void C_ccall f_16647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16639)
static void C_ccall f_16639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16603)
static void C_ccall f_16603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16607)
static void C_ccall f_16607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16568)
static void C_ccall f_16568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16572)
static void C_ccall f_16572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16533)
static void C_ccall f_16533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16537)
static void C_ccall f_16537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16230)
static void C_fcall f_16230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16497)
static void C_ccall f_16497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16512)
static void C_ccall f_16512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16504)
static void C_ccall f_16504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16468)
static void C_ccall f_16468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16472)
static void C_ccall f_16472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16433)
static void C_ccall f_16433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16437)
static void C_ccall f_16437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16398)
static void C_ccall f_16398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16402)
static void C_ccall f_16402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16233)
static void C_fcall f_16233(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16362)
static void C_ccall f_16362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16377)
static void C_ccall f_16377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16369)
static void C_ccall f_16369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16333)
static void C_ccall f_16333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16337)
static void C_ccall f_16337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16298)
static void C_ccall f_16298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16302)
static void C_ccall f_16302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16263)
static void C_ccall f_16263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16267)
static void C_ccall f_16267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16236)
static void C_fcall f_16236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16239)
static void C_ccall f_16239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15907)
static void C_ccall f_15907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15910)
static void C_ccall f_15910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16184)
static void C_ccall f_16184(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16188)
static void C_ccall f_16188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16191)
static void C_ccall f_16191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16194)
static void C_ccall f_16194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16197)
static void C_ccall f_16197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16210)
static void C_ccall f_16210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16200)
static void C_fcall f_16200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15916)
static void C_ccall f_15916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15923)
static void C_fcall f_15923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16154)
static void C_ccall f_16154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16169)
static void C_ccall f_16169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16161)
static void C_ccall f_16161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16125)
static void C_ccall f_16125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16129)
static void C_ccall f_16129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16090)
static void C_ccall f_16090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16094)
static void C_ccall f_16094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15926)
static void C_fcall f_15926(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16054)
static void C_ccall f_16054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16069)
static void C_ccall f_16069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16061)
static void C_ccall f_16061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16025)
static void C_ccall f_16025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16029)
static void C_ccall f_16029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15990)
static void C_ccall f_15990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15994)
static void C_ccall f_15994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15929)
static void C_fcall f_15929(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15932)
static void C_ccall f_15932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15947)
static void C_ccall f_15947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15969)
static void C_ccall f_15969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15953)
static void C_ccall f_15953(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15961)
static void C_ccall f_15961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15935)
static void C_ccall f_15935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15938)
static void C_ccall f_15938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15820)
static void C_fcall f_15820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15811)
static void C_fcall f_15811(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15802)
static void C_fcall f_15802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15784)
static void C_fcall f_15784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15766)
static void C_fcall f_15766(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15748)
static void C_fcall f_15748(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15739)
static void C_fcall f_15739(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15730)
static void C_fcall f_15730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15508)
static void C_ccall f_15508(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15558)
static void C_ccall f_15558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15703)
static void C_ccall f_15703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15584)
static void C_ccall f_15584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15699)
static void C_ccall f_15699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15684)
static void C_ccall f_15684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15665)
static void C_ccall f_15665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15638)
static void C_ccall f_15638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15591)
static void C_ccall f_15591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15561)
static void C_fcall f_15561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15511)
static void C_ccall f_15511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15517)
static void C_fcall f_15517(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15533)
static void C_ccall f_15533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15536)
static void C_ccall f_15536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15034)
static void C_ccall f_15034(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15034)
static void C_ccall f_15034r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15498)
static void C_ccall f_15498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15038)
static void C_fcall f_15038(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15470)
static void C_ccall f_15470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15485)
static void C_ccall f_15485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15477)
static void C_ccall f_15477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15441)
static void C_ccall f_15441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15445)
static void C_ccall f_15445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15406)
static void C_ccall f_15406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15410)
static void C_ccall f_15410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15371)
static void C_ccall f_15371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15375)
static void C_ccall f_15375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15041)
static void C_fcall f_15041(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15335)
static void C_ccall f_15335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15350)
static void C_ccall f_15350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15342)
static void C_ccall f_15342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15306)
static void C_ccall f_15306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15310)
static void C_ccall f_15310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15271)
static void C_ccall f_15271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15275)
static void C_ccall f_15275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15236)
static void C_ccall f_15236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15240)
static void C_ccall f_15240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15044)
static void C_fcall f_15044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15200)
static void C_ccall f_15200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15207)
static void C_ccall f_15207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15171)
static void C_ccall f_15171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15175)
static void C_ccall f_15175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15136)
static void C_ccall f_15136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15140)
static void C_ccall f_15140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15101)
static void C_ccall f_15101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15105)
static void C_ccall f_15105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15047)
static void C_fcall f_15047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15050)
static void C_ccall f_15050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15053)
static void C_ccall f_15053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15068)
static void C_ccall f_15068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15080)
static void C_ccall f_15080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15059)
static void C_ccall f_15059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15062)
static void C_ccall f_15062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14958)
static void C_ccall f_14958(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14962)
static void C_ccall f_14962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14981)
static void C_ccall f_14981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14991)
static void C_ccall f_14991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14993)
static void C_fcall f_14993(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15010)
static void C_ccall f_15010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15013)
static void C_ccall f_15013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15024)
static void C_ccall f_15024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14965)
static void C_ccall f_14965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14695)
static void C_ccall f_14695(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14695)
static void C_ccall f_14695r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14948)
static void C_ccall f_14948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14699)
static void C_fcall f_14699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14920)
static void C_ccall f_14920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14935)
static void C_ccall f_14935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14927)
static void C_ccall f_14927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14891)
static void C_ccall f_14891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14895)
static void C_ccall f_14895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14856)
static void C_ccall f_14856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14860)
static void C_ccall f_14860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14702)
static void C_fcall f_14702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14820)
static void C_ccall f_14820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14835)
static void C_ccall f_14835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14827)
static void C_ccall f_14827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14791)
static void C_ccall f_14791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14795)
static void C_ccall f_14795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14756)
static void C_ccall f_14756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14760)
static void C_ccall f_14760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14705)
static void C_fcall f_14705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14708)
static void C_ccall f_14708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14711)
static void C_ccall f_14711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14723)
static void C_ccall f_14723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14735)
static void C_ccall f_14735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14717)
static void C_ccall f_14717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14659)
static void C_ccall f_14659(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14663)
static void C_ccall f_14663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14685)
static void C_ccall f_14685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14679)
static void C_ccall f_14679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14672)
static void C_ccall f_14672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14412)
static void C_ccall f_14412(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14412)
static void C_ccall f_14412r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14416)
static void C_fcall f_14416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14629)
static void C_ccall f_14629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14644)
static void C_ccall f_14644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14636)
static void C_ccall f_14636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14600)
static void C_ccall f_14600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14604)
static void C_ccall f_14604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14565)
static void C_ccall f_14565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14569)
static void C_ccall f_14569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14419)
static void C_fcall f_14419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14529)
static void C_ccall f_14529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14544)
static void C_ccall f_14544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14536)
static void C_ccall f_14536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14500)
static void C_ccall f_14500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14504)
static void C_ccall f_14504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14465)
static void C_ccall f_14465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14469)
static void C_ccall f_14469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14422)
static void C_fcall f_14422(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14425)
static void C_ccall f_14425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14428)
static void C_ccall f_14428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14436)
static void C_ccall f_14436(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14444)
static void C_ccall f_14444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14434)
static void C_ccall f_14434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14197)
static void C_ccall f_14197(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14201)
static void C_ccall f_14201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14410)
static void C_ccall f_14410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14363)
static void C_ccall f_14363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14375)
static void C_fcall f_14375(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14231)
static void C_ccall f_14231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14234)
static void C_ccall f_14234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14243)
static void C_ccall f_14243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14331)
static void C_fcall f_14331(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14246)
static void C_fcall f_14246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14325)
static void C_ccall f_14325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14252)
static void C_ccall f_14252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14255)
static void C_ccall f_14255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14207)
static void C_ccall f_14207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14210)
static void C_ccall f_14210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14217)
static void C_ccall f_14217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13727)
static void C_ccall f_13727(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13727)
static void C_ccall f_13727r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13731)
static void C_fcall f_13731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14167)
static void C_ccall f_14167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14182)
static void C_ccall f_14182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14174)
static void C_ccall f_14174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14138)
static void C_ccall f_14138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14142)
static void C_ccall f_14142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14103)
static void C_ccall f_14103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14107)
static void C_ccall f_14107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14068)
static void C_ccall f_14068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14072)
static void C_ccall f_14072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13734)
static void C_fcall f_13734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14032)
static void C_ccall f_14032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14047)
static void C_ccall f_14047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14039)
static void C_ccall f_14039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14003)
static void C_ccall f_14003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14007)
static void C_ccall f_14007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13968)
static void C_ccall f_13968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13972)
static void C_ccall f_13972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13933)
static void C_ccall f_13933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13937)
static void C_ccall f_13937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13737)
static void C_fcall f_13737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13897)
static void C_ccall f_13897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13904)
static void C_ccall f_13904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13868)
static void C_ccall f_13868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13872)
static void C_ccall f_13872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13833)
static void C_ccall f_13833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13837)
static void C_ccall f_13837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13798)
static void C_ccall f_13798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13802)
static void C_ccall f_13802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13740)
static void C_fcall f_13740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13743)
static void C_ccall f_13743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13746)
static void C_ccall f_13746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13769)
static void C_ccall f_13769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13777)
static void C_ccall f_13777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13752)
static void C_ccall f_13752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13755)
static void C_ccall f_13755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13647)
static void C_fcall f_13647(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13638)
static void C_fcall f_13638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13566)
static void C_ccall f_13566(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13570)
static void C_ccall f_13570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13573)
static void C_fcall f_13573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13311)
static void C_ccall f_13311(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13311)
static void C_ccall f_13311r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13315)
static void C_fcall f_13315(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13536)
static void C_ccall f_13536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13551)
static void C_ccall f_13551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13543)
static void C_ccall f_13543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13507)
static void C_ccall f_13507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13511)
static void C_ccall f_13511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13472)
static void C_ccall f_13472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13476)
static void C_ccall f_13476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13318)
static void C_fcall f_13318(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13436)
static void C_ccall f_13436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13451)
static void C_ccall f_13451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13443)
static void C_ccall f_13443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13407)
static void C_ccall f_13407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13411)
static void C_ccall f_13411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13372)
static void C_ccall f_13372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13376)
static void C_ccall f_13376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13321)
static void C_fcall f_13321(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13324)
static void C_ccall f_13324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13327)
static void C_ccall f_13327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13339)
static void C_ccall f_13339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13351)
static void C_ccall f_13351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13333)
static void C_ccall f_13333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13196)
static void C_fcall f_13196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13309)
static void C_ccall f_13309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13206)
static void C_ccall f_13206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13294)
static void C_ccall f_13294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13305)
static void C_ccall f_13305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13301)
static void C_ccall f_13301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13209)
static void C_ccall f_13209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13291)
static void C_ccall f_13291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13217)
static void C_ccall f_13217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13281)
static void C_ccall f_13281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13226)
static void C_ccall f_13226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13245)
static void C_ccall f_13245(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13274)
static void C_ccall f_13274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13255)
static void C_ccall f_13255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13270)
static void C_ccall f_13270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13258)
static void C_ccall f_13258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13229)
static void C_ccall f_13229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13239)
static void C_ccall f_13239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13220)
static void C_fcall f_13220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13223)
static void C_ccall f_13223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13150)
static void C_fcall f_13150(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13141)
static void C_fcall f_13141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12840)
static void C_fcall f_12840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12847)
static void C_ccall f_12847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13136)
static void C_ccall f_13136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12850)
static void C_ccall f_12850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13121)
static void C_ccall f_13121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13113)
static void C_ccall f_13113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13105)
static void C_ccall f_13105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13108)
static void C_ccall f_13108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13076)
static void C_fcall f_13076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13099)
static void C_ccall f_13099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13082)
static void C_fcall f_13082(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13086)
static void C_ccall f_13086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12853)
static void C_ccall f_12853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12859)
static void C_ccall f_12859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12951)
static void C_ccall f_12951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13063)
static void C_ccall f_13063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13070)
static void C_ccall f_13070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12974)
static void C_fcall f_12974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12976)
static void C_fcall f_12976(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13025)
static void C_fcall f_13025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13060)
static void C_ccall f_13060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13049)
static void C_ccall f_13049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13194)
static void C_ccall f_13194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13169)
static void C_ccall f_13169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13190)
static void C_ccall f_13190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13186)
static void C_ccall f_13186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13178)
static void C_ccall f_13178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13042)
static void C_ccall f_13042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13035)
static void C_ccall f_13035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12983)
static void C_ccall f_12983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13023)
static void C_ccall f_13023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12987)
static void C_ccall f_12987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13019)
static void C_ccall f_13019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13006)
static void C_ccall f_13006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13014)
static void C_ccall f_13014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13010)
static void C_ccall f_13010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12990)
static void C_fcall f_12990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12993)
static void C_ccall f_12993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12967)
static void C_ccall f_12967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12954)
static void C_ccall f_12954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12963)
static void C_ccall f_12963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12958)
static void C_ccall f_12958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12865)
static void C_ccall f_12865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12945)
static void C_ccall f_12945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12925)
static void C_ccall f_12925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12931)
static void C_ccall f_12931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12942)
static void C_ccall f_12942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12922)
static void C_ccall f_12922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12910)
static void C_ccall f_12910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12913)
static void C_ccall f_12913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12868)
static void C_ccall f_12868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12904)
static void C_ccall f_12904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12899)
static void C_ccall f_12899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12871)
static void C_ccall f_12871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12884)
static void C_ccall f_12884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12874)
static void C_fcall f_12874(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12877)
static void C_ccall f_12877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12880)
static void C_ccall f_12880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12717)
static void C_ccall f_12717(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12717)
static void C_ccall f_12717r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12776)
static void C_ccall f_12776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12786)
static void C_ccall f_12786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12788)
static void C_fcall f_12788(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12817)
static void C_ccall f_12817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12822)
static void C_ccall f_12822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12807)
static void C_fcall f_12807(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12738)
static void C_fcall f_12738(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12770)
static void C_ccall f_12770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12698)
static void C_ccall f_12698(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12705)
static void C_ccall f_12705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12712)
static void C_ccall f_12712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12679)
static void C_ccall f_12679(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12686)
static void C_ccall f_12686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12693)
static void C_ccall f_12693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12499)
static void C_fcall f_12499(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_12503)
static void C_ccall f_12503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12506)
static void C_ccall f_12506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12509)
static void C_ccall f_12509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12512)
static void C_ccall f_12512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12669)
static void C_ccall f_12669(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12676)
static void C_ccall f_12676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12515)
static void C_ccall f_12515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12518)
static void C_fcall f_12518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12524)
static void C_ccall f_12524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12530)
static void C_ccall f_12530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12593)
static void C_ccall f_12593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12607)
static void C_ccall f_12607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12533)
static void C_fcall f_12533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12536)
static void C_ccall f_12536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12542)
static void C_fcall f_12542(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12555)
static void C_ccall f_12555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12545)
static void C_ccall f_12545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12548)
static void C_ccall f_12548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12489)
static void C_fcall f_12489(C_word t0) C_noret;
C_noret_decl(f_12434)
static void C_fcall f_12434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12425)
static void C_fcall f_12425(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12308)
static void C_fcall f_12308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12299)
static void C_fcall f_12299(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12290)
static void C_ccall f_12290(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12281)
static void C_fcall f_12281(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12272)
static void C_fcall f_12272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12254)
static void C_fcall f_12254(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12245)
static void C_fcall f_12245(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12236)
static void C_fcall f_12236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12218)
static void C_fcall f_12218(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12209)
static void C_fcall f_12209(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12200)
static void C_fcall f_12200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12185)
static void C_fcall f_12185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12140)
static void C_fcall f_12140(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12122)
static void C_fcall f_12122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12113)
static void C_fcall f_12113(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12086)
static void C_fcall f_12086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12068)
static void C_fcall f_12068(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12050)
static void C_fcall f_12050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12041)
static void C_fcall f_12041(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12029)
static void C_fcall f_12029(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11716)
static void C_ccall f_11716(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12027)
static void C_ccall f_12027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11962)
static void C_ccall f_11962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11964)
static void C_fcall f_11964(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7462)
static void C_ccall f_7462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11979)
static void C_ccall f_11979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11982)
static void C_fcall f_11982(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11729)
static void C_ccall f_11729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11805)
static void C_fcall f_11805(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11958)
static void C_ccall f_11958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11942)
static void C_ccall f_11942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11894)
static void C_fcall f_11894(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11908)
static void C_fcall f_11908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11861)
static void C_ccall f_11861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11836)
static void C_fcall f_11836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11732)
static void C_ccall f_11732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11740)
static void C_fcall f_11740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11773)
static void C_ccall f_11773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11009)
static void C_ccall f_11009(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11009)
static void C_ccall f_11009r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11693)
static void C_ccall f_11693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11708)
static void C_ccall f_11708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11700)
static void C_ccall f_11700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11664)
static void C_ccall f_11664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11668)
static void C_ccall f_11668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11629)
static void C_ccall f_11629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11633)
static void C_ccall f_11633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11594)
static void C_ccall f_11594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11598)
static void C_ccall f_11598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11559)
static void C_ccall f_11559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11563)
static void C_ccall f_11563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11013)
static void C_fcall f_11013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11523)
static void C_ccall f_11523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11538)
static void C_ccall f_11538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11530)
static void C_ccall f_11530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11494)
static void C_ccall f_11494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11498)
static void C_ccall f_11498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11459)
static void C_ccall f_11459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11463)
static void C_ccall f_11463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11424)
static void C_ccall f_11424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11428)
static void C_ccall f_11428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11389)
static void C_ccall f_11389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11393)
static void C_ccall f_11393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11016)
static void C_fcall f_11016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11353)
static void C_ccall f_11353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11368)
static void C_ccall f_11368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11360)
static void C_ccall f_11360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11324)
static void C_ccall f_11324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11328)
static void C_ccall f_11328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11289)
static void C_ccall f_11289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11293)
static void C_ccall f_11293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11254)
static void C_ccall f_11254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11258)
static void C_ccall f_11258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11219)
static void C_ccall f_11219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11223)
static void C_ccall f_11223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11019)
static void C_fcall f_11019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11183)
static void C_ccall f_11183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11198)
static void C_ccall f_11198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11190)
static void C_ccall f_11190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11154)
static void C_ccall f_11154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11158)
static void C_ccall f_11158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11119)
static void C_ccall f_11119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11123)
static void C_ccall f_11123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11084)
static void C_ccall f_11084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11088)
static void C_ccall f_11088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11049)
static void C_ccall f_11049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11053)
static void C_ccall f_11053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11022)
static void C_fcall f_11022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11025)
static void C_ccall f_11025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10775)
static void C_fcall f_10775(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10784)
static void C_ccall f_10784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10788)
static void C_ccall f_10788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10990)
static void C_ccall f_10990(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10975)
static void C_ccall f_10975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10957)
static void C_ccall f_10957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10942)
static void C_ccall f_10942(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10892)
static void C_ccall f_10892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10872)
static void C_ccall f_10872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10889)
static void C_ccall f_10889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10876)
static void C_ccall f_10876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10882)
static void C_ccall f_10882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10857)
static void C_ccall f_10857(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10861)
static void C_ccall f_10861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10867)
static void C_ccall f_10867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10843)
static void C_ccall f_10843(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10855)
static void C_ccall f_10855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10851)
static void C_ccall f_10851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10833)
static void C_ccall f_10833(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10841)
static void C_ccall f_10841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10823)
static void C_ccall f_10823(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10790)
static void C_ccall f_10790(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10746)
static void C_ccall f_10746(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10750)
static void C_ccall f_10750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10761)
static void C_ccall f_10761(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10759)
static void C_ccall f_10759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10715)
static void C_ccall f_10715(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10719)
static void C_ccall f_10719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10730)
static void C_ccall f_10730(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10728)
static void C_ccall f_10728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10697)
static void C_ccall f_10697(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10705)
static void C_ccall f_10705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10713)
static void C_ccall f_10713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10687)
static void C_ccall f_10687(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10695)
static void C_ccall f_10695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10628)
static void C_ccall f_10628(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10635)
static void C_ccall f_10635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10638)
static void C_ccall f_10638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10641)
static void C_ccall f_10641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10646)
static void C_fcall f_10646(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10598)
static void C_ccall f_10598(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10598)
static void C_ccall f_10598r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10602)
static void C_ccall f_10602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10612)
static void C_ccall f_10612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10586)
static void C_ccall f_10586(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10550)
static void C_ccall f_10550(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10532)
static void C_ccall f_10532(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10511)
static void C_fcall f_10511(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10203)
static void C_ccall f_10203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10304)
static void C_ccall f_10304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10353)
static void C_ccall f_10353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10349)
static void C_ccall f_10349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10321)
static void C_ccall f_10321(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10256)
static void C_fcall f_10256(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10265)
static void C_fcall f_10265(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10249)
static void C_ccall f_10249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10068)
static void C_ccall f_10068(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10194)
static void C_ccall f_10194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10190)
static void C_ccall f_10190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10168)
static void C_ccall f_10168(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10098)
static void C_fcall f_10098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10114)
static void C_fcall f_10114(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10023)
static void C_ccall f_10023(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10066)
static void C_ccall f_10066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10055)
static void C_ccall f_10055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9907)
static void C_ccall f_9907(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10021)
static void C_ccall f_10021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9922)
static void C_fcall f_9922(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9952)
static void C_fcall f_9952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9971)
static void C_ccall f_9971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9956)
static void C_ccall f_9956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9935)
static void C_fcall f_9935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9785)
static void C_ccall f_9785(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9905)
static void C_ccall f_9905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9800)
static void C_fcall f_9800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9830)
static void C_fcall f_9830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9849)
static void C_ccall f_9849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9834)
static void C_ccall f_9834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9813)
static void C_fcall f_9813(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9688)
static void C_ccall f_9688(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9783)
static void C_ccall f_9783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9703)
static void C_fcall f_9703(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9749)
static void C_ccall f_9749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9734)
static void C_ccall f_9734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9716)
static void C_fcall f_9716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9635)
static void C_fcall f_9635(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9673)
static void C_ccall f_9673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9680)
static void C_ccall f_9680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9658)
static void C_ccall f_9658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9633)
static void C_ccall f_9633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9605)
static void C_fcall f_9605(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9607)
static void C_ccall f_9607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9585)
static void C_ccall f_9585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9533)
static void C_fcall f_9533(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9570)
static void C_ccall f_9570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9537)
static void C_ccall f_9537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9553)
static void C_ccall f_9553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9555)
static void C_ccall f_9555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9319)
static void C_ccall f_9319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9319)
static void C_ccall f_9319r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9332)
static void C_fcall f_9332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9414)
static void C_fcall f_9414(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9417)
static void C_ccall f_9417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9425)
static void C_fcall f_9425(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9437)
static void C_fcall f_9437(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9458)
static void C_ccall f_9458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9466)
static void C_ccall f_9466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9353)
static void C_ccall f_9353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9358)
static void C_fcall f_9358(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9390)
static void C_ccall f_9390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9298)
static void C_ccall f_9298(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9298)
static void C_ccall f_9298r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9279)
static void C_ccall f_9279(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9279)
static void C_ccall f_9279r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9238)
static void C_ccall f_9238(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9238)
static void C_ccall f_9238r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9219)
static void C_ccall f_9219(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9219)
static void C_ccall f_9219r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8991)
static void C_ccall f_8991(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8991)
static void C_ccall f_8991r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9196)
static void C_ccall f_9196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9211)
static void C_ccall f_9211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9203)
static void C_ccall f_9203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9167)
static void C_ccall f_9167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9171)
static void C_ccall f_9171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9132)
static void C_ccall f_9132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9136)
static void C_ccall f_9136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8995)
static void C_fcall f_8995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9096)
static void C_ccall f_9096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9111)
static void C_ccall f_9111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9103)
static void C_ccall f_9103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9067)
static void C_ccall f_9067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9071)
static void C_ccall f_9071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9032)
static void C_ccall f_9032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9036)
static void C_ccall f_9036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8998)
static void C_fcall f_8998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9001)
static void C_ccall f_9001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9004)
static void C_fcall f_9004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8949)
static void C_ccall f_8949(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8949)
static void C_ccall f_8949r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8978)
static void C_ccall f_8978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8963)
static void C_ccall f_8963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8894)
static void C_ccall f_8894(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8905)
static void C_ccall f_8905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8907)
static void C_fcall f_8907(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8935)
static void C_ccall f_8935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8795)
static void C_ccall f_8795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8795)
static void C_ccall f_8795r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8799)
static void C_fcall f_8799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8802)
static void C_ccall f_8802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8867)
static void C_ccall f_8867(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8804)
static void C_fcall f_8804(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8820)
static void C_ccall f_8820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8567)
static void C_ccall f_8567(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8567)
static void C_ccall f_8567r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8772)
static void C_ccall f_8772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8787)
static void C_ccall f_8787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8779)
static void C_ccall f_8779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8743)
static void C_ccall f_8743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8747)
static void C_ccall f_8747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8708)
static void C_ccall f_8708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8571)
static void C_fcall f_8571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8672)
static void C_ccall f_8672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8687)
static void C_ccall f_8687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8679)
static void C_ccall f_8679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8643)
static void C_ccall f_8643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8647)
static void C_ccall f_8647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8608)
static void C_ccall f_8608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8612)
static void C_ccall f_8612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8574)
static void C_fcall f_8574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8577)
static void C_ccall f_8577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8587)
static void C_ccall f_8587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8524)
static void C_ccall f_8524(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8524)
static void C_ccall f_8524r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8557)
static void C_ccall f_8557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8542)
static void C_ccall f_8542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8503)
static void C_ccall f_8503(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8468)
static void C_ccall f_8468(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8468)
static void C_ccall f_8468r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8472)
static void C_fcall f_8472(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8360)
static void C_ccall f_8360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8360)
static void C_ccall f_8360r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8447)
static void C_ccall f_8447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8367)
static void C_fcall f_8367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8376)
static void C_fcall f_8376(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8423)
static void C_ccall f_8423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8389)
static void C_fcall f_8389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8415)
static void C_ccall f_8415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8227)
static void C_ccall f_8227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8227)
static void C_ccall f_8227r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8231)
static void C_fcall f_8231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8234)
static void C_fcall f_8234(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8338)
static void C_ccall f_8338(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8236)
static void C_fcall f_8236(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8243)
static void C_ccall f_8243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8285)
static void C_ccall f_8285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8292)
static void C_ccall f_8292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8266)
static void C_ccall f_8266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8160)
static void C_ccall f_8160(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8160)
static void C_ccall f_8160r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8164)
static void C_fcall f_8164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8210)
static void C_ccall f_8210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8167)
static void C_fcall f_8167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8203)
static void C_ccall f_8203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8170)
static void C_fcall f_8170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8183)
static void C_ccall f_8183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8114)
static void C_ccall f_8114(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8114)
static void C_ccall f_8114r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8118)
static void C_ccall f_8118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8028)
static void C_fcall f_8028(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8032)
static void C_ccall f_8032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8035)
static void C_ccall f_8035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8044)
static void C_fcall f_8044(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8066)
static void C_ccall f_8066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8013)
static void C_ccall f_8013(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7998)
static void C_ccall f_7998(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7975)
static void C_ccall f_7975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7990)
static void C_ccall f_7990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7982)
static void C_ccall f_7982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7946)
static void C_ccall f_7946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7950)
static void C_ccall f_7950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7911)
static void C_ccall f_7911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7915)
static void C_ccall f_7915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7766)
static void C_fcall f_7766(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7875)
static void C_ccall f_7875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7890)
static void C_ccall f_7890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7882)
static void C_ccall f_7882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7846)
static void C_ccall f_7846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7850)
static void C_ccall f_7850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7811)
static void C_ccall f_7811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7815)
static void C_ccall f_7815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7769)
static void C_fcall f_7769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7772)
static void C_ccall f_7772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7783)
static void C_ccall f_7783(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7722)
static void C_ccall f_7722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7726)
static void C_ccall f_7726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7756)
static void C_ccall f_7756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7737)
static void C_ccall f_7737(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7745)
static void C_ccall f_7745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7701)
static void C_ccall f_7701(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7713)
static void C_ccall f_7713(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7675)
static void C_ccall f_7675(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7675)
static void C_ccall f_7675r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7633)
static void C_ccall f_7633(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7633)
static void C_ccall f_7633r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7618)
static void C_ccall f_7618(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7507)
static void C_ccall f_7507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_7507)
static void C_ccall f_7507r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_7582)
static void C_ccall f_7582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7511)
static void C_fcall f_7511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7551)
static void C_ccall f_7551(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7540)
static void C_ccall f_7540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7525)
static void C_ccall f_7525(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7533)
static void C_ccall f_7533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7473)
static void C_ccall f_7473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7473)
static void C_ccall f_7473r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7485)
static void C_ccall f_7485(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7454)
static void C_ccall f_7454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7451)
static void C_ccall f_7451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7444)
static void C_fcall f_7444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7441)
static void C_ccall f_7441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7434)
static void C_fcall f_7434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7416)
static void C_fcall f_7416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7405)
static void C_fcall f_7405(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7402)
static void C_ccall f_7402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7399)
static void C_ccall f_7399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7396)
static void C_ccall f_7396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7367)
static void C_fcall f_7367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7360)
static void C_fcall f_7360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7357)
static void C_ccall f_7357(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7336)
static void C_fcall f_7336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7317)
static void C_ccall f_7317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7298)
static void C_ccall f_7298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7291)
static void C_ccall f_7291(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7284)
static void C_ccall f_7284(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7269)
static void C_fcall f_7269(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7258)
static void C_fcall f_7258(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7240)
static void C_ccall f_7240(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7213)
static void C_fcall f_7213(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7186)
static void C_fcall f_7186(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7145)
static void C_fcall f_7145(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7151)
static void C_fcall f_7151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7161)
static void C_fcall f_7161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7059)
static void C_ccall f_7059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7059)
static void C_ccall f_7059r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6960)
static void C_ccall f_6960(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6960)
static void C_ccall f_6960r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6964)
static void C_ccall f_6964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6989)
static void C_fcall f_6989(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7006)
static void C_ccall f_7006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7010)
static void C_ccall f_7010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6966)
static void C_fcall f_6966(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6983)
static void C_ccall f_6983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6899)
static void C_ccall f_6899(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6912)
static void C_fcall f_6912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6889)
static void C_ccall f_6889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6849)
static void C_ccall f_6849(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6849)
static void C_ccall f_6849r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6879)
static void C_ccall f_6879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6711)
static void C_ccall f_6711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6745)
static void C_ccall f_6745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6688)
static void C_ccall f_6688(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6682)
static void C_ccall f_6682(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6667)
static void C_ccall f_6667(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6653)
static void C_ccall f_6653(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6643)
static void C_ccall f_6643(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6633)
static void C_ccall f_6633(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6623)
static void C_ccall f_6623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6613)
static void C_ccall f_6613(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6584)
static void C_ccall f_6584(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6584)
static void C_ccall f_6584r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6593)
static void C_ccall f_6593(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6598)
static void C_ccall f_6598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6573)
static void C_ccall f_6573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6578)
static void C_ccall f_6578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6280)
static void C_ccall f_6280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6290)
static void C_ccall f_6290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6541)
static void C_ccall f_6541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6293)
static void C_ccall f_6293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6296)
static void C_ccall f_6296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6311)
static void C_fcall f_6311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6321)
static void C_ccall f_6321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6323)
static void C_fcall f_6323(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6382)
static void C_ccall f_6382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6392)
static void C_ccall f_6392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6509)
static void C_ccall f_6509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6497)
static void C_ccall f_6497(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6495)
static void C_ccall f_6495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6482)
static void C_ccall f_6482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6436)
static void C_ccall f_6436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6463)
static void C_ccall f_6463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6442)
static void C_ccall f_6442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6376)
static void C_fcall f_6376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6335)
static void C_fcall f_6335(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6348)
static void C_fcall f_6348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6558)
static void C_ccall f_6558(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6549)
static void C_ccall f_6549(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6557)
static void C_ccall f_6557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6560)
static void C_ccall f_6560(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6560)
static void C_ccall f_6560r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6568)
static void C_ccall f_6568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5982)
static void C_ccall f_5982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6235)
static void C_ccall f_6235(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6268)
static void C_ccall f_6268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6264)
static void C_ccall f_6264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6253)
static void C_ccall f_6253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6249)
static void C_ccall f_6249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6143)
static void C_ccall f_6143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6146)
static void C_ccall f_6146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6149)
static void C_ccall f_6149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6229)
static void C_ccall f_6229(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6054)
static void C_ccall f_6054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5995)
static void C_ccall f_5995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6152)
static void C_ccall f_6152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6159)
static void C_ccall f_6159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6219)
static void C_ccall f_6219(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6205)
static void C_ccall f_6205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6171)
static void C_ccall f_6171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6197)
static void C_ccall f_6197(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6132)
static void C_ccall f_6132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6179)
static void C_ccall f_6179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6175)
static void C_ccall f_6175(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_37354)
static void C_fcall trf_37354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37354(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37354(t0,t1,t2);}

C_noret_decl(trf_37414)
static void C_fcall trf_37414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37414(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_37414(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_37434)
static void C_fcall trf_37434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37434(t0,t1);}

C_noret_decl(trf_37437)
static void C_fcall trf_37437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37437(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37437(t0,t1);}

C_noret_decl(trf_37298)
static void C_fcall trf_37298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37298(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37298(t0,t1);}

C_noret_decl(trf_37220)
static void C_fcall trf_37220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37220(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37220(t0,t1,t2);}

C_noret_decl(trf_37032)
static void C_fcall trf_37032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37032(t0,t1);}

C_noret_decl(trf_35914)
static void C_fcall trf_35914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35914(t0,t1);}

C_noret_decl(trf_35787)
static void C_fcall trf_35787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35787(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35787(t0,t1,t2);}

C_noret_decl(trf_35471)
static void C_fcall trf_35471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35471(t0,t1);}

C_noret_decl(trf_34566)
static void C_fcall trf_34566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34566(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34566(t0,t1,t2);}

C_noret_decl(trf_34601)
static void C_fcall trf_34601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34601(t0,t1);}

C_noret_decl(trf_34625)
static void C_fcall trf_34625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34625(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34625(t0,t1);}

C_noret_decl(trf_34604)
static void C_fcall trf_34604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34604(t0,t1);}

C_noret_decl(trf_34407)
static void C_fcall trf_34407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34407(t0,t1);}

C_noret_decl(trf_34225)
static void C_fcall trf_34225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34225(t0,t1);}

C_noret_decl(trf_34232)
static void C_fcall trf_34232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34232(t0,t1);}

C_noret_decl(trf_34213)
static void C_fcall trf_34213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34213(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34213(t0,t1);}

C_noret_decl(trf_22125)
static void C_fcall trf_22125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22125(t0,t1);}

C_noret_decl(trf_22132)
static void C_fcall trf_22132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22132(t0,t1);}

C_noret_decl(trf_22430)
static void C_fcall trf_22430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22430(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22430(t0,t1,t2);}

C_noret_decl(trf_22453)
static void C_fcall trf_22453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22453(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22453(t0,t1,t2);}

C_noret_decl(trf_22470)
static void C_fcall trf_22470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22470(t0,t1);}

C_noret_decl(trf_22473)
static void C_fcall trf_22473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22473(t0,t1);}

C_noret_decl(trf_22476)
static void C_fcall trf_22476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22476(t0,t1);}

C_noret_decl(trf_22394)
static void C_fcall trf_22394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22394(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22394(t0,t1,t2);}

C_noret_decl(trf_22338)
static void C_fcall trf_22338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22338(t0,t1,t2);}

C_noret_decl(trf_22354)
static void C_fcall trf_22354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22354(t0,t1);}

C_noret_decl(trf_22148)
static void C_fcall trf_22148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22148(t0,t1);}

C_noret_decl(trf_22151)
static void C_fcall trf_22151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22151(t0,t1);}

C_noret_decl(trf_33722)
static void C_fcall trf_33722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33722(t0,t1);}

C_noret_decl(trf_33725)
static void C_fcall trf_33725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33725(t0,t1);}

C_noret_decl(trf_33568)
static void C_fcall trf_33568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33568(t0,t1);}

C_noret_decl(trf_33376)
static void C_fcall trf_33376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33376(t0,t1);}

C_noret_decl(trf_33226)
static void C_fcall trf_33226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33226(t0,t1);}

C_noret_decl(trf_33315)
static void C_fcall trf_33315(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33315(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33315(t0,t1);}

C_noret_decl(trf_33229)
static void C_fcall trf_33229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33229(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33229(t0,t1);}

C_noret_decl(trf_33245)
static void C_fcall trf_33245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33245(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_33245(t0,t1,t2,t3);}

C_noret_decl(trf_33267)
static void C_fcall trf_33267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33267(t0,t1);}

C_noret_decl(trf_33162)
static void C_fcall trf_33162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33162(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33162(t0,t1,t2);}

C_noret_decl(trf_33109)
static void C_fcall trf_33109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33109(t0,t1);}

C_noret_decl(trf_26545)
static void C_fcall trf_26545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26545(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26545(t0,t1);}

C_noret_decl(trf_26407)
static void C_fcall trf_26407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26407(t0,t1);}

C_noret_decl(trf_26621)
static void C_fcall trf_26621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26621(t0,t1);}

C_noret_decl(trf_32713)
static void C_fcall trf_32713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32713(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32713(t0,t1,t2);}

C_noret_decl(trf_32741)
static void C_fcall trf_32741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32741(t0,t1);}

C_noret_decl(trf_32444)
static void C_fcall trf_32444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32444(t0,t1);}

C_noret_decl(trf_32608)
static void C_fcall trf_32608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32608(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32608(t0,t1);}

C_noret_decl(trf_32457)
static void C_fcall trf_32457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32457(t0,t1);}

C_noret_decl(trf_32692)
static void C_fcall trf_32692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32692(t0,t1);}

C_noret_decl(trf_32382)
static void C_fcall trf_32382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32382(t0,t1,t2);}

C_noret_decl(trf_32323)
static void C_fcall trf_32323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32323(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32323(t0,t1);}

C_noret_decl(trf_32259)
static void C_fcall trf_32259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32259(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32259(t0,t1,t2);}

C_noret_decl(trf_32179)
static void C_fcall trf_32179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32179(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32179(t0,t1);}

C_noret_decl(trf_32105)
static void C_fcall trf_32105(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32105(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32105(t0,t1);}

C_noret_decl(trf_32100)
static void C_fcall trf_32100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32100(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32100(t0,t1,t2);}

C_noret_decl(trf_31980)
static void C_fcall trf_31980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31980(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_31980(t0,t1,t2,t3);}

C_noret_decl(trf_32051)
static void C_fcall trf_32051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32051(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32051(t0,t1,t2);}

C_noret_decl(trf_32010)
static void C_fcall trf_32010(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32010(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32010(t0,t1);}

C_noret_decl(trf_31982)
static void C_fcall trf_31982(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31982(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31982(t0,t1);}

C_noret_decl(trf_31937)
static void C_fcall trf_31937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31937(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31937(t0,t1);}

C_noret_decl(trf_31893)
static void C_fcall trf_31893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31893(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_31893(t0,t1,t2,t3);}

C_noret_decl(trf_31884)
static void C_fcall trf_31884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31884(t0,t1);}

C_noret_decl(trf_31714)
static void C_fcall trf_31714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31714(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_31714(t0,t1,t2,t3,t4);}

C_noret_decl(trf_31743)
static void C_fcall trf_31743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31743(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31743(t0,t1,t2);}

C_noret_decl(trf_31780)
static void C_fcall trf_31780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31780(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31780(t0,t1);}

C_noret_decl(trf_31610)
static void C_fcall trf_31610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31610(t0,t1);}

C_noret_decl(trf_31590)
static void C_fcall trf_31590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31590(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31590(t0,t1);}

C_noret_decl(trf_31553)
static void C_fcall trf_31553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31553(t0,t1);}

C_noret_decl(trf_31533)
static void C_fcall trf_31533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31533(t0,t1);}

C_noret_decl(trf_30368)
static void C_fcall trf_30368(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30368(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30368(t0,t1);}

C_noret_decl(trf_30371)
static void C_fcall trf_30371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30371(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30371(t0,t1);}

C_noret_decl(trf_30374)
static void C_fcall trf_30374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30374(t0,t1);}

C_noret_decl(trf_29898)
static void C_fcall trf_29898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29898(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29898(t0,t1);}

C_noret_decl(trf_29901)
static void C_fcall trf_29901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29901(t0,t1);}

C_noret_decl(trf_29904)
static void C_fcall trf_29904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29904(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29904(t0,t1);}

C_noret_decl(trf_29428)
static void C_fcall trf_29428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29428(t0,t1);}

C_noret_decl(trf_29431)
static void C_fcall trf_29431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29431(t0,t1);}

C_noret_decl(trf_29434)
static void C_fcall trf_29434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29434(t0,t1);}

C_noret_decl(trf_28680)
static void C_fcall trf_28680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28680(t0,t1);}

C_noret_decl(trf_28683)
static void C_fcall trf_28683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28683(t0,t1);}

C_noret_decl(trf_28686)
static void C_fcall trf_28686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28686(t0,t1);}

C_noret_decl(trf_28689)
static void C_fcall trf_28689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28689(t0,t1);}

C_noret_decl(trf_27932)
static void C_fcall trf_27932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27932(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27932(t0,t1);}

C_noret_decl(trf_27935)
static void C_fcall trf_27935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27935(t0,t1);}

C_noret_decl(trf_27938)
static void C_fcall trf_27938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27938(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27938(t0,t1);}

C_noret_decl(trf_27941)
static void C_fcall trf_27941(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27941(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27941(t0,t1);}

C_noret_decl(trf_27462)
static void C_fcall trf_27462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27462(t0,t1);}

C_noret_decl(trf_27465)
static void C_fcall trf_27465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27465(t0,t1);}

C_noret_decl(trf_27468)
static void C_fcall trf_27468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27468(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27468(t0,t1);}

C_noret_decl(trf_26714)
static void C_fcall trf_26714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26714(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26714(t0,t1);}

C_noret_decl(trf_26717)
static void C_fcall trf_26717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26717(t0,t1);}

C_noret_decl(trf_26720)
static void C_fcall trf_26720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26720(t0,t1);}

C_noret_decl(trf_26723)
static void C_fcall trf_26723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26723(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26723(t0,t1);}

C_noret_decl(trf_26372)
static void C_fcall trf_26372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26372(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26372(t0,t1,t2,t3);}

C_noret_decl(trf_26212)
static void C_fcall trf_26212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26212(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26212(t0,t1);}

C_noret_decl(trf_26247)
static void C_fcall trf_26247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26247(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_26247(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_26257)
static void C_fcall trf_26257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26257(t0,t1);}

C_noret_decl(trf_26220)
static void C_fcall trf_26220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26220(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26220(t0,t1,t2);}

C_noret_decl(trf_26380)
static void C_fcall trf_26380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26380(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26380(t0,t1);}

C_noret_decl(trf_25998)
static void C_fcall trf_25998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25998(t0,t1);}

C_noret_decl(trf_26004)
static void C_fcall trf_26004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26004(t0,t1);}

C_noret_decl(trf_26027)
static void C_fcall trf_26027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26027(t0,t1);}

C_noret_decl(trf_26040)
static void C_fcall trf_26040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26040(t0,t1);}

C_noret_decl(trf_26014)
static void C_fcall trf_26014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26014(t0,t1);}

C_noret_decl(trf_25827)
static void C_fcall trf_25827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25827(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25827(t0,t1,t2,t3);}

C_noret_decl(trf_25836)
static void C_fcall trf_25836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25836(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25836(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25790)
static void C_fcall trf_25790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25790(t0,t1);}

C_noret_decl(trf_25653)
static void C_fcall trf_25653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25653(t0,t1);}

C_noret_decl(trf_25583)
static void C_fcall trf_25583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25583(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25583(t0,t1);}

C_noret_decl(trf_24944)
static void C_fcall trf_24944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24944(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24944(t0,t1,t2);}

C_noret_decl(trf_24904)
static void C_fcall trf_24904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24904(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24904(t0,t1,t2);}

C_noret_decl(trf_24917)
static void C_fcall trf_24917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24917(t0,t1);}

C_noret_decl(trf_25496)
static void C_fcall trf_25496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25496(t0,t1);}

C_noret_decl(trf_25286)
static void C_fcall trf_25286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25286(t0,t1);}

C_noret_decl(trf_25402)
static void C_fcall trf_25402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25402(t0,t1);}

C_noret_decl(trf_25289)
static void C_fcall trf_25289(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25289(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25289(t0,t1);}

C_noret_decl(trf_25292)
static void C_fcall trf_25292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25292(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25292(t0,t1);}

C_noret_decl(trf_25197)
static void C_fcall trf_25197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25197(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25197(t0,t1);}

C_noret_decl(trf_25112)
static void C_fcall trf_25112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25112(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25112(t0,t1);}

C_noret_decl(trf_25069)
static void C_fcall trf_25069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25069(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25069(t0,t1);}

C_noret_decl(trf_25036)
static void C_fcall trf_25036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25036(t0,t1);}

C_noret_decl(trf_25031)
static void C_fcall trf_25031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25031(t0,t1);}

C_noret_decl(trf_25026)
static void C_fcall trf_25026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25026(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25026(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24773)
static void C_fcall trf_24773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24773(t0,t1);}

C_noret_decl(trf_24620)
static void C_fcall trf_24620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24620(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24620(t0,t1,t2,t3);}

C_noret_decl(trf_24466)
static void C_fcall trf_24466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24466(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24466(t0,t1,t2);}

C_noret_decl(trf_24308)
static void C_fcall trf_24308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24308(t0,t1,t2);}

C_noret_decl(trf_24341)
static void C_fcall trf_24341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24341(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24341(t0,t1);}

C_noret_decl(trf_24248)
static void C_fcall trf_24248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24248(t0,t1);}

C_noret_decl(trf_24213)
static void C_fcall trf_24213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24213(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24213(t0,t1);}

C_noret_decl(trf_24229)
static void C_fcall trf_24229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24229(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24229(t0,t1);}

C_noret_decl(trf_24184)
static void C_fcall trf_24184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24184(t0,t1);}

C_noret_decl(trf_24091)
static void C_fcall trf_24091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24091(t0,t1);}

C_noret_decl(trf_23847)
static void C_fcall trf_23847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23847(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23847(t0,t1,t2);}

C_noret_decl(trf_23651)
static void C_fcall trf_23651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23651(t0,t1);}

C_noret_decl(trf_23814)
static void C_fcall trf_23814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23814(t0,t1);}

C_noret_decl(trf_23654)
static void C_fcall trf_23654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23654(t0,t1);}

C_noret_decl(trf_23657)
static void C_fcall trf_23657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23657(t0,t1);}

C_noret_decl(trf_23660)
static void C_fcall trf_23660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23660(t0,t1);}

C_noret_decl(trf_23702)
static void C_fcall trf_23702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23702(t0,t1);}

C_noret_decl(trf_23667)
static void C_fcall trf_23667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23667(t0,t1);}

C_noret_decl(trf_23396)
static void C_fcall trf_23396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23396(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23396(t0,t1,t2,t3);}

C_noret_decl(trf_23404)
static void C_fcall trf_23404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23404(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23404(t0,t1,t2,t3);}

C_noret_decl(trf_23533)
static void C_fcall trf_23533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23533(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23533(t0,t1,t2);}

C_noret_decl(trf_23487)
static void C_fcall trf_23487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23487(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23487(t0,t1,t2);}

C_noret_decl(trf_23390)
static void C_fcall trf_23390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23390(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23390(t0,t1,t2);}

C_noret_decl(trf_23384)
static void C_fcall trf_23384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23384(t0,t1);}

C_noret_decl(trf_23378)
static void C_fcall trf_23378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23378(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23378(t0,t1,t2);}

C_noret_decl(trf_23307)
static void C_fcall trf_23307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23307(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23307(t0,t1,t2);}

C_noret_decl(trf_23309)
static void C_fcall trf_23309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23309(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23309(t0,t1,t2);}

C_noret_decl(trf_23315)
static void C_fcall trf_23315(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23315(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23315(t0,t1,t2);}

C_noret_decl(trf_23156)
static void C_fcall trf_23156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23156(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23156(t0,t1);}

C_noret_decl(trf_23171)
static void C_fcall trf_23171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23171(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23171(t0,t1,t2);}

C_noret_decl(trf_23114)
static void C_fcall trf_23114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23114(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23114(t0,t1,t2);}

C_noret_decl(trf_23054)
static void C_fcall trf_23054(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23054(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23054(t0,t1,t2);}

C_noret_decl(trf_22930)
static void C_fcall trf_22930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22930(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22930(t0,t1,t2);}

C_noret_decl(trf_22806)
static void C_fcall trf_22806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22806(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22806(t0,t1,t2,t3);}

C_noret_decl(trf_22842)
static void C_fcall trf_22842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22842(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22842(t0,t1,t2);}

C_noret_decl(trf_22638)
static void C_fcall trf_22638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22638(t0,t1);}

C_noret_decl(trf_20470)
static void C_fcall trf_20470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20470(t0,t1);}

C_noret_decl(trf_22772)
static void C_fcall trf_22772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22772(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22772(t0,t1,t2);}

C_noret_decl(trf_22782)
static void C_fcall trf_22782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22782(t0,t1);}

C_noret_decl(trf_22742)
static void C_fcall trf_22742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22742(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22742(t0,t1,t2);}

C_noret_decl(trf_22752)
static void C_fcall trf_22752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22752(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22752(t0,t1);}

C_noret_decl(trf_21812)
static void C_fcall trf_21812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21812(t0,t1);}

C_noret_decl(trf_21815)
static void C_fcall trf_21815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21815(t0,t1);}

C_noret_decl(trf_21818)
static void C_fcall trf_21818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21818(t0,t1);}

C_noret_decl(trf_21821)
static void C_fcall trf_21821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21821(t0,t1);}

C_noret_decl(trf_21824)
static void C_fcall trf_21824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21824(t0,t1);}

C_noret_decl(trf_21827)
static void C_fcall trf_21827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21827(t0,t1);}

C_noret_decl(trf_21655)
static void C_fcall trf_21655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21655(t0,t1);}

C_noret_decl(trf_21584)
static void C_fcall trf_21584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21584(t0,t1);}

C_noret_decl(trf_21399)
static void C_fcall trf_21399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21399(t0,t1);}

C_noret_decl(trf_21411)
static void C_fcall trf_21411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21411(t0,t1);}

C_noret_decl(trf_21448)
static void C_fcall trf_21448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21448(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21448(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21483)
static void C_fcall trf_21483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21483(t0,t1);}

C_noret_decl(trf_21378)
static void C_fcall trf_21378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21378(t0,t1);}

C_noret_decl(trf_21313)
static void C_fcall trf_21313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21313(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21313(t0,t1,t2);}

C_noret_decl(trf_21322)
static void C_fcall trf_21322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21322(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21322(t0,t1,t2);}

C_noret_decl(trf_21335)
static void C_fcall trf_21335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21335(t0,t1);}

C_noret_decl(trf_21269)
static void C_fcall trf_21269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21269(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21269(t0,t1,t2);}

C_noret_decl(trf_21257)
static void C_fcall trf_21257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21257(t0,t1);}

C_noret_decl(trf_21155)
static void C_fcall trf_21155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21155(t0,t1);}

C_noret_decl(trf_21107)
static void C_fcall trf_21107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21107(t0,t1);}

C_noret_decl(trf_20488)
static void C_fcall trf_20488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20488(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_20488(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_20498)
static void C_fcall trf_20498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20498(t0,t1);}

C_noret_decl(trf_20627)
static void C_fcall trf_20627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20627(t0,t1);}

C_noret_decl(trf_20715)
static void C_fcall trf_20715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20715(t0,t1);}

C_noret_decl(trf_20788)
static void C_fcall trf_20788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20788(t0,t1);}

C_noret_decl(trf_20866)
static void C_fcall trf_20866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20866(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20866(t0,t1);}

C_noret_decl(trf_20817)
static void C_fcall trf_20817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20817(t0,t1);}

C_noret_decl(trf_20833)
static void C_fcall trf_20833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20833(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20833(t0,t1);}

C_noret_decl(trf_20797)
static void C_fcall trf_20797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20797(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20797(t0,t1);}

C_noret_decl(trf_20739)
static void C_fcall trf_20739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20739(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20739(t0,t1,t2);}

C_noret_decl(trf_20658)
static void C_fcall trf_20658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20658(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20658(t0,t1,t2);}

C_noret_decl(trf_20674)
static void C_fcall trf_20674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20674(t0,t1);}

C_noret_decl(trf_20642)
static void C_fcall trf_20642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20642(t0,t1);}

C_noret_decl(trf_20384)
static void C_fcall trf_20384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20384(t0,t1);}

C_noret_decl(trf_20393)
static void C_fcall trf_20393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20393(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20393(t0,t1);}

C_noret_decl(trf_20398)
static void C_fcall trf_20398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20398(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20398(t0,t1,t2);}

C_noret_decl(trf_20376)
static void C_fcall trf_20376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20376(t0,t1);}

C_noret_decl(trf_20168)
static void C_fcall trf_20168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20168(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20168(t0,t1,t2,t3);}

C_noret_decl(trf_20135)
static void C_fcall trf_20135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20135(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20135(t0,t1,t2,t3);}

C_noret_decl(trf_20117)
static void C_fcall trf_20117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20117(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20117(t0,t1,t2,t3);}

C_noret_decl(trf_20107)
static void C_fcall trf_20107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20107(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20107(t0,t1,t2,t3);}

C_noret_decl(trf_20095)
static void C_fcall trf_20095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20095(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20095(t0,t1,t2);}

C_noret_decl(trf_20063)
static void C_fcall trf_20063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20063(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20063(t0,t1,t2);}

C_noret_decl(trf_20047)
static void C_fcall trf_20047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20047(t0,t1);}

C_noret_decl(trf_20035)
static void C_fcall trf_20035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20035(t0,t1);}

C_noret_decl(trf_20017)
static void C_fcall trf_20017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20017(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20017(t0,t1);}

C_noret_decl(trf_19999)
static void C_fcall trf_19999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19999(t0,t1);}

C_noret_decl(trf_19984)
static void C_fcall trf_19984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19984(t0,t1);}

C_noret_decl(trf_19978)
static void C_fcall trf_19978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19978(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19978(t0,t1,t2,t3);}

C_noret_decl(trf_19966)
static void C_fcall trf_19966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19966(t0,t1);}

C_noret_decl(trf_19948)
static void C_fcall trf_19948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19948(t0,t1);}

C_noret_decl(trf_19927)
static void C_fcall trf_19927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19927(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19927(t0,t1,t2);}

C_noret_decl(trf_19895)
static void C_fcall trf_19895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19895(t0,t1);}

C_noret_decl(trf_19837)
static void C_fcall trf_19837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19837(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19837(t0,t1,t2);}

C_noret_decl(trf_19827)
static void C_fcall trf_19827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19827(t0,t1);}

C_noret_decl(trf_19821)
static void C_fcall trf_19821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19821(t0,t1);}

C_noret_decl(trf_19809)
static void C_fcall trf_19809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19809(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19809(t0,t1);}

C_noret_decl(trf_19785)
static void C_fcall trf_19785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19785(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19785(t0,t1,t2);}

C_noret_decl(trf_19698)
static void C_fcall trf_19698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19698(t0,t1);}

C_noret_decl(trf_19677)
static void C_fcall trf_19677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19677(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19677(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19667)
static void C_fcall trf_19667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19667(t0,t1);}

C_noret_decl(trf_19655)
static void C_fcall trf_19655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19655(t0,t1);}

C_noret_decl(trf_19614)
static void C_fcall trf_19614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19614(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19614(t0,t1);}

C_noret_decl(trf_19596)
static void C_fcall trf_19596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19596(t0,t1);}

C_noret_decl(trf_19578)
static void C_fcall trf_19578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19578(t0,t1);}

C_noret_decl(trf_19539)
static void C_fcall trf_19539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19539(t0,t1);}

C_noret_decl(trf_19447)
static void C_fcall trf_19447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19447(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19447(t0,t1,t2);}

C_noret_decl(trf_19470)
static void C_fcall trf_19470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19470(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19470(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19505)
static void C_fcall trf_19505(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19505(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19505(t0,t1);}

C_noret_decl(trf_19409)
static void C_fcall trf_19409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19409(t0,t1);}

C_noret_decl(trf_18930)
static void C_fcall trf_18930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18930(t0,t1);}

C_noret_decl(trf_19280)
static void C_fcall trf_19280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19280(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19280(t0,t1,t2,t3);}

C_noret_decl(trf_19366)
static void C_fcall trf_19366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19366(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19366(t0,t1,t2,t3);}

C_noret_decl(trf_19323)
static void C_fcall trf_19323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19323(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19323(t0,t1,t2);}

C_noret_decl(trf_19247)
static void C_fcall trf_19247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19247(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19247(t0,t1,t2);}

C_noret_decl(trf_19185)
static void C_fcall trf_19185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19185(t0,t1,t2);}

C_noret_decl(trf_19220)
static void C_fcall trf_19220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19220(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19220(t0,t1,t2,t3);}

C_noret_decl(trf_19005)
static void C_fcall trf_19005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19005(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19005(t0,t1,t2);}

C_noret_decl(trf_18894)
static void C_fcall trf_18894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18894(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18894(t0,t1,t2);}

C_noret_decl(trf_19158)
static void C_fcall trf_19158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19158(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19158(t0,t1,t2,t3);}

C_noret_decl(trf_19131)
static void C_fcall trf_19131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19131(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19131(t0,t1,t2,t3);}

C_noret_decl(trf_19042)
static void C_fcall trf_19042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19042(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19042(t0,t1,t2);}

C_noret_decl(trf_19092)
static void C_fcall trf_19092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19092(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19092(t0,t1,t2,t3);}

C_noret_decl(trf_18943)
static void C_fcall trf_18943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18943(t0,t1);}

C_noret_decl(trf_18817)
static void C_fcall trf_18817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18817(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18817(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18735)
static void C_fcall trf_18735(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18735(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18735(t0,t1,t2,t3);}

C_noret_decl(trf_18661)
static void C_fcall trf_18661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18661(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18661(t0,t1,t2);}

C_noret_decl(trf_18686)
static void C_fcall trf_18686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18686(t0,t1);}

C_noret_decl(trf_18389)
static void C_fcall trf_18389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18389(t0,t1);}

C_noret_decl(trf_18392)
static void C_fcall trf_18392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18392(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18392(t0,t1);}

C_noret_decl(trf_18398)
static void C_fcall trf_18398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18398(t0,t1);}

C_noret_decl(trf_18112)
static void C_fcall trf_18112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18112(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18112(t0,t1);}

C_noret_decl(trf_18115)
static void C_fcall trf_18115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18115(t0,t1);}

C_noret_decl(trf_18042)
static void C_fcall trf_18042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18042(t0,t1);}

C_noret_decl(trf_17890)
static void C_fcall trf_17890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17890(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17890(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17815)
static void C_fcall trf_17815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17815(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17815(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17825)
static void C_fcall trf_17825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17825(t0,t1);}

C_noret_decl(trf_17832)
static void C_fcall trf_17832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17832(t0,t1);}

C_noret_decl(trf_17927)
static void C_fcall trf_17927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17927(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17927(t0,t1,t2);}

C_noret_decl(trf_17705)
static void C_fcall trf_17705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17705(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17705(t0,t1,t2,t3);}

C_noret_decl(trf_17717)
static void C_fcall trf_17717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17717(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17717(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17778)
static void C_fcall trf_17778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17778(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17778(t0,t1,t2);}

C_noret_decl(trf_17142)
static void C_fcall trf_17142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17142(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_17142(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17078)
static void C_fcall trf_17078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17078(t0,t1);}

C_noret_decl(trf_17025)
static void C_fcall trf_17025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17025(t0,t1);}

C_noret_decl(trf_17028)
static void C_fcall trf_17028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17028(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17028(t0,t1);}

C_noret_decl(trf_17222)
static void C_fcall trf_17222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17222(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17222(t0,t1);}

C_noret_decl(trf_17225)
static void C_fcall trf_17225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17225(t0,t1);}

C_noret_decl(trf_17228)
static void C_fcall trf_17228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17228(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17228(t0,t1);}

C_noret_decl(trf_17243)
static void C_fcall trf_17243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17243(t0,t1);}

C_noret_decl(trf_16804)
static void C_fcall trf_16804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16804(t0,t1);}

C_noret_decl(trf_16896)
static void C_fcall trf_16896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16896(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16896(t0,t1,t2);}

C_noret_decl(trf_16915)
static void C_fcall trf_16915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16915(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16915(t0,t1);}

C_noret_decl(trf_16869)
static void C_fcall trf_16869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16869(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16869(t0,t1,t2);}

C_noret_decl(trf_16814)
static void C_fcall trf_16814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16814(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16814(t0,t1,t2);}

C_noret_decl(trf_16824)
static void C_fcall trf_16824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16824(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16824(t0,t1,t2,t3);}

C_noret_decl(trf_16670)
static void C_fcall trf_16670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16670(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16670(t0,t1,t2);}

C_noret_decl(trf_16739)
static void C_fcall trf_16739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16739(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16739(t0,t1,t2);}

C_noret_decl(trf_16685)
static void C_fcall trf_16685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16685(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16685(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16227)
static void C_fcall trf_16227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16227(t0,t1);}

C_noret_decl(trf_16230)
static void C_fcall trf_16230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16230(t0,t1);}

C_noret_decl(trf_16233)
static void C_fcall trf_16233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16233(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16233(t0,t1);}

C_noret_decl(trf_16236)
static void C_fcall trf_16236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16236(t0,t1);}

C_noret_decl(trf_16200)
static void C_fcall trf_16200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16200(t0,t1);}

C_noret_decl(trf_15923)
static void C_fcall trf_15923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15923(t0,t1);}

C_noret_decl(trf_15926)
static void C_fcall trf_15926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15926(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15926(t0,t1);}

C_noret_decl(trf_15929)
static void C_fcall trf_15929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15929(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15929(t0,t1);}

C_noret_decl(trf_15820)
static void C_fcall trf_15820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15820(t0,t1);}

C_noret_decl(trf_15811)
static void C_fcall trf_15811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15811(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15811(t0,t1,t2);}

C_noret_decl(trf_15802)
static void C_fcall trf_15802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15802(t0,t1);}

C_noret_decl(trf_15784)
static void C_fcall trf_15784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15784(t0,t1);}

C_noret_decl(trf_15766)
static void C_fcall trf_15766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15766(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15766(t0,t1);}

C_noret_decl(trf_15748)
static void C_fcall trf_15748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15748(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15748(t0,t1);}

C_noret_decl(trf_15739)
static void C_fcall trf_15739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15739(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15739(t0,t1,t2);}

C_noret_decl(trf_15730)
static void C_fcall trf_15730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15730(t0,t1);}

C_noret_decl(trf_15561)
static void C_fcall trf_15561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15561(t0,t1);}

C_noret_decl(trf_15517)
static void C_fcall trf_15517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15517(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15517(t0,t1,t2);}

C_noret_decl(trf_15038)
static void C_fcall trf_15038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15038(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15038(t0,t1);}

C_noret_decl(trf_15041)
static void C_fcall trf_15041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15041(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15041(t0,t1);}

C_noret_decl(trf_15044)
static void C_fcall trf_15044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15044(t0,t1);}

C_noret_decl(trf_15047)
static void C_fcall trf_15047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15047(t0,t1);}

C_noret_decl(trf_14993)
static void C_fcall trf_14993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14993(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14993(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14699)
static void C_fcall trf_14699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14699(t0,t1);}

C_noret_decl(trf_14702)
static void C_fcall trf_14702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14702(t0,t1);}

C_noret_decl(trf_14705)
static void C_fcall trf_14705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14705(t0,t1);}

C_noret_decl(trf_14416)
static void C_fcall trf_14416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14416(t0,t1);}

C_noret_decl(trf_14419)
static void C_fcall trf_14419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14419(t0,t1);}

C_noret_decl(trf_14422)
static void C_fcall trf_14422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14422(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14422(t0,t1);}

C_noret_decl(trf_14375)
static void C_fcall trf_14375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14375(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14375(t0,t1);}

C_noret_decl(trf_14331)
static void C_fcall trf_14331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14331(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14331(t0,t1);}

C_noret_decl(trf_14246)
static void C_fcall trf_14246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14246(t0,t1);}

C_noret_decl(trf_13731)
static void C_fcall trf_13731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13731(t0,t1);}

C_noret_decl(trf_13734)
static void C_fcall trf_13734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13734(t0,t1);}

C_noret_decl(trf_13737)
static void C_fcall trf_13737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13737(t0,t1);}

C_noret_decl(trf_13740)
static void C_fcall trf_13740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13740(t0,t1);}

C_noret_decl(trf_13647)
static void C_fcall trf_13647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13647(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13647(t0,t1,t2);}

C_noret_decl(trf_13638)
static void C_fcall trf_13638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13638(t0,t1);}

C_noret_decl(trf_13573)
static void C_fcall trf_13573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13573(t0,t1);}

C_noret_decl(trf_13315)
static void C_fcall trf_13315(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13315(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13315(t0,t1);}

C_noret_decl(trf_13318)
static void C_fcall trf_13318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13318(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13318(t0,t1);}

C_noret_decl(trf_13321)
static void C_fcall trf_13321(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13321(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13321(t0,t1);}

C_noret_decl(trf_13196)
static void C_fcall trf_13196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13196(t0,t1);}

C_noret_decl(trf_13220)
static void C_fcall trf_13220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13220(t0,t1);}

C_noret_decl(trf_13150)
static void C_fcall trf_13150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13150(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13150(t0,t1,t2);}

C_noret_decl(trf_13141)
static void C_fcall trf_13141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13141(t0,t1);}

C_noret_decl(trf_12840)
static void C_fcall trf_12840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12840(t0,t1);}

C_noret_decl(trf_13076)
static void C_fcall trf_13076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13076(t0,t1);}

C_noret_decl(trf_13082)
static void C_fcall trf_13082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13082(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13082(t0,t1);}

C_noret_decl(trf_12974)
static void C_fcall trf_12974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12974(t0,t1);}

C_noret_decl(trf_12976)
static void C_fcall trf_12976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12976(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12976(t0,t1,t2,t3);}

C_noret_decl(trf_13025)
static void C_fcall trf_13025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13025(t0,t1);}

C_noret_decl(trf_12990)
static void C_fcall trf_12990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12990(t0,t1);}

C_noret_decl(trf_12874)
static void C_fcall trf_12874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12874(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12874(t0,t1);}

C_noret_decl(trf_12788)
static void C_fcall trf_12788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12788(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12788(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12807)
static void C_fcall trf_12807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12807(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12807(t0,t1);}

C_noret_decl(trf_12738)
static void C_fcall trf_12738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12738(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12738(t0,t1,t2,t3);}

C_noret_decl(trf_12499)
static void C_fcall trf_12499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12499(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_12499(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_12518)
static void C_fcall trf_12518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12518(t0,t1);}

C_noret_decl(trf_12533)
static void C_fcall trf_12533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12533(t0,t1);}

C_noret_decl(trf_12542)
static void C_fcall trf_12542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12542(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12542(t0,t1);}

C_noret_decl(trf_12489)
static void C_fcall trf_12489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12489(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_12489(t0);}

C_noret_decl(trf_12434)
static void C_fcall trf_12434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12434(t0,t1);}

C_noret_decl(trf_12425)
static void C_fcall trf_12425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12425(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12425(t0,t1,t2);}

C_noret_decl(trf_12308)
static void C_fcall trf_12308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12308(t0,t1);}

C_noret_decl(trf_12299)
static void C_fcall trf_12299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12299(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12299(t0,t1,t2);}

C_noret_decl(trf_12281)
static void C_fcall trf_12281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12281(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12281(t0,t1,t2);}

C_noret_decl(trf_12272)
static void C_fcall trf_12272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12272(t0,t1);}

C_noret_decl(trf_12254)
static void C_fcall trf_12254(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12254(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12254(t0,t1);}

C_noret_decl(trf_12245)
static void C_fcall trf_12245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12245(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12245(t0,t1,t2);}

C_noret_decl(trf_12236)
static void C_fcall trf_12236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12236(t0,t1);}

C_noret_decl(trf_12218)
static void C_fcall trf_12218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12218(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12218(t0,t1);}

C_noret_decl(trf_12209)
static void C_fcall trf_12209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12209(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12209(t0,t1,t2);}

C_noret_decl(trf_12200)
static void C_fcall trf_12200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12200(t0,t1);}

C_noret_decl(trf_12185)
static void C_fcall trf_12185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12185(t0,t1);}

C_noret_decl(trf_12140)
static void C_fcall trf_12140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12140(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12140(t0,t1);}

C_noret_decl(trf_12122)
static void C_fcall trf_12122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12122(t0,t1);}

C_noret_decl(trf_12113)
static void C_fcall trf_12113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12113(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12113(t0,t1,t2);}

C_noret_decl(trf_12086)
static void C_fcall trf_12086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12086(t0,t1);}

C_noret_decl(trf_12068)
static void C_fcall trf_12068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12068(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12068(t0,t1);}

C_noret_decl(trf_12050)
static void C_fcall trf_12050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12050(t0,t1);}

C_noret_decl(trf_12041)
static void C_fcall trf_12041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12041(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12041(t0,t1,t2);}

C_noret_decl(trf_12029)
static void C_fcall trf_12029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12029(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12029(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_11964)
static void C_fcall trf_11964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11964(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11964(t0,t1,t2,t3);}

C_noret_decl(trf_11982)
static void C_fcall trf_11982(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11982(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11982(t0,t1);}

C_noret_decl(trf_11805)
static void C_fcall trf_11805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11805(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11805(t0,t1,t2,t3);}

C_noret_decl(trf_11894)
static void C_fcall trf_11894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11894(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11894(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11908)
static void C_fcall trf_11908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11908(t0,t1);}

C_noret_decl(trf_11836)
static void C_fcall trf_11836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11836(t0,t1);}

C_noret_decl(trf_11740)
static void C_fcall trf_11740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11740(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11740(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11013)
static void C_fcall trf_11013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11013(t0,t1);}

C_noret_decl(trf_11016)
static void C_fcall trf_11016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11016(t0,t1);}

C_noret_decl(trf_11019)
static void C_fcall trf_11019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11019(t0,t1);}

C_noret_decl(trf_11022)
static void C_fcall trf_11022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11022(t0,t1);}

C_noret_decl(trf_10775)
static void C_fcall trf_10775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10775(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10775(t0,t1);}

C_noret_decl(trf_10646)
static void C_fcall trf_10646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10646(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10646(t0,t1,t2);}

C_noret_decl(trf_10511)
static void C_fcall trf_10511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10511(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10511(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10256)
static void C_fcall trf_10256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10256(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10256(t0,t1,t2);}

C_noret_decl(trf_10265)
static void C_fcall trf_10265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10265(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10265(t0,t1,t2,t3);}

C_noret_decl(trf_10098)
static void C_fcall trf_10098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10098(t0,t1);}

C_noret_decl(trf_10114)
static void C_fcall trf_10114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10114(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10114(t0,t1,t2,t3);}

C_noret_decl(trf_9922)
static void C_fcall trf_9922(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9922(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9922(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9952)
static void C_fcall trf_9952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9952(t0,t1);}

C_noret_decl(trf_9935)
static void C_fcall trf_9935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9935(t0,t1);}

C_noret_decl(trf_9800)
static void C_fcall trf_9800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9800(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9800(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9830)
static void C_fcall trf_9830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9830(t0,t1);}

C_noret_decl(trf_9813)
static void C_fcall trf_9813(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9813(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9813(t0,t1);}

C_noret_decl(trf_9703)
static void C_fcall trf_9703(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9703(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9703(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9716)
static void C_fcall trf_9716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9716(t0,t1);}

C_noret_decl(trf_9635)
static void C_fcall trf_9635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9635(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9635(t0,t1,t2,t3);}

C_noret_decl(trf_9605)
static void C_fcall trf_9605(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9605(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9605(t0,t1);}

C_noret_decl(trf_9533)
static void C_fcall trf_9533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9533(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9533(t0,t1,t2,t3);}

C_noret_decl(trf_9332)
static void C_fcall trf_9332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9332(t0,t1);}

C_noret_decl(trf_9414)
static void C_fcall trf_9414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9414(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9414(t0,t1);}

C_noret_decl(trf_9425)
static void C_fcall trf_9425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9425(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9425(t0,t1,t2,t3);}

C_noret_decl(trf_9437)
static void C_fcall trf_9437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9437(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9437(t0,t1,t2);}

C_noret_decl(trf_9358)
static void C_fcall trf_9358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9358(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9358(t0,t1,t2);}

C_noret_decl(trf_8995)
static void C_fcall trf_8995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8995(t0,t1);}

C_noret_decl(trf_8998)
static void C_fcall trf_8998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8998(t0,t1);}

C_noret_decl(trf_9004)
static void C_fcall trf_9004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9004(t0,t1);}

C_noret_decl(trf_8907)
static void C_fcall trf_8907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8907(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8907(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8799)
static void C_fcall trf_8799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8799(t0,t1);}

C_noret_decl(trf_8804)
static void C_fcall trf_8804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8804(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8804(t0,t1,t2,t3);}

C_noret_decl(trf_8571)
static void C_fcall trf_8571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8571(t0,t1);}

C_noret_decl(trf_8574)
static void C_fcall trf_8574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8574(t0,t1);}

C_noret_decl(trf_8472)
static void C_fcall trf_8472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8472(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8472(t0,t1);}

C_noret_decl(trf_8367)
static void C_fcall trf_8367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8367(t0,t1);}

C_noret_decl(trf_8376)
static void C_fcall trf_8376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8376(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8376(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8389)
static void C_fcall trf_8389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8389(t0,t1);}

C_noret_decl(trf_8231)
static void C_fcall trf_8231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8231(t0,t1);}

C_noret_decl(trf_8234)
static void C_fcall trf_8234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8234(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8234(t0,t1);}

C_noret_decl(trf_8236)
static void C_fcall trf_8236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8236(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8236(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8164)
static void C_fcall trf_8164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8164(t0,t1);}

C_noret_decl(trf_8167)
static void C_fcall trf_8167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8167(t0,t1);}

C_noret_decl(trf_8170)
static void C_fcall trf_8170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8170(t0,t1);}

C_noret_decl(trf_8028)
static void C_fcall trf_8028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8028(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8028(t0,t1,t2,t3);}

C_noret_decl(trf_8044)
static void C_fcall trf_8044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8044(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8044(t0,t1,t2);}

C_noret_decl(trf_7766)
static void C_fcall trf_7766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7766(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7766(t0,t1);}

C_noret_decl(trf_7769)
static void C_fcall trf_7769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7769(t0,t1);}

C_noret_decl(trf_7511)
static void C_fcall trf_7511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7511(t0,t1);}

C_noret_decl(trf_7444)
static void C_fcall trf_7444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7444(t0,t1);}

C_noret_decl(trf_7434)
static void C_fcall trf_7434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7434(t0,t1);}

C_noret_decl(trf_7416)
static void C_fcall trf_7416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7416(t0,t1);}

C_noret_decl(trf_7405)
static void C_fcall trf_7405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7405(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7405(t0,t1,t2);}

C_noret_decl(trf_7367)
static void C_fcall trf_7367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7367(t0,t1);}

C_noret_decl(trf_7360)
static void C_fcall trf_7360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7360(t0,t1);}

C_noret_decl(trf_7336)
static void C_fcall trf_7336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7336(t0,t1);}

C_noret_decl(trf_7269)
static void C_fcall trf_7269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7269(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7269(t0,t1,t2,t3);}

C_noret_decl(trf_7258)
static void C_fcall trf_7258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7258(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7258(t0,t1,t2);}

C_noret_decl(trf_7213)
static void C_fcall trf_7213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7213(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7213(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7186)
static void C_fcall trf_7186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7186(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7186(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7145)
static void C_fcall trf_7145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7145(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7145(t0,t1,t2);}

C_noret_decl(trf_7151)
static void C_fcall trf_7151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7151(t0,t1,t2);}

C_noret_decl(trf_7161)
static void C_fcall trf_7161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7161(t0,t1);}

C_noret_decl(trf_6989)
static void C_fcall trf_6989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6989(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6989(t0,t1,t2,t3);}

C_noret_decl(trf_6966)
static void C_fcall trf_6966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6966(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6966(t0,t1,t2,t3);}

C_noret_decl(trf_6912)
static void C_fcall trf_6912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6912(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_6912(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6311)
static void C_fcall trf_6311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6311(t0,t1);}

C_noret_decl(trf_6323)
static void C_fcall trf_6323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6323(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6323(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6376)
static void C_fcall trf_6376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6376(t0,t1);}

C_noret_decl(trf_6335)
static void C_fcall trf_6335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6335(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6335(t0,t1,t2);}

C_noret_decl(trf_6348)
static void C_fcall trf_6348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6348(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5355)){
C_save(t1);
C_rereclaim2(5355*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,911);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],8,"reverse!");
lf[62]=C_h_intern(&lf[62],9,"make-list");
lf[63]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[89]=C_h_intern(&lf[89],7,"rescale");
lf[90]=C_h_intern(&lf[90],8,"discrete");
lf[91]=C_h_intern(&lf[91],4,"not\077");
lf[92]=C_h_intern(&lf[92],3,"int");
lf[93]=C_h_intern(&lf[93],4,"plus");
lf[94]=C_h_intern(&lf[94],1,"+");
lf[95]=C_h_intern(&lf[95],5,"minus");
lf[96]=C_h_intern(&lf[96],1,"-");
lf[97]=C_h_intern(&lf[97],5,"times");
lf[98]=C_h_intern(&lf[98],1,"*");
lf[99]=C_h_intern(&lf[99],6,"divide");
lf[100]=C_h_intern(&lf[100],1,"/");
lf[101]=C_h_intern(&lf[101],8,"quantize");
lf[102]=C_h_intern(&lf[102],8,"decimals");
lf[103]=C_h_intern(&lf[103],5,"round");
lf[104]=C_h_intern(&lf[104],1,"v");
lf[105]=C_h_intern(&lf[105],4,"expt");
lf[106]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[107]=C_h_intern(&lf[107],15,"rhythm->seconds");
lf[108]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[109]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[110]=C_h_intern(&lf[110],6,"\000tempo");
lf[111]=C_h_intern(&lf[111],5,"\000beat");
lf[112]=C_h_intern(&lf[112],12,"cents->ratio");
lf[113]=C_h_intern(&lf[113],12,"ratio->cents");
lf[115]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[116]=C_h_intern(&lf[116],3,"err");
lf[117]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[119]=C_h_intern(&lf[119],6,"interp");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[121]=C_h_intern(&lf[121],8,"tendency");
lf[122]=C_h_intern(&lf[122],3,"ran");
lf[123]=C_h_intern(&lf[123],3,"fit");
lf[124]=C_h_intern(&lf[124],9,"remainder");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[126]=C_h_intern(&lf[126],5,"scale");
lf[127]=C_h_intern(&lf[127],6,"modulo");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[129]=C_h_intern(&lf[129],8,"ran-set!");
lf[130]=C_h_intern(&lf[130],7,"between");
lf[131]=C_h_intern(&lf[131],4,"pick");
lf[132]=C_h_intern(&lf[132],4,"odds");
lf[133]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[134]=C_h_intern(&lf[134],5,"\000true");
lf[135]=C_h_intern(&lf[135],6,"\000false");
lf[136]=C_h_intern(&lf[136],4,"vary");
lf[137]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[138]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[139]=C_h_intern(&lf[139],8,"shuffle!");
lf[140]=C_h_intern(&lf[140],7,"shuffle");
lf[141]=C_h_intern(&lf[141],6,"ranlow");
lf[142]=C_h_intern(&lf[142],7,"ranhigh");
lf[143]=C_h_intern(&lf[143],9,"ranmiddle");
lf[144]=C_h_intern(&lf[144],7,"ranbeta");
lf[145]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[146]=C_h_intern(&lf[146],2,"\000a");
lf[147]=C_h_intern(&lf[147],2,"\000b");
lf[148]=C_h_intern(&lf[148],6,"ranexp");
lf[149]=C_h_intern(&lf[149],8,"rangauss");
lf[150]=C_h_intern(&lf[150],9,"rancauchy");
lf[151]=C_h_intern(&lf[151],10,"ranpoisson");
lf[152]=C_h_intern(&lf[152],3,"arg");
lf[153]=C_h_intern(&lf[153],8,"rangamma");
lf[154]=C_h_intern(&lf[154],8,"ranbrown");
lf[155]=C_h_intern(&lf[155],7,"ranpink");
lf[156]=C_h_intern(&lf[156],4,"segs");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[158]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[162]=C_h_intern(&lf[162],13,"string-append");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[167]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[168]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[169]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[170]=C_h_intern(&lf[170],5,"floor");
lf[171]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[172]=C_h_intern(&lf[172],4,"note");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[174]=C_h_intern(&lf[174],3,"key");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[176]=C_h_intern(&lf[176],2,"hz");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[178]=C_h_intern(&lf[178],2,"pc");
lf[179]=C_h_intern(&lf[179],6,"invert");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[181]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[182]=C_h_intern(&lf[182],9,"transpose");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[184]=C_h_intern(&lf[184],10,"retrograde");
lf[185]=C_h_intern(&lf[185],7,"reverse");
lf[187]=C_h_intern(&lf[187],8,"spektrum");
lf[192]=C_h_intern(&lf[192],13,"make-spectrum");
lf[193]=C_h_intern(&lf[193],12,"list->vector");
lf[194]=C_h_intern(&lf[194],13,"spectrum-size");
lf[195]=C_h_intern(&lf[195],14,"spectrum-freqs");
lf[196]=C_h_intern(&lf[196],13,"spectrum-amps");
lf[197]=C_h_intern(&lf[197],13,"spectrum-time");
lf[198]=C_h_intern(&lf[198],14,"spectrum-pairs");
lf[199]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[200]=C_h_intern(&lf[200],16,"spectrum-minfreq");
lf[201]=C_h_intern(&lf[201],16,"spectrum-maxfreq");
lf[202]=C_h_intern(&lf[202],15,"spectrum-minamp");
lf[203]=C_h_intern(&lf[203],12,"\003sysfor-each");
lf[204]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[205]=C_h_intern(&lf[205],15,"spectrum-maxamp");
lf[206]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[207]=C_h_intern(&lf[207],13,"spectrum-keys");
lf[208]=C_h_intern(&lf[208],8,"for-each");
lf[209]=C_h_intern(&lf[209],6,"\000order");
lf[210]=C_h_intern(&lf[210],7,"\000thresh");
lf[211]=C_h_intern(&lf[211],6,"\000quant");
lf[212]=C_h_intern(&lf[212],7,"\000unique");
lf[213]=C_h_intern(&lf[213],11,"fm-spectrum");
lf[214]=C_h_intern(&lf[214],8,"set-car!");
lf[215]=C_h_intern(&lf[215],4,"caar");
lf[216]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[218]=C_h_intern(&lf[218],6,"period");
lf[220]=C_h_intern(&lf[220],14,"\003sysblock-set!");
lf[228]=C_h_intern(&lf[228],7,"pattern");
lf[243]=C_h_intern(&lf[243],4,"\000nad");
lf[244]=C_h_intern(&lf[244],8,"\000periods");
lf[245]=C_h_intern(&lf[245],12,"\000depth-first");
lf[247]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[248]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[249]=C_h_intern(&lf[249],14,"\000breadth-first");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[251]=C_h_intern(&lf[251],7,"\000values");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[254]=C_h_intern(&lf[254],4,"eop\077");
lf[255]=C_h_intern(&lf[255],4,"\000eop");
lf[256]=C_h_intern(&lf[256],4,"eod\077");
lf[257]=C_h_intern(&lf[257],4,"\000eod");
lf[258]=C_h_intern(&lf[258],4,"next");
lf[262]=C_h_intern(&lf[262],5,"force");
lf[263]=C_h_intern(&lf[263],8,"promise\077");
lf[264]=C_h_intern(&lf[264],3,"max");
lf[265]=C_h_intern(&lf[265],10,"make-cycle");
lf[267]=C_h_intern(&lf[267],4,"\000for");
lf[268]=C_h_intern(&lf[268],7,"\000repeat");
lf[270]=C_h_intern(&lf[270],5,"palin");
lf[272]=C_h_intern(&lf[272],15,"make-palindrome");
lf[274]=C_h_intern(&lf[274],6,"\000elide");
lf[275]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[276]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[277]=C_h_intern(&lf[277],9,"make-line");
lf[279]=C_h_intern(&lf[279],9,"make-heap");
lf[281]=C_h_intern(&lf[281],13,"make-rotation");
lf[283]=C_h_intern(&lf[283],7,"\000rotate");
lf[285]=C_h_intern(&lf[285],11,"random-item");
lf[293]=C_h_intern(&lf[293],14,"make-weighting");
lf[296]=C_h_intern(&lf[296],7,"\000weight");
lf[297]=C_h_intern(&lf[297],4,"\000min");
lf[298]=C_h_intern(&lf[298],4,"\000max");
lf[299]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[300]=C_h_intern(&lf[300],11,"make-markov");
lf[302]=C_h_intern(&lf[302],5,"\000past");
lf[303]=C_h_intern(&lf[303],2,"->");
lf[304]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[305]=C_h_intern(&lf[305],3,"\000->");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[307]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[309]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[311]=C_h_intern(&lf[311],10,"graph-node");
lf[312]=C_h_intern(&lf[312],10,"make-graph");
lf[314]=C_h_intern(&lf[314],3,"\000to");
lf[315]=C_h_intern(&lf[315],3,"\000id");
lf[316]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[319]=C_h_intern(&lf[319],14,"markov-analyze");
lf[320]=C_h_intern(&lf[320],9,"last-pair");
lf[321]=C_h_intern(&lf[321],6,"format");
lf[322]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[323]=C_h_intern(&lf[323],4,"find");
lf[324]=C_h_intern(&lf[324],10,"list-index");
lf[325]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[327]=C_h_intern(&lf[327],7,"newline");
lf[328]=C_h_intern(&lf[328],7,"display");
lf[329]=C_h_intern(&lf[329],19,"\003syswrite-char/port");
lf[330]=C_h_intern(&lf[330],19,"\003sysstandard-output");
lf[331]=C_h_intern(&lf[331],3,"min");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[333]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~s");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[336]=C_h_intern(&lf[336],11,"make-string");
lf[337]=C_h_intern(&lf[337],4,"sort");
lf[338]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[339]=C_h_intern(&lf[339],1,"<");
lf[340]=C_h_intern(&lf[340],11,"string-ci<\077");
lf[341]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[345]=C_h_intern(&lf[345],5,"token");
lf[350]=C_h_intern(&lf[350],1,"t");
lf[355]=C_h_intern(&lf[355],4,"rule");
lf[358]=C_h_intern(&lf[358],22,"hash-table-ref/default");
lf[365]=C_h_intern(&lf[365],11,"parse-error");
lf[369]=C_h_intern(&lf[369],10,"parse-unit");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[383]=C_h_intern(&lf[383],14,"string->symbol");
lf[384]=C_h_intern(&lf[384],5,"equal");
lf[385]=C_h_intern(&lf[385],3,"and");
lf[386]=C_h_intern(&lf[386],2,"or");
lf[387]=C_h_intern(&lf[387],3,"not");
lf[388]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[389]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[392]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[399]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[400]=C_h_intern(&lf[400],1,"@");
lf[401]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[402]=C_h_intern(&lf[402],6,"printf");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[408]=C_h_intern(&lf[408],2,">=");
lf[409]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[411]=C_h_intern(&lf[411],5,"begin");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[414]=C_h_intern(&lf[414],1,">");
lf[415]=C_h_intern(&lf[415],2,"<=");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[422]=C_h_intern(&lf[422],17,"*sal-trace-input*");
lf[423]=C_h_intern(&lf[423],3,"sal");
lf[424]=C_h_intern(&lf[424],11,"print-error");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[426]=C_h_intern(&lf[426],9,"substring");
lf[427]=C_h_intern(&lf[427],2,"pp");
lf[428]=C_h_intern(&lf[428],4,"eval");
lf[429]=C_h_intern(&lf[429],7,"\000syntax");
lf[430]=C_h_intern(&lf[430],7,"\000scheme");
lf[431]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[432]=C_h_intern(&lf[432],7,"call/cc");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[434]=C_h_intern(&lf[434],9,"sal:print");
lf[435]=C_h_intern(&lf[435],13,"print-message");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[437]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[444]=C_h_intern(&lf[444],9,"sal:chdir");
lf[445]=C_h_intern(&lf[445],8,"sal:load");
lf[446]=C_h_intern(&lf[446],13,"load-sal-file");
lf[447]=C_h_intern(&lf[447],4,"load");
lf[448]=C_h_intern(&lf[448],15,"\003syssubstring=\077");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[452]=C_h_intern(&lf[452],12,"file-exists\077");
lf[453]=C_h_intern(&lf[453],8,"sal:open");
lf[454]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[455]=C_h_intern(&lf[455],10,"sal:output");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[468]=C_h_intern(&lf[468],8,"operator");
lf[469]=C_h_intern(&lf[469],8,"bindings");
lf[470]=C_h_intern(&lf[470],10,"collectors");
lf[471]=C_h_intern(&lf[471],9,"initially");
lf[472]=C_h_intern(&lf[472],9,"end-tests");
lf[473]=C_h_intern(&lf[473],7,"looping");
lf[474]=C_h_intern(&lf[474],8,"stepping");
lf[475]=C_h_intern(&lf[475],7,"finally");
lf[476]=C_h_intern(&lf[476],9,"returning");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[498]=C_h_intern(&lf[498],3,"for");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[501]=C_h_intern(&lf[501],8,"downfrom");
lf[502]=C_h_intern(&lf[502],5,"above");
lf[503]=C_h_intern(&lf[503],5,"below");
lf[504]=C_h_intern(&lf[504],6,"downto");
lf[505]=C_h_intern(&lf[505],4,"from");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[512]=C_h_intern(&lf[512],2,"to");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[519]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[522]=C_h_intern(&lf[522],2,"by");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[531]=C_h_intern(&lf[531],6,"across");
lf[532]=C_h_intern(&lf[532],13,"vector-length");
lf[533]=C_h_intern(&lf[533],10,"vector-ref");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[536]=C_h_intern(&lf[536],4,"over");
lf[537]=C_h_intern(&lf[537],2,"in");
lf[538]=C_h_intern(&lf[538],5,"quote");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[546]=C_h_intern(&lf[546],2,"on");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[550]=C_h_intern(&lf[550],1,"=");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[552]=C_h_intern(&lf[552],4,"then");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[558]=C_h_intern(&lf[558],4,"with");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[581]=C_h_intern(&lf[581],3,"sum");
lf[582]=C_h_intern(&lf[582],5,"count");
lf[583]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[584]=C_h_intern(&lf[584],8,"minimize");
lf[585]=C_h_intern(&lf[585],8,"maximize");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[588]=C_h_intern(&lf[588],4,"list");
lf[589]=C_h_intern(&lf[589],8,"set-cdr!");
lf[590]=C_h_intern(&lf[590],7,"collect");
lf[591]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[594]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[595]=C_h_intern(&lf[595],5,"nconc");
lf[596]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[599]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[600]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[601]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[602]=C_h_intern(&lf[602],4,"into");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[609]=C_h_intern(&lf[609],6,"return");
lf[611]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[612]=C_h_intern(&lf[612],5,"until");
lf[613]=C_h_intern(&lf[613],5,"while");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[617]=C_h_intern(&lf[617],7,"thereis");
lf[618]=C_h_intern(&lf[618],6,"always");
lf[619]=C_h_intern(&lf[619],5,"never");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[629]=C_h_intern(&lf[629],4,"task");
lf[630]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[632]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[638]=C_h_intern(&lf[638],2,"do");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[641]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[642]=C_h_intern(&lf[642],4,"iter");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[645]=C_h_intern(&lf[645],6,"repeat");
lf[646]=C_h_intern(&lf[646],2,"as");
lf[648]=C_h_intern(&lf[648],10,"mm:make-on");
lf[649]=C_h_intern(&lf[649],5,"\000time");
lf[650]=C_h_intern(&lf[650],4,"\000key");
lf[651]=C_h_intern(&lf[651],4,"\000vel");
lf[652]=C_h_intern(&lf[652],5,"\000chan");
lf[653]=C_h_intern(&lf[653],6,"mm:on\077");
lf[654]=C_h_intern(&lf[654],11,"mm:make-off");
lf[655]=C_h_intern(&lf[655],7,"mm:off\077");
lf[656]=C_h_intern(&lf[656],13,"mm:make-touch");
lf[657]=C_h_intern(&lf[657],4,"\000val");
lf[658]=C_h_intern(&lf[658],9,"mm:touch\077");
lf[659]=C_h_intern(&lf[659],12,"mm:make-ctrl");
lf[660]=C_h_intern(&lf[660],4,"\000num");
lf[661]=C_h_intern(&lf[661],8,"mm:ctrl\077");
lf[662]=C_h_intern(&lf[662],12,"mm:make-prog");
lf[663]=C_h_intern(&lf[663],8,"mm:prog\077");
lf[664]=C_h_intern(&lf[664],13,"mm:make-press");
lf[665]=C_h_intern(&lf[665],9,"mm:press\077");
lf[666]=C_h_intern(&lf[666],12,"mm:make-bend");
lf[667]=C_h_intern(&lf[667],7,"mm:free");
lf[668]=C_h_intern(&lf[668],7,"mm:copy");
lf[669]=C_h_intern(&lf[669],7,"mm:time");
lf[670]=C_h_intern(&lf[670],12,"mm:time-set!");
lf[671]=C_h_intern(&lf[671],7,"mm:chan");
lf[672]=C_h_intern(&lf[672],12,"mm:chan-set!");
lf[673]=C_h_intern(&lf[673],6,"mm:key");
lf[674]=C_h_intern(&lf[674],11,"mm:key-set!");
lf[675]=C_h_intern(&lf[675],6,"mm:vel");
lf[676]=C_h_intern(&lf[676],11,"mm:vel-set!");
lf[677]=C_h_intern(&lf[677],6,"mm:val");
lf[678]=C_h_intern(&lf[678],8,"mm:type\077");
lf[679]=C_h_intern(&lf[679],11,"mm:val-set!");
lf[680]=C_h_intern(&lf[680],1,"k");
lf[681]=C_h_intern(&lf[681],6,"mm:num");
lf[682]=C_h_intern(&lf[682],11,"mm:num-set!");
lf[683]=C_h_intern(&lf[683],7,"mp:note");
lf[684]=C_h_intern(&lf[684],7,"mp:midi");
lf[685]=C_h_intern(&lf[685],6,"mp:off");
lf[686]=C_h_intern(&lf[686],5,"mp:on");
lf[687]=C_h_intern(&lf[687],8,"mp:touch");
lf[688]=C_h_intern(&lf[688],7,"mp:ctrl");
lf[689]=C_h_intern(&lf[689],7,"mp:prog");
lf[690]=C_h_intern(&lf[690],8,"mp:press");
lf[691]=C_h_intern(&lf[691],7,"mp:bend");
lf[692]=C_h_intern(&lf[692],5,"mp:mm");
lf[693]=C_h_intern(&lf[693],9,"mp:inhook");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[695]=C_h_intern(&lf[695],27,"condition-property-accessor");
lf[696]=C_h_intern(&lf[696],3,"exn");
lf[697]=C_h_intern(&lf[697],7,"message");
lf[698]=C_h_intern(&lf[698],22,"with-exception-handler");
lf[699]=C_h_intern(&lf[699],30,"call-with-current-continuation");
lf[700]=C_h_intern(&lf[700],4,"cs:i");
lf[701]=C_h_intern(&lf[701],4,"cs:f");
lf[702]=C_h_intern(&lf[702],8,"cs:clear");
lf[703]=C_h_intern(&lf[703],7,"cm-logo");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[705]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[711]=C_h_intern(&lf[711],25,"current-time-milliseconds");
lf[712]=C_h_intern(&lf[712],20,"current-time-seconds");
lf[714]=C_h_intern(&lf[714],6,"\003sysgc");
lf[717]=C_h_intern(&lf[717],6,"sprout");
lf[718]=C_h_intern(&lf[718],9,"\003syserror");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[720]=C_h_intern(&lf[720],3,"now");
lf[721]=C_h_intern(&lf[721],11,"time-format");
lf[722]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[723]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[724]=C_h_intern(&lf[724],1,"m");
lf[725]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[726]=C_h_intern(&lf[726],1,"s");
lf[727]=C_h_intern(&lf[727],5,"pause");
lf[728]=C_h_intern(&lf[728],7,"paused\077");
lf[729]=C_h_intern(&lf[729],4,"cont");
lf[730]=C_h_intern(&lf[730],4,"stop");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[732]=C_h_intern(&lf[732],4,"hush");
lf[734]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[740]=C_h_intern(&lf[740],14,"return-to-host");
lf[741]=C_h_intern(&lf[741],6,"define");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[743]=C_h_intern(&lf[743],18,"\003sysregister-macro");
lf[744]=C_h_intern(&lf[744],14,"define-process");
lf[745]=C_h_intern(&lf[745],6,"lambda");
lf[746]=C_h_intern(&lf[746],7,"elapsed");
lf[747]=C_h_intern(&lf[747],1,"x");
lf[748]=C_h_intern(&lf[748],4,"wait");
lf[749]=C_h_intern(&lf[749],18,"current-error-port");
lf[750]=C_h_intern(&lf[750],19,"print-error-message");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[756]=C_h_intern(&lf[756],3,"run");
lf[757]=C_h_intern(&lf[757],20,"\003sysregister-macro-2");
lf[758]=C_h_intern(&lf[758],15,"hash-table-set!");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[760]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[762]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[764]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[766]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[768]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[770]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[771]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[772]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[774]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[776]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[778]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[780]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[782]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[784]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[786]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[787]=C_h_intern(&lf[787],5,":loop");
lf[788]=C_h_intern(&lf[788],7,"tagbody");
lf[789]=C_h_intern(&lf[789],5,"block");
lf[790]=C_h_intern(&lf[790],3,"nil");
lf[791]=C_h_intern(&lf[791],2,"go");
lf[792]=C_h_intern(&lf[792],8,"function");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[794]=C_h_intern(&lf[794],3,"pop");
lf[795]=C_h_intern(&lf[795],4,"cons");
lf[796]=C_h_intern(&lf[796],4,"push");
lf[797]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[798]=C_h_intern(&lf[798],4,"loop");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[807]=C_h_intern(&lf[807],7,"\000return");
lf[808]=C_h_intern(&lf[808],9,"\000function");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[810]=C_h_intern(&lf[810],8,"\000process");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[815]=C_h_intern(&lf[815],4,"cond");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[821]=C_h_intern(&lf[821],5,"\000loop");
lf[822]=C_h_intern(&lf[822],4,"\000run");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[831]=C_h_intern(&lf[831],9,"list-tail");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[834]=C_h_intern(&lf[834],9,"\000bindings");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[842]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[846]=C_h_intern(&lf[846],10,"sal:system");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[864]=C_h_intern(&lf[864],7,"unquote");
lf[865]=C_h_intern(&lf[865],16,"unquote-splicing");
lf[866]=C_h_intern(&lf[866],5,"\000list");
lf[867]=C_h_intern(&lf[867],8,"\000unquote");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[871]=C_h_intern(&lf[871],10,"quasiquote");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[876]=C_h_intern(&lf[876],7,"fprintf");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[879]=C_h_intern(&lf[879],27,"\003sysregister-record-printer");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[881]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[882]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[883]=C_h_intern(&lf[883],6,"ruleid");
lf[884]=C_h_intern(&lf[884],9,"make-rule");
lf[885]=C_h_intern(&lf[885],7,"*rules*");
lf[886]=C_h_intern(&lf[886],7,"defrule");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[888]=C_h_intern(&lf[888],15,"make-hash-table");
lf[889]=C_h_intern(&lf[889],3,"eq\077");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[893]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[895]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[896]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[897]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[898]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[904]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[905]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[906]=C_h_intern(&lf[906],6,"equal\077");
lf[907]=C_h_intern(&lf[907],4,"send");
lf[908]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[909]=C_h_intern(&lf[909],19,"define-send-message");
lf[910]=C_h_intern(&lf[910],12,"with-optkeys");
C_register_lf2(lf,911,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5971,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5969 */
static void C_ccall f_5971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5974,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5972 in k5969 */
static void C_ccall f_5974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5977,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5975 in k5972 in k5969 */
static void C_ccall f_5977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5980,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_5980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5980,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5982,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6271,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37628,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 248  ##sys#register-macro");
t5=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[910],t4);}

/* a37627 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37628(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_37628r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37628r(t0,t1,t2,t3);}}

static void C_ccall f_37628r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 249  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6275,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 255  make-hash-table");
t3=C_retrieve(lf[888]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[906]+1));}

/* k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6275,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6278,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37576,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 257  ##sys#register-macro");
t5=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[909],t4);}

/* a37575 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37576(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37576,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37580,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_37580(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37613,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string->symbol");
t10=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37623,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 268  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[908]);}}}}

/* k37621 in a37575 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37580(2,t3,t2);}

/* k37611 in a37575 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37580(2,t3,t2);}

/* k37578 in a37575 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37580,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[538],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[758],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6278,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6280,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6571,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37570,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 353  ##sys#register-macro");
t5=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[907],t4);}

/* a37569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37570(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_37570r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37570r(t0,t1,t2,t3);}}

static void C_ccall f_37570r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 354  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word ab[207],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6571,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6573,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6584,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6613,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6623,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6633,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6643,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6653,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6667,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6682,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6688,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6711,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6849,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6889,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6899,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6960,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7059,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7145,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7186,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7213,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7240,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7258,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7269,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7284,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7291,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7298,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7317,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7336,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7357,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7360,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7367,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7396,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7399,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7402,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7405,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7416,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7434,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7441,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7444,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7451,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7454,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7473,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7507,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7618,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7633,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7675,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[97]+1,*((C_word*)lf[98]+1));
t49=C_mutate((C_word*)lf[99]+1,*((C_word*)lf[100]+1));
t50=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7701,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7722,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7762,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7998,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8013,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[114],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8028,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8114,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8160,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[123]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8227,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8360,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[129]+1,C_retrieve2(lf[76],"tb:ran-set!"));
t61=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8468,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8503,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8524,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8567,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8795,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8894,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8949,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[141]+1,C_retrieve2(lf[79],"tb:ranlow"));
t69=C_mutate((C_word*)lf[142]+1,C_retrieve2(lf[80],"tb:ranhigh"));
t70=C_mutate((C_word*)lf[143]+1,C_retrieve2(lf[81],"tb:ranmiddle"));
t71=C_mutate((C_word*)lf[144]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8991,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[148]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9219,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[149]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9238,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[150]+1,C_retrieve2(lf[85],"tb:rancauchy"));
t75=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9279,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9298,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[154]+1,C_retrieve2(lf[88],"tb:ranbrown"));
t78=C_mutate((C_word*)lf[155]+1,C_retrieve2(lf[87],"tb:ranpink"));
t79=C_mutate((C_word*)lf[156]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9319,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9528,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  make-hash-table");
t81=C_retrieve(lf[888]);
((C_proc3)C_retrieve_proc(t81))(3,t81,t80,*((C_word*)lf[906]+1));}

/* k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9528,2,t0,t1);}
t2=C_mutate(&lf[159],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9531,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37354,a[2]=t7,a[3]=t4,a[4]=((C_word)li609),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_37354(t9,t5,C_fix(0));}

/* do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37354(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37354,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[892],C_fix(-1),lf[893],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37367,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t5=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[159],"*notes*"),lf[894],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37568,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37568,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[895],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37388,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t6=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37388,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[896]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[897]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37400,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7336(t4,((C_word*)t0)[4]);}

/* k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37404,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[905]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7336(t2,t3);}

/* k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37408,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[904]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7336(t2,t3);}

/* k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37552,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 375  floor");
t4=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37552,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37414,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li608),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_37414(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37414(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37414,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37424,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37434,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_37434(t21,(C_word)C_i_string_equal_p(t20,lf[903]));}
else{
t20=t19;
f_37434(t20,C_SCHEME_FALSE);}}}

/* k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37434(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37434,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_37424(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37437,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[901]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_37437(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[902]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_37437(t7,t6);}
else{
t5=t2;
f_37437(t5,C_SCHEME_UNDEFINED);}}}}

/* k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37437(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37437,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[898],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_37445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t6=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37445,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_37452,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[159],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[159],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_37455(2,t4,C_SCHEME_UNDEFINED);}}

/* k37453 in k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37459,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[900],((C_word*)((C_word*)t0)[8])[1]);}

/* k37457 in k37453 in k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37459,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37466,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[159],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k37464 in k37457 in k37453 in k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[159],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_37469(2,t4,C_SCHEME_UNDEFINED);}}

/* k37467 in k37464 in k37457 in k37453 in k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[899],((C_word*)((C_word*)t0)[6])[1]);}

/* k37471 in k37467 in k37464 in k37457 in k37453 in k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37473,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37480,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[159],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k37478 in k37471 in k37467 in k37464 in k37457 in k37453 in k37450 in k37443 in k37435 in k37432 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[159],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_37424(2,t3,C_SCHEME_UNDEFINED);}}

/* k37422 in do680 in k37550 in k37406 in k37402 in k37398 in k37386 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_37414(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k37375 in k37566 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37377,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_37354(t3,((C_word*)t0)[2],t2);}

/* k37365 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37370,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[159],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k37368 in k37365 in do674 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9531,2,t0,t1);}
t2=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9533,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[164],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9635,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[172]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9688,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[174]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9785,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[176]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9907,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[178]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10023,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10068,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10203,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[184]+1,*((C_word*)lf[185]+1));
t11=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10511,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10532,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10550,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10568,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10586,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10596,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37344,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  ##sys#register-record-printer");
t18=C_retrieve(lf[879]);
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,lf[187],t17);}

/* a37343 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37344,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37352,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-freqs");
t5=C_retrieve2(lf[190],"spektrum-freqs");
f_10568(3,t5,t4,t2);}

/* k37350 in a37343 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  fprintf");
t2=C_retrieve(lf[876]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[891],t1);}

/* k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word ab[222],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10596,2,t0,t1);}
t2=C_mutate((C_word*)lf[192]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10598,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[194]+1,C_retrieve2(lf[189],"spektrum-size"));
t4=C_mutate((C_word*)lf[195]+1,C_retrieve2(lf[190],"spektrum-freqs"));
t5=C_mutate((C_word*)lf[196]+1,C_retrieve2(lf[191],"spektrum-amps"));
t6=C_mutate((C_word*)lf[197]+1,C_retrieve2(lf[188],"spektrum-time"));
t7=C_mutate((C_word*)lf[198]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10628,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[200]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10687,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[201]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10697,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10715,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10746,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11009,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11716,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[217],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12029,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12041,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[221],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12050,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12068,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[223],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12086,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[224],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12113,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12122,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12140,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12185,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12200,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12209,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12218,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12236,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12245,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12254,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12272,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12281,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12290,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12299,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12308,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12425,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12434,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12489,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12499,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[254]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12679,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[256]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12698,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[258]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12717,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12840,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13141,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13150,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13196,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[265]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13311,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13566,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13638,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13647,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[272]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13727,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14197,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[277]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14412,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14659,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[279]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14695,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14958,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[281]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15034,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15508,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15730,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15739,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15748,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15766,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15784,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15802,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15811,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15820,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[293]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15903,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16670,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16782,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[300]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17215,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17702,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[310],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18042,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[312]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18105,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18623,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[319]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18717,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19557,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19578,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19596,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19614,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t78=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19624,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37330,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t80=C_retrieve(lf[879]);
((C_proc4)C_retrieve_proc(t80))(4,t80,t78,lf[345],t79);}

/* a37329 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37330(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37330,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37338,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_19578(t4,t2);}

/* k37336 in a37329 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37342,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-string");
f_19596(t2,((C_word*)t0)[2]);}

/* k37340 in k37336 in a37329 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[876]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[890],((C_word*)t0)[2],t1);}

/* k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19624,2,t0,t1);}
t2=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19626,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19655,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19667,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19675,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-hash-table");
t6=C_retrieve(lf[888]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[889]+1));}

/* k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19675,2,t0,t1);}
t2=C_mutate(&lf[353],t1);
t3=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19677,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19698,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19780,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37320,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t7=C_retrieve(lf[879]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[355],t6);}

/* a37319 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37320,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37328,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  rule-name");
f_19698(t4,t2);}

/* k37326 in a37319 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[876]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[887],t1);}

/* k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19783,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37217,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro");
t4=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[886],t3);}

/* a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_37217r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_37217r(t0,t1,t2,t3,t4);}}

static void C_ccall f_37217r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37220,a[2]=t6,a[3]=((C_word)li603),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[883],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37280,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k37278 in a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37284,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_37220(t3,t2,((C_word*)t0)[2]);}

/* k37282 in k37278 in a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37284,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_37298(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_37298(t7,(C_word)C_i_nullp(t6));}}

/* k37296 in k37282 in k37278 in a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37298(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37298,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[884],((C_word*)t0)[6],lf[883],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[758],lf[885],lf[883],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37220(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_37220,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[881]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37240,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[882]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[538],t2):t2));}}}

/* k37238 in ppat in a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37244,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_37220(t4,t2,t3);}

/* k37242 in k37238 in ppat in a37216 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37244,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[795],((C_word*)t0)[2],t1));}

/* k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19783,2,t0,t1);}
t2=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19785,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19806,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[359],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19809,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[360],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19821,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19827,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[362],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19837,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19895,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19927,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19948,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19966,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19976,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37203,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t14=C_retrieve(lf[879]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[365],t13);}

/* a37202 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37203,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37211,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-string");
f_19948(t4,t2);}

/* k37209 in a37202 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37215,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-position");
f_19966(t2,((C_word*)t0)[2]);}

/* k37213 in k37209 in a37202 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[876]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[880],((C_word*)t0)[2],t1);}

/* k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19976,2,t0,t1);}
t2=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19978,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19984,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19999,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20017,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20035,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20045,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37177,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t9=C_retrieve(lf[879]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[369],t8);}

/* a37176 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37177,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37181,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t4,t2);}

/* k37179 in a37176 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37187,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_21257(t2,t1);}

/* k37185 in k37179 in a37176 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37187,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37198,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  get-rule");
f_19785(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[876]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[878],((C_word*)t0)[2]);}}

/* k37196 in k37185 in k37179 in a37176 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  rule-name");
f_19698(((C_word*)t0)[2],t1);}

/* k37192 in k37185 in k37179 in a37176 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[876]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[877],t1);}

/* k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20045,2,t0,t1);}
t2=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20047,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20063,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[378],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20095,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20107,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20117,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20135,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20168,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20376,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20384,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t11=lf[396]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20488,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21107,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21155,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21257,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21269,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21290,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37155,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[386],t21);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t18,lf[875],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37153 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(25856),t1);}

/* k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21293,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37135,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[874],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37133 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(26112),t1);}

/* k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21296,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37095,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[386],t10);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[873],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37093 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(26368),t1);}

/* k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21299,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36985,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[98],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[385],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36991,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37001,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[872],C_fix(26624),t9,t10,t11);}

/* a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37001,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37005,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t5,lf[866],t3);}

/* k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t2,((C_word*)t0)[2]);}

/* k37006 in k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37008,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[588]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37026,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t3,lf[866],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k37024 in k37006 in k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37029,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k37027 in k37024 in k37006 in k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37029,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37032,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37060,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t5,lf[866],((C_word*)t0)[2]);}

/* k37058 in k37027 in k37024 in k37006 in k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37060,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[867]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[871],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37032(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[538],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37032(t5,t4);}}

/* k37030 in k37027 in k37024 in k37006 in k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_37032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37032,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t2,lf[834],((C_word*)t0)[2]);}

/* k37036 in k37030 in k37027 in k37024 in k37006 in k37003 in a37000 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_37038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37038,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[588]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a36990 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36991(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36991,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k36983 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(26624),t1);}

/* k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21302,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36885,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[385],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36893,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t10,C_fix(27648));}

/* k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36895,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[3],lf[870],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36895,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36899,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36902,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,t3,C_fix(5376));}

/* k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t2,lf[866],((C_word*)t0)[4]);}

/* k36903 in k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_36908(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36937,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[868]:lf[869]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36945,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t5,t6);}}

/* k36943 in k36903 in k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_19927(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36935 in k36903 in k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k36906 in k36903 in k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36911,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k36909 in k36906 in k36903 in k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36914,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  set-emit-info!");
f_20117(t2,lf[866],lf[867],((C_word*)t0)[2]);}

/* k36912 in k36909 in k36906 in k36903 in k36900 in k36897 in a36894 in k36891 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36914,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[864],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[865],((C_word*)t0)[2])));}

/* k36883 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(27648),t1);}

/* k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21305,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36857,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[386],t7);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[863],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36855 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(26880),t1);}

/* k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21308,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36797,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[385],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36803,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36821,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[862],C_fix(27136),t8,t9,t10);}

/* a36820 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36821,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36829,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36833,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t6,t2);}

/* k36831 in a36820 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36827 in a36820 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36829,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a36802 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36803,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k36795 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(27136),t1);}

/* k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21311,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36674,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[400],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[385],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36680,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36711,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[861],C_fix(27392),t14,t15,t16);}

/* a36710 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36711,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36715,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k36713 in a36710 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36716 in k36713 in a36710 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36719 in k36716 in k36713 in a36710 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36721,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36734,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k36732 in k36719 in k36716 in k36713 in a36710 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36734,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a36679 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36680,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36684,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k36682 in a36679 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36684,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36699,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k36697 in k36682 in a36679 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36699,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k36672 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(27392),t1);}

/* k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21311,2,t0,t1);}
t2=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21313,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21367,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36554,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[94],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[386],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36560,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t4,lf[860],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a36559 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36560,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36576,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t4,t8,C_fix(256));}
else{
t7=t4;
f_36576(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_36576(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k36574 in a36559 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36576,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36587,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k36585 in k36574 in a36559 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36587,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k36552 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(28416),t1);}

/* k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21370,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36415,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[94],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[385],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[385],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[386],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36421,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[859],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a36420 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36421(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36421,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36441,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36444,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t7,t11,C_fix(256));}
else{
t10=t7;
f_36444(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_36444(2,t9,C_SCHEME_FALSE);}}

/* k36442 in a36420 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_36441(2,t2,C_SCHEME_END_OF_LIST);}}

/* k36439 in a36420 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36441,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k36413 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(28672),t1);}

/* k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21373,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36263,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[385],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[385],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[386],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36269,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[858],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a36268 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36269(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36269,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36287,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t10,t7,C_fix(768));}

/* k36285 in a36268 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36287,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,t3,C_fix(256));}}

/* k36294 in k36285 in a36268 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k36261 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(28160),t1);}

/* k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21376,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36192,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36198,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36216,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[857],C_fix(27904),t6,t7,t8);}

/* a36215 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36216(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36216,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36220,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k36218 in a36215 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36221 in k36218 in a36215 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36239,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36237 in k36221 in k36218 in a36215 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36239,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a36197 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36198,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k36190 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(27904),t1);}

/* k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21376,2,t0,t1);}
t2=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21378,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21399,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21515,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36116,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[386],t21);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t5,lf[856],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36114 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(28928),t1);}

/* k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21518,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36036,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[385],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36042,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[855],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a36041 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36042,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36049,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 378  is-op?");
f_21378(t4,t7);}
else{
t6=t4;
f_36049(2,t6,C_SCHEME_FALSE);}}

/* k36047 in a36041 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36049,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 378  inf->pre");
f_21399(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k36034 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_36036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(29184),t1);}

/* k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21521,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35900,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[385],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[385],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[386],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35906,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35932,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[854],C_fix(29440),t23,t24,t25);}

/* a35931 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35932(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35932,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35940,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k35938 in a35931 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a35905 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35906(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35906,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35914,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35923,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t5,t6,C_fix(512));}
else{
t5=t4;
f_35914(t5,t2);}}

/* k35921 in a35905 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_35914(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k35912 in a35905 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_35914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k35898 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(29440),t1);}

/* k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21524,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35856,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[386],t11);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[853],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35854 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(29696),t1);}

/* k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21527,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35746,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35752,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35774,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[852],C_fix(33536),t10,t11,t12);}

/* a35773 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35774,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[434]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35785,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t8,t2);}

/* k35783 in a35773 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35785,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35787,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li584),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_35787(t5,((C_word*)t0)[2],t1);}

/* do3291 in k35783 in a35773 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_35787(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35787,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35816,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k35814 in do3291 in k35783 in a35773 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35816,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_35787(t7,((C_word*)t0)[2],t6);}

/* a35751 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35752,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35768,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t5,t6,C_fix(256));}

/* k35766 in a35751 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35768,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k35744 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(33536),t1);}

/* k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21530,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35671,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35677,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35699,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[851],C_fix(34560),t10,t11,t12);}

/* a35698 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35699,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35703,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k35701 in a35698 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35710,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35708 in k35701 in a35698 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35710,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[717],t1));}

/* a35676 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35677,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35693,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t5,t6,C_fix(256));}

/* k35691 in a35676 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35693,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k35669 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(34560),t1);}

/* k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21533,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35458,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[386],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[400],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[385],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35464,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35539,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[850],C_fix(34304),t21,t22,t23);}

/* a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35539(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35539,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35543,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35579,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t6,t2);}

/* k35577 in a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35541 in a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35543,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li579),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a35558 in k35541 in a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35559(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_35559r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35559r(t0,t1,t2,t3);}}

static void C_ccall f_35559r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35567,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35571,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k35569 in a35558 in k35541 in a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35575,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t2,((C_word*)t0)[2]);}

/* k35573 in k35569 in a35558 in k35541 in a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_19927(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35565 in a35558 in k35541 in a35538 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a35463 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35464,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35471,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35507,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_35507(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_35471(t10,t9);}}

/* k35505 in a35463 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35507,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_35471(t2,C_SCHEME_UNDEFINED);}}

/* k35509 in k35505 in a35463 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35471(t3,t2);}

/* k35469 in a35463 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_35471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35471,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35482,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t4,t5);}

/* k35480 in k35469 in a35463 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k35456 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(34304),t1);}

/* k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21536,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35432,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35438,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[849],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a35437 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35438,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k35430 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(33792),t1);}

/* k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21539,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35404,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35412,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t7,C_fix(35072));}

/* k35410 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35416,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20384(t2,lf[445]);}

/* k35414 in k35410 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[4],lf[848],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35402 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(35072),t1);}

/* k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21542,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35376,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35384,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t7,C_fix(35584));}

/* k35382 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35384,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35388,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20384(t2,lf[444]);}

/* k35386 in k35382 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[4],lf[847],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35374 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(35584),t1);}

/* k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21545,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35348,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35356,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t7,C_fix(35328));}

/* k35354 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35360,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20384(t2,lf[846]);}

/* k35358 in k35354 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[4],lf[845],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35346 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(35328),t1);}

/* k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21548,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35320,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35328,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t7,C_fix(34816));}

/* k35326 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35332,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20384(t2,lf[455]);}

/* k35330 in k35326 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[4],lf[844],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35318 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(34816),t1);}

/* k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21551,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35183,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[386],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[385],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[386],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[98],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[385],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35189,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35219,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[843],C_fix(36096),t22,t23,t24);}

/* a35218 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35219,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[842]);}

/* a35188 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35189(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35189,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35213,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t6,t7,C_fix(256));}

/* k35211 in a35188 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35213,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k35181 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(36096),t1);}

/* k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21554,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35125,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35133,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t7,C_fix(31744));}

/* k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35135,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[3],lf[841],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a35134 in k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35135,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35139,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k35137 in a35134 in k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35167,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t3,lf[822],((C_word*)t0)[3]);}

/* k35165 in k35137 in a35134 in k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35167,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35142(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35155,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35159,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t3,t4);}}

/* k35157 in k35165 in k35137 in a35134 in k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_19927(((C_word*)t0)[2],lf[840],t1);}

/* k35153 in k35165 in k35137 in a35134 in k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35140 in k35137 in a35134 in k35131 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35123 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(31744),t1);}

/* k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21557,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35064,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35072,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t7,C_fix(31488));}

/* k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35074,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[3],lf[839],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35074,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35078,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k35076 in a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35109,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t3,lf[808],((C_word*)t0)[3]);}

/* k35107 in k35076 in a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35109,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35081(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35097,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35101,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t3,t4);}}

/* k35099 in k35107 in k35076 in a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_19927(((C_word*)t0)[2],lf[838],t1);}

/* k35095 in k35107 in k35076 in a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35079 in k35076 in a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35084,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  set-emit-info!");
f_20117(t2,lf[808],lf[807],((C_word*)t0)[3]);}

/* k35082 in k35079 in k35076 in a35073 in k35070 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35062 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(31488),t1);}

/* k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21560,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34973,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[385],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34979,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35014,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[837],C_fix(30208),t10,t11,t12);}

/* a35013 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35014(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35014,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35020,a[2]=t4,a[3]=t3,a[4]=((C_word)li571),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35028,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t6,t2);}

/* k35026 in a35013 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a35019 in a35013 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35020(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35020,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a34978 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34979,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35012,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t4,C_fix(4608),lf[836],C_SCHEME_FALSE);}}

/* k35010 in a34978 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_35012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35012,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k34971 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(30208),t1);}

/* k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21563,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34871,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34877,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34920,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[835],C_fix(29952),t10,t11,t12);}

/* a34919 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34920,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34924,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t5,lf[834],C_SCHEME_TRUE,t3);}

/* k34922 in a34919 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34929,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li568),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34937,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t3,((C_word*)t0)[2]);}

/* k34935 in k34922 in a34919 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a34928 in k34922 in a34919 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34929(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34929,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a34876 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34877(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34877,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34910,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k34908 in a34876 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34910,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k34869 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(29952),t1);}

/* k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21566,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34785,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[386],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[385],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34791,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[833],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a34790 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34791,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k34783 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(30720),t1);}

/* k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21569,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34505,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34511,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34554,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[832],C_fix(30464),t10,t11,t12);}

/* a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34554(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34554,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34558,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34558,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[411]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li564),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_34566(t8,((C_word*)t0)[2],t1);}

/* do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34566(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34566,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t3,t4);}}

/* k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t2,t3);}

/* k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34598,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34598,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t5,((C_word*)t0)[2],C_fix(10756));}

/* k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34658,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_34601(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34665,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34601(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k34673 in k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34675,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34601(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k34683 in k34673 in k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34685,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[588],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_34601(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k34697 in k34683 in k34673 in k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34699,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[795],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34601(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34709,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k34707 in k34697 in k34683 in k34673 in k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34709,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34601(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k34717 in k34707 in k34697 in k34683 in k34673 in k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34719,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[331],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34601(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k34727 in k34717 in k34707 in k34697 in k34683 in k34673 in k34663 in k34656 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34729,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[264],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34601(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34601(t2,C_SCHEME_UNDEFINED);}}

/* k34599 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34601,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34604,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34625,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_34625(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_34625(t4,C_SCHEME_FALSE);}}

/* k34623 in k34599 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34625(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34625,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[831],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[214],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34604(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34604(t4,t3);}}

/* k34602 in k34599 in k34596 in k34593 in k34590 in k34587 in do3370 in k34556 in a34553 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34604,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_34566(t7,((C_word*)t0)[2],t6);}

/* a34510 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34511,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34544,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k34542 in a34510 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34544,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k34503 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(30464),t1);}

/* k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21572,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34391,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[400],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[98],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[385],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34397,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34423,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[830],C_fix(32000),t12,t13,t14);}

/* a34422 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34423,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34427,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k34425 in a34422 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34427,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34431 in k34425 in a34422 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34433,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34453,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[411],t1));}}

/* k34451 in k34431 in k34425 in a34422 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34453,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a34396 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34397(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34397,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34407,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_34407(t12,t11);}
else{
t10=t8;
f_34407(t10,C_SCHEME_FALSE);}}

/* k34405 in a34396 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34407,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k34389 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(32000),t1);}

/* k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21575,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34194,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[400],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[400],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[385],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[385],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[385],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[386],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34200,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34268,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[829],C_fix(32256),t26,t27,t28);}

/* a34267 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34268(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34268,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34272,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t5,t2);}

/* k34270 in a34267 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34200,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34213,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34219,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t9,t4,C_fix(14336));}

/* k34217 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34219,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34225,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_34225(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34254,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t11,C_fix(4608),lf[828],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34213(t5,t4);}}

/* k34252 in k34217 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34225(t3,t2);}

/* k34223 in k34217 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34225,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34227 in k34223 in k34217 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34229,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_34232(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34243,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t5,C_fix(4608),lf[827],C_SCHEME_FALSE);}}

/* k34241 in k34227 in k34223 in k34217 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34232(t3,t2);}

/* k34230 in k34227 in k34223 in k34217 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34232,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34213(t4,t3);}

/* k34211 in a34199 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_34213(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k34192 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_34194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(32256),t1);}

/* k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21575,2,t0,t1);}
t2=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21577,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22098,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33922,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[385],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[400],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[385],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[385],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[386],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[400],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[400],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[385],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[386],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[400],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[385],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[386],t58);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t4,lf[826],C_fix(33024),t59,C_retrieve2(lf[407],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k33920 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(33024),t1);}

/* k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22101,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33866,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[385],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[386],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33874,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20376(t13,C_fix(33280));}

/* k33872 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(((C_word*)t0)[3],lf[825],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k33864 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(33280),t1);}

/* k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22607,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33694,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[400],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[98],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[98],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[94],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[400],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[385],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33700,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33746,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[824],C_fix(32512),t25,t26,t27);}

/* a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33746(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33746,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22107,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t7,t2);}

/* k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22107,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22125,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22566,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t17,t18,C_fix(14864));}

/* k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22566,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22570,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t2,lf[821],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22573,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t3,lf[810],((C_word*)((C_word*)t0)[6])[1]);}}

/* k22598 in k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22600,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_22573(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22588,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22592,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t3,t4);}}

/* k22590 in k22598 in k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_19927(((C_word*)t0)[2],lf[823],t1);}

/* k22586 in k22598 in k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22571 in k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t2,lf[822],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k22575 in k22571 in k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_22125(t4,t3);}

/* k22568 in k22564 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22125(t3,t2);}

/* k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22125(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22125,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22555,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22559,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_22132(t5,C_SCHEME_UNDEFINED);}}

/* k22557 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22553 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22132(t3,t2);}

/* k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22132(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22132,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22135,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22430,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li557),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_22430(t7,t2,t3);}

/* do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22430(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22430,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22440,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22451,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t4,t5);}}

/* k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22451,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li556),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_22453(t5,((C_word*)t0)[2],t1);}

/* do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22453(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22453,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 378  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22467,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22520,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_22470(t4,C_SCHEME_UNDEFINED);}}

/* k22518 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22470(t3,t2);}

/* k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22470,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22505,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_22473(t3,C_SCHEME_UNDEFINED);}}

/* k22503 in k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22473(t3,t2);}

/* k22471 in k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22473,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22476,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22486,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22484 in k22471 in k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22486,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22498,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22476(t2,C_SCHEME_UNDEFINED);}}

/* k22496 in k22484 in k22471 in k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22498,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k22488 in k22484 in k22471 in k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22476(t3,t2);}

/* k22474 in k22471 in k22468 in k22465 in do3483 in k22449 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22476(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22453(t3,((C_word*)t0)[2],t2);}

/* k22438 in do3480 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22430(t3,((C_word*)t0)[2],t2);}

/* k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22394,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li555),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_22394(t7,t2,t3);}

/* do3494 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22394(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22394,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22405,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22420,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k22418 in do3494 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22420,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k22403 in do3494 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22394(t4,((C_word*)t0)[2],t3);}

/* k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22142,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22142,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li554),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_22338(t8,t3,t4);}

/* do3499 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22338(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22338,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t3,t4);}}

/* k22346 in do3499 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22351,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22349 in k22346 in do3499 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22351,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22354,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22372,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t5,t6,C_fix(20224));}

/* k22370 in k22349 in k22346 in do3499 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22372,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[387],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_22354(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_22354(t2,C_SCHEME_UNDEFINED);}}

/* k22352 in k22349 in k22346 in do3499 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22354,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k22356 in k22352 in k22349 in k22346 in do3499 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22338(t4,((C_word*)t0)[2],t3);}

/* k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_22148(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[386],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_22148(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_22148(t4,t3);}}

/* k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22148,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22151,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22299 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22301,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22305,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_22151(t3,t2);}}

/* k22307 in k22299 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22303 in k22299 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22151(t3,t2);}

/* k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22151,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[820]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[638],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k22177 in k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[819]);}

/* k22180 in k22177 in k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[818]);}

/* k22183 in k22180 in k22177 in k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[817]);}

/* k22186 in k22183 in k22180 in k22177 in k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[816]);}

/* k22189 in k22186 in k22183 in k22180 in k22177 in k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22191,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[745],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[746],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[745],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[748],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[749]);
t14=(C_word)C_a_i_list(&a,4,lf[750],((C_word*)t0)[7],t13,lf[814]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[745],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k22248 in k22189 in k22186 in k22183 in k22180 in k22177 in k22149 in k22146 in k22143 in k22140 in k22136 in k22133 in k22130 in k22123 in k22105 in a33745 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22250,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[815],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[745],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[698],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[745],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[699],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[745],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a33699 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33700,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33716,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k33714 in a33699 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33719,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k33717 in k33714 in a33699 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33719,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33722,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_33722(t7,t6);}
else{
t5=t4;
f_33722(t5,C_SCHEME_UNDEFINED);}}

/* k33720 in k33717 in k33714 in a33699 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33722,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_33725(t5,t4);}
else{
t3=t2;
f_33725(t3,C_SCHEME_UNDEFINED);}}

/* k33723 in k33720 in k33717 in k33714 in a33699 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33725,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33736,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t3,((C_word*)t0)[8]);}

/* k33734 in k33723 in k33720 in k33717 in k33714 in a33699 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k33692 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(32512),t1);}

/* k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22610,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33549,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[385],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[98],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[385],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[386],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[385],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33555,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[813],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a33554 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33555(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33555,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33568,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_33568(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33594,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t12,t13,C_fix(256));}}

/* k33592 in a33554 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33594,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_33568(t4,t3);}

/* k33566 in a33554 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33568,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k33547 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(37632),t1);}

/* k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22613,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33092,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[385],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[385],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[385],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[386],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[385],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33098,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33137,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[812],C_fix(36352),t23,t24,t25);}

/* a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33137,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33141,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t6,t2);}

/* k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33141,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[411]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33150,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33153,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t7,t2,C_fix(24576));}

/* k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33153,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33162,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li549),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_33162(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t2,t3);}}

/* k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33429,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_33226(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33367,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 378  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k33365 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33367,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33376,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33401,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 378  substring");
t6=*((C_word*)lf[426]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_33376(t4,C_SCHEME_FALSE);}}

/* k33399 in k33365 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_33376(t2,(C_word)C_i_string_equal_p(t1,lf[811]));}

/* k33374 in k33365 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33376,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33383,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33387,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 378  substring");
t5=*((C_word*)lf[426]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_33226(t2,C_SCHEME_UNDEFINED);}}

/* k33385 in k33374 in k33365 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33381 in k33374 in k33365 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_33226(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33226(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33226,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33229,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t3,((C_word*)t0)[2],C_fix(24064));}

/* k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33304,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t2,lf[808],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33345,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k33343 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33345,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t2,lf[810],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_33229(t2,C_SCHEME_UNDEFINED);}}

/* k33347 in k33343 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33349,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33353,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k33351 in k33347 in k33343 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33353,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[741],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[809]);
t6=((C_word*)t0)[2];
f_33229(t6,t5);}

/* k33306 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33308,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33312,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k33310 in k33306 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33312,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33339,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20095(t4,lf[808],((C_word*)((C_word*)t0)[2])[1]);}

/* k33337 in k33310 in k33306 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33339,2,t0,t1);}
t2=(C_word)C_eqp(lf[807],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[609]);
t4=(C_word)C_a_i_list(&a,3,lf[745],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[699],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33315(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_33315(t3,C_SCHEME_UNDEFINED);}}

/* k33313 in k33310 in k33306 in k33302 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33315(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33315,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[741],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[806]);
t5=((C_word*)t0)[2];
f_33229(t5,t4);}

/* k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33229(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33229,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33232,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33243,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33301,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k33299 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[805]);}

/* k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33243,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33245,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li550),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_33245(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3581 in k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33245(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33245,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33260,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[803]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33264,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33293,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k33291 in do3581 in k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k33262 in do3581 in k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33264,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33267,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_33267(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33281,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[804]);}}

/* k33279 in k33262 in do3581 in k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33267(t3,t2);}

/* k33265 in k33262 in do3581 in k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_33245(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k33258 in do3581 in k33241 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33260,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[435],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k33230 in k33227 in k33224 in k33427 in k33215 in k33212 in k33209 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33232,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_33150(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3555 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33162(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33162,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33172,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k33170 in do3555 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33172,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[802],t2);}

/* k33176 in k33170 in do3555 in k33151 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33178,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[741],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[434],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_33162(t9,((C_word*)t0)[2],t8);}

/* k33148 in k33139 in a33136 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a33097 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33098,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33109,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33115,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t9,t7,C_fix(24576));}

/* k33113 in a33097 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33115,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21313(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_33109(t2,C_SCHEME_UNDEFINED);}}

/* k33129 in k33113 in a33097 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33131,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33109(t5,t4);}

/* k33107 in a33097 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_33109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k33090 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(36352),t1);}

/* k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22613,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22616,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33016,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[386],t19);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[801],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33014 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(36608),t1);}

/* k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22619,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32972,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[94],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32978,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32992,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19677(t3,lf[800],C_fix(36864),t5,t6,t7);}

/* a32991 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32992,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33000,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33004,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t6,t2);}

/* k33002 in a32991 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32998 in a32991 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_33000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33000,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[411],t1));}

/* a32977 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32978(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32978,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32986,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20035(t4,t5);}

/* k32984 in a32977 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k32970 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[353],"*rules*"),C_fix(36864),t1);}

/* k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22619,2,t0,t1);}
t2=lf[419]=C_SCHEME_FALSE;;
t3=lf[420]=C_SCHEME_FALSE;;
t4=lf[421]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[422],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[423]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22626,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[434]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22803,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[444]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22956,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[445]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22965,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[453]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23012,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[455]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23018,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23037,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32964,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro-2");
t14=C_retrieve(lf[757]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[798],t13);}

/* a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32964(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32964,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26390,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[799]);}

/* k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26393,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-iteration");
f_26372(t2,lf[798],((C_word*)t0)[2],C_retrieve2(lf[647],"*loop-operators*"));}

/* k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26393,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[609],C_retrieve2(lf[647],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26400,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26545,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26559,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t11=C_retrieve2(lf[466],"loop-returning");
f_23144(3,t11,t10,t1);}

/* k26557 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26559,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_26545(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26555,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t3=C_retrieve2(lf[466],"loop-returning");
f_23144(3,t3,t2,((C_word*)t0)[2]);}}

/* k26553 in k26557 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_26545(t2,(C_word)C_i_car(t1));}

/* k26543 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26545(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26400,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-end-tests");
t4=C_retrieve2(lf[461],"loop-end-tests");
f_23096(3,t4,t3,((C_word*)t0)[2]);}

/* k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_26407(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[386],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[797],C_SCHEME_FALSE);
t7=t2;
f_26407(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26407,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26418,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-bindings");
t4=C_retrieve2(lf[458],"loop-bindings");
f_23060(3,t4,t3,((C_word*)t0)[2]);}

/* k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26422,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-initially");
t4=C_retrieve2(lf[460],"loop-initially");
f_23084(3,t4,t3,((C_word*)t0)[3]);}

/* k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26426,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[609]);
t3=(C_word)C_a_i_list(&a,1,lf[791]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26494,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t7=C_retrieve2(lf[462],"loop-looping");
f_23108(3,t7,t6,((C_word*)t0)[3]);}

/* k26496 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26502,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26506,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-stepping");
t4=C_retrieve2(lf[464],"loop-stepping");
f_23120(3,t4,t3,((C_word*)t0)[2]);}

/* k26504 in k26496 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26506,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k26500 in k26496 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26492 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26488 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26490,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[745],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[699],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26462,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-finally");
t9=C_retrieve2(lf[465],"loop-finally");
f_23132(3,t9,t8,((C_word*)t0)[2]);}

/* k26460 in k26488 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26462,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k26456 in k26488 in k26424 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26458,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[745],t3);
t5=(C_word)C_a_i_list(&a,2,lf[699],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k26420 in k26416 in k26405 in k26402 in k26398 in k26391 in k26388 in a32963 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26422,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23040,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32950,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[796],t3);}

/* a32949 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32950,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[795],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[411],t5,t3));}

/* k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23043,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32921,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[794],t3);}

/* a32920 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32921(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32921,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32925,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[793]);}

/* k32923 in a32920 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32925,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23046,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32918,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[792],t3);}

/* a32917 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32918(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32918,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23046,2,t0,t1);}
t2=C_mutate(&lf[457],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23054,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[458],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23060,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[459],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23072,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[460],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23084,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[461],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23096,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[462],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23108,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[463],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23114,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23120,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[465],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23132,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[466],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23144,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23156,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[477],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23307,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[478],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23378,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23384,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[480],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23390,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[481],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23396,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[489],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23556,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[497],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23638,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[527],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24020,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[530],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24067,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[549],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24418,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[557],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24560,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[571],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24753,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[574],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24820,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[577],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24858,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[580],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25017,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[608],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25563,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[610],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25569,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[616],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25635,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[622],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25726,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[625],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25827,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[631],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25958,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[637],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26372,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[558],C_retrieve2(lf[557],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[471],C_retrieve2(lf[577],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[645],C_retrieve2(lf[527],"parse-repeat"),lf[642]);
t38=(C_word)C_a_i_list(&a,2,lf[505],C_retrieve2(lf[497],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[501],C_retrieve2(lf[497],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[503],C_retrieve2(lf[497],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[512],C_retrieve2(lf[497],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[502],C_retrieve2(lf[497],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[504],C_retrieve2(lf[497],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[537],C_retrieve2(lf[530],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[546],C_retrieve2(lf[530],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[531],C_retrieve2(lf[530],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[550],C_retrieve2(lf[549],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[536],C_retrieve2(lf[530],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[498],C_retrieve2(lf[489],"parse-for"),lf[642],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[646],C_retrieve2(lf[489],"parse-for"),lf[642]);
t51=(C_word)C_a_i_list(&a,3,lf[638],C_retrieve2(lf[571],"parse-do"),lf[629]);
t52=(C_word)C_a_i_list(&a,3,lf[590],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t54=(C_word)C_a_i_list(&a,3,lf[595],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t55=(C_word)C_a_i_list(&a,3,lf[581],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t56=(C_word)C_a_i_list(&a,3,lf[582],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t57=(C_word)C_a_i_list(&a,3,lf[584],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t58=(C_word)C_a_i_list(&a,3,lf[585],C_retrieve2(lf[580],"parse-accumulation"),lf[629]);
t59=(C_word)C_a_i_list(&a,4,lf[617],C_retrieve2(lf[616],"parse-thereis"),lf[629],C_retrieve2(lf[608],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[618],C_retrieve2(lf[616],"parse-thereis"),lf[629],C_retrieve2(lf[608],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[619],C_retrieve2(lf[616],"parse-thereis"),lf[629],C_retrieve2(lf[608],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[609],C_retrieve2(lf[622],"parse-return"),lf[629],C_retrieve2(lf[608],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[613],C_retrieve2(lf[610],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[612],C_retrieve2(lf[610],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[631],"parse-conditional"),lf[629]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[631],"parse-conditional"),lf[629]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[631],"parse-conditional"),lf[629]);
t68=(C_word)C_a_i_list(&a,3,lf[475],C_retrieve2(lf[574],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[647],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26566,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32776,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro-2");
t73=C_retrieve(lf[757]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[642],t72);}

/* a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32776(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32776,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26572,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-iteration");
f_26372(t3,lf[642],t2,C_retrieve2(lf[647],"*loop-operators*"));}

/* k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26575,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[609],C_retrieve2(lf[647],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26704,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t6=C_retrieve2(lf[466],"loop-returning");
f_23144(3,t6,t5,t1);}

/* k26702 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26704,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26586,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-bindings");
t3=C_retrieve2(lf[458],"loop-bindings");
f_23060(3,t3,t2,((C_word*)t0)[2]);}

/* k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26590,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-initially");
t4=C_retrieve2(lf[460],"loop-initially");
f_23084(3,t4,t3,((C_word*)t0)[2]);}

/* k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26614,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26618,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-end-tests");
t4=C_retrieve2(lf[461],"loop-end-tests");
f_23096(3,t4,t3,((C_word*)t0)[2]);}

/* k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[386],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[791],lf[350]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_26621(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_26621(t3,C_SCHEME_END_OF_LIST);}}

/* k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26621(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26621,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26625,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[462],"loop-looping");
f_23108(3,t4,t3,((C_word*)t0)[2]);}

/* k26627 in k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26633,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-stepping");
t4=C_retrieve2(lf[464],"loop-stepping");
f_23120(3,t4,t3,((C_word*)t0)[2]);}

/* k26635 in k26627 in k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26637,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[791],lf[787]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26653,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26657,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-finally");
t5=C_retrieve2(lf[465],"loop-finally");
f_23132(3,t5,t4,((C_word*)t0)[2]);}

/* k26655 in k26635 in k26627 in k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26657,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k26651 in k26635 in k26627 in k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26653,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[350],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k26631 in k26627 in k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26623 in k26619 in k26616 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26612 in k26592 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26614,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[787],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[788],t2);
t4=(C_word)C_a_i_list(&a,3,lf[789],lf[790],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k26588 in k26584 in k26573 in k26570 in a32775 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26590,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26566,2,t0,t1);}
t2=C_mutate((C_word*)lf[648]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26710,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[653]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27439,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[654]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27458,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[655]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27909,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27928,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28657,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[659]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28676,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[661]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29405,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[662]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29424,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[663]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29875,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[664]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29894,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[665]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30345,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[666]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30364,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[667]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30834,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[668]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30852,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[669]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30867,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[670]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30882,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[671]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30901,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[672]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30916,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[673]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30935,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[674]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30954,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[675]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30977,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[676]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30996,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[677]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31019,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[679]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31066,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[681]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31121,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[682]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31140,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[683]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31163,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[684]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31191,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[685]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31219,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[686]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31247,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[687]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31275,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[688]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31303,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[689]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31331,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[690]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31359,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[691]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31387,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[692]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31415,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31430,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31488,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t41=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[785],lf[786]);}

/* k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31491,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[783],lf[784]);}

/* k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31494,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[781],lf[782]);}

/* k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31497,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[779],lf[780]);}

/* k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31500,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[777],lf[778]);}

/* k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31503,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[775],lf[776]);}

/* k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31506,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[773],lf[774]);}

/* k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31509,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[771],lf[772]);}

/* k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31512,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[769],lf[770]);}

/* k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31515,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[767],lf[768]);}

/* k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31518,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[765],lf[766]);}

/* k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31518,2,t0,t1);}
t2=C_mutate((C_word*)lf[700]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31520,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31577,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31634,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31643,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t6=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[763],lf[764]);}

/* k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31643,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31646,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[761],lf[762]);}

/* k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31649,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[758]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[759],lf[760]);}

/* k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31649,2,t0,t1);}
t2=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31651,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[435]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31841,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[424]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31855,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[711]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31869,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31872,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[713],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31884,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[715],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31893,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[716],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31937,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[446]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31959,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[717]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31978,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[720]+1,C_retrieve(lf[712]));
t13=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32154,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[727]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32217,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[728]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32226,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[729]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32232,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32241,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[732]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32299,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[733],lf[734]);
t20=C_mutate(&lf[735],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32309,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32380,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32713,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li540),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_32713(t28,t24,C_retrieve2(lf[647],"*loop-operators*"));}

/* do5883 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32713(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32713,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[613],C_retrieve2(lf[735],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[612],C_retrieve2(lf[735],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32741,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[590]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[595]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[581]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[582]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[584]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[585]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[617]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[618]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[619]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[609]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[613]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[612]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_32741(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_32741(t11,t10);}}}

/* k32739 in do5883 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32741(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32713(t3,((C_word*)t0)[2],t2);}

/* k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32380,2,t0,t1);}
t2=C_mutate(&lf[738],t1);
t3=C_mutate(&lf[739],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32382,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32670,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32707,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 659  ##sys#register-macro-2");
t6=C_retrieve(lf[757]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[756],t5);}

/* a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32707(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32707,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32425,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 604  parse-iteration");
f_26372(t3,lf[756],t2,C_retrieve2(lf[738],"*run-operators*"));}

/* k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32425,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[733],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32431,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 612  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[755]);}

/* k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 613  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[754]);}

/* k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[753]);}

/* k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 616  loop-end-tests");
t3=C_retrieve2(lf[461],"loop-end-tests");
f_23096(3,t3,t2,((C_word*)t0)[3]);}

/* k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32441,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32651,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 617  loop-finally");
t5=C_retrieve2(lf[465],"loop-finally");
f_23132(3,t5,t4,((C_word*)t0)[3]);}

/* k32649 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32651,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32663,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 618  loop-finally");
t4=C_retrieve2(lf[465],"loop-finally");
f_23132(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32444(t2,C_SCHEME_UNDEFINED);}}

/* k32661 in k32649 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32663,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 603  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32657 in k32649 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32659,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[411],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_32444(t4,t3);}

/* k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32444,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32637,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32644,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 626  loop-looping");
t5=C_retrieve2(lf[462],"loop-looping");
f_23108(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32608,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_32608(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[386],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_32608(t7,t6);}}}

/* k32606 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32608(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32608,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_32447(2,t5,t4);}

/* k32642 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 625  process-code-terminates?");
f_32382(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k32635 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_32447(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 627  printf");
t2=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[752]);}}

/* k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32447,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[745],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[746],t4);
t6=(C_word)C_a_i_list(&a,1,lf[747]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[747]);
t8=(C_word)C_a_i_list(&a,3,lf[745],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[748],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[749]);
t14=(C_word)C_a_i_list(&a,4,lf[750],((C_word*)t0)[6],t13,lf[751]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[745],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32538,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32542,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 646  loop-looping");
t20=C_retrieve2(lf[462],"loop-looping");
f_23108(3,t20,t19,((C_word*)t0)[3]);}

/* k32544 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32550,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32554,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 647  loop-stepping");
t4=C_retrieve2(lf[464],"loop-stepping");
f_23120(3,t4,t3,((C_word*)t0)[2]);}

/* k32552 in k32544 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32554,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 603  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32548 in k32544 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 603  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32540 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 603  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32538,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[745],t2);
t4=(C_word)C_a_i_list(&a,3,lf[698],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[745],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[699],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[745],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32494,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 651  loop-bindings");
t12=C_retrieve2(lf[458],"loop-bindings");
f_23060(3,t12,t11,((C_word*)t0)[2]);}

/* k32492 in k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32494,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32490,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 652  loop-initially");
t3=C_retrieve2(lf[460],"loop-initially");
f_23084(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32457(t2,C_SCHEME_FALSE);}}

/* k32488 in k32492 in k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32457(t2,(C_word)C_i_nullp(t1));}

/* k32455 in k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32457,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 655  loop-bindings");
t3=C_retrieve2(lf[458],"loop-bindings");
f_23060(3,t3,t2,((C_word*)t0)[2]);}}

/* k32466 in k32455 in k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32472,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32476,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 656  loop-initially");
t4=C_retrieve2(lf[460],"loop-initially");
f_23084(3,t4,t3,((C_word*)t0)[2]);}

/* k32474 in k32466 in k32455 in k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32476,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 603  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32470 in k32466 in k32455 in k32536 in k32445 in k32442 in k32439 in k32435 in k32432 in k32429 in k32423 in a32706 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32472,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k32668 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32673,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32678,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 662  ##sys#register-macro");
t4=C_retrieve(lf[743]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[744],t3);}

/* a32677 in k32668 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32678(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_32678r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32678r(t0,t1,t2,t3);}}

static void C_ccall f_32678r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32682,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32692,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_32692(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_32692(t6,C_SCHEME_FALSE);}}

/* k32690 in a32677 in k32668 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_32682(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 664  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[742],((C_word*)t0)[2]);}}

/* k32680 in a32677 in k32668 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32682,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[741],t2));}

/* k32671 in k32668 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32676,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 771  return-to-host");
t3=C_retrieve(lf[740]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k32674 in k32671 in k32668 in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32382(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_32382,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32398,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 599  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k32396 in process-code-terminates? in k32378 in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 600  process-code-terminates?");
f_32382(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32309,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32320,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 567  loop-error");
f_23396(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[736],t7,lf[737]));}
else{
t13=t12;
f_32320(2,t13,C_SCHEME_UNDEFINED);}}

/* k32318 in run-while-until in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[612]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_32323(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[613]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[387],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_32323(t10,t9);}
else{
t5=t2;
f_32323(t5,C_SCHEME_UNDEFINED);}}}

/* k32321 in k32318 in run-while-until in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32323(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32323,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32330,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[733],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 571  make-loop-clause");
f_23156(t2,(C_word)C_a_i_list(&a,4,lf[468],((C_word*)t0)[2],lf[473],t4));}

/* k32328 in k32321 in k32318 in run-while-until in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 571  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32303,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31954,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k31952 in hush in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31954,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5795,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32301 in hush in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 552  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32241(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_32241r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32241r(t0,t1,t2);}}

static void C_ccall f_32241r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32245,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 542  scheduler-stop");
f_31937(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32259,a[2]=t5,a[3]=((C_word)li532),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_32259(t7,t3,t2);}}

/* do5853 in stop in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32259(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32259,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32269,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 546  scheduler-stop");
f_31937(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 547  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[731],t5);}}}

/* k32267 in do5853 in stop in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32259(t3,((C_word*)t0)[2],t2);}

/* k32243 in stop in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 548  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32236,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31932,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k31930 in cont in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31932,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5785,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32234 in cont in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 538  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31914,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k31912 in paused? in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31914,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5777,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32221,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31923,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k31921 in pause in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31923,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5781,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32219 in pause in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 531  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32154(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_32154r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_32154r(t0,t1,t2);}}

static void C_ccall f_32154r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32167,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31879,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[723]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32179,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_32179(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_32179(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[726])));}}}

/* k32177 in time-format in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32179(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[720]+1,C_retrieve(lf[712]));
C_trace("ChickenBridge.scm: 520  scheduler-set-time-milliseconds");
f_31884(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[724]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[720]+1,C_retrieve(lf[711]));
C_trace("ChickenBridge.scm: 524  scheduler-set-time-milliseconds");
f_31884(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 527  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[725],t4);}}}

/* k31877 in time-format in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31879,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5757,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32165 in time-format in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[722]));}

/* sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31978(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_31978r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31978r(t0,t1,t2,t3);}}

static void C_ccall f_31978r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31980,a[2]=t2,a[3]=((C_word)li520),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32100,a[2]=t4,a[3]=((C_word)li521),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32105,a[2]=t5,a[3]=((C_word)li522),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start58125833");
t7=t6;
f_32105(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id58135831");
t9=t5;
f_32100(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body58105815");
t11=t4;
f_31980(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[718]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[719],t10);}}}}

/* def-start5812 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32105(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32105,NULL,2,t0,t1);}
C_trace("def-id58135831");
t2=((C_word*)t0)[2];
f_32100(t2,t1,C_fix(0));}

/* def-id5813 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32100(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32100,NULL,3,t0,t1,t2);}
C_trace("body58105815");
t3=((C_word*)t0)[2];
f_31980(t3,t1,t2,C_fix(-1));}

/* body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31980(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31980,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31982,a[2]=t4,a[3]=((C_word)li517),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32010,a[2]=t5,a[3]=((C_word)li518),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32040,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32051,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li519),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_32051(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32087,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32099,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 504  nextstart");
t11=t6;
f_31982(t11,t10);}}

/* k32097 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32099,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32095,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 504  nextid");
t4=((C_word*)t0)[2];
f_32010(t4,t3);}

/* k32093 in k32097 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 504  scheduler-sprout");
f_31893(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32085 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_32040(2,t2,((C_word*)t0)[2]);}

/* do5824 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32051(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32051,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32061,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32084,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 501  nextstart");
t6=((C_word*)t0)[2];
f_31982(t6,t5);}}

/* k32082 in do5824 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32084,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32080,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 502  nextid");
t4=((C_word*)t0)[2];
f_32010(t4,t3);}

/* k32078 in k32082 in do5824 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 501  scheduler-sprout");
f_31893(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32059 in do5824 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32051(t3,((C_word*)t0)[2],t2);}

/* k32038 in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_32040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 508  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_32010(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32010,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5810 in sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31982(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31982,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31959(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31959,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31964,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31964 in load-sal-file in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31964(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31964,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31969,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_31969(2,t4,C_SCHEME_FALSE);}}

/* k31967 */
static void C_ccall f_31969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5801(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31937(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31937,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31941,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k31939 in scheduler-stop in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31941,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5790,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31893(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31893,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31897,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k31895 in scheduler-sprout in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31897,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5770,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31884(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31884,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31888,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[714]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k31886 in scheduler-set-time-milliseconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31888,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5762,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31872,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5754(t2));}

/* current-time-milliseconds in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31869,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5751(t2));}

/* print-error in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31855(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31855,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31860,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_31860(2,t4,C_SCHEME_FALSE);}}

/* k31858 in print-error in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5746(C_SCHEME_UNDEFINED,t1));}

/* print-message in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31841(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31841,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31846,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_31846(2,t4,C_SCHEME_FALSE);}}

/* k31844 in print-message in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5740(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31651(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31651,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31705,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31712,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 397  make-string");
t5=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31712,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31714,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li503),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_31714(t5,((C_word*)t0)[2],lf[710],t1,C_fix(0));}

/* do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31714(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31714,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31724,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 400  printf");
t6=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_31724(2,t6,C_SCHEME_UNDEFINED);}}}

/* k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31727,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31741,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31743,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li502),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_31743(t7,t3,C_fix(0));}

/* do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31743(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31743,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31763,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31698,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 389  floor");
t14=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 405  string-append");
t3=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[709]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31780,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31783,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 407  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k31781 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31783,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31780(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 408  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k31823 in k31781 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31825,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_31780(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31795,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 410  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k31793 in k31823 in k31781 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31795,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31780(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_31780(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k31778 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31780(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31780,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_31743(t4,((C_word*)t0)[2],t3);}

/* k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31698,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31663,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 390  modulo");
t5=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k31661 in k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31663,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31690,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 391  floor");
t5=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k31688 in k31661 in k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31690,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 392  modulo");
t5=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k31669 in k31688 in k31661 in k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31671,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 393  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k31676 in k31669 in k31688 in k31661 in k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31682,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k31680 in k31676 in k31669 in k31688 in k31661 in k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31686,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k31684 in k31680 in k31676 in k31669 in k31688 in k31661 in k31696 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 393  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[706],((C_word*)t0)[3],lf[707],((C_word*)t0)[2],lf[708],t1);}

/* k31761 in do5728 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 404  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[704],t1,lf[705]);}

/* k31739 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 401  printf");
t2=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31725 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 413  printf");
t3=C_retrieve(lf[402]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k31728 in k31725 in k31722 in do5714 in k31710 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31730,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_31714(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k31703 in cm-logo in k31647 in k31644 in k31641 in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 414  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31639,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_31639 in cs:clear in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31639,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5706(C_SCHEME_UNDEFINED));}

/* cs:f in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31577(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_31577r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31577r(t0,t1,t2);}}

static void C_ccall f_31577r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31581,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_31581(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31590,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31610,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_31610(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_31610(t8,C_SCHEME_FALSE);}}}

/* k31608 in cs:f in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31610(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31590(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31590(t2,C_SCHEME_UNDEFINED);}}

/* k31588 in cs:f in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31590(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31590,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31598,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_31598 in k31588 in cs:f in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31598(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31598,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5699(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k31579 in cs:f in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31520(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_31520r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31520r(t0,t1,t2);}}

static void C_ccall f_31520r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31524,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_31524(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31533,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31553,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_31553(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_31553(t8,C_SCHEME_FALSE);}}}

/* k31551 in cs:i in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31553(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31533(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31533(t2,C_SCHEME_UNDEFINED);}}

/* k31531 in cs:i in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_31533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31533,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31541,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_31541 in k31531 in cs:i in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31541(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31541,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5688(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k31522 in cs:i in k31516 in k31513 in k31510 in k31507 in k31504 in k31501 in k31498 in k31495 in k31492 in k31489 in k31486 in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31430(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31430,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31442,a[2]=t2,a[3]=((C_word)li492),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31479,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31484,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_31484 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31484(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31484,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5632(C_SCHEME_UNDEFINED,t2));}

/* f_31479 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31479(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31479,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5623(C_SCHEME_UNDEFINED,t2));}

/* a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31442(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31442,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31448,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li491),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-current-continuation");
t4=*((C_word*)lf[699]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31448(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31448,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31454,a[2]=t2,a[3]=((C_word)li489),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li490),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  with-exception-handler");
t5=C_retrieve(lf[698]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a31473 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31478,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k31476 in a31473 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a31453 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31454,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31458,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31465,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31469,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31472,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  condition-property-accessor");
t7=C_retrieve(lf[695]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[696],lf[697]);}

/* k31470 in a31453 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31467 in a31453 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[694],t1);}

/* k31463 in a31453 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[424]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31456 in a31453 in a31447 in a31441 in mp:inhook in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31415,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31420,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31420 in mp:mm in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31420(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31420,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5616(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31387(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31387,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31392,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_31392 in mp:bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31392,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5607(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31359,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31364,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_31364 in mp:press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31364(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31364,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5592(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31331,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31336,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_31336 in mp:prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31336,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5577(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31303,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31308,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_31308 in mp:ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31308,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5562(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31275,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31280,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_31280 in mp:touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31280,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5546(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31247(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31247,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31252,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_31252 in mp:on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31252(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31252,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5530(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31219,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31224,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_31224 in mp:off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31224,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5514(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31191,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31196,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_31196 in mp:midi in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31196,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5499(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31163,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31168,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_31168 in mp:note in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31168(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31168,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5482(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31140(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31140,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31144,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31145,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_31145 in mm:num-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31145(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31145,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5464(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31142 in mm:num-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31121(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31121,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31126,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_31126 in mm:num in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31126(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31126,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5453(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31066,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31070,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31073,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  mm:type?");
t6=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k31071 in mm:val-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_31076(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 380  mm:type?");
t3=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k31074 in k31071 in mm:val-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31076,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31080,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31100,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[680]));}}

/* f_31100 in k31074 in k31071 in mm:val-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31100(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31100,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5442(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_31080 in k31074 in k31071 in mm:val-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31080,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5432(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31068 in mm:val-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31019(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31019,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31026,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  mm:type?");
t4=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k31024 in mm:val in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_31029(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 380  mm:type?");
t3=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k31027 in k31024 in mm:val in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31029,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31033,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31049,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_31049 in k31027 in k31024 in mm:val in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31049,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5419(C_SCHEME_UNDEFINED,t4,t5));}

/* f_31033 in k31027 in k31024 in mm:val in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31033,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5411(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30996,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31000,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31001,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_31001 in mm:vel-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31001,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5398(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k30998 in mm:vel-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_31000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30977(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30977,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30982,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_30982 in mm:vel in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30982,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5387(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30954(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30954,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30958,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30959,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_30959 in mm:key-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30959(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30959,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5376(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k30956 in mm:key-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30935(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30935,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30940,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_30940 in mm:key in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30940,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5365(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30916(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30916,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30920,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30921,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_30921 in mm:chan-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30921,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5355(C_SCHEME_UNDEFINED,t4,t5));}

/* k30918 in mm:chan-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30901(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30901,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30906,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_30906 in mm:chan in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30906(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30906,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5346(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30882,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30886,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30887,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_30887 in mm:time-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30887,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5337(C_SCHEME_UNDEFINED,t4,t5));}

/* k30884 in mm:time-set! in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30867(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30867,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30872,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_30872 in mm:time in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30872,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5327(t3,t4));}

/* mm:copy in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30852(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30852,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30857,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_30857 in mm:copy in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30857(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30857,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5319(t3,t4));}

/* mm:free in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30834(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30834,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30838,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30842,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_30842 in mm:free in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30842(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30842,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5311(C_SCHEME_UNDEFINED,t3));}

/* k30836 in mm:free in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30364(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30364r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30364r(t0,t1,t2);}}

static void C_ccall f_30364r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30368,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30368(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[649]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30693,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[649]);}
else{
t23=t22;
f_30693(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[657]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30728,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[657]);}
else{
t24=t23;
f_30728(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30763,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[652]);}
else{
t25=t24;
f_30763(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30792,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30792(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30790 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30792,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30807,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30805 in k30790 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30799(2,t2,C_SCHEME_UNDEFINED);}}

/* k30797 in k30790 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30368(t5,t4);}

/* k30761 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30765 in k30761 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30368(t7,t6);}

/* k30726 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30730 in k30726 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30368(t7,t6);}

/* k30691 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30697(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30695 in k30691 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30368(t7,t6);}

/* k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_30368(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30368,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30371(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30558,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_30558(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30593,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[657]);}
else{
t7=t6;
f_30593(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30628,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_30628(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30657,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30657(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30655 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30657,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30672,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30670 in k30655 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30664(2,t2,C_SCHEME_UNDEFINED);}}

/* k30662 in k30655 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30371(t5,t4);}

/* k30626 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30630 in k30626 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30371(t7,t6);}

/* k30591 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30595 in k30591 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30371(t7,t6);}

/* k30556 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30562(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30560 in k30556 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30371(t7,t6);}

/* k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_30371(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30371,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30374,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30374(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30423,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_30423(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30458,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[657]);}
else{
t7=t6;
f_30458(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30493,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_30493(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30522,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30522(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30520 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30522,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30537,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30535 in k30520 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30529(2,t2,C_SCHEME_UNDEFINED);}}

/* k30527 in k30520 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30374(t5,t4);}

/* k30491 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30495 in k30491 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k30456 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30460 in k30456 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k30421 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30427(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30425 in k30421 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30374(t7,t6);}

/* k30372 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_30374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30374,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30377,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30377(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30375 in k30372 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30381,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30381 in k30375 in k30372 in k30369 in k30366 in mm:make-bend in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30381,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5288(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30345(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30345,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30350,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_30350 in mm:press? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30350,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5209(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29894(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_29894r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29894r(t0,t1,t2);}}

static void C_ccall f_29894r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29898,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_29898(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[649]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30223,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[649]);}
else{
t23=t22;
f_30223(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[657]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30258,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[657]);}
else{
t24=t23;
f_30258(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30293,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[652]);}
else{
t25=t24;
f_30293(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30322,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30322(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30320 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30322,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30337,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30335 in k30320 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30329(2,t2,C_SCHEME_UNDEFINED);}}

/* k30327 in k30320 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29898(t5,t4);}

/* k30291 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30297(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30295 in k30291 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29898(t7,t6);}

/* k30256 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30262(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30260 in k30256 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29898(t7,t6);}

/* k30221 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30227,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30227(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30225 in k30221 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29898(t7,t6);}

/* k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_29898(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29898,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29901(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30088,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_30088(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30123,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[657]);}
else{
t7=t6;
f_30123(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30158,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_30158(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30187,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30187(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30185 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30187,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30202,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30200 in k30185 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30194(2,t2,C_SCHEME_UNDEFINED);}}

/* k30192 in k30185 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29901(t5,t4);}

/* k30156 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30162(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30160 in k30156 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29901(t7,t6);}

/* k30121 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30127(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30125 in k30121 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29901(t7,t6);}

/* k30086 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30092(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30090 in k30086 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29901(t7,t6);}

/* k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_29901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29901,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29904,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29904(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29953,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_29953(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29988,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[657]);}
else{
t7=t6;
f_29988(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30023,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_30023(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30052,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30052(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30050 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30052,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30067,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30065 in k30050 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30059(2,t2,C_SCHEME_UNDEFINED);}}

/* k30057 in k30050 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29904(t5,t4);}

/* k30021 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30027(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30025 in k30021 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_30027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29904(t7,t6);}

/* k29986 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29992,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29992(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29990 in k29986 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29904(t7,t6);}

/* k29951 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29957(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29955 in k29951 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29904(t7,t6);}

/* k29902 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_29904(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29904,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29907,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29907(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29905 in k29902 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29911,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_29911 in k29905 in k29902 in k29899 in k29896 in mm:make-press in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29911(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29911,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5194(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29875(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29875,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29880,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_29880 in mm:prog? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29880,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5115(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29424(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_29424r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29424r(t0,t1,t2);}}

static void C_ccall f_29424r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29428,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_29428(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[649]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29753,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[649]);}
else{
t23=t22;
f_29753(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[657]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29788,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[657]);}
else{
t24=t23;
f_29788(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29823,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[652]);}
else{
t25=t24;
f_29823(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29852,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_29852(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k29850 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29852,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29867,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29865 in k29850 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29859(2,t2,C_SCHEME_UNDEFINED);}}

/* k29857 in k29850 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29428(t5,t4);}

/* k29821 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29827,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29827(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29825 in k29821 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29428(t7,t6);}

/* k29786 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29792(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29790 in k29786 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29428(t7,t6);}

/* k29751 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29757(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29755 in k29751 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29428(t7,t6);}

/* k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_29428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29428,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29431(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29618,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_29618(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29653,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[657]);}
else{
t7=t6;
f_29653(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29688,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_29688(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29717,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29717(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29715 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29717,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29732,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29730 in k29715 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29724(2,t2,C_SCHEME_UNDEFINED);}}

/* k29722 in k29715 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29431(t5,t4);}

/* k29686 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29692(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29690 in k29686 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29431(t7,t6);}

/* k29651 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29657,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29657(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29655 in k29651 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29431(t7,t6);}

/* k29616 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29622(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29620 in k29616 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29431(t7,t6);}

/* k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_29431(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29431,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29434,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29434(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29483,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_29483(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29518,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[657]);}
else{
t7=t6;
f_29518(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29553,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_29553(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29582,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29582(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29580 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29582,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29597,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29595 in k29580 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29589(2,t2,C_SCHEME_UNDEFINED);}}

/* k29587 in k29580 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29434(t5,t4);}

/* k29551 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29557,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29557(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29555 in k29551 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29434(t7,t6);}

/* k29516 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29522(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29520 in k29516 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29434(t7,t6);}

/* k29481 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29485 in k29481 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29434(t7,t6);}

/* k29432 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_29434(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29434,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29437,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29437(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29435 in k29432 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29441,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_29441 in k29435 in k29432 in k29429 in k29426 in mm:make-prog in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29441,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5100(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29405(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29405,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29410,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_29410 in mm:ctrl? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29410(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29410,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5021(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28676(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_28676r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28676r(t0,t1,t2);}}

static void C_ccall f_28676r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28680,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_28680(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[649]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29248,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[649]);}
else{
t27=t26;
f_29248(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[660]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29283,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[660]);}
else{
t28=t27;
f_29283(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[657]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29318,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[657]);}
else{
t29=t28;
f_29318(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29353,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[652]);}
else{
t30=t29;
f_29353(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29382,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_29382(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k29380 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29382,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29397,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29395 in k29380 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29389(2,t2,C_SCHEME_UNDEFINED);}}

/* k29387 in k29380 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28680(t5,t4);}

/* k29351 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29357(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29355 in k29351 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28680(t7,t6);}

/* k29316 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29322,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29322(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29320 in k29316 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28680(t7,t6);}

/* k29281 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29287(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29285 in k29281 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28680(t7,t6);}

/* k29246 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29252(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29250 in k29246 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28680(t7,t6);}

/* k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_28680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28680,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28683(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29078,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_29078(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29113,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_29113(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29148,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[657]);}
else{
t8=t7;
f_29148(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29183,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_29183(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29212,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29212(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29210 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29212,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29219,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29227,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29225 in k29210 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29219(2,t2,C_SCHEME_UNDEFINED);}}

/* k29217 in k29210 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28683(t5,t4);}

/* k29181 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29187,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29187(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29185 in k29181 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28683(t7,t6);}

/* k29146 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29152,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29152(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29150 in k29146 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28683(t7,t6);}

/* k29111 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29117(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29115 in k29111 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28683(t7,t6);}

/* k29076 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29082(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29080 in k29076 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28683(t7,t6);}

/* k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_28683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28683,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28686(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28908,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_28908(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28943,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_28943(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28978,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[657]);}
else{
t8=t7;
f_28978(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29013,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_29013(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29042,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29042(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29040 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29042,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29057,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29055 in k29040 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29049(2,t2,C_SCHEME_UNDEFINED);}}

/* k29047 in k29040 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28686(t5,t4);}

/* k29011 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29017(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29015 in k29011 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_29017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28686(t7,t6);}

/* k28976 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28982,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28982(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28980 in k28976 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28686(t7,t6);}

/* k28941 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28947(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28945 in k28941 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28686(t7,t6);}

/* k28906 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28912(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28910 in k28906 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28686(t7,t6);}

/* k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_28686(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28686,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28689,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28689(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28738,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_28738(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28773,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_28773(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28808,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[657]);}
else{
t8=t7;
f_28808(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28843,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_28843(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28872,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28872(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28870 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28872,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28887,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28885 in k28870 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28879(2,t2,C_SCHEME_UNDEFINED);}}

/* k28877 in k28870 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28689(t5,t4);}

/* k28841 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28847(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28845 in k28841 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28689(t7,t6);}

/* k28806 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28812(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28810 in k28806 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28689(t7,t6);}

/* k28771 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28777(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28775 in k28771 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28689(t7,t6);}

/* k28736 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28742,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28742(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28740 in k28736 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28689(t7,t6);}

/* k28687 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_28689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28689,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28692,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28692(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28690 in k28687 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28696,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_28696 in k28690 in k28687 in k28684 in k28681 in k28678 in mm:make-ctrl in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28696(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_28696,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5005(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28657(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28657,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28662,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_28662 in mm:touch? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28662,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4889(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27928(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_27928r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27928r(t0,t1,t2);}}

static void C_ccall f_27928r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27932,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_27932(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[649]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28500,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[649]);}
else{
t27=t26;
f_28500(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[650]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28535,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[650]);}
else{
t28=t27;
f_28535(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[657]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28570,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[657]);}
else{
t29=t28;
f_28570(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28605,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[652]);}
else{
t30=t29;
f_28605(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28634,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_28634(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k28632 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28634,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28641,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28649,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28647 in k28632 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28641(2,t2,C_SCHEME_UNDEFINED);}}

/* k28639 in k28632 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27932(t5,t4);}

/* k28603 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28609(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28607 in k28603 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27932(t7,t6);}

/* k28568 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28574(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28572 in k28568 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27932(t7,t6);}

/* k28533 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28539,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28539(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28537 in k28533 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27932(t7,t6);}

/* k28498 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28504(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28502 in k28498 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27932(t7,t6);}

/* k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27932(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27932,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27935,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_27935(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28330,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_28330(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28365,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_28365(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28400,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[657]);}
else{
t8=t7;
f_28400(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28435,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_28435(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28464,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28464(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28462 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28464,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28479,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28477 in k28462 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28471(2,t2,C_SCHEME_UNDEFINED);}}

/* k28469 in k28462 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27935(t5,t4);}

/* k28433 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28439(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28437 in k28433 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27935(t7,t6);}

/* k28398 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28404(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28402 in k28398 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27935(t7,t6);}

/* k28363 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28369(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28367 in k28363 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27935(t7,t6);}

/* k28328 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28332 in k28328 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27935(t7,t6);}

/* k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27935(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27935,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_27938(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28160,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_28160(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28195,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_28195(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28230,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[657]);}
else{
t8=t7;
f_28230(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28265,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_28265(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28294,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28294(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28292 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28294,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28309,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28307 in k28292 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28301(2,t2,C_SCHEME_UNDEFINED);}}

/* k28299 in k28292 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27938(t5,t4);}

/* k28263 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28269(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28267 in k28263 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27938(t7,t6);}

/* k28228 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28232 in k28228 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27938(t7,t6);}

/* k28193 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28197 in k28193 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27938(t7,t6);}

/* k28158 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28164(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28162 in k28158 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27938(t7,t6);}

/* k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27938(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27938,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27941,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_27941(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27990,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_27990(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28025,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_28025(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[657]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28060,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[657]);}
else{
t8=t7;
f_28060(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28095,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_28095(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28124,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28124(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28122 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28124,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28139,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28137 in k28122 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28131(2,t2,C_SCHEME_UNDEFINED);}}

/* k28129 in k28122 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27941(t5,t4);}

/* k28093 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28099(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28097 in k28093 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27941(t7,t6);}

/* k28058 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28064(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28062 in k28058 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27941(t7,t6);}

/* k28023 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28029(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28027 in k28023 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_28029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27941(t7,t6);}

/* k27988 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27994(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27992 in k27988 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27941(t7,t6);}

/* k27939 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27941(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27941,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27944,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27944(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27942 in k27939 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27948,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_27948 in k27942 in k27939 in k27936 in k27933 in k27930 in mm:make-touch in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27948,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4873(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27909,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27914,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_27914 in mm:off? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27914,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4757(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27458(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_27458r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27458r(t0,t1,t2);}}

static void C_ccall f_27458r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27462,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_27462(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[649]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27787,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[649]);}
else{
t23=t22;
f_27787(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[650]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27822,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[650]);}
else{
t24=t23;
f_27822(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27857,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[652]);}
else{
t25=t24;
f_27857(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27886,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_27886(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k27884 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27886,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27901,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27899 in k27884 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27893(2,t2,C_SCHEME_UNDEFINED);}}

/* k27891 in k27884 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27462(t5,t4);}

/* k27855 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27859 in k27855 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27462(t7,t6);}

/* k27820 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27826(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27824 in k27820 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27462(t7,t6);}

/* k27785 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27791(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27789 in k27785 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27462(t7,t6);}

/* k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27462,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27465(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27652,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_27652(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27687,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_27687(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27722,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_27722(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27751,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27751(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27749 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27751,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27766,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27764 in k27749 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27758(2,t2,C_SCHEME_UNDEFINED);}}

/* k27756 in k27749 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27465(t5,t4);}

/* k27720 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27724 in k27720 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27465(t7,t6);}

/* k27685 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27691(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27689 in k27685 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27465(t7,t6);}

/* k27650 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27656(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27654 in k27650 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27465(t7,t6);}

/* k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27465(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27465,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27468,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27468(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27517,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_27517(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27552,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_27552(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27587,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_27587(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27616,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27616(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27614 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27616,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27631,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27629 in k27614 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27623(2,t2,C_SCHEME_UNDEFINED);}}

/* k27621 in k27614 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27468(t5,t4);}

/* k27585 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27591(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27589 in k27585 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27468(t7,t6);}

/* k27550 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27556(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27554 in k27550 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27468(t7,t6);}

/* k27515 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27521,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27521(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27519 in k27515 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27468(t7,t6);}

/* k27466 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_27468(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27468,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27471,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27471(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27469 in k27466 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27475,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_27475 in k27469 in k27466 in k27463 in k27460 in mm:make-off in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27475(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27475,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4742(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27439(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27439,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27444,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_27444 in mm:on? in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27444,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4663(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26710(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_26710r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26710r(t0,t1,t2);}}

static void C_ccall f_26710r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26714,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_26714(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[649]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27282,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[649]);}
else{
t27=t26;
f_27282(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[650]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27317,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[650]);}
else{
t28=t27;
f_27317(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[651]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27352,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[651]);}
else{
t29=t28;
f_27352(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27387,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[652]);}
else{
t30=t29;
f_27387(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27416,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_27416(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k27414 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27416,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27431,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27429 in k27414 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27423(2,t2,C_SCHEME_UNDEFINED);}}

/* k27421 in k27414 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26714(t5,t4);}

/* k27385 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27389 in k27385 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26714(t7,t6);}

/* k27350 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27354 in k27350 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26714(t7,t6);}

/* k27315 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27321(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27319 in k27315 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26714(t7,t6);}

/* k27280 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27286(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27284 in k27280 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26714(t7,t6);}

/* k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26714(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26714,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26717(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27112,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_27112(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27147,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_27147(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27182,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[651]);}
else{
t8=t7;
f_27182(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27217,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_27217(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27246,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27246(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27244 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27246,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27261,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27259 in k27244 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27253(2,t2,C_SCHEME_UNDEFINED);}}

/* k27251 in k27244 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26717(t5,t4);}

/* k27215 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27221(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27219 in k27215 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26717(t7,t6);}

/* k27180 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27186(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27184 in k27180 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26717(t7,t6);}

/* k27145 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27151(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27149 in k27145 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26717(t7,t6);}

/* k27110 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27116(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27114 in k27110 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26717(t7,t6);}

/* k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26717,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26720(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26942,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_26942(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26977,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_26977(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27012,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[651]);}
else{
t8=t7;
f_27012(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27047,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_27047(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27076,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27076(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27074 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27076,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27091,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27089 in k27074 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27083(2,t2,C_SCHEME_UNDEFINED);}}

/* k27081 in k27074 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26720(t5,t4);}

/* k27045 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27051,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27051(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27049 in k27045 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26720(t7,t6);}

/* k27010 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27016(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27014 in k27010 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_27016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26720(t7,t6);}

/* k26975 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26981(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26979 in k26975 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26720(t7,t6);}

/* k26940 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26946(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26944 in k26940 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26720(t7,t6);}

/* k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26720(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26720,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26723,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26723(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[649]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26772,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[649]);}
else{
t6=t5;
f_26772(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26807,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[650]);}
else{
t7=t6;
f_26807(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26842,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[651]);}
else{
t8=t7;
f_26842(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26877,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[652]);}
else{
t9=t8;
f_26877(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26906,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_26906(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k26904 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26906,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26921,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26919 in k26904 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26913(2,t2,C_SCHEME_UNDEFINED);}}

/* k26911 in k26904 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26723(t5,t4);}

/* k26875 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26881(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26879 in k26875 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26723(t7,t6);}

/* k26840 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26846(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26844 in k26840 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26723(t7,t6);}

/* k26805 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26811(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26809 in k26805 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26723(t7,t6);}

/* k26770 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26776(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26774 in k26770 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26723(t7,t6);}

/* k26721 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26723(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26723,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26726,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26726(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26724 in k26721 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26730,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_26730 in k26724 in k26721 in k26718 in k26715 in k26712 in mm:make-on in k26564 in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26730(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26730,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4647(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26372(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26372,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26380,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26212,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_26212(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_26212(t12,(C_word)C_i_not(t11));}}

/* k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26212(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26212,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26219,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(t2,(C_word)C_a_i_list(&a,4,lf[468],lf[638],lf[473],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26220,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26245,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26247,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li411),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_26247(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26247(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26247,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[385]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_26257(t16,t13);}
else{
t13=t10;
f_26257(t13,C_SCHEME_UNDEFINED);}}}

/* k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26257(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26257,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t2,t3,((C_word*)t0)[3]);}

/* k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26261,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_26264(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[643],t5,lf[644]));}}

/* k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li409),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26325,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li410),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26324 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26325(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26325,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26315 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26316,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k26265 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26270,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26286,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  op-type?");
f_26220(t3,((C_word*)((C_word*)t0)[6])[1],lf[629]);}

/* k26284 in k26265 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26286,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_26270(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  op-type?");
f_26220(t2,((C_word*)((C_word*)t0)[6])[1],lf[642]);}}

/* k26291 in k26284 in k26265 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26293,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_26270(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[639],t2,lf[640],t3,lf[641]));}}
else{
t2=((C_word*)t0)[5];
f_26270(2,t2,C_SCHEME_UNDEFINED);}}

/* k26268 in k26265 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26270,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k26274 in k26268 in k26265 in k26262 in k26259 in k26255 in do4445 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_26247(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26243 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_26380(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26220(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26220,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k26217 in k26210 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26219,2,t0,t1);}
t2=((C_word*)t0)[2];
f_26380(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k26378 in parse-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26380(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23307(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25958,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[632],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25980,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[635],t8,lf[636]));}
else{
t19=t17;
f_25980(2,t19,C_SCHEME_UNDEFINED);}}

/* k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25980,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[634]));}
else{
t9=t8;
f_25995(2,t9,C_SCHEME_UNDEFINED);}}

/* k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[387],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_25998(t6,t5);}
else{
t4=t2;
f_25998(t4,C_SCHEME_UNDEFINED);}}

/* k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25998,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26168,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li405),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26174,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li406),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26173 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26174,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26167 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26168,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parse-then-else-dependents");
f_25827(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_26004(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26150,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23307(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k26148 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26004(t3,t2);}

/* k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26004(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26004,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26007,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  loop-operator-set!");
f_23054(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26143,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[462],"loop-looping");
f_23108(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k26141 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26143,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[411],t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26131,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26014,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_26027(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_26027(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26027,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[633]));}
else{
t5=t4;
f_26034(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_26014(t2,C_SCHEME_UNDEFINED);}}

/* k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26037,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li403),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26104,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li404),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26103 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26104,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26089 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26098,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k26096 in a26089 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  parse-then-else-dependents");
f_25827(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_26040(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26076,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23307(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k26074 in k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26040(t3,t2);}

/* k26038 in k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26040,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[462],"loop-looping");
f_23108(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26067 in k26038 in k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26069,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[411],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23114(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k26044 in k26067 in k26038 in k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23114(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k26047 in k26044 in k26067 in k26038 in k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26053,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23307(t2,lf[20],t3);}

/* k26051 in k26047 in k26044 in k26067 in k26038 in k26035 in k26032 in k26025 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26014(t3,t2);}

/* k26012 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_26014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26014,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23114(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k26015 in k26012 in k26129 in k26005 in k26002 in k25999 in k25996 in k25993 in k25978 in parse-conditional in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_26017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25827(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25827,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25831,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25836,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li401),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_25836(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25836(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25836,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t12,t10,t11);}}

/* k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_25790(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[629]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[630]);
t8=t2;
f_25790(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_25790(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_25790(t3,C_SCHEME_FALSE);}}

/* k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25790(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25790,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_25853(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[627],t6,lf[628]));}}

/* k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25856,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25926,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li399),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25939,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li400),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a25938 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25939,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a25925 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25934,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25932 in a25925 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k25854 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25860,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k25858 in k25854 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25860,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25865,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_25865(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[385]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[626]));}
else{
t10=t5;
f_25865(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_25865(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25903,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t10,t11,((C_word*)t0)[3]);}}}}

/* k25901 in k25858 in k25854 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_25865(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_25865(2,t2,C_SCHEME_UNDEFINED);}}

/* k25863 in k25858 in k25854 in k25851 in k25788 in k25782 in do4378 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_25836(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25829 in parse-then-else-dependents in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25726,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25733,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[623],t13,lf[624]));}
else{
t13=t11;
f_25733(2,t13,C_SCHEME_UNDEFINED);}}

/* k25731 in parse-return in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25733,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25764,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k25762 in k25731 in parse-return in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25764,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25760,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k25758 in k25762 in k25731 in parse-return in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25760,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[468],lf[609],lf[473],t2));}

/* k25750 in k25762 in k25731 in parse-return in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25635,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25642,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[620],t15,lf[621]));}
else{
t15=t13;
f_25642(2,t15,C_SCHEME_UNDEFINED);}}

/* k25640 in parse-thereis in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25642,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k25708 in k25640 in parse-thereis in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25710,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25653,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[617]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_25653(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[618]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[387],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_25653(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[619]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_25653(t9,t8);}
else{
t8=t4;
f_25653(t8,C_SCHEME_UNDEFINED);}}}}

/* k25651 in k25708 in k25640 in parse-thereis in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25653(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25653,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25664,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25680,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k25678 in k25651 in k25708 in k25640 in parse-thereis in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25680,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[468],lf[617],lf[473],t3,lf[476],t4));}

/* k25662 in k25651 in k25708 in k25640 in parse-thereis in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25569(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25569,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25580,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[614],t7,lf[615]));}
else{
t13=t12;
f_25580(2,t13,C_SCHEME_UNDEFINED);}}

/* k25578 in parse-while-until in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[612]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_25583(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[613]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[387],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_25583(t10,t9);}
else{
t5=t2;
f_25583(t5,C_SCHEME_UNDEFINED);}}}

/* k25581 in k25578 in parse-while-until in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25583(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25583,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25590,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[611]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(t2,(C_word)C_a_i_list(&a,4,lf[468],((C_word*)t0)[2],lf[473],t4));}

/* k25588 in k25581 in k25578 in parse-while-until in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25563(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25563,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[609],t2));}

/* parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25017,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25026,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25031,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25036,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25048,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[606],t7,lf[607]));}
else{
t30=t29;
f_25048(2,t30,C_SCHEME_UNDEFINED);}}

/* k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25048,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_25059(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[602]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25512,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[605]));}
else{
t11=t9;
f_25512(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_25059(2,t9,C_SCHEME_UNDEFINED);}}}

/* k25510 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_23384(t2,t3);}

/* k25516 in k25510 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25518,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_25059(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[603],t2,lf[604]));}}

/* k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_25063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24944,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li393),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_24944(t9,t2,C_SCHEME_FALSE);}

/* do4200 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24944(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24944,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24958,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24969,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  loop-collectors");
t9=C_retrieve2(lf[459],"loop-collectors");
f_23072(3,t9,t7,t8);}}

/* k24967 in do4200 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24969,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24904,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li392),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_24904(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4192 in k24967 in do4200 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24904(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24904,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24917,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_24917(t12,t11);}
else{
t10=t6;
f_24917(t10,C_SCHEME_UNDEFINED);}}}

/* k24915 in do4192 in k24967 in do4200 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_24904(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24956 in do4200 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_24944(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25063,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_25066,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25496,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25500,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-type");
f_25031(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_25066(2,t6,t5);}}

/* k25498 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[599];
t3=lf[600];
t4=lf[601];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_25496(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_25496(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_25496(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_25496(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k25494 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25496,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_25066(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25492,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  collector-type");
f_25031(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25490 in k25494 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25492,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[596],t1,lf[597],((C_word*)t0)[2],lf[598]));}

/* k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25069,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[581]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[582]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25112,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25150,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_25150(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 379  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[583]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25179,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_25036(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[584]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[585]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[587]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25286,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_25286(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[590]);
t10=t8;
f_25286(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[595])));}}}}

/* k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25286(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25286,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25289,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25402,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25460,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t9,((C_word*)((C_word*)t0)[13])[1],lf[594]);}
else{
t9=t8;
f_25402(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25395,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_25036(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_25069(t2,C_SCHEME_UNDEFINED);}}

/* k25393 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_25289(t6,t5);}

/* k25458 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25460,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25402(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k25400 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25402,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[593]);}

/* k25404 in k25400 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25406,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[592]);}

/* k25408 in k25404 in k25400 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25410,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,((C_word*)((C_word*)t0)[11])[1],lf[591]);}

/* k25450 in k25408 in k25404 in k25400 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25452,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k25446 in k25450 in k25408 in k25404 in k25400 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25448,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25426,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_25026(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k25424 in k25446 in k25450 in k25408 in k25404 in k25400 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25426,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25289(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_25289(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25287 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25289(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25289,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25292,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[588]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[589],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[320],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_25292(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[590]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[588],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[589],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_25292(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[589],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[320],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_25292(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k25290 in k25287 in k25284 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25292(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25292,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_25069(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_25069(t2,C_SCHEME_UNDEFINED);}}

/* k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25191,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[584]);
t3=(C_truep(t2)?lf[339]:lf[414]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25197,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25241,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_25241(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 379  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[586]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25274,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_25036(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k25272 in k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25197(t3,t2);}

/* k25239 in k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25241,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k25265 in k25239 in k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25267,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25249,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_25026(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k25247 in k25265 in k25239 in k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25249,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25197(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[386],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_25197(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25195 in k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25197(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25197,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k25235 in k25195 in k25189 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25237,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[387],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[386],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[411],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_25069(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k25177 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25112(t3,t2);}

/* k25148 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25150,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25172,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k25170 in k25148 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25172,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25158,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_25026(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k25156 in k25170 in k25148 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25158,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25112(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_25112(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25110 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25112(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25112,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[581]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25069(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_25069(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k25067 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25069(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25069,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25076,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25078 in k25067 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25084,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25082 in k25078 in k25067 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25088,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25086 in k25082 in k25078 in k25067 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25092,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25090 in k25086 in k25082 in k25078 in k25067 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25092,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[468],((C_word*)t0)[5],lf[469],((C_word*)t0)[4],lf[471],((C_word*)t0)[3],lf[473],((C_word*)t0)[2],lf[476],t1,lf[470],t2,lf[472],C_SCHEME_END_OF_LIST));}

/* k25074 in k25067 in k25064 in k25061 in k25057 in k25046 in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_25076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25036(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25036,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25031(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25031,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_25026(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25026,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24858(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24858,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24869,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[578],t6,lf[579]));}
else{
t12=t11;
f_24869(2,t12,C_SCHEME_UNDEFINED);}}

/* k24867 in parse-initially in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24869,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24884,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(t6,(C_word)C_a_i_list(&a,4,lf[468],((C_word*)t0)[2],lf[471],t7));}

/* k24882 in k24867 in parse-initially in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24820,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24831,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[575],t6,lf[576]));}
else{
t12=t11;
f_24831(2,t12,C_SCHEME_UNDEFINED);}}

/* k24829 in parse-finally in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24831,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24846,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(t6,(C_word)C_a_i_list(&a,4,lf[468],((C_word*)t0)[2],lf[475],t7));}

/* k24844 in k24829 in parse-finally in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24753,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24764,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24773,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li385),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_24773(t16,t12);}

/* do4149 in parse-do in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24773(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24773,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_24783(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t3,t4,((C_word*)t0)[5]);}}

/* k24781 in do4149 in parse-do in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24783,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[572],((C_word*)t0)[4],lf[573]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24796,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_24773(t7,((C_word*)t0)[7]);}}

/* k24794 in k24781 in do4149 in parse-do in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k24762 in parse-do in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24771,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(t2,(C_word)C_a_i_list(&a,4,lf[468],((C_word*)t0)[3],lf[473],((C_word*)((C_word*)t0)[2])[1]));}

/* k24769 in k24762 in parse-do in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24560,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24567,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24620,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li383),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_24620(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24620(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24620,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_24630(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t7,t8,((C_word*)t0)[5]);}}

/* k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24630,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24641,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24744,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_23384(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k24742 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24744,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24650,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[562],((C_word*)((C_word*)t0)[10])[1],lf[563]));}
else{
t4=t3;
f_24650(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[385]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24672,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[564]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24701,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24709,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[565]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[550]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[566]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_24641(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[567],((C_word*)((C_word*)t0)[10])[1],lf[568]));}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[569],((C_word*)((C_word*)t0)[10])[1],lf[570]));}}}}}

/* k24707 in k24742 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24709,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24672(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k24699 in k24742 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24701,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24672(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24670 in k24742 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_24641(2,t6,t5);}

/* k24648 in k24742 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24653,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[560],((C_word*)((C_word*)t0)[8])[1],lf[561]));}
else{
t3=t2;
f_24653(2,t3,C_SCHEME_UNDEFINED);}}

/* k24651 in k24648 in k24742 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_24641(2,t6,t5);}

/* k24639 in k24628 in do4105 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_24620(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24570,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[559]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24610,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24618,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_24570(2,t3,C_SCHEME_UNDEFINED);}}}

/* k24616 in k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24618,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24570(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k24608 in k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24610,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24570(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24568 in k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24577,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24581,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24579 in k24568 in k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24585,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k24583 in k24579 in k24568 in k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24585,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[468],lf[558],lf[469],((C_word*)t0)[2],lf[471],t1));}

/* k24575 in k24568 in k24565 in parse-with in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24418,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24428,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24466,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li381),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_24466(t22,t18,C_SCHEME_FALSE);}

/* do4067 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24466(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24466,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24476,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_24476(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t5,t6,((C_word*)t0)[5]);}}

/* k24474 in do4067 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24476,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[556]));}
else{
t7=t6;
f_24487(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24485 in k24474 in do4067 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24487,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24490,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[550]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24499,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[551]));}
else{
t6=t5;
f_24499(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[552]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24524,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[553]));}
else{
t7=t6;
f_24524(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[554],((C_word*)((C_word*)t0)[12])[1],lf[555]));}}}

/* k24522 in k24485 in k24474 in do4067 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24524,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_24490(2,t10,t9);}

/* k24497 in k24485 in k24474 in do4067 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24499,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_24490(2,t8,t7);}

/* k24488 in k24485 in k24474 in do4067 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24466(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24426 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24435,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24464,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k24462 in k24426 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24464,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[468],lf[498],lf[469],t2,lf[471],t3,lf[473],t4,lf[474],t5));}

/* k24433 in k24426 in parse-general-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24067,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24074,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[548]);}

/* k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24074,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24080,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24308,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li379),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_24308(t25,t21,C_SCHEME_FALSE);}

/* do4000 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24308(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24308,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24318,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_24318(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t5,t6,((C_word*)t0)[4]);}}

/* k24316 in do4000 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24318,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[547]));}
else{
t7=t6;
f_24329(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24327 in k24316 in do4000 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24329,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24332,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[537]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24341,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_24341(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[546]);
if(C_truep(t6)){
t7=t5;
f_24341(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[531]);
t8=t5;
f_24341(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[536])));}}}

/* k24339 in k24327 in k24316 in do4000 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24341(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24341,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24344,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[539],((C_word*)((C_word*)t0)[9])[1],lf[540],((C_word*)((C_word*)t0)[10])[1],lf[541]));}
else{
t3=t2;
f_24344(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[522]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[542]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[531]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[543]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_24332(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[544],((C_word*)((C_word*)t0)[9])[1],lf[545]));}}}

/* k24342 in k24339 in k24327 in k24316 in do4000 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_24332(2,t7,t6);}

/* k24330 in k24327 in k24316 in do4000 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24308(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24306,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24302,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24091,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[531]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24108,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[535]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[536]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24184,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[258],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_24184(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[258],((C_word*)t0)[4]);
t9=t7;
f_24184(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24248,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_24248(t10,(C_word)C_eqp(t9,lf[538]));}
else{
t9=t8;
f_24248(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_24213(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k24246 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24248,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24213(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24213(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k24211 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24213(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24213,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24229,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[537]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_24229(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_24229(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k24227 in k24211 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24229(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24229,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24091(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24182 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24184(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24184,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[256],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[411],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24091(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k24106 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[534]);}

/* k24109 in k24106 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24175,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t2,((C_word*)t0)[7],C_fix(0));}

/* k24173 in k24109 in k24106 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24175,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k24169 in k24173 in k24109 in k24106 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24171,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[532],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[94],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[533],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[387],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_24091(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k24089 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_24091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24091,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24098,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24100 in k24089 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24102,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[468],lf[498],lf[469],t1,lf[472],((C_word*)((C_word*)t0)[5])[1],lf[471],((C_word*)((C_word*)t0)[4])[1],lf[473],((C_word*)((C_word*)t0)[3])[1],lf[474],((C_word*)((C_word*)t0)[2])[1]));}

/* k24096 in k24089 in k24300 in k24304 in k24078 in k24072 in parse-sequence-iteration in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24020,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[528]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24035,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li376),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24053,a[2]=t2,a[3]=((C_word)li377),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a24052 in parse-repeat in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24053,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,t1,t2,t4);}

/* a24034 in parse-repeat in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[529]);}

/* k24045 in a24034 in parse-repeat in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_24047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24047,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[498],t1,lf[503],t2);
C_trace("ChickenBridge.scm: 379  parse-numerical-for");
t4=C_retrieve2(lf[497],"parse-numerical-for");
f_23638(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23638,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23648,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23847,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li374),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_23847(t31,t27,C_SCHEME_FALSE);}

/* do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23847(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23847,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_23857(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t5,t6,((C_word*)t0)[6]);}}

/* k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23857,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[526]));}
else{
t7=t6;
f_23868(2,t7,C_SCHEME_UNDEFINED);}}}

/* k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23868,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23871,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[505]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[501]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23883,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[506],((C_word*)((C_word*)t0)[12])[1],lf[507],((C_word*)((C_word*)t0)[9])[1],lf[508]));}
else{
t7=t6;
f_23883(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[503]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23904,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[509],((C_word*)((C_word*)t0)[12])[1],lf[510],((C_word*)((C_word*)t0)[3])[1],lf[511]));}
else{
t8=t7;
f_23904(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[512]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23925,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[513],((C_word*)((C_word*)t0)[12])[1],lf[514],((C_word*)((C_word*)t0)[3])[1],lf[515]));}
else{
t9=t8;
f_23925(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[502]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23946,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[516],((C_word*)((C_word*)t0)[12])[1],lf[517],((C_word*)((C_word*)t0)[3])[1],lf[518]));}
else{
t10=t9;
f_23946(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[504]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23967,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[519],((C_word*)((C_word*)t0)[12])[1],lf[520],((C_word*)((C_word*)t0)[3])[1],lf[521]));}
else{
t11=t10;
f_23967(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[522]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23988,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[523]));}
else{
t12=t11;
f_23988(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[524],((C_word*)((C_word*)t0)[12])[1],lf[525]));}}}}}}}

/* k23986 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_23871(2,t6,t5);}

/* k23965 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_23871(2,t7,t6);}

/* k23944 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_23871(2,t7,t6);}

/* k23923 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_23871(2,t7,t6);}

/* k23902 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_23871(2,t7,t6);}

/* k23881 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_23871(2,t7,t6);}

/* k23869 in k23866 in k23855 in do3901 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_23847(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_23651(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[505]);
t5=t2;
f_23651(t5,t4);}}

/* k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23651,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23654,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[501]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23814,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_23814(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[504]);
t6=t4;
f_23814(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[502])));}}

/* k23812 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[96]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[502]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[415]);
t5=((C_word*)t0)[2];
f_23654(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[339]);
t5=((C_word*)t0)[2];
f_23654(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[94]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[503]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[408]);
t5=((C_word*)t0)[2];
f_23654(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[414]);
t5=((C_word*)t0)[2];
f_23654(t5,t4);}}}

/* k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23654(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23654,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23657,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23785,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23805,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k23803 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23805,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23657(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k23783 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23785,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23657(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23657,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_23660(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23750,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[500]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_23660(t5,t4);}}

/* k23748 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t2,t1,C_SCHEME_FALSE);}

/* k23765 in k23748 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23767,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_23660(t8,t7);}

/* k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23660,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23699,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[499]);}
else{
t6=t5;
f_23667(t6,C_SCHEME_UNDEFINED);}}

/* k23697 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23702,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23717,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23733,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23390(t3,t1,C_SCHEME_FALSE);}}

/* k23731 in k23697 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23733,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23702(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k23715 in k23697 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23717,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23702(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k23700 in k23697 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23702,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23667(t4,t3);}

/* k23665 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23674,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23678,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k23676 in k23665 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23682,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k23680 in k23676 in k23665 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23682,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[468],lf[498],lf[469],((C_word*)t0)[2],lf[471],t1,lf[474],t2,lf[472],t4));}

/* k23672 in k23665 in k23658 in k23655 in k23652 in k23649 in k23646 in parse-numerical-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23556(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23556,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23560,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t5,t6,t4);}

/* k23558 in parse-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23560,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[490]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23578,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_23384(t4,t3);}}

/* k23576 in k23558 in parse-for in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23578,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[491]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[492],t6,lf[493],lf[494]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23396(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[495],t2,lf[496]));}}

/* loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23396(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23396,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23452,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23404,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li371),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_23404(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3852 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23404(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23404,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23414,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_23414(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_23414(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23378(t6,t8,((C_word*)t0)[2]);}}}

/* k23412 in do3852 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23414,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  reverse");
t2=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_23404(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23455,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[488]);}

/* k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23533,a[2]=t4,a[3]=((C_word)li370),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_23533(t6,t2,((C_word*)t0)[2]);}

/* do3862 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23533(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23533,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23543,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  display");
t5=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k23541 in do3862 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23533(t3,((C_word*)t0)[2],t2);}

/* k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23464,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[487]);}

/* k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23470,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[483]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23487,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li369),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_23487(t6,t2,((C_word*)t0)[2]);}}

/* do3867 in k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23487(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23487,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23497,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  display");
t5=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[486]);}
else{
t5=t3;
f_23497(2,t5,C_SCHEME_UNDEFINED);}}}

/* k23495 in do3867 in k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k23498 in k23495 in do3867 in k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[484]:lf[485]);
C_trace("ChickenBridge.scm: 379  display");
t6=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k23501 in k23498 in k23495 in do3867 in k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23487(t3,((C_word*)t0)[2],t2);}

/* k23468 in k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23473,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23471 in k23468 in k23465 in k23462 in k23459 in k23456 in k23453 in k23450 in loop-error in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[482]);}

/* make-binding in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23390(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23390,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23384(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23384,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23378(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23378,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23307(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23307,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23309,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23348,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t5,t3,C_retrieve2(lf[458],"loop-bindings"));}

/* k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[459],"loop-collectors"));}

/* k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23356,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[460],"loop-initially"));}

/* k23354 in k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[461],"loop-end-tests"));}

/* k23358 in k23354 in k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[462],"loop-looping"));}

/* k23362 in k23358 in k23354 in k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[464],"loop-stepping"));}

/* k23366 in k23362 in k23358 in k23354 in k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[465],"loop-finally"));}

/* k23370 in k23366 in k23362 in k23358 in k23354 in k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23376,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23309(t2,((C_word*)t0)[2],C_retrieve2(lf[466],"loop-returning"));}

/* k23374 in k23370 in k23366 in k23362 in k23358 in k23354 in k23350 in k23346 in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23376,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23156(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[468],((C_word*)t0)[9],lf[469],((C_word*)t0)[8],lf[470],((C_word*)t0)[7],lf[471],((C_word*)t0)[6],lf[472],((C_word*)t0)[5],lf[473],((C_word*)t0)[4],lf[474],((C_word*)t0)[3],lf[475],((C_word*)t0)[2],lf[476],t1));}

/* gather-clause in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23309(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23309,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23315,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li363),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23315(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3835 in gather-clause in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23315(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23315,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23326,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23337,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k23335 in do3835 in gather-clause in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k23324 in do3835 in gather-clause in gather-clauses in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_23315(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23156(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23156,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23171,a[2]=t5,a[3]=t3,a[4]=((C_word)li361),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23171(t7,t1,t2);}}

/* do3823 in make-loop-clause in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23171(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23171,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23184,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[468]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  loop-operator-set!");
f_23054(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[469]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_23184(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[470]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_23184(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[471]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_23184(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[472]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_23184(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[473]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23114(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[474]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_23184(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[475]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_23184(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[476]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_23184(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_23184(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k23182 in do3823 in make-loop-clause in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23171(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23144(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23144,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23132(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23132,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23120(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23120,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23114(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23114,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23108(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23108,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23096,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23084,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23072(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23072,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23060(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23060,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k23044 in k23041 in k23038 in k23035 in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_23054(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23054,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23018(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23018,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[424]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[456]);}

/* sal:open in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_23012(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23012,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[424]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[454]);}

/* sal:load in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22965(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22965,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22969,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  file-exists?");
t4=C_retrieve(lf[452]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k22967 in sal:load in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22972,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22994,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[448]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[449],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_22994(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22985,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[450],((C_word*)t0)[2],lf[451]);}}

/* k22983 in k22967 in sal:load in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[424]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22992 in k22967 in sal:load in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  load-sal-file");
t2=C_retrieve(lf[446]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  load");
t2=C_retrieve(lf[447]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k22970 in k22967 in sal:load in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22956(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22956,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22960,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k22958 in sal:chdir in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22803(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_22803r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22803r(t0,t1,t2);}}

static void C_ccall f_22803r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22806,a[2]=t4,a[3]=((C_word)li344),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22925,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22930,a[2]=t4,a[3]=t8,a[4]=((C_word)li345),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_22930(t10,t6,t2);}

/* do3650 in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22930(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22930,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t3=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[443]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22943,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_22806(t5,t3,t4,C_fix(0));}}

/* k22941 in do3650 in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22930(t3,((C_word*)t0)[2],t2);}

/* k22923 in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22806(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22806,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t5=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[436]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22834,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[439]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[440]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22906,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22922,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[441],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 378  print-message");
t5=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[442]);}}

/* k22920 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22904 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22832 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22837,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li343),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_22842(t6,t2,((C_word*)t0)[2]);}

/* do3642 in k22832 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22842(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22842,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22852,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 378  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_22806(t6,t3,t4,t5);}}

/* k22850 in do3642 in k22832 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_22855(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  print-message");
t4=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[438]);}}

/* k22853 in k22850 in do3642 in k22832 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22842(t3,((C_word*)t0)[2],t2);}

/* k22835 in k22832 in printer in sal:print in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[437]);}

/* sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_22626,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22630,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[422]))){
C_trace("ChickenBridge.scm: 378  printf");
t8=C_retrieve(lf[402]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[433],t4);}
else{
t8=t7;
f_22630(2,t8,C_SCHEME_UNDEFINED);}}

/* k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22630,2,t0,t1);}
t2=C_mutate(&lf[419],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22635,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[349],"list->token"),t4);}

/* k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22635,2,t0,t1);}
t2=C_mutate(&lf[420],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22638,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_22638(t5,t4);}
else{
t4=t3;
f_22638(t4,C_SCHEME_FALSE);}}

/* k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22638(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22638,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[420],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20450,a[2]=t4,a[3]=t3,a[4]=((C_word)li341),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call/cc");
t7=*((C_word*)lf[432]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a20449 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20450(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20450,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20456,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li339),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20463,a[2]=t2,a[3]=((C_word)li340),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a20462 in a20449 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20463,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20470,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_20470(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_20470(t6,C_SCHEME_FALSE);}}

/* k20468 in a20462 in a20449 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20470,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20107(t2,lf[429],lf[430],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_19927(((C_word*)t0)[4],lf[431],C_retrieve2(lf[396],"*maxtokpos*"));}}

/* k20475 in k20468 in a20462 in a20449 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a20455 in a20449 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20456,2,t0,t1);}
t2=lf[396]=C_fix(0);;
C_trace("ChickenBridge.scm: 378  parser");
f_20488(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22642,2,t0,t1);}
t2=C_mutate(&lf[421],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22645,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[421],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[365]))){
t5=C_retrieve2(lf[419],"*sal-string*");
t6=C_retrieve2(lf[421],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22679,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-position");
f_19966(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 378  pp");
t5=C_retrieve(lf[427]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[421],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 378  eval");
t5=C_retrieve(lf[428]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[421],"*sal-output*"));}}}

/* k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22679,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22772,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li338),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_22772(t11,t7,C_SCHEME_FALSE);}

/* do3615 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22772(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22772,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22782,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_22782(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_22782(t11,t10);}}}

/* k22780 in do3615 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_22772(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22685,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22742,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li337),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_22742(t9,t5,C_SCHEME_FALSE);}

/* do3622 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22742(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22742,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22752,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_22752(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_22752(t11,t10);}}}

/* k22750 in do3622 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_22752(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_22742(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22696,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22703,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-string");
f_19948(t4,((C_word*)t0)[2]);}

/* k22705 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t3=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k22709 in k22705 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22715,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  substring");
t3=*((C_word*)lf[426]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22713 in k22709 in k22705 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22719,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t3=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k22717 in k22713 in k22709 in k22705 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22719,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22726,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 378  make-string");
t5=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k22724 in k22717 in k22713 in k22709 in k22705 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22726,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 378  string-append");
t5=*((C_word*)lf[162]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[425],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22701 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[424]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22694 in k22691 in k22683 in k22677 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k22643 in k22640 in k22636 in k22633 in k22628 in sal in k22617 in k22614 in k22611 in k22608 in k22605 in k22099 in k22096 in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21577(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21577,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21584,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21590,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t33,t34,C_fix(23296));}

/* k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21590,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21594,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_21640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,t3,C_fix(10756));}}

/* k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21640,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21644,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_21737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,t3,C_fix(22784));}}

/* k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21737,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21741,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21805,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21805,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21812,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22062,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_21812(t8,t7);}}

/* k22060 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21812(t3,t2);}

/* k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21812,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21815,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22050,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k22048 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21815(t3,t2);}

/* k21999 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22001,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22007,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22005 in k21999 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22007,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_21815(t4,t3);}}

/* k22029 in k22005 in k21999 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22031,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22015,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22027,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k22025 in k22029 in k22005 in k21999 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k22013 in k22029 in k22005 in k21999 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_22015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21815(t3,t2);}

/* k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21815,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_21818(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21977,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[418]);}}

/* k21975 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21981,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k21979 in k21975 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_21818(t4,t3);}

/* k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21818(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21818,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21821(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21954,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[417]);}}

/* k21952 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21958,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k21956 in k21952 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_21821(t4,t3);}

/* k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21821,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_21824(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21931,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[416]);}}
else{
t3=t2;
f_21824(t3,C_SCHEME_UNDEFINED);}}

/* k21929 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21935,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k21933 in k21929 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_21824(t4,t3);}

/* k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21824(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21824,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21827,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21856,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_21827(t7,t6);}}

/* k21854 in k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21856,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[408],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_21827(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21874,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k21872 in k21854 in k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21874,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[414],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_21827(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k21890 in k21872 in k21854 in k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21892,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[415],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[96],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_21827(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k21908 in k21890 in k21872 in k21854 in k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21910,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[96],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21827(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_21827(t2,C_SCHEME_UNDEFINED);}}

/* k21825 in k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21827(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21827,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21831,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k21829 in k21825 in k21822 in k21819 in k21816 in k21813 in k21810 in k21803 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21584(t3,t2);}

/* k21739 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21741,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21745,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k21743 in k21739 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21745,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21749,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[413]);}

/* k21747 in k21743 in k21739 in k21735 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21749,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_21584(t12,t11);}

/* k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21644,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k21646 in k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21648,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21652,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21650 in k21646 in k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21652,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21655,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21671,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_21655(t6,t5);}}

/* k21669 in k21650 in k21646 in k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21671,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[412]);}

/* k21673 in k21669 in k21650 in k21646 in k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21675,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[411],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_21655(t12,t11);}

/* k21653 in k21650 in k21646 in k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21655,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21659,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k21657 in k21653 in k21650 in k21646 in k21642 in k21638 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21584(t3,t2);}

/* k21592 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21594,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[410]);}

/* k21596 in k21592 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21598,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21602,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[409]);}

/* k21600 in k21596 in k21592 in k21588 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21602,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[408],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_21584(t10,t9);}

/* k21582 in sal-parse-stepping in k21573 in k21570 in k21567 in k21564 in k21561 in k21558 in k21555 in k21552 in k21549 in k21546 in k21543 in k21540 in k21537 in k21534 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21399(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21399,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21411,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li334),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_21411(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21411,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21430,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  is-op?");
f_21378(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21430,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21433,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21448,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li333),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_21448(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_21433(2,t5,t4);}}

/* do3253 in k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21448(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21448,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21462,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21476,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t12=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21480,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 378  is-op?");
f_21378(t10,t11);}}

/* k21478 in do3253 in k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21480,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21483,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_21483(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_21483(t10,t9);}}

/* k21481 in k21478 in do3253 in k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_21448(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21474 in do3253 in k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  inf->pre");
f_21399(((C_word*)t0)[2],t1);}

/* k21460 in do3253 in k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21462,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k21431 in k21428 in do3251 in inf->pre in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_21411(t2,((C_word*)t0)[2]);}

/* is-op? in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21378(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21378,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21385,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_20047(t3,t2);}

/* k21383 in is-op? in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21385,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21388,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k21386 in k21383 in is-op? in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21394,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  SalOpType?");
f_21155(t2,t1);}

/* k21392 in k21386 in k21383 in is-op? in k21374 in k21371 in k21368 in k21365 in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21394,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21313(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21313,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21322,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li330),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_21322(t10,t1,t2);}

/* do3217 in remove-token-type in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21322(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21322,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21335,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21345,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20063(t4,t5,((C_word*)t0)[2]);}}

/* k21343 in do3217 in remove-token-type in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_21345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21345,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_21335(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21335(t7,t6);}}

/* k21333 in do3217 in remove-token-type in k21309 in k21306 in k21303 in k21300 in k21297 in k21294 in k21291 in k21288 in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21322(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21269(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21269,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21257(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21257,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21155(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21155,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_21107(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21107,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20488(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20488,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20492,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 378  printf");
t10=C_retrieve(lf[402]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[403],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_20492(2,t10,C_SCHEME_UNDEFINED);}}

/* k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_19667(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_20498(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20913,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20917,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20921,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  first-token");
f_19655(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k20919 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  token-position");
f_19614(((C_word*)t0)[2],t1);}

/* k20915 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  max");
t2=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[396],"*maxtokpos*"),t1);}

/* k20911 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[396],t1);
t3=((C_word*)t0)[2];
f_20498(t3,t2);}

/* k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20498(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20498,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t4=C_retrieve2(lf[237],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20621,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_19809(t3,((C_word*)t0)[8]);}}

/* k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20621,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20627,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19854,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_19809(t4,t3);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[401],((C_word*)t0)[2]);}}

/* k19852 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20627(t3,(C_word)C_eqp(t2,lf[385]));}
else{
t2=((C_word*)t0)[2];
f_20627(t2,C_SCHEME_FALSE);}}

/* k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20627(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20627,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  pattern-nsubs");
f_19827(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20715,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19870,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_19809(t5,t4);}}

/* k19868 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20715(t3,(C_word)C_eqp(t2,lf[386]));}
else{
t2=((C_word*)t0)[2];
f_20715(t2,C_SCHEME_FALSE);}}

/* k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20715,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-nsubs");
f_19827(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  pattern-zero-or-more?");
f_19895(t2,((C_word*)t0)[2]);}}

/* k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_20788(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19886,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_19809(t4,t3);}}

/* k19884 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20788(t3,(C_word)C_eqp(t2,lf[94]));}
else{
t2=((C_word*)t0)[2];
f_20788(t2,C_SCHEME_FALSE);}}

/* k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20788(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20788,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20794,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li322),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_20817(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20866,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19918,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_19809(t4,t3);}}

/* k19916 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20866(t3,(C_word)C_eqp(t2,lf[400]));}
else{
t2=((C_word*)t0)[2];
f_20866(t2,C_SCHEME_FALSE);}}

/* k20864 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20866(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20866,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20875,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20886,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li323),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20892,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li324),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[399],t3);}}

/* a20891 in k20864 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20892(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20892,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20885 in k20864 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20886,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parser");
f_20488(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20873 in k20864 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20817,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_20827(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_19667(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k20825 in do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20827,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20830,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20847,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li320),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20853,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li321),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a20852 in k20825 in do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20853(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20853,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20846 in k20825 in do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20847,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parser");
f_20488(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20828 in k20825 in do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20833,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20840,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_20833(t3,C_SCHEME_UNDEFINED);}}

/* k20838 in k20828 in k20825 in do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20840,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20833(t6,t5);}

/* k20831 in k20828 in k20825 in do2954 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20833(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_20817(t2,((C_word*)t0)[2]);}

/* k20792 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20797,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20803,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-zero-or-more?");
f_19895(t3,((C_word*)t0)[2]);}

/* k20801 in k20792 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_20797(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_20797(t5,t4);}}

/* k20795 in k20792 in k20786 in k20783 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20797(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20724,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20739,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li319),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_20739(t6,t2,C_fix(0));}

/* do2934 in k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20739(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20739,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20749,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20758,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li317),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li318),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a20771 in do2934 in k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20772(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20772,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20757 in do2934 in k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20766,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-sub");
f_19837(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20764 in a20757 in do2934 in k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20766,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_20488(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20747 in do2934 in k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20749,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20739(t3,((C_word*)t0)[2],t2);}

/* k20722 in k20719 in k20713 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20636,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20639,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li316),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_20658(t8,t4,C_fix(0));}

/* do2912 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20658(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20658,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20671,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20691,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li314),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20705,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li315),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a20704 in do2912 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20705,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20690 in do2912 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20699,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-sub");
f_19837(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20697 in a20690 in do2912 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20699,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_20488(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20669 in do2912 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20674,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_20674(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_20674(t5,t4);}}

/* k20672 in k20669 in do2912 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20674,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20658(t3,((C_word*)t0)[2],t2);}

/* k20637 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20642,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_20642(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20656,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t5=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k20654 in k20637 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20642(t3,t2);}

/* k20640 in k20637 in k20634 in k20625 in k20619 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  SalTokenType?");
f_21107(t2,t1);}

/* k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20513,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20519,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_19667(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20571,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_21257(t2,((C_word*)t0)[5]);}}

/* k20569 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20571,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  get-rule");
f_19785(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[398],((C_word*)t0)[2]);}}

/* k20572 in k20569 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20574,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[355]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li312),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20595,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li313),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a20594 in k20572 in k20569 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20595,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20606,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 378  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_20606(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k20604 in a20594 in k20572 in k20569 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a20584 in k20572 in k20569 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20585,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_20488(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20519,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  first-token");
f_19655(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20535,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20565,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_19578(t3,t1);}

/* k20563 in k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k20533 in k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20535,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20542,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20550,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_19578(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k20548 in k20533 in k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20554,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-string");
f_19596(t2,((C_word*)t0)[2]);}

/* k20552 in k20548 in k20533 in k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20558,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-position");
f_19614(t2,((C_word*)t0)[2]);}

/* k20556 in k20552 in k20548 in k20533 in k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20540 in k20533 in k20527 in k20517 in k20511 in k20505 in k20496 in k20493 in k20490 in parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20384(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20384,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20386,a[2]=t2,a[3]=((C_word)li310),tmp=(C_word)a,a+=4,tmp));}

/* f_20386 in simple-unit-emitter in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20386,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20390,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20434,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t6,t2);}

/* k20432 */
static void C_ccall f_20434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k20388 */
static void C_ccall f_20390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20390,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20393,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_20393(t9,t8);}
else{
t6=t5;
f_20393(t6,C_SCHEME_UNDEFINED);}}

/* k20391 in k20388 */
static void C_fcall f_20393(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20393,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20398,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li309),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_20398(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2869 in k20391 in k20388 */
static void C_fcall f_20398(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20398,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20419,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k20417 in do2869 in k20391 in k20388 */
static void C_ccall f_20419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20398(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20376(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20376,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20378,a[2]=t2,a[3]=((C_word)li307),tmp=(C_word)a,a+=4,tmp));}

/* f_20378 in simple-unit-parser in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20378(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20378,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_19978(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20168(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20168,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20185,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20135(t5,t6,t3,t4);}}

/* k20183 in emit-list in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20189,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit-list");
f_20168(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20187 in k20183 in emit-list in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20189,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20135(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20135,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20142,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_20047(t5,t2);}

/* k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20142,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20213,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20151,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20086,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit?");
f_19984(t4,t3);}}

/* k20084 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20086,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20093,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_20151(2,t2,C_SCHEME_FALSE);}}

/* k20091 in k20084 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_21257(((C_word*)t0)[2],t1);}

/* k20149 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20151,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20351,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20374,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  emit-list");
f_20168(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[392],((C_word*)t0)[4]);}}}

/* k20372 in k20149 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  get-rule");
f_19785(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k20349 in k20149 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20351,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[355]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t4,((C_word*)t0)[4]);}}

/* k20365 in k20349 in k20149 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20135(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20017(t2,((C_word*)t0)[2]);}

/* k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20216,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 378  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t8=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalOpType?");
f_21155(t8,((C_word*)t0)[4]);}}}

/* k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20240,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20291,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k20295 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20297,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k20301 in k20295 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20303,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k20310 in k20301 in k20295 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20312,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20321,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k20319 in k20310 in k20301 in k20295 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20321,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k20328 in k20319 in k20310 in k20301 in k20295 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20330,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[388],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20339,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k20337 in k20328 in k20319 in k20310 in k20301 in k20295 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[389],((C_word*)t0)[2]);}}

/* k20289 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k20244 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20246,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[127]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20252,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k20250 in k20244 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20252,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[105]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k20256 in k20250 in k20244 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20258,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[384]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k20262 in k20256 in k20250 in k20244 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20264,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[385]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k20268 in k20262 in k20256 in k20250 in k20244 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20270,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[386]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k20274 in k20268 in k20262 in k20256 in k20250 in k20244 in k20238 in k20214 in k20211 in k20140 in emit in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[387]);}
else{
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[383]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20117(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20117,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20124,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_20124(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[381],t2);}}

/* k20122 in set-emit-info! in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20107(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20107,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20095(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20095,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20063(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20063,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20070,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_20047(t4,t2);}

/* k20068 in token-unit-type=? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20070,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k20075 in k20068 in token-unit-type=? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21269(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20047(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20047,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20054,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit?");
f_19984(t3,t2);}

/* k20052 in token-unit? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20054,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20061,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_19999(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k20059 in k20052 in token-unit? in k20043 in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_20061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalTokenType?");
f_21107(((C_word*)t0)[2],t1);}

/* parse-unit-position in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20035(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20035,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[369]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_20017(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20017,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[369]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19999(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19999,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[369]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19984(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19984,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[369]));}

/* make-parse-unit in k19974 in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19978(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19978,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[369],t2,t3,t4));}

/* parse-error-position in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19966(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19966,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[365]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19948(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19948,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[365]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19927(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19927,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[365],t2,t3));}

/* pattern-zero-or-more? in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19895(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19895,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19902,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_19809(t3,t2);}

/* k19900 in pattern-zero-or-more? in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[98]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19837(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19837,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19845,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-subs");
f_19821(t4,t2);}

/* k19843 in pattern-sub in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19827(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19827,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19835,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-subs");
f_19821(t3,t2);}

/* k19833 in pattern-nsubs in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19821(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19821,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19809(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19809,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19806(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19806,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k19781 in k19778 in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19785(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19785,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[353],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 378  hash-table-ref/default");
t4=C_retrieve(lf[358]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[353],"*rules*"),t3);}}

/* rule-name in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19698(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19698,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k19673 in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19677(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19677,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[355],t2,t3,t4,t5,t6));}

/* null-tokens? in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19667(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19667,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19655(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19655,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k19622 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19626(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19626,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[344],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[344],"make-token"),t2);}}

/* token-position in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19614(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19614,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[345]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19596(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19596,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[345]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19578(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19578,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[345]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19557,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[345],t2,t3,t4));}

/* markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18717(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr3r,(void*)f_18717r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18717r(t0,t1,t2,t3);}}

static void C_ccall f_18717r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(6);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?C_fix(1):(C_word)C_i_car(t3));
t6=(C_word)C_i_nullp(t3);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19539,a[2]=t5,a[3]=t1,a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t6)){
t8=t7;
f_19539(t8,t6);}
else{
t8=(C_word)C_i_cdr(t3);
t9=t7;
f_19539(t9,(C_word)C_i_nullp(t8));}}

/* k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19539,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[5]));
t3=(C_word)C_i_length(((C_word*)t0)[4]);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(8);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18733,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t9,a[6]=t5,a[7]=t11,a[8]=((C_word*)t0)[3],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_truep((C_word)C_i_equalp(t2,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t13=t12;
f_18733(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[343],t2);}}

/* k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18735,a[2]=((C_word*)t0)[10],a[3]=((C_word)li254),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18817,a[2]=t4,a[3]=((C_word)li257),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18927,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19447,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li274),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_19447(t10,t6,C_fix(0));}

/* do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19447(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19447,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19457,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19470,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li273),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_19470(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2522 in do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19470(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19470,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[8]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19480,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19498,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t9=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19523,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 377  modulo");
t9=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k19521 in do2522 in do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19523,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19505,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)t0)[2]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_19505(t7,t6);}
else{
t5=t4;
f_19505(t5,C_SCHEME_UNDEFINED);}}

/* k19503 in k19521 in do2522 in do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19505(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19505,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_19470(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19496 in do2522 in do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add-outcome");
t2=((C_word*)t0)[4];
f_18735(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k19478 in do2522 in do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19480,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k19455 in do2519 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19457,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19447(t3,((C_word*)t0)[2],t2);}

/* k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19403,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t5=C_retrieve(lf[337]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[339]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19409,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_19409(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_19409(t5,C_SCHEME_FALSE);}}}

/* k19407 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19409,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19415,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t4=C_retrieve(lf[337]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19429 in k19407 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18930(t3,t2);}

/* a19414 in k19407 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19415(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19415,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19423,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  format");
t5=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[342],t2);}

/* k19421 in a19414 in k19407 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19427,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  format");
t3=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[341],((C_word*)t0)[2]);}

/* k19425 in k19421 in a19414 in k19407 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-ci<?");
t2=*((C_word*)lf[340]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19411 in k19407 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18930(t3,t2);}

/* k19401 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18930(t3,t2);}

/* k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18930,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19280,a[2]=t4,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word)li271),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_19280(t6,t2,((C_word*)((C_word*)t0)[8])[1],C_fix(0));}

/* do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19280(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19280,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19291,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19304,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 377  max");
t10=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k19302 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19304,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19366,a[2]=t5,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19366(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2543 in k19302 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19366(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19366,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k19305 in k19302 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19307,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[338]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19323,a[2]=t3,a[3]=t8,a[4]=((C_word)li269),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19323(t10,t6,((C_word*)t0)[2]);}

/* do2549 in k19305 in k19302 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19323(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19323,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19348,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  decimals");
t9=C_retrieve(lf[102]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k19346 in do2549 in k19305 in k19302 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19323(t4,((C_word*)t0)[2],t3);}

/* k19312 in k19305 in k19302 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_19280(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19289 in do2535 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19266,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li268),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t4=C_retrieve(lf[337]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[8])[1],t3);}

/* a19265 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19266(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19266,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_18817(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18937,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18940,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_eqp(((C_word*)t0)[6],C_fix(1));
if(C_truep(t4)){
t5=lf[326];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18988,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  make-string");
t7=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_18940(2,t5,C_SCHEME_UNDEFINED);}}

/* k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19247,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li267),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19247(t6,t2,C_fix(0));}

/* do2562 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19247(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19247,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19257,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[330]+1));}}

/* k19255 in do2562 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19257,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19247(t3,((C_word*)t0)[2],t2);}

/* k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19185,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19185(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19185(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19185,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19195,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t4=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  format");
t4=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[335],t3);}

/* k19196 in k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19198,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19204,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19218,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19216 in k19196 in k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19218,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19220,a[2]=t3,a[3]=((C_word)li265),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19220(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2572 in k19216 in k19196 in k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19220(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19220,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19230,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[330]+1));}}

/* k19228 in do2572 in k19216 in k19196 in k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19230,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19220(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19202 in k19196 in k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k19205 in k19202 in k19196 in k19193 in do2567 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19185(t3,((C_word*)t0)[2],t2);}

/* k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19000,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li264),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19005(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19005(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19005,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19018,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  newline");
t5=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19021(2,t4,lf[332]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18885,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  format");
t6=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[334],t5);}}

/* k18883 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18885,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18894,a[2]=t6,a[3]=t3,a[4]=((C_word)li263),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_18894(t8,((C_word*)t0)[2],t4);}

/* do2514 in k18883 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18894(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18894,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18905,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18916,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  format");
t6=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[333],t5);}}

/* k18914 in do2514 in k18883 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18903 in do2514 in k18883 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18894(t4,((C_word*)t0)[2],t3);}

/* k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19021,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19027,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19156,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19154 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19156,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19158,a[2]=t3,a[3]=((C_word)li262),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19158(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2588 in k19154 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19158(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19158,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19168,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[330]+1));}}

/* k19166 in do2588 in k19154 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19168,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19158(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19030,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19129,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  min");
t4=*((C_word*)lf[331]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k19127 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19129,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19131,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li261),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_19131(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2594 in k19127 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19131(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19131,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19141,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[330]+1));}}

/* k19139 in do2594 in k19127 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19141,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19131(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19033,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li260),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19042(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19042(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19042,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19055,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19074,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 377  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19068,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  display");
t8=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19066 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  display");
t2=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19072 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19074,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19080,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t4=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k19078 in k19072 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19090,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  max");
t5=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19088 in k19078 in k19072 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19090,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19092,a[2]=t3,a[3]=((C_word)li259),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19092(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2608 in k19088 in k19078 in k19072 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_19092(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19092,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19102,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[330]+1));}}

/* k19100 in do2608 in k19088 in k19078 in k19072 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19102,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19092(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19081 in k19078 in k19072 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  display");
t2=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19053 in do2601 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19042(t3,((C_word*)t0)[2],t2);}

/* k19031 in k19028 in k19025 in k19019 in k19016 in do2582 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19005(t3,((C_word*)t0)[2],t2);}

/* k18998 in k18995 in k18992 in k18989 in k18986 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_19000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  newline");
t2=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k18938 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)t0)[5],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18968,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18970,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_18943(t3,C_SCHEME_UNDEFINED);}}

/* a18969 in k18938 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18970(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18970,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[325],t4);}

/* k18966 in k18938 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18943(t3,t2);}

/* k18941 in k18938 in k18935 in k18931 in k18928 in k18925 in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],C_fix(1)))){
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],C_fix(2)))){
C_trace("ChickenBridge.scm: 377  make-markov");
t2=C_retrieve(lf[300]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}}

/* before? in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18817(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18817,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18827,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18865,a[2]=t2,a[3]=((C_word)li256),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-index");
t7=C_retrieve(lf[324]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a18864 in before? in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18865(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18865,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18825 in before? in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18855,a[2]=((C_word*)t0)[4],a[3]=((C_word)li255),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-index");
t4=C_retrieve(lf[324]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a18854 in k18825 in before? in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18855(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18855,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18828 in k18825 in before? in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_18817(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18735(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18735,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18739,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18807,a[2]=t2,a[3]=((C_word)li253),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  find");
t6=C_retrieve(lf[323]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a18806 in add-outcome in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18807(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18807,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k18737 in add-outcome in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18739,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18789,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  last-pair");
t7=C_retrieve(lf[320]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18757,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  format");
t4=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[322],((C_word*)t0)[3]);}}

/* k18755 in k18737 in add-outcome in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18757,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k18787 in k18737 in add-outcome in k18731 in k19537 in markov-analyze in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18789,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18623,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18627,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t3,t2);}

/* k18625 in next-in-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18627,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18656,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[311]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_18042(((C_word*)t0)[2],t6);}}

/* k18654 in k18625 in next-in-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18656,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18661,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li251),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18661(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2476 in k18654 in k18625 in next-in-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18661(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18661,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18671,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_18671(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[318],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18686,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[311]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_18686(t12,t11);}
else{
t10=t5;
f_18686(t10,C_SCHEME_UNDEFINED);}}}

/* k18684 in do2476 in k18654 in k18625 in next-in-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18686(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18661(t3,((C_word*)t0)[2],t2);}

/* k18669 in do2476 in k18654 in k18625 in next-in-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_18042(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18105(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18105r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18105r(t0,t1,t2,t3);}}

static void C_ccall f_18105r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18109,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18367,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18376,a[2]=t9,a[3]=((C_word)li249),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[317],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18376(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18376,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18380,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_18380(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[316],t2);}}

/* k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18385,a[2]=((C_word*)t0)[4],a[3]=((C_word)li248),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18385(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_18385r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18385r(t0,t1,t2,t3);}}

static void C_ccall f_18385r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18389,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_18389(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[314]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18527,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[314]);}
else{
t20=t19;
f_18527(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[315]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18562,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[315]);}
else{
t21=t20;
f_18562(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18591,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_18591(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k18589 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18591,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18606,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18604 in k18589 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18598(2,t2,C_SCHEME_UNDEFINED);}}

/* k18596 in k18589 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18389(t5,t4);}

/* k18560 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18566(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18564 in k18560 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18389(t7,t6);}

/* k18525 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18531(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18529 in k18525 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18389(t7,t6);}

/* k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18389,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18392,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18392(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[314]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18427,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[314]);}
else{
t6=t5;
f_18427(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[315]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18462,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[315]);}
else{
t7=t6;
f_18462(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18491,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18491(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18489 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18491,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18506,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18504 in k18489 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18498(2,t2,C_SCHEME_UNDEFINED);}}

/* k18496 in k18489 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18392(t5,t4);}

/* k18460 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18466(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18464 in k18460 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18392(t7,t6);}

/* k18425 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18431(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18429 in k18425 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18392(t7,t6);}

/* k18390 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18392(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18392,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18395,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18395(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18393 in k18390 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_18398(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_18398(t4,t3);}}

/* k18396 in k18393 in k18390 in k18387 in a18384 in k18378 in parse-graph-item in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18398(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18398,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[311],t5,t6,t7));}

/* k18365 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18109(2,t3,t2);}

/* k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18109,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18112,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18112(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18272,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_18272(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18307,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_18307(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18336,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_18336(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18334 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18336,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18351,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18349 in k18334 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18343(2,t2,C_SCHEME_UNDEFINED);}}

/* k18341 in k18334 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18112(t5,t4);}

/* k18305 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18311(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18309 in k18305 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18112(t7,t6);}

/* k18270 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18276(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18274 in k18270 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18112(t7,t6);}

/* k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18112(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18112,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18115,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18115(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18172,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_18172(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18207,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_18207(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18236,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18236(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18234 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18236,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18251,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18249 in k18234 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18243(2,t2,C_SCHEME_UNDEFINED);}}

/* k18241 in k18234 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18115(t5,t4);}

/* k18205 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18209 in k18205 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18115(t7,t6);}

/* k18170 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18176,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18176(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18174 in k18170 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18115(t7,t6);}

/* k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18115(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18115,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18118,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18118(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18116 in k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k18119 in k18116 in k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18121,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18127,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18133,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[313],"next-in-graph"),t5);}

/* a18132 in k18119 in k18116 in k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18133,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18139,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18151,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t5,t3);}

/* k18149 in a18132 in k18119 in k18116 in k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18138 in a18132 in k18119 in k18116 in k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18139(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18139,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_18042(t1,t2);}

/* k18125 in k18119 in k18116 in k18113 in k18110 in k18107 in make-graph in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_18127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_18042(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18042,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[311]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17702(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17702,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17705,a[2]=t4,a[3]=((C_word)li240),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17884,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t6,t2);}

/* k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17888,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12434(t2,((C_word*)t0)[4]);}

/* k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17888,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17890,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li243),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_17890(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17890(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17890,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_17900(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_17900(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17815,a[2]=t13,a[3]=((C_word)li242),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_17815(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2302 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17815(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17815,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17825,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_17825(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_17825(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k17823 in do2302 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17825,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[98]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17832,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_17832(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_17832(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_17832(t9,(C_word)C_eqp(t8,lf[98]));}}}}

/* k17830 in k17823 in do2302 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17832(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_17815(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k17898 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17900,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17903,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[309],((C_word*)t0)[6]);}
else{
t3=t2;
f_17903(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_17890(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k17901 in k17898 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17903,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17907,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 377  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_17705(t7,t2,t4,t6);}

/* k17905 in k17901 in k17898 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17907,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17910,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_17910(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_17910(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17927,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li241),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_17927(t8,t3,((C_word*)t0)[3]);}}}

/* do2326 in k17905 in k17901 in k17898 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17927(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17927,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17943,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12425(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k17941 in do2326 in k17905 in k17901 in k17898 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k17908 in k17905 in k17901 in k17898 in do2317 in k17886 in k17882 in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17705(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17705,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17773,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7367(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17717,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li239),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_17717(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2286 in select-output in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17717(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17717,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_17705(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17753,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_17753(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t9,t11);}}}

/* k17751 in do2286 in select-output in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17753,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_17717(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k17771 in select-output in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17773,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17778,a[2]=t3,a[3]=t1,a[4]=((C_word)li238),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_17778(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2296 in k17771 in select-output in next-in-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17778(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17778,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17215(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_17215r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17215r(t0,t1,t2,t3);}}

static void C_ccall f_17215r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17219,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17696,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17142,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li236),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_17142(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[308],((C_word*)t4)[1]);}}

/* do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17142(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17142,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16987,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_16987(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[307],((C_word*)t11)[1]);}}}

/* k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16987,2,t0,t1);}
t2=(C_word)C_i_member(lf[303],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16993,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_16993(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[305],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_16993(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[306],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16993,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17005,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17078,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li235),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17078(t17,t13);}

/* do2165 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17078(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17078,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li234),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17020 in k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17021(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17021,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17025,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17025(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17025(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17025(t13,t12);}}

/* k17023 in a17020 in k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17025,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17028(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17028(t5,t4);}}

/* k17026 in k17023 in a17020 in k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17028(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17028,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17006 in k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17017 in k17006 in k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17019,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_17159(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[304],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_17159(2,t10,t9);}}

/* k17157 in k17017 in k17006 in k17003 in k16991 in k16985 in do2187 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17159,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_17142(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k17694 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17219(2,t3,t2);}

/* k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17219,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17222,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17222(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[267]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17566,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[267]);}
else{
t22=t21;
f_17566(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[268]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17601,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[268]);}
else{
t23=t22;
f_17601(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[302]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17636,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[302]);}
else{
t24=t23;
f_17636(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17665,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17665(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17663 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17665,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17680,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17678 in k17663 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17672(2,t2,C_SCHEME_UNDEFINED);}}

/* k17670 in k17663 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17222(t5,t4);}

/* k17634 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17638 in k17634 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17222(t7,t6);}

/* k17599 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17603 in k17599 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17222(t7,t6);}

/* k17564 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17570(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17568 in k17564 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17222(t7,t6);}

/* k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17222(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17222,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17225(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17431,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_17431(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17466,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_17466(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[302]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17501,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[302]);}
else{
t8=t7;
f_17501(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17530,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17530(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17528 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17530,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17545,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17543 in k17528 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17537(2,t2,C_SCHEME_UNDEFINED);}}

/* k17535 in k17528 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17225(t5,t4);}

/* k17499 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17503 in k17499 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17225(t7,t6);}

/* k17464 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17468 in k17464 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17225(t7,t6);}

/* k17429 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17433 in k17429 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17225(t7,t6);}

/* k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17225,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17228,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17228(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17296,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_17296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17331,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_17331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[302]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17366,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[302]);}
else{
t8=t7;
f_17366(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17395,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17395(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17393 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17395,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17410,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17408 in k17393 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17402(2,t2,C_SCHEME_UNDEFINED);}}

/* k17400 in k17393 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17228(t5,t4);}

/* k17364 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17370(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17368 in k17364 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17228(t7,t6);}

/* k17329 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17333 in k17329 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17228(t7,t6);}

/* k17294 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17298 in k17294 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17228(t7,t6);}

/* k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17228(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17228,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17231,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17231(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17234,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17240,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17267,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[301],"next-in-markov"),t4);}

/* a17266 in k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17267,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17275,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t3);}

/* k17273 in a17266 in k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17238 in k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17243(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17253,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 377  make-list");
t7=C_retrieve(lf[62]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[98]);}}

/* k17251 in k17238 in k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17243(t3,t2);}

/* k17241 in k17238 in k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_17243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17243,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12425(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17244 in k17241 in k17238 in k17232 in k17229 in k17226 in k17223 in k17220 in k17217 in make-markov in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_17246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16782(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16782,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16786,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t3,t2);}

/* k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16789,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t2,((C_word*)t0)[2]);}

/* k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16792,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12200(t2,((C_word*)t0)[2]);}

/* k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16792,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t4,t1,C_fix(4));}

/* k16959 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16961,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16798(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12050(t2,((C_word*)t0)[2]);}}

/* k16972 in k16959 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_12068(t2,((C_word*)t0)[2]);}

/* k16976 in k16972 in k16959 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 377  recalc-weightings");
f_16670(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_16798(2,t2,C_SCHEME_UNDEFINED);}}

/* k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_16804(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16935,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16954,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_15820(t4,((C_word*)t0)[4]);}}

/* k16952 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16954,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 377  random-item-count-set!");
f_15811(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16933 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_15820(t2,((C_word*)t0)[2]);}

/* k16940 in k16933 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16946,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-min");
f_15784(t2,((C_word*)t0)[2]);}

/* k16944 in k16940 in k16933 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16804(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16804,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15730(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16810,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12434(t2,((C_word*)t0)[2]);}}

/* k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16810,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16814,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16852,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16894,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pick");
f_16814(t7,t2,t1);}

/* k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16894,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li231),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_16896(t5,((C_word*)t0)[2],t1);}

/* do2139 in k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16896(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16896,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16915,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16918,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_15802(t4,t2);}

/* k16916 in do2139 in k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16918,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_15820(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16915(t2,C_SCHEME_FALSE);}}

/* k16923 in k16916 in do2139 in k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16929,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_15802(t2,((C_word*)t0)[2]);}

/* k16927 in k16923 in k16916 in do2139 in k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16915(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k16913 in do2139 in k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16915(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16915,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16911,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pick");
f_16814(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16909 in k16913 in do2139 in k16892 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16896(t2,((C_word*)t0)[2],t1);}

/* k16850 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16855,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_16855(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16869,a[2]=t5,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_16869(t7,t2,((C_word*)t0)[2]);}}

/* do2143 in k16850 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16869(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16869,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16879,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-count-set!");
f_15811(t3,t4,C_fix(0));}}

/* k16877 in do2143 in k16850 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16869(t3,((C_word*)t0)[2],t2);}

/* k16853 in k16850 in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15730(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16814(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16814,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16822,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7367(t4,t3);}

/* k16820 in pick in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16822,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16824,a[2]=t3,a[3]=((C_word)li228),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_16824(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2134 in k16820 in pick in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16824(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16824,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16845,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-index");
f_15748(t4,t5);}

/* k16843 in do2134 in k16820 in pick in k16808 in k16802 in k16796 in k16790 in k16787 in k16784 in next-in-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_16824(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16670(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16670,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16780,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t2);}

/* k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16780,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[299];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16677,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16739,a[2]=t7,a[3]=t4,a[4]=((C_word)li226),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_16739(t9,t5,t2);}

/* do2106 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16739(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16739,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16768,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16772,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-weight");
f_15766(t4,t5);}}

/* k16770 in do2106 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(((C_word*)t0)[2],t1);}

/* k16766 in do2106 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16768,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  random-item-index-set!");
f_15739(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k16751 in k16766 in do2106 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16739(t3,((C_word*)t0)[2],t2);}

/* k16675 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16677,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16685,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li225),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_16685(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12425(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2112 in k16675 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16685(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16685,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12425(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16718,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16730,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-index");
f_15748(t8,t9);}}

/* k16728 in do2112 in k16675 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16730,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 377  floor");
t4=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k16716 in do2112 in k16675 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16718,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  random-item-index-set!");
f_15739(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k16700 in k16716 in do2112 in k16675 in k16778 in recalc-weightings in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16685(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15903(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_15903r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15903r(t0,t1,t2,t3);}}

static void C_ccall f_15903r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15907,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16220,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16220(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16220,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16227,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_16227(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_16227(t9,t8);}}

/* k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16227(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16227,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16230,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16230(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[296]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16533,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[296]);}
else{
t22=t21;
f_16533(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[297]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16568,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[297]);}
else{
t23=t22;
f_16568(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[298]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16603,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[298]);}
else{
t24=t23;
f_16603(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16632,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_16632(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16630 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16632,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16647,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16645 in k16630 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16639(2,t2,C_SCHEME_UNDEFINED);}}

/* k16637 in k16630 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16230(t5,t4);}

/* k16601 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16607(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16605 in k16601 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16230(t7,t6);}

/* k16566 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16570 in k16566 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16230(t7,t6);}

/* k16531 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16535 in k16531 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16230(t7,t6);}

/* k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16230,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16233,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16233(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[296]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16398,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[296]);}
else{
t6=t5;
f_16398(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[297]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16433,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[297]);}
else{
t7=t6;
f_16433(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[298]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16468,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[298]);}
else{
t8=t7;
f_16468(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16497,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16497(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16495 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16497,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16504,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16512,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16510 in k16495 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16504(2,t2,C_SCHEME_UNDEFINED);}}

/* k16502 in k16495 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16233(t5,t4);}

/* k16466 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16472(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16470 in k16466 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16233(t7,t6);}

/* k16431 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16437(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16435 in k16431 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16233(t7,t6);}

/* k16396 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16402(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16400 in k16396 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16233(t7,t6);}

/* k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16233(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16233,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16236,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16236(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[296]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16263,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[296]);}
else{
t6=t5;
f_16263(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[297]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16298,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[297]);}
else{
t7=t6;
f_16298(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[298]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16333,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[298]);}
else{
t8=t7;
f_16333(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16362,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16362(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16360 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16362,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16377,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16375 in k16360 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16369(2,t2,C_SCHEME_UNDEFINED);}}

/* k16367 in k16360 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16236(t5,t4);}

/* k16331 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16337(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16335 in k16331 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16236(t7,t6);}

/* k16296 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16302(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16300 in k16296 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16236(t7,t6);}

/* k16261 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16267,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16267(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16265 in k16261 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16236(t7,t6);}

/* k16234 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16239,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16239(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k16237 in k16234 in k16231 in k16228 in k16225 in %make-random-item in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16239,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[285],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15910,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15916,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16184,a[2]=t8,a[3]=t6,a[4]=((C_word)li222),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16184(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16184,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16188,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-min");
f_15784(t3,t2);}

/* k16186 in a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_15802(t2,((C_word*)t0)[2]);}

/* k16189 in k16186 in a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-weight");
f_15766(t2,((C_word*)t0)[2]);}

/* k16192 in k16189 in k16186 in a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16197,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15730(t2,((C_word*)t0)[2]);}

/* k16195 in k16192 in k16189 in k16186 in a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16200,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16210,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t3,t1);}

/* k16208 in k16195 in k16192 in k16189 in k16186 in a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16210,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16200(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_16200(t2,C_SCHEME_UNDEFINED);}}

/* k16198 in k16195 in k16192 in k16189 in k16186 in a16183 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_16200(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15916,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15923,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_15923(t8,t7);}
else{
t6=t5;
f_15923(t6,C_SCHEME_UNDEFINED);}}

/* k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15923,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_15926,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15926(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16090,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_16090(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16125,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_16125(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16154,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_16154(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16152 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16154,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16169,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16167 in k16152 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16161(2,t2,C_SCHEME_UNDEFINED);}}

/* k16159 in k16152 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15926(t5,t4);}

/* k16123 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16129,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16129(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16127 in k16123 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15926(t7,t6);}

/* k16088 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16094,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16094(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16092 in k16088 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15926(t7,t6);}

/* k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15926(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15926,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15929,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15929(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15990,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_15990(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16025,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_16025(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16054,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16054(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16052 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16054,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16069,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16067 in k16052 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16061(2,t2,C_SCHEME_UNDEFINED);}}

/* k16059 in k16052 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15929(t5,t4);}

/* k16023 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16029(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16027 in k16023 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_16029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15929(t7,t6);}

/* k15988 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15994(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15992 in k15988 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15929(t7,t6);}

/* k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15929(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15929,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15932,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15932(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15935,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15947,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[295],"next-in-weighting"),t4);}

/* a15946 in k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15947,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15953,a[2]=t2,a[3]=((C_word)li220),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15969,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t5,t3);}

/* k15967 in a15946 in k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15952 in a15946 in k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15953(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15953,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15961,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15730(t3,t2);}

/* k15959 in a15952 in a15946 in k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15933 in k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  recalc-weightings");
f_16670(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_15938(2,t3,C_SCHEME_UNDEFINED);}}

/* k15936 in k15933 in k15930 in k15927 in k15924 in k15921 in k15914 in k15908 in k15905 in make-weighting in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15820(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15820,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15811(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15811,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[285]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15802(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15802,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15784(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15784,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15766(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15766,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15748(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15748,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15739(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15739,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[285]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15730(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15730,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15508(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15508,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15511,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15558,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t2);}

/* k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15561,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15584,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15703,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12434(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_15561(t4,C_SCHEME_UNDEFINED);}}

/* k15701 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(((C_word*)t0)[2],t1);}

/* k15582 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15591,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15638,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12236(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15665,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12236(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15684,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12236(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15699,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12236(t3,((C_word*)t0)[2]);}}

/* k15697 in k15582 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15699,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[5];
f_15511(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15682 in k15582 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15684,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[5];
f_15511(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15663 in k15582 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15665,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[6];
f_15511(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k15636 in k15582 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15638,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 377  rotate-items");
t4=((C_word*)t0)[7];
f_15511(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k15589 in k15582 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_15561(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k15559 in k15556 in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15561(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_15511,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15517,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li209),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_15517(t10,t1,t3);}

/* do1874 in rotate-items in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15517(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15517,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15533,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k15531 in do1874 in rotate-items in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15536,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k15534 in k15531 in do1874 in rotate-items in next-in-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15536,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15517(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15034(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15034r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15034r(t0,t1,t2,t3);}}

static void C_ccall f_15034r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15038,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15498,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15038(t8,t7);}}

/* k15496 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15038(t3,t2);}

/* k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15038(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15038,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15041,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15041(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[267]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15371,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[267]);}
else{
t22=t21;
f_15371(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[268]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15406,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[268]);}
else{
t23=t22;
f_15406(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[283]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15441,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[283]);}
else{
t24=t23;
f_15441(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15470,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_15470(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15468 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15470,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15485,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15483 in k15468 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15477(2,t2,C_SCHEME_UNDEFINED);}}

/* k15475 in k15468 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15041(t5,t4);}

/* k15439 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15445,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15445(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15443 in k15439 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15041(t7,t6);}

/* k15404 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15410,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15410(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15408 in k15404 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15041(t7,t6);}

/* k15369 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15375,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15375(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15373 in k15369 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15041(t7,t6);}

/* k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15041(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15041,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15044(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15236,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_15236(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15271,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_15271(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[283]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15306,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[283]);}
else{
t8=t7;
f_15306(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15335,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15335(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15333 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15335,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15350,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15348 in k15333 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15342(2,t2,C_SCHEME_UNDEFINED);}}

/* k15340 in k15333 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15044(t5,t4);}

/* k15304 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15310(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15308 in k15304 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15044(t7,t6);}

/* k15269 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15275,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15275(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15273 in k15269 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15044(t7,t6);}

/* k15234 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15240,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15240(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15238 in k15234 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15044(t7,t6);}

/* k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15044,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15047,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15047(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15101,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_15101(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15136,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_15136(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[283]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15171,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[283]);}
else{
t8=t7;
f_15171(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15200,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15200(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15198 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15200,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15215,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15213 in k15198 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15207(2,t2,C_SCHEME_UNDEFINED);}}

/* k15205 in k15198 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15047(t5,t4);}

/* k15169 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15175(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15173 in k15169 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15047(t7,t6);}

/* k15134 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15140,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15140(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15138 in k15134 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15047(t7,t6);}

/* k15099 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15105,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15105(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15103 in k15099 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15047(t7,t6);}

/* k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_15047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15047,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15050,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15050(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15048 in k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k15051 in k15048 in k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15053,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15059,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15068,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[282],"next-in-rotation"),t5);}

/* a15067 in k15051 in k15048 in k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15068,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15080,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t3);}

/* k15078 in a15067 in k15051 in k15048 in k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15057 in k15051 in k15048 in k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15062,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12425(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15060 in k15057 in k15051 in k15048 in k15045 in k15042 in k15039 in k15036 in make-rotation in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14958(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14958,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14962,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t3,t2);}

/* k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14965,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14981,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12236(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_14965(2,t4,C_SCHEME_UNDEFINED);}}

/* k14979 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14981,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14991,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7360(t3,t1);}

/* k14989 in k14979 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14991,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14993,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li205),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14993(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1774 in k14989 in k14979 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14993(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14993,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15010,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 377  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15008 in do1774 in k14989 in k14979 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15013,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15011 in k15008 in do1774 in k14989 in k14979 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15013,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15024,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7360(t3,((C_word*)t0)[2]);}

/* k15022 in k15011 in k15008 in do1774 in k14989 in k14979 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_15024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_14993(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k14963 in k14960 in next-in-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14695(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_14695r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14695r(t0,t1,t2,t3);}}

static void C_ccall f_14695r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14699,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14948,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14699(t8,t7);}}

/* k14946 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14699(t3,t2);}

/* k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14699,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14702,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14702(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14856,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_14856(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14891,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_14891(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14920,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_14920(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14918 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14920,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14927,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14935,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14933 in k14918 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14927(2,t2,C_SCHEME_UNDEFINED);}}

/* k14925 in k14918 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14702(t5,t4);}

/* k14889 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14895(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14893 in k14889 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14702(t7,t6);}

/* k14854 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14860(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14858 in k14854 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14702(t7,t6);}

/* k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14702,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14705,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14705(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14756,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_14756(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14791,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_14791(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14820,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14820(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14818 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14820,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14835,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14833 in k14818 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14827(2,t2,C_SCHEME_UNDEFINED);}}

/* k14825 in k14818 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14705(t5,t4);}

/* k14789 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14795(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14793 in k14789 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14705(t7,t6);}

/* k14754 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14760(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14758 in k14754 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14705(t7,t6);}

/* k14703 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14705,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14708,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14708(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14706 in k14703 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k14709 in k14706 in k14703 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14711,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14717,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14723,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[280],"next-in-heap"),t5);}

/* a14722 in k14709 in k14706 in k14703 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14723,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14735,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t3);}

/* k14733 in a14722 in k14709 in k14706 in k14703 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14715 in k14709 in k14706 in k14703 in k14700 in k14697 in make-heap in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14659(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14659,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14663,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t3,t2);}

/* k14661 in next-in-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14663,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14672,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14679,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14685,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  pattern-data-set!");
f_12209(t4,((C_word*)t0)[2],t5);}}

/* k14683 in k14661 in next-in-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14677 in k14661 in next-in-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[2],t1,C_fix(1));}

/* k14670 in k14661 in next-in-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14412(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14412r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14412r(t0,t1,t2,t3);}}

static void C_ccall f_14412r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14416,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14416(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14416(t8,t7);}}

/* k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14416(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14416,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14419,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14419(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14565,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_14565(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14600,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_14600(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14629,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_14629(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14627 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14629,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14644,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14642 in k14627 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14636(2,t2,C_SCHEME_UNDEFINED);}}

/* k14634 in k14627 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14419(t5,t4);}

/* k14598 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14604,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14604(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14602 in k14598 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14419(t7,t6);}

/* k14563 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14565,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14569(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14567 in k14563 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14419(t7,t6);}

/* k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14419,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14422,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14422(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14465,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_14465(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14500,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_14500(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14529,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14529(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14527 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14529,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14536,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14544,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14542 in k14527 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14536(2,t2,C_SCHEME_UNDEFINED);}}

/* k14534 in k14527 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14422(t5,t4);}

/* k14498 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14504(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14502 in k14498 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14422(t7,t6);}

/* k14463 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14469(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14467 in k14463 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14422(t7,t6);}

/* k14420 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14422(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14422,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14425,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14425(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14423 in k14420 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k14426 in k14423 in k14420 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14428,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14434,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14436,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[278],"next-in-line"),t4);}

/* a14435 in k14426 in k14423 in k14420 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14436(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14436,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14444,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t3);}

/* k14442 in a14435 in k14426 in k14423 in k14420 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14432 in k14426 in k14423 in k14420 in k14417 in k14414 in make-line in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14197(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14197,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14201,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12434(t3,t2);}

/* k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14201,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14207,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14231,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[270]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14410,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  palin-len");
f_13638(t8,t1);}}

/* k14408 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14410,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  palin-inc-set!");
f_13647(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_14207(2,t2,C_SCHEME_UNDEFINED);}}

/* k14361 in k14408 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14363,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14375,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_14375(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_14375(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_14375(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_14375(t7,C_SCHEME_FALSE);}}}

/* k14373 in k14361 in k14408 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14375(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14375,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14207(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14207(2,t4,t3);}}

/* k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  palin-len");
f_13638(t2,((C_word*)t0)[2]);}

/* k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14234,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[270]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t7=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14243,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  palin-inc-set!");
f_13647(t2,((C_word*)t0)[2],C_fix(1));}

/* k14241 in k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14331,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_14331(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_14331(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_14331(t5,C_SCHEME_FALSE);}}}

/* k14329 in k14241 in k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14331(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14246(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_14246(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14246(t3,t2);}}

/* k14244 in k14241 in k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_14246(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14246,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14252,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14325,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12200(t3,((C_word*)t0)[2]);}

/* k14323 in k14244 in k14241 in k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(((C_word*)t0)[2],t1,C_fix(2));}

/* k14250 in k14244 in k14241 in k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14252,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_14207(2,t2,C_SCHEME_UNDEFINED);}}

/* k14253 in k14250 in k14244 in k14241 in k14238 in k14232 in k14229 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14255,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[275]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[276]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],t1,t2);}}}}

/* k14205 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[270]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[270]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t9=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k14208 in k14205 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t2,((C_word*)t0)[2]);}

/* k14215 in k14208 in k14205 in k14199 in next-in-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13727(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13727r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13727r(t0,t1,t2,t3);}}

static void C_ccall f_13727r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13731,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13731(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13731(t8,t7);}}

/* k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13731(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13731,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13734,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13734(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[267]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14068,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[267]);}
else{
t22=t21;
f_14068(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[268]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14103,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[268]);}
else{
t23=t22;
f_14103(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[274]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14138,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[274]);}
else{
t24=t23;
f_14138(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14167,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14167(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14165 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14167,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14182,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14180 in k14165 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14174(2,t2,C_SCHEME_UNDEFINED);}}

/* k14172 in k14165 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13734(t5,t4);}

/* k14136 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14142,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14142(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14140 in k14136 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13734(t7,t6);}

/* k14101 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14107(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14105 in k14101 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13734(t7,t6);}

/* k14066 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14072(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14070 in k14066 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13734(t7,t6);}

/* k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13734(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13734,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13737(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13933,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_13933(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13968,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_13968(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[274]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14003,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[274]);}
else{
t8=t7;
f_14003(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14032,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14032(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14030 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14032,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14039,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14047,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14045 in k14030 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14039(2,t2,C_SCHEME_UNDEFINED);}}

/* k14037 in k14030 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13737(t5,t4);}

/* k14001 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14007,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14007(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14005 in k14001 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_14007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13737(t7,t6);}

/* k13966 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13972(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13970 in k13966 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13737(t7,t6);}

/* k13931 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13937(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13935 in k13931 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13737(t7,t6);}

/* k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13737,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13740,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13740(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13798,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_13798(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13833,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_13833(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[274]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13868,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[274]);}
else{
t8=t7;
f_13868(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13897,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_13897(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13895 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13897,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13912,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13910 in k13895 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13904(2,t2,C_SCHEME_UNDEFINED);}}

/* k13902 in k13895 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13740(t5,t4);}

/* k13866 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13872(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13870 in k13866 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13740(t7,t6);}

/* k13831 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13835 in k13831 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13740(t7,t6);}

/* k13796 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13800 in k13796 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13740(t7,t6);}

/* k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13740(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13740,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13743,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13743(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13741 in k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13746,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k13744 in k13741 in k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13746,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13752,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13769,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[273],"next-in-palindrome"),t5);}

/* a13768 in k13744 in k13741 in k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13769,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13777,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t3);}

/* k13775 in a13768 in k13744 in k13741 in k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13750 in k13744 in k13741 in k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13755,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[270],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12425(t2,((C_word*)t0)[4],t5);}

/* k13753 in k13750 in k13744 in k13741 in k13738 in k13735 in k13732 in k13729 in make-palindrome in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13647(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13647,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[270]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13638(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13638,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13566(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13566,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13570,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t3,t2);}

/* k13568 in next-in-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13573,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_13573(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_13573(t4,C_SCHEME_UNDEFINED);}}

/* k13571 in k13568 in next-in-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13311(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13311r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13311r(t0,t1,t2,t3);}}

static void C_ccall f_13311r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13315,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13315(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13315(t8,t7);}}

/* k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13315(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13315,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13318,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13318(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13472,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_13472(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13507,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_13507(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13536,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_13536(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13534 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13536,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13551,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13549 in k13534 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13543(2,t2,C_SCHEME_UNDEFINED);}}

/* k13541 in k13534 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13318(t5,t4);}

/* k13505 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13511,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13511(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13509 in k13505 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13318(t7,t6);}

/* k13470 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13476(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13474 in k13470 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13318(t7,t6);}

/* k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13318(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13318,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13321,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13321(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13372,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_13372(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13407,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_13407(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13436,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_13436(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13434 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13436,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13451,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13449 in k13434 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13443(2,t2,C_SCHEME_UNDEFINED);}}

/* k13441 in k13434 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13321(t5,t4);}

/* k13405 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13411,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13411(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13409 in k13405 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13321(t7,t6);}

/* k13370 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13376(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13374 in k13370 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13321(t7,t6);}

/* k13319 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13321(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13321,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13324,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13324(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13322 in k13319 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12489(t2);}

/* k13325 in k13322 in k13319 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13327,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13333,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13339,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12499(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[266],"next-in-cycle"),t5);}

/* a13338 in k13325 in k13322 in k13319 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13339,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13351,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12218(t4,t3);}

/* k13349 in a13338 in k13325 in k13322 in k13319 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13331 in k13325 in k13322 in k13319 in k13316 in k13313 in make-cycle in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13196(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13196,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13309,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t3,t2);}

/* k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13309,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13206,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13209,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13294,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-stream");
f_12086(t7,t1);}

/* k13292 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13294,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13305,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  period-stream");
f_12086(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_13209(2,t2,C_SCHEME_UNDEFINED);}}

/* k13303 in k13292 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(((C_word*)t0)[2],t1);}

/* k13299 in k13292 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t4=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_12068(t2,((C_word*)t0)[3]);}

/* k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13291,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13217,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[218]);
t7=t4;
f_13217(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 377  period-length");
f_12068(t4,((C_word*)t0)[3]);}}

/* k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13217,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13220,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13226,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13281,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12200(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_13226(2,t5,C_SCHEME_FALSE);}}

/* k13279 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(((C_word*)t0)[2],t1,C_fix(8));}

/* k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13226,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13245,a[2]=t3,a[3]=((C_word)li190),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  map-pattern-data");
f_13150(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13220(t2,C_SCHEME_UNDEFINED);}}

/* a13244 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13245(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13245,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13274,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  reset-period");
f_13196(t3,t2);}

/* k13272 in a13244 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13274,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13253 in k13272 in a13244 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13270,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_12122(t3,t1);}

/* k13268 in k13253 in k13272 in a13244 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13270,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-omit-set!");
f_12113(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13256 in k13253 in k13272 in a13244 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13258,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k13227 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13229,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 377  max");
t4=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_13220(t2,C_SCHEME_UNDEFINED);}}

/* k13237 in k13227 in k13224 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13220(t3,t2);}

/* k13218 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13220,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13221 in k13218 in k13215 in k13289 in k13207 in k13204 in k13307 in reset-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13150(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13150,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[228]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13141(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13141,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[228]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12840(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12840,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12847,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t3,t2);}

/* k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12847,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 377  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  promise?");
t3=C_retrieve(lf[263]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k13134 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  force");
t2=C_retrieve(lf[262]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12850,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12853,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13121,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12050(t5,t1);}

/* k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13121,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13113,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-reps");
f_12140(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_12853(2,t2,C_SCHEME_UNDEFINED);}}

/* k13111 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13113,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13105,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_12281(t5,((C_word*)t0)[4],lf[257]);}
else{
t5=((C_word*)t0)[2];
f_13076(t5,C_SCHEME_UNDEFINED);}}

/* k13103 in k13111 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13108,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_12299(t2,((C_word*)t0)[2],lf[255]);}

/* k13106 in k13103 in k13111 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[257]);
t3=((C_word*)t0)[2];
f_13076(t3,t2);}

/* k13074 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13076,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13082(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13099,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  reset-period");
f_13196(t4,((C_word*)t0)[2]);}}

/* k13097 in k13074 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13082(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13080 in k13074 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13082(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13082,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[243]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_12281(t3,((C_word*)t0)[2],lf[243]);}
else{
t2=((C_word*)t0)[3];
f_12853(2,t2,C_SCHEME_UNDEFINED);}}

/* k13084 in k13080 in k13074 in k13119 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_12299(((C_word*)t0)[3],((C_word*)t0)[2],lf[255]);}

/* k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12853,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12200(t2,((C_word*)t0)[3]);}}

/* k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12859,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12865,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12951,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t10,t1,C_fix(1));}

/* k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12951,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12954,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12967,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_13141(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12974,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13063,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t3,((C_word*)t0)[2],C_fix(8));}}

/* k13061 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13063,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13070,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_12068(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12974(t2,C_SCHEME_FALSE);}}

/* k13068 in k13061 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_12974(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12974,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12976,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li186),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_12976(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12976(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12976,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13025,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li185),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13025(t9,t5);}}

/* do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_13025(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13025,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13060,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12254(t2,((C_word*)t0)[3]);}

/* k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13060,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[243]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13035,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13042,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13049,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_13141(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_13141(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k13047 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13194,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t2,t1);}

/* k13192 in k13047 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13194,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12272(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13042(2,t2,((C_word*)t0)[2]);}}

/* k13167 in k13192 in k13047 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13190,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_12122(t2,t1);}

/* k13188 in k13167 in k13192 in k13047 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13190,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13178,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13186,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_12122(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13042(2,t2,((C_word*)t0)[2]);}}

/* k13184 in k13188 in k13167 in k13192 in k13047 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13186,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-omit-set!");
f_12113(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13176 in k13188 in k13167 in k13192 in k13047 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13042(2,t2,lf[243]);}

/* k13040 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12245(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13033 in k13058 in do1426 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13025(t2,((C_word*)t0)[2]);}

/* k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13023,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12254(t3,((C_word*)t0)[3]);}

/* k13021 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(((C_word*)t0)[2],t1);}

/* k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12987,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13006,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13019,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12254(t5,((C_word*)t0)[3]);}

/* k13017 in k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(((C_word*)t0)[2],t1);}

/* k13004 in k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13006,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13010,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13014,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12254(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[255]);
t3=((C_word*)t0)[3];
f_12990(t3,t2);}}

/* k13012 in k13004 in k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-state");
f_12308(((C_word*)t0)[2],t1);}

/* k13008 in k13004 in k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_13010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12990(t3,t2);}

/* k12988 in k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12990,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12993,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[243]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12245(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_12993(2,t5,t4);}}

/* k12991 in k12988 in k12985 in k12981 in do1422 in k12972 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_12976(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12965 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12245(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12952 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12963,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12254(t3,((C_word*)t0)[2]);}

/* k12961 in k12952 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(((C_word*)t0)[2],t1);}

/* k12956 in k12952 in k12949 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[255]);
t4=((C_word*)t0)[2];
f_12865(2,t4,t3);}

/* k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[255]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12910,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12922,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12050(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12945,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t5,((C_word*)t0)[2],C_fix(64));}}

/* k12943 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12245(((C_word*)t0)[3],((C_word*)t0)[2],lf[243]);}
else{
t2=((C_word*)t0)[3];
f_12925(2,t2,C_SCHEME_UNDEFINED);}}

/* k12923 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t2,((C_word*)t0)[2],C_fix(16));}

/* k12929 in k12923 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12931,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12050(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12868(2,t2,C_SCHEME_UNDEFINED);}}

/* k12940 in k12929 in k12923 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12942,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12920 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12922,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12041(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12908 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12245(t2,((C_word*)t0)[2],lf[243]);}

/* k12911 in k12908 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_12868(2,t3,t2);}

/* k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12904,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12050(t3,((C_word*)t0)[2]);}

/* k12902 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12904,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[255]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-reps");
f_12140(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_12871(2,t3,t2);}}

/* k12897 in k12902 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12899,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k12869 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12884,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_12874(t3,C_SCHEME_UNDEFINED);}}

/* k12882 in k12869 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12874(t3,t2);}

/* k12872 in k12869 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12874(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12874,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_12299(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12875 in k12872 in k12869 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_12281(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k12878 in k12875 in k12872 in k12869 in k12866 in k12863 in k12857 in k12851 in k12848 in k12845 in next-1 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12717(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_12717r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_12717r(t0,t1,t2,t3);}}

static void C_ccall f_12717r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12738,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li182),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_12738(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12776,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t1,t2);}}

/* k12774 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12776,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12786,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k12784 in k12774 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12786,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12788,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li183),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12788(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1398 in k12784 in k12774 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12788(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12788,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[257]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12807,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12817,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  eop?");
t13=C_retrieve(lf[254]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k12815 in do1398 in k12784 in k12774 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12817,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_12807(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12822,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t2,((C_word*)t0)[2]);}}

/* k12820 in k12815 in do1398 in k12784 in k12774 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12807(t3,t2);}

/* k12805 in do1398 in k12784 in k12774 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12807(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_12788(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1391 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12738(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12738,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12770,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_12840(t4,((C_word*)t0)[2]);}}

/* k12768 in do1391 in next in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12770,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_12738(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12698(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12698,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12705,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t3,t2);}

/* k12703 in eod? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12705,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12712,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value");
t3=C_retrieve2(lf[237],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[257]));}}

/* k12710 in k12703 in eod? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  eod?");
t2=C_retrieve(lf[256]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12679(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12679,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12686,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t3,t2);}

/* k12684 in eop? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12686,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12693,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state");
f_12308(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[255]));}}

/* k12691 in k12684 in eop? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  eop?");
t2=C_retrieve(lf[254]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12499(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12499,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12503,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data-set!");
f_12209(t12,t2,t3);}

/* k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12512,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12512,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12515,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12669,a[2]=t3,a[3]=((C_word)li178),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  map-pattern-data");
f_13150(t4,t5,((C_word*)t0)[7]);}

/* a12668 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12669(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12669,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12676,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12185(t3,t2);}

/* k12674 in a12668 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12518,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_12518(t5,t4);}
else{
t3=t2;
f_12518(t3,C_SCHEME_UNDEFINED);}}

/* k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12518(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12518,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[244]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_12524(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[251]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12524(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[252],t4);}}}

/* k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12524,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[245]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_12530(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[249]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12530(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[250],t4);}}}

/* k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12593,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k12591 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12593,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[247]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12533(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7145(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k12605 in k12591 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12607,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[248]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12533(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12533(t4,t3);}}

/* k12531 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12533,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t8=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k12534 in k12531 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12536,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12542,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_12542(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_12542(t8,t7);}}

/* k12540 in k12534 in k12531 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12542(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12542,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12545,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12555,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 377  make-period");
f_12029(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 377  make-period");
f_12029(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k12553 in k12540 in k12534 in k12531 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t4=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k12543 in k12540 in k12534 in k12531 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12548,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k12546 in k12543 in k12540 in k12534 in k12531 in k12528 in k12522 in k12516 in k12513 in k12510 in k12507 in k12504 in k12501 in initialize-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12489(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12489,NULL,1,t1);}
t2=lf[243];
t3=lf[243];
t4=lf[243];
t5=lf[244];
t6=lf[245];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[228],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12434(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12434,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12425(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12425,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12308(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12308,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12299(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12299,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_12290 in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12290(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12290,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12281(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12281,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12272(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12272,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12254(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12254,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12245(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12245,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12236(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12236,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12218(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12218,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12209(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12209,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12200(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12200,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12185(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12185,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[228]));}

/* period-reps in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12140(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12140,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12122(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12122,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12113(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12113,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12086(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12086,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12068(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12068,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12050(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12050,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12041(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12041,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_12029(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12029,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[218],t2,t3,t4,t5,t6,t7));}

/* fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11716(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11716,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12027,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  round");
t7=*((C_word*)lf[103]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_12027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12027,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11729,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11962,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t10,t3);}

/* k11960 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11962,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li153),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_11964(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1118 in k11960 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11964(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11964,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t5=(C_word)C_i_cdr(((C_word*)t0)[8]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t6=t2;
t7=((C_word*)t0)[2];
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7462,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t5,t6,t7);}}

/* f_7462 in do1118 in k11960 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7462,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub358(t4,t5,t6));}

/* k11977 in do1118 in k11960 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11979,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11982,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[8])[1],lf[216]))){
t4=t3;
f_11982(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],((C_word*)t0)[7]);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_11982(t11,t10);}}

/* k11980 in k11977 in do1118 in k11960 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11982(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11982,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_11964(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11805,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li151),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_11805(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11805(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11805,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11958,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  caar");
t7=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k11956 in do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11958,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11942,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k11940 in k11956 in do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11942,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_11836(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11861,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11894,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li150),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_11894(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1132 in k11940 in k11956 in do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11894(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11894,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11908,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_11908(t14,t13);}
else{
t13=t12;
f_11908(t13,C_SCHEME_UNDEFINED);}}}

/* k11906 in do1132 in k11940 in k11956 in do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11908,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_11894(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11859 in k11940 in k11956 in do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11861,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_11836(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_11836(t5,t4);}}

/* k11834 in k11940 in k11956 in do1126 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_11805(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11730 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11732,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11740,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li149),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_11740(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1154 in k11730 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11740,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  make-spektrum");
f_10511(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11773,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[214]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k11771 in do1154 in k11730 in k11727 in k12025 in fm-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11773,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_11740(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11009(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+73)){
C_save_and_reclaim((void*)tr3r,(void*)f_11009r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11009r(t0,t1,t2,t3);}}

static void C_ccall f_11009r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word *a=C_alloc(73);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=t3;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11013,a[2]=t19,a[3]=t17,a[4]=t15,a[5]=t23,a[6]=t13,a[7]=t3,a[8]=t21,a[9]=t11,a[10]=t9,a[11]=t7,a[12]=t5,a[13]=t2,a[14]=t1,tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t21)[1]))){
t25=t24;
f_11013(t25,C_SCHEME_UNDEFINED);}
else{
t25=(C_word)C_i_car(((C_word*)t21)[1]);
t26=(C_word)C_eqp(t25,lf[209]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11559,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t13,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[209]);}
else{
t28=t27;
f_11559(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t25,lf[210]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11594,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t15,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[210]);}
else{
t29=t28;
f_11594(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t25,lf[211]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11629,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t17,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[211]);}
else{
t30=t29;
f_11629(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(C_word)C_eqp(t25,lf[212]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11664,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t19,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[212]);}
else{
t31=t30;
f_11664(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11693,a[2]=t24,a[3]=t13,a[4]=t5,a[5]=t21,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[10],t3);}
else{
t31=t30;
f_11693(2,t31,C_SCHEME_UNDEFINED);}}}}}}}

/* k11691 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11693,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11708,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11706 in k11691 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11700(2,t2,C_SCHEME_UNDEFINED);}}

/* k11698 in k11691 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11013(t5,t4);}

/* k11662 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11668(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11666 in k11662 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11013(t7,t6);}

/* k11627 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11631 in k11627 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11013(t7,t6);}

/* k11592 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11598(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11596 in k11592 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11013(t7,t6);}

/* k11557 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11563(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11561 in k11557 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11013(t7,t6);}

/* k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[53],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11013,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11016(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11389,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_11389(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11424,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[210]);}
else{
t7=t6;
f_11424(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[211]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11459,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[211]);}
else{
t8=t7;
f_11459(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[212]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11494,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[212]);}
else{
t9=t8;
f_11494(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11523,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11523(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11521 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11523,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11538,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11536 in k11521 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11530(2,t2,C_SCHEME_UNDEFINED);}}

/* k11528 in k11521 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11016(t5,t4);}

/* k11492 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11498(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11496 in k11492 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11016(t7,t6);}

/* k11457 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11463(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11461 in k11457 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11016(t7,t6);}

/* k11422 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11426 in k11422 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11016(t7,t6);}

/* k11387 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11393(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11391 in k11387 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11016(t7,t6);}

/* k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[53],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11016,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11019(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11219,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_11219(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11254,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[210]);}
else{
t7=t6;
f_11254(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[211]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11289,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[211]);}
else{
t8=t7;
f_11289(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[212]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11324,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[212]);}
else{
t9=t8;
f_11324(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11353,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11353(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11351 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11353,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11368,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11366 in k11351 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11360(2,t2,C_SCHEME_UNDEFINED);}}

/* k11358 in k11351 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11019(t5,t4);}

/* k11322 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11328,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11328(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11326 in k11322 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11019(t7,t6);}

/* k11287 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11293(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11291 in k11287 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11019(t7,t6);}

/* k11252 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11258,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11258(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11256 in k11252 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11019(t7,t6);}

/* k11217 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11223(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11221 in k11217 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11019(t7,t6);}

/* k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11019,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11022,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[14],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11022(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11049,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_11049(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11084,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[210]);}
else{
t7=t6;
f_11084(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[211]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11119,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[211]);}
else{
t8=t7;
f_11119(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[212]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11154,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[212]);}
else{
t9=t8;
f_11154(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11183,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11183(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11181 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11183,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11198,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11196 in k11181 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11190(2,t2,C_SCHEME_UNDEFINED);}}

/* k11188 in k11181 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11022(t5,t4);}

/* k11152 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11158,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11158(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11156 in k11152 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11022(t7,t6);}

/* k11117 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11123,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11123(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11121 in k11117 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11022(t7,t6);}

/* k11082 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11088(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11086 in k11082 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11022(t7,t6);}

/* k11047 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11053,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11053(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11051 in k11047 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11022(t7,t6);}

/* k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_11022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11022,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11025,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11025(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_11025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11025,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=((C_word*)t0)[6];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10775,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t10)){
t11=C_set_block_item(t8,0,C_fix(1));
t12=t9;
f_10775(t12,t11);}
else{
t11=t9;
f_10775(t11,C_SCHEME_UNDEFINED);}}

/* k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10775(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10775,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_UNDEFINED;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_UNDEFINED;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t21=C_set_block_item(t3,0,t20);
t22=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_10784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t19,a[7]=t17,a[8]=((C_word*)t0)[6],a[9]=t15,a[10]=t13,a[11]=t11,a[12]=t3,a[13]=t20,a[14]=((C_word*)t0)[7],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t23=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t23))(3,t23,t22,((C_word*)t0)[2]);}

/* k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10784,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_10788,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[55],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10788,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10790,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li138),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10823,a[2]=((C_word*)t0)[13],a[3]=((C_word)li139),tmp=(C_word)a,a+=4,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10833,a[2]=((C_word*)t0)[15],a[3]=((C_word)li140),tmp=(C_word)a,a+=4,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10843,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[15],a[4]=((C_word)li141),tmp=(C_word)a,a+=5,tmp));
t7=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10857,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[15],a[4]=((C_word)li142),tmp=(C_word)a,a+=5,tmp));
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10872,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[15],a[5]=((C_word)li143),tmp=(C_word)a,a+=6,tmp));
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10892,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[14],a[4]=((C_word*)t0)[13],tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_not(((C_word*)t0)[4]);
t11=(C_truep(t10)?t10:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t11)){
if(C_truep(((C_word*)t0)[8])){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[2])[1]);}}}
else{
if(C_truep(((C_word*)t0)[8])){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10942,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li144),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10957,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[4],a[4]=((C_word)li145),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10975,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li146),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10990,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[4],a[4]=((C_word)li147),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}}

/* a10989 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10990(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10990,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a10974 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10975,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a10956 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10957,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  addquantkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a10941 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10942(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10942,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  adduniquequantkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k10890 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  shuffle!");
t4=C_retrieve(lf[139]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_10872 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10872,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10876,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10889,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k10887 */
static void C_ccall f_10889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  quantize");
t2=C_retrieve(lf[101]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10874 */
static void C_ccall f_10876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10882,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  in?");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k10880 in k10874 */
static void C_ccall f_10882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[2]);}}

/* f_10857 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10857(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10857,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10859 */
static void C_ccall f_10861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10867,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  in?");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k10865 in k10859 */
static void C_ccall f_10867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[2]);}}

/* f_10843 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10843(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10843,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10851,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10855,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k10853 */
static void C_ccall f_10855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  quantize");
t2=C_retrieve(lf[101]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10849 */
static void C_ccall f_10851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_10833 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10833(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10833,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10841,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10839 */
static void C_ccall f_10841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_10823 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10823(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10823,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_member(t2,t3));}

/* f_10790 in k10786 in k10782 in k10773 in k11023 in k11020 in k11017 in k11014 in k11011 in spectrum-keys in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10790(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10790,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* spectrum-maxamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10746(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10746,3,t0,t1,t2);}
t3=lf[206];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10750,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t6=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k10748 in spectrum-maxamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10750,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10761,a[2]=((C_word*)t0)[2],a[3]=((C_word)li136),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a10760 in k10748 in spectrum-maxamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10761(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10761,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k10757 in k10748 in spectrum-maxamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10715(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10715,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10719,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t6=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k10717 in spectrum-minamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10719,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10730,a[2]=((C_word*)t0)[2],a[3]=((C_word)li134),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[204]);}}

/* a10729 in k10717 in spectrum-minamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10730(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10730,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k10726 in k10717 in spectrum-minamp in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10697(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10697,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10705,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10703 in spectrum-maxfreq in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10713,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t3=C_retrieve(lf[194]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10711 in k10703 in spectrum-maxfreq in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10713,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10687(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10687,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10695,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10693 in spectrum-minfreq in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10628(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10628,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10635,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-freqs");
t7=C_retrieve2(lf[190],"spektrum-freqs");
f_10568(3,t7,t6,t2);}

/* k10633 in spectrum-pairs in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10635,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10638,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-amps");
t3=C_retrieve2(lf[191],"spektrum-amps");
f_10586(3,t3,t2,((C_word*)t0)[2]);}

/* k10636 in k10633 in spectrum-pairs in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10638,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-size");
t3=C_retrieve2(lf[189],"spektrum-size");
f_10550(3,t3,t2,((C_word*)t0)[2]);}

/* k10639 in k10636 in k10633 in spectrum-pairs in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10641,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10646,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li130),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_10646(t5,((C_word*)t0)[2],C_fix(0));}

/* do930 in k10639 in k10636 in k10633 in spectrum-pairs in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10646(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10646,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[199]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* make-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10598(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_10598r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_10598r(t0,t1,t2,t3);}}

static void C_ccall f_10598r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10602,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_vemptyp(t3))){
t5=t4;
f_10602(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 376  list->vector");
t6=*((C_word*)lf[193]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k10600 in make-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10602,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10612,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  list->vector");
t4=*((C_word*)lf[193]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k10610 in k10600 in make-spectrum in k10594 in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  make-spektrum");
f_10511(((C_word*)t0)[4],C_SCHEME_FALSE,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* spektrum-amps in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10586(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10586,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spektrum-freqs in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10568,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spektrum-size in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10550(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10550,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spektrum-time in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10532(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10532,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-spektrum in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10511(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10511,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[187],t2,t3,t4,t5));}

/* transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10203,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10249,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10256,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10304,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10304(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 375  key");
t6=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[183],t2);}}}

/* k10302 in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10304,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10321,a[2]=t1,a[3]=((C_word)li122),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 375  transpkeys");
f_10256(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10349,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10353,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k10351 in k10302 in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  transpkeys");
f_10256(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10347 in k10302 in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10320 in k10302 in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10321(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10321,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10256(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10256,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10265,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li120),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10265(t8,t1,t2,t4);}

/* do790 in transpkeys in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10265(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10265,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10247 in transpose in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10249,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 375  note");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10068(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10068,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[180],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10098,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10168,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 375  invkeys");
f_10098(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10190,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10194,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t7=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[181],t2);}}}

/* k10192 in invert in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  invkeys");
f_10098(((C_word*)t0)[2],t1);}

/* k10188 in invert in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10167 in invert in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10168(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10168,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10098(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10098,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10114,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li116),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10114(t9,t1,t5,t4);}

/* do775 in invkeys in invert in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_10114(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10114,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10023(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10023,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  modulo");
t3=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[178]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10055,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10066,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10064 in pc in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  modulo");
t2=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10053 in pc in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[178]),t1);}

/* hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9907(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9907,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9922,a[2]=t5,a[3]=t3,a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9922(t7,t1,t2,lf[177],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7336(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10021,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9635(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10019 in hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_10021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do755 in hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9922(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9922,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9935,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9952,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9952(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9952(t14,(C_word)C_i_listp(t13));}}}

/* k9950 in do755 in hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9952,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9956,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  hz");
t4=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9971,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9635(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k9969 in k9950 in do755 in hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9971,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9935(t9,t8);}

/* k9954 in k9950 in do755 in hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9956,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9935(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9933 in do755 in hz in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9935(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9922(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9785(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9785,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9800,a[2]=t5,a[3]=t3,a[4]=((C_word)li111),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9800(t7,t1,t2,lf[175],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub278(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9905,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9635(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k9903 in key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do739 in key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9800,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9813,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9830,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9830(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9830(t14,(C_word)C_i_numberp(t13));}}}

/* k9828 in do739 in key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9830,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9834,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9849,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9635(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k9847 in k9828 in do739 in key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9849,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9813(t9,t8);}

/* k9832 in k9828 in do739 in key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9834,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9813(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9811 in do739 in key in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9813(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9800(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9688(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9688,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9703,a[2]=t5,a[3]=t3,a[4]=((C_word)li109),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9703(t7,t1,t2,lf[173],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9783,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9635(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k9781 in note in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do725 in note in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9703(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9703,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9716,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9734,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note");
t13=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9749,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9635(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k9747 in do725 in note in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9749,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_9716(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k9732 in do725 in note in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9734,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9716(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9714 in do725 in note in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9703(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9635(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9635,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9585,a[2]=t6,a[3]=t7,a[4]=((C_word)li106),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[159],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9633,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  floor");
t9=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9658,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9533(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9673,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k9671 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9673,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[171],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k9678 in k9671 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9533(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9656 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9533(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9631 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9633,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9605,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[167]))){
t5=t4;
f_9605(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[168]);
t6=t4;
f_9605(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[169]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k9603 in k9631 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9605(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9605,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li107),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[159],"*notes*"),t1,t2);}

/* a9606 in k9603 in k9631 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9607,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[166],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a9584 in note-aux in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9585,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[165],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9533(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9533,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9537,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9570,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[159],"*notes*"),t2,t6);}

/* a9569 in string->note-entry in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9570,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k9535 in string->note-entry in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9537,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9553,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[163],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k9551 in k9535 in string->note-entry in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li103),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[159],"*notes*"),t1,t2);}

/* a9554 in k9551 in k9535 in string->note-entry in k9529 in k9526 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9555,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[161],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9319r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9319r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9319r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9332,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9332(t13,t12);}
else{
t9=t8;
f_9332(t9,C_SCHEME_UNDEFINED);}}}

/* k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9332,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[73],"tb:explseg"):C_retrieve2(lf[74],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9353,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[157],t7);}
else{
t12=t11;
f_9353(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[122]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_9414(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_9414(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[158],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k9412 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9414(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9414,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k9415 in k9412 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9417,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9425,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li101),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_9425(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do655 in k9415 in k9412 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9425(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9425,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9466,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li100),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_9437(t8,t1,((C_word*)t0)[3]);}}

/* do659 in do655 in k9415 in k9412 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9437(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9437,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9458,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7186(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k9456 in do659 in do655 in k9415 in k9412 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_9437(t4,((C_word*)t0)[2],t3);}

/* k9464 in do655 in k9415 in k9412 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9466,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_9425(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k9351 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9353,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li99),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_9358(t5,((C_word*)t0)[2],C_fix(0));}

/* do643 in k9351 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9358(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9358,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9390,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k9388 in do643 in k9351 in k9330 in segs in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9390,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_9358(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9298(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9298r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9298r(t0,t1,t2);}}

static void C_ccall f_9298r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_7434(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_7434(t1,t3);}}

/* ranpoisson in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9279(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9279r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9279r(t0,t1,t2);}}

static void C_ccall f_9279r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[152])))){
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_7444(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_7444(t1,t3);}}

/* rangauss in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9238(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9238r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9238r(t0,t1,t2);}}

static void C_ccall f_9238r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7405(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7405(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7405(t1,t4,t5);}}}

/* ranexp in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9219(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9219r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9219r(t0,t1,t2);}}

static void C_ccall f_9219r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_7416(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_7416(t1,t3);}}

/* ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8991(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_8991r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8991r(t0,t1,t2);}}

static void C_ccall f_8991r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[145];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8995,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_8995(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[146]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9132,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[146]);}
else{
t19=t18;
f_9132(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[147]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9167,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[147]);}
else{
t20=t19;
f_9167(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9196,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9196(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9194 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9196,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9203,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9211,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9209 in k9194 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9203(2,t2,C_SCHEME_UNDEFINED);}}

/* k9201 in k9194 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8995(t5,t4);}

/* k9165 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9171(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9169 in k9165 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8995(t7,t6);}

/* k9130 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9134 in k9130 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8995(t7,t6);}

/* k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8995,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8998,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8998(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[146]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9032,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[146]);}
else{
t6=t5;
f_9032(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[147]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9067,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[147]);}
else{
t7=t6;
f_9067(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9096,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9096(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9094 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9096,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9111,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9109 in k9094 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9103(2,t2,C_SCHEME_UNDEFINED);}}

/* k9101 in k9094 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8998(t5,t4);}

/* k9065 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9071(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9069 in k9065 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8998(t7,t6);}

/* k9030 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9036(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9034 in k9030 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8998(t7,t6);}

/* k8996 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8998,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9001,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9001(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8999 in k8996 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_9001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9004(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9004(t5,t4);}}

/* k9002 in k8999 in k8996 in k8993 in ranbeta in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_9004(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9004,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub331(t5,t6,t7));}

/* shuffle in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8949(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8949r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8949r(t0,t1,t2);}}

static void C_ccall f_8949r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8963,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8978,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k8976 in shuffle in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  shuffle!");
t2=C_retrieve(lf[139]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k8961 in shuffle in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  shuffle!");
t2=C_retrieve(lf[139]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8894(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8894,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8905,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7360(t4,t3);}

/* k8903 in shuffle! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8905,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8907,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li91),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_8907(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do575 in k8903 in shuffle! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8907(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8907,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8935,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7360(t14,((C_word*)t0)[4]);}}

/* k8933 in do575 in k8903 in shuffle! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_8907(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_8795r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8795r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8795r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8799,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_8799(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_8799(t9,t8);}}

/* k8797 in vary in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8799,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_8802(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[138],((C_word*)((C_word*)t0)[3])[1]);}}

/* k8800 in k8797 in vary in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8804,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li89),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  vary1");
f_8804(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8866 in k8800 in k8797 in vary in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8867(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8867,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  vary1");
f_8804(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k8800 in k8797 in vary in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8804(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8804,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8820,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7367(t9,t8);}}

/* k8818 in vary1 in k8800 in k8797 in vary in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8820,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[137]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8567(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8567r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8567r(t0,t1,t2,t3);}}

static void C_ccall f_8567r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8571,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8571(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[134]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8708,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[134]);}
else{
t20=t19;
f_8708(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[135]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8743,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[135]);}
else{
t21=t20;
f_8743(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8772,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8772(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8770 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8772,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8787,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8785 in k8770 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8779(2,t2,C_SCHEME_UNDEFINED);}}

/* k8777 in k8770 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8571(t5,t4);}

/* k8741 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8747,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8747(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8745 in k8741 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8571(t7,t6);}

/* k8706 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8712,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8712(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8710 in k8706 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8571(t7,t6);}

/* k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8571,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8574,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8574(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[134]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8608,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[134]);}
else{
t6=t5;
f_8608(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[135]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8643,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[135]);}
else{
t7=t6;
f_8643(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8672,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8672(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8670 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8672,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8687,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8685 in k8670 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8679(2,t2,C_SCHEME_UNDEFINED);}}

/* k8677 in k8670 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8574(t5,t4);}

/* k8641 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8643,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8647,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8647(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8645 in k8641 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8574(t7,t6);}

/* k8606 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8612,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8612(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8610 in k8606 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8574(t7,t6);}

/* k8572 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8574,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8577,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8577(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8575 in k8572 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7367(t2,lf[133]);}

/* k8585 in k8575 in k8572 in k8569 in odds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8524(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_8524r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8524r(t0,t1,t2);}}

static void C_ccall f_8524r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8542,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7360(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8557,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7360(t4,t5);}}

/* k8555 in pick in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k8540 in pick in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8503(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8503,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub297(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub303(t9,t10,t11));}}

/* ran in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8468(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8468r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8468r(t0,t1,t2);}}

static void C_ccall f_8468r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8472,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8472(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8472(t7,t6);}}

/* k8470 in ran in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8472(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7360(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7367(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7367(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_8360r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8360r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8360r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8367,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_8367(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8447,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 375  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[128],((C_word*)t8)[1]);}
else{
t15=t14;
f_8447(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_8367(t11,C_SCHEME_UNDEFINED);}}

/* k8445 in scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8367(t4,t3);}

/* k8365 in scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8367,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li82),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_8376(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do498 in k8365 in scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8376(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8376,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8389,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8423,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  fit");
t10=C_retrieve(lf[123]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_8389(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8421 in do498 in k8365 in scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8389(t3,t2);}

/* k8387 in do498 in k8365 in scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8389,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8415,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8413 in k8387 in do498 in k8365 in scale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8415,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_8376(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8227r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8227r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8227r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8231,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8231(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8231(t12,t11);}}

/* k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8231,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8234(t6,t5);}
else{
t3=t2;
f_8234(t3,C_SCHEME_UNDEFINED);}}

/* k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8234(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8234,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8236,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li80),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 375  fit1");
f_8236(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8337 in k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8338(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8338,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  fit1");
f_8236(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8236(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8236,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8243,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8241 in fit1 in k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8243,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8266,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t9=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8285,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t8=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[125],((C_word*)t0)[2]);}}}

/* k8283 in k8241 in fit1 in k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8292,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[96]+1):*((C_word*)lf[94]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t2,t1);}}

/* k8290 in k8283 in k8241 in fit1 in k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8292,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8264 in k8241 in fit1 in k8232 in k8229 in fit in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8266,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8160(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8160r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8160r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8160r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[122]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8164,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8164(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8164(t16,t15);}}

/* k8162 in tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8164,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8210,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_8028(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8167(t3,C_SCHEME_UNDEFINED);}}

/* k8208 in k8162 in tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8167(t3,t2);}

/* k8165 in k8162 in tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8167,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8170,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8203,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_8028(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8170(t3,C_SCHEME_UNDEFINED);}}

/* k8201 in k8165 in k8162 in tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8170(t3,t2);}

/* k8168 in k8165 in k8162 in tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8170,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8183,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8181 in k8168 in k8165 in k8162 in tendency in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8183,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8114(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8114r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8114r(t0,t1,t2,t3);}}

static void C_ccall f_8114r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8118,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[120]);}
else{
t5=t4;
f_8118(2,t5,C_SCHEME_UNDEFINED);}}

/* k8116 in interp in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 375  interp1");
f_8028(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 375  interp1");
f_8028(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8028(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8028,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8032,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],t3);}
else{
t6=t5;
f_8032(2,t6,(C_word)C_i_car(t3));}}

/* k8030 in interp1 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8032,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 375  err");
t6=C_retrieve(lf[116]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[117],((C_word*)t0)[4]);}
else{
t6=t4;
f_8035(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8033 in k8030 in interp1 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8035,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8044,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li75),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8044(t13,((C_word*)t0)[2],t9);}

/* do449 in k8033 in k8030 in interp1 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_8044(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8044,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7186(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8066,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 375  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[115],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8066(2,t13,t12);}}}

/* k8064 in do449 in k8033 in k8030 in interp1 in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8044(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_8013(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8013,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_7291(3,t3,t1,t2);}}

/* cents->ratio in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7998(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7998,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_7284(3,t3,t1,t2);}}

/* rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7762r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7762r(t0,t1,t2,t3);}}

static void C_ccall f_7762r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[108];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[109];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7766,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7766(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[110]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7911,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[110]);}
else{
t20=t19;
f_7911(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[111]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7946,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[111]);}
else{
t21=t20;
f_7946(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7975,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7975(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7973 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7975,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7990,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7988 in k7973 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7982(2,t2,C_SCHEME_UNDEFINED);}}

/* k7980 in k7973 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7766(t5,t4);}

/* k7944 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7950(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7948 in k7944 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7766(t7,t6);}

/* k7909 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7915(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7913 in k7909 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7766(t7,t6);}

/* k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7766(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7766,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7769,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7769(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[110]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7811,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[110]);}
else{
t6=t5;
f_7811(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[111]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7846,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[111]);}
else{
t7=t6;
f_7846(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7875,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7875(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7873 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7875,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7890,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7888 in k7873 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7882(2,t2,C_SCHEME_UNDEFINED);}}

/* k7880 in k7873 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7769(t5,t4);}

/* k7844 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7848 in k7844 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7769(t7,t6);}

/* k7809 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7815(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7813 in k7809 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7769(t7,t6);}

/* k7767 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7769(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7769,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7772,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7772(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7770 in k7767 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7772,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7783,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li71),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_7269(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7782 in k7770 in k7767 in k7764 in rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7783(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7783,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_7269(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7722,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7726,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  expt");
t5=*((C_word*)lf[105]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[106],t3);}

/* k7724 in decimals in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7726,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7737,a[2]=t1,a[3]=((C_word)li69),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,C_retrieve(lf[104]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7756,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[2],t1);
C_trace("ChickenBridge.scm: 375  round");
t4=*((C_word*)lf[103]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k7754 in k7724 in decimals in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7756,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a7736 in k7724 in decimals in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7737(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7737,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7745,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  round");
t5=*((C_word*)lf[103]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k7743 in a7736 in k7724 in decimals in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7745,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7701(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7701,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7713,a[2]=t3,a[3]=((C_word)li67),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_7258(t1,t2,t3);}}

/* a7712 in quantize in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7713(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7713,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_7258(t1,t2,((C_word*)t0)[2]);}

/* minus in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7675(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7675r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7675r(t0,t1,t2,t3);}}

static void C_ccall f_7675r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[96]+1),t2);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[96]+1),t2,t3);}}

/* plus in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7633(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7633r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7633r(t0,t1,t2);}}

static void C_ccall f_7633r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[94]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[94]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[94]+1),t2);}}}

/* int in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7618(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7618,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[68],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:int");
t3=C_retrieve2(lf[68],"tb:int");
f_7240(3,t3,t1,t2);}}

/* discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7507(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_7507r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_7507r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_7507r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7511,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_7511(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7582,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 375  not?");
t20=C_retrieve(lf[91]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_7511(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_7511(t19,t18);}}}

/* k7580 in discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7511(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7511(t2,C_SCHEME_UNDEFINED);}}

/* k7509 in discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7511,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7525,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li61),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7540,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7213(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7551,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li62),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7213(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a7550 in k7509 in discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7551(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7551,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7213(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7538 in k7509 in discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a7524 in k7509 in discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7525(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7525,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7533,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7213(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7531 in a7524 in k7509 in discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7473(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7473r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7473r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7473r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7485,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li59),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7186(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7186(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7484 in rescale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7485(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7485,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[89]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7454,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub351(t2));}

/* tb:ranpink in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7451,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub348(t2));}

/* tb:ranpoisson in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7444(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7444,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub345(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7441,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub341(t2));}

/* tb:rangamma in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7434(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7434,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub337(t3,t4));}

/* tb:ranexp in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7416(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7416,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub325(t3,t4));}

/* tb:rangauss in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7405(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7405,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub319(t4,t5,t6));}

/* tb:ranmiddle in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7402,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub314(t2));}

/* tb:ranhigh in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7399,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub311(t2));}

/* tb:ranlow in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7396,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub308(t2));}

/* tb:ranf in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7367(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7367,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub291(t3,t4));}

/* tb:rani in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7360(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7360,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub287(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7357(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7357,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub283(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7336(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7336,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub269(t3,t4));}

/* tb:geoseg in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7317,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub261(t6,t7,t8,t9,t10));}

/* tb:explseg in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7298,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub250(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7291(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7291,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub243(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7284(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7284,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub238(t3,t4));}

/* tb:rhythm->seconds in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7269(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7269,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub231(t5,t6,t7,t8));}

/* tb:quantize in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7258(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7258,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub223(t4,t5,t6));}

/* tb:int in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7240(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7240,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub211(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7213(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7213,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub202(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7186(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7186,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub187(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7145(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7145,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7151,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li34),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7151(t9,t1,C_SCHEME_FALSE);}

/* do155 in bitwise-test in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7151(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7151,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7161,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7161(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7161(t7,t6);}}
else{
t5=t4;
f_7161(t5,C_SCHEME_UNDEFINED);}}}

/* k7159 in do155 in bitwise-test in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_7161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7161,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7151(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7059r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7059r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7059r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[64],"list-prop"),t7,t3,t4);}}}

/* make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6960(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_6960r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6960r(t0,t1,t2,t3);}}

static void C_ccall f_6960r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6964,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 374  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[63],t2);}
else{
t5=t4;
f_6964(2,t5,C_SCHEME_UNDEFINED);}}

/* k6962 in make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6964,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6966,a[2]=t3,a[3]=((C_word)li30),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6989,a[2]=t5,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 374  l1");
t8=((C_word*)t3)[1];
f_6966(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 374  l2");
t9=((C_word*)t5)[1];
f_6989(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  l1");
t10=((C_word*)t3)[1];
f_6966(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k6962 in make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6989(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6989,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7006,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7004 in l2 in k6962 in make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7010,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 374  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_6989(t4,t2,t3,((C_word*)t0)[2]);}

/* k7008 in k7004 in l2 in k6962 in make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_7010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7010,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k6962 in make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6966(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6966,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6983,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 374  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6981 in l1 in k6962 in make-list in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6983,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6899(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6899,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6912,a[2]=t2,a[3]=t6,a[4]=((C_word)li28),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_6912(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6912,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6889(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6889,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6849(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6849r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6849r(t0,t1,t2);}}

static void C_ccall f_6849r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 374  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6879,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6877 in list* in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6879,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6711,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6745,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6743 in butlast in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6745,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6688(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6688,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6682(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6682,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6667(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6667,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6653(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6653,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6643(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6643,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6633(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6633,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6623,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6613(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6613,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6584(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6584r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6584r(t0,t1,t2);}}

static void C_ccall f_6584r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6593,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6593 in chdir in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6593(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6593,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6598,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6598(2,t4,C_SCHEME_FALSE);}}

/* k6596 */
static void C_ccall f_6598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6578,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6578 in cwd in k6569 in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6578,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6280(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6280,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6560,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6549,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6558,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6290,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 280  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6290(2,t11,t2);}}

/* k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6293,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6541,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 281  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6540 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6541,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6296(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 282  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6296,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6311,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6311(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6311(t9,C_SCHEME_FALSE);}}

/* k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6311,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6321,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 296  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6321,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6323(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6323(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6323,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6335,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6335(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6376,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6382(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 311  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6382,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6376(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6436,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6509,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 332  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6392,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 322  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6392(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6390 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6392,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6376(t9,t8);}

/* k6507 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6509,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6482,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 337  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6436(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6495,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6497,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6496 in k6507 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6497(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6497,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 341  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6493 in k6507 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 339  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6480 in k6507 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 336  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6434 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6436,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6442,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6442(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6463,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 348  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6461 in k6434 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 347  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6440 in k6434 in k6380 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6376(t6,t5);}

/* k6374 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6323(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6335(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6335,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6348,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6348(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6348(t5,C_SCHEME_UNDEFINED);}}}

/* k6346 in do69 in do63 in k6319 in k6309 in k6294 in k6291 in k6288 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_fcall f_6348(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6335(t3,((C_word*)t0)[2],t2);}

/* f_6558 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6558(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6558,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6549 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6549(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6549,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6557,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 278  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6555 */
static void C_ccall f_6557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 278  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6560 in expand-send in k6276 in k6273 in k6269 in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6560(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6560r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6560r(t0,t1,t2,t3);}}

static void C_ccall f_6560r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6568,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6566 */
static void C_ccall f_6568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 274  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_5982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5982,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6143,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6235,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6234 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6235(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6235,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6249,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6253,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 226  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6264,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6268,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 227  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6266 in a6234 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6262 in a6234 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6264,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6251 in a6234 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 226  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6247 in a6234 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6249,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6146,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 229  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6152,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6229,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6228 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6229(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6229,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5995,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6054,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 190  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6052 in a6228 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 190  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5993 in a6228 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_5995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5995,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6159,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6205,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6219,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6218 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6219(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6219,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6203 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6205,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 236  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6169 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6175,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6179,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6197,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6196 in k6169 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6197(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6197,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6132,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6130 in a6196 in k6169 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6132,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6177 in k6169 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6179,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6173 in k6169 in k6157 in k6150 in k6147 in k6144 in k6141 in expand-optkeys in k5978 in k5975 in k5972 in k5969 */
static void C_ccall f_6175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6175,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2524] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5971ChickenBridge.scm",(void*)f_5971},
{"f_5974ChickenBridge.scm",(void*)f_5974},
{"f_5977ChickenBridge.scm",(void*)f_5977},
{"f_5980ChickenBridge.scm",(void*)f_5980},
{"f_37628ChickenBridge.scm",(void*)f_37628},
{"f_6271ChickenBridge.scm",(void*)f_6271},
{"f_6275ChickenBridge.scm",(void*)f_6275},
{"f_37576ChickenBridge.scm",(void*)f_37576},
{"f_37623ChickenBridge.scm",(void*)f_37623},
{"f_37613ChickenBridge.scm",(void*)f_37613},
{"f_37580ChickenBridge.scm",(void*)f_37580},
{"f_6278ChickenBridge.scm",(void*)f_6278},
{"f_37570ChickenBridge.scm",(void*)f_37570},
{"f_6571ChickenBridge.scm",(void*)f_6571},
{"f_9528ChickenBridge.scm",(void*)f_9528},
{"f_37354ChickenBridge.scm",(void*)f_37354},
{"f_37568ChickenBridge.scm",(void*)f_37568},
{"f_37388ChickenBridge.scm",(void*)f_37388},
{"f_37400ChickenBridge.scm",(void*)f_37400},
{"f_37404ChickenBridge.scm",(void*)f_37404},
{"f_37408ChickenBridge.scm",(void*)f_37408},
{"f_37552ChickenBridge.scm",(void*)f_37552},
{"f_37414ChickenBridge.scm",(void*)f_37414},
{"f_37434ChickenBridge.scm",(void*)f_37434},
{"f_37437ChickenBridge.scm",(void*)f_37437},
{"f_37445ChickenBridge.scm",(void*)f_37445},
{"f_37452ChickenBridge.scm",(void*)f_37452},
{"f_37455ChickenBridge.scm",(void*)f_37455},
{"f_37459ChickenBridge.scm",(void*)f_37459},
{"f_37466ChickenBridge.scm",(void*)f_37466},
{"f_37469ChickenBridge.scm",(void*)f_37469},
{"f_37473ChickenBridge.scm",(void*)f_37473},
{"f_37480ChickenBridge.scm",(void*)f_37480},
{"f_37424ChickenBridge.scm",(void*)f_37424},
{"f_37377ChickenBridge.scm",(void*)f_37377},
{"f_37367ChickenBridge.scm",(void*)f_37367},
{"f_37370ChickenBridge.scm",(void*)f_37370},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_37344ChickenBridge.scm",(void*)f_37344},
{"f_37352ChickenBridge.scm",(void*)f_37352},
{"f_10596ChickenBridge.scm",(void*)f_10596},
{"f_37330ChickenBridge.scm",(void*)f_37330},
{"f_37338ChickenBridge.scm",(void*)f_37338},
{"f_37342ChickenBridge.scm",(void*)f_37342},
{"f_19624ChickenBridge.scm",(void*)f_19624},
{"f_19675ChickenBridge.scm",(void*)f_19675},
{"f_37320ChickenBridge.scm",(void*)f_37320},
{"f_37328ChickenBridge.scm",(void*)f_37328},
{"f_19780ChickenBridge.scm",(void*)f_19780},
{"f_37217ChickenBridge.scm",(void*)f_37217},
{"f_37280ChickenBridge.scm",(void*)f_37280},
{"f_37284ChickenBridge.scm",(void*)f_37284},
{"f_37298ChickenBridge.scm",(void*)f_37298},
{"f_37220ChickenBridge.scm",(void*)f_37220},
{"f_37240ChickenBridge.scm",(void*)f_37240},
{"f_37244ChickenBridge.scm",(void*)f_37244},
{"f_19783ChickenBridge.scm",(void*)f_19783},
{"f_37203ChickenBridge.scm",(void*)f_37203},
{"f_37211ChickenBridge.scm",(void*)f_37211},
{"f_37215ChickenBridge.scm",(void*)f_37215},
{"f_19976ChickenBridge.scm",(void*)f_19976},
{"f_37177ChickenBridge.scm",(void*)f_37177},
{"f_37181ChickenBridge.scm",(void*)f_37181},
{"f_37187ChickenBridge.scm",(void*)f_37187},
{"f_37198ChickenBridge.scm",(void*)f_37198},
{"f_37194ChickenBridge.scm",(void*)f_37194},
{"f_20045ChickenBridge.scm",(void*)f_20045},
{"f_37155ChickenBridge.scm",(void*)f_37155},
{"f_21290ChickenBridge.scm",(void*)f_21290},
{"f_37135ChickenBridge.scm",(void*)f_37135},
{"f_21293ChickenBridge.scm",(void*)f_21293},
{"f_37095ChickenBridge.scm",(void*)f_37095},
{"f_21296ChickenBridge.scm",(void*)f_21296},
{"f_37001ChickenBridge.scm",(void*)f_37001},
{"f_37005ChickenBridge.scm",(void*)f_37005},
{"f_37008ChickenBridge.scm",(void*)f_37008},
{"f_37026ChickenBridge.scm",(void*)f_37026},
{"f_37029ChickenBridge.scm",(void*)f_37029},
{"f_37060ChickenBridge.scm",(void*)f_37060},
{"f_37032ChickenBridge.scm",(void*)f_37032},
{"f_37038ChickenBridge.scm",(void*)f_37038},
{"f_36991ChickenBridge.scm",(void*)f_36991},
{"f_36985ChickenBridge.scm",(void*)f_36985},
{"f_21299ChickenBridge.scm",(void*)f_21299},
{"f_36893ChickenBridge.scm",(void*)f_36893},
{"f_36895ChickenBridge.scm",(void*)f_36895},
{"f_36899ChickenBridge.scm",(void*)f_36899},
{"f_36902ChickenBridge.scm",(void*)f_36902},
{"f_36905ChickenBridge.scm",(void*)f_36905},
{"f_36945ChickenBridge.scm",(void*)f_36945},
{"f_36937ChickenBridge.scm",(void*)f_36937},
{"f_36908ChickenBridge.scm",(void*)f_36908},
{"f_36911ChickenBridge.scm",(void*)f_36911},
{"f_36914ChickenBridge.scm",(void*)f_36914},
{"f_36885ChickenBridge.scm",(void*)f_36885},
{"f_21302ChickenBridge.scm",(void*)f_21302},
{"f_36857ChickenBridge.scm",(void*)f_36857},
{"f_21305ChickenBridge.scm",(void*)f_21305},
{"f_36821ChickenBridge.scm",(void*)f_36821},
{"f_36833ChickenBridge.scm",(void*)f_36833},
{"f_36829ChickenBridge.scm",(void*)f_36829},
{"f_36803ChickenBridge.scm",(void*)f_36803},
{"f_36797ChickenBridge.scm",(void*)f_36797},
{"f_21308ChickenBridge.scm",(void*)f_21308},
{"f_36711ChickenBridge.scm",(void*)f_36711},
{"f_36715ChickenBridge.scm",(void*)f_36715},
{"f_36718ChickenBridge.scm",(void*)f_36718},
{"f_36721ChickenBridge.scm",(void*)f_36721},
{"f_36734ChickenBridge.scm",(void*)f_36734},
{"f_36680ChickenBridge.scm",(void*)f_36680},
{"f_36684ChickenBridge.scm",(void*)f_36684},
{"f_36699ChickenBridge.scm",(void*)f_36699},
{"f_36674ChickenBridge.scm",(void*)f_36674},
{"f_21311ChickenBridge.scm",(void*)f_21311},
{"f_36560ChickenBridge.scm",(void*)f_36560},
{"f_36576ChickenBridge.scm",(void*)f_36576},
{"f_36587ChickenBridge.scm",(void*)f_36587},
{"f_36554ChickenBridge.scm",(void*)f_36554},
{"f_21367ChickenBridge.scm",(void*)f_21367},
{"f_36421ChickenBridge.scm",(void*)f_36421},
{"f_36444ChickenBridge.scm",(void*)f_36444},
{"f_36441ChickenBridge.scm",(void*)f_36441},
{"f_36415ChickenBridge.scm",(void*)f_36415},
{"f_21370ChickenBridge.scm",(void*)f_21370},
{"f_36269ChickenBridge.scm",(void*)f_36269},
{"f_36287ChickenBridge.scm",(void*)f_36287},
{"f_36296ChickenBridge.scm",(void*)f_36296},
{"f_36263ChickenBridge.scm",(void*)f_36263},
{"f_21373ChickenBridge.scm",(void*)f_21373},
{"f_36216ChickenBridge.scm",(void*)f_36216},
{"f_36220ChickenBridge.scm",(void*)f_36220},
{"f_36223ChickenBridge.scm",(void*)f_36223},
{"f_36239ChickenBridge.scm",(void*)f_36239},
{"f_36198ChickenBridge.scm",(void*)f_36198},
{"f_36192ChickenBridge.scm",(void*)f_36192},
{"f_21376ChickenBridge.scm",(void*)f_21376},
{"f_36116ChickenBridge.scm",(void*)f_36116},
{"f_21515ChickenBridge.scm",(void*)f_21515},
{"f_36042ChickenBridge.scm",(void*)f_36042},
{"f_36049ChickenBridge.scm",(void*)f_36049},
{"f_36036ChickenBridge.scm",(void*)f_36036},
{"f_21518ChickenBridge.scm",(void*)f_21518},
{"f_35932ChickenBridge.scm",(void*)f_35932},
{"f_35940ChickenBridge.scm",(void*)f_35940},
{"f_35906ChickenBridge.scm",(void*)f_35906},
{"f_35923ChickenBridge.scm",(void*)f_35923},
{"f_35914ChickenBridge.scm",(void*)f_35914},
{"f_35900ChickenBridge.scm",(void*)f_35900},
{"f_21521ChickenBridge.scm",(void*)f_21521},
{"f_35856ChickenBridge.scm",(void*)f_35856},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_35774ChickenBridge.scm",(void*)f_35774},
{"f_35785ChickenBridge.scm",(void*)f_35785},
{"f_35787ChickenBridge.scm",(void*)f_35787},
{"f_35816ChickenBridge.scm",(void*)f_35816},
{"f_35752ChickenBridge.scm",(void*)f_35752},
{"f_35768ChickenBridge.scm",(void*)f_35768},
{"f_35746ChickenBridge.scm",(void*)f_35746},
{"f_21527ChickenBridge.scm",(void*)f_21527},
{"f_35699ChickenBridge.scm",(void*)f_35699},
{"f_35703ChickenBridge.scm",(void*)f_35703},
{"f_35710ChickenBridge.scm",(void*)f_35710},
{"f_35677ChickenBridge.scm",(void*)f_35677},
{"f_35693ChickenBridge.scm",(void*)f_35693},
{"f_35671ChickenBridge.scm",(void*)f_35671},
{"f_21530ChickenBridge.scm",(void*)f_21530},
{"f_35539ChickenBridge.scm",(void*)f_35539},
{"f_35579ChickenBridge.scm",(void*)f_35579},
{"f_35543ChickenBridge.scm",(void*)f_35543},
{"f_35559ChickenBridge.scm",(void*)f_35559},
{"f_35571ChickenBridge.scm",(void*)f_35571},
{"f_35575ChickenBridge.scm",(void*)f_35575},
{"f_35567ChickenBridge.scm",(void*)f_35567},
{"f_35464ChickenBridge.scm",(void*)f_35464},
{"f_35507ChickenBridge.scm",(void*)f_35507},
{"f_35511ChickenBridge.scm",(void*)f_35511},
{"f_35471ChickenBridge.scm",(void*)f_35471},
{"f_35482ChickenBridge.scm",(void*)f_35482},
{"f_35458ChickenBridge.scm",(void*)f_35458},
{"f_21533ChickenBridge.scm",(void*)f_21533},
{"f_35438ChickenBridge.scm",(void*)f_35438},
{"f_35432ChickenBridge.scm",(void*)f_35432},
{"f_21536ChickenBridge.scm",(void*)f_21536},
{"f_35412ChickenBridge.scm",(void*)f_35412},
{"f_35416ChickenBridge.scm",(void*)f_35416},
{"f_35404ChickenBridge.scm",(void*)f_35404},
{"f_21539ChickenBridge.scm",(void*)f_21539},
{"f_35384ChickenBridge.scm",(void*)f_35384},
{"f_35388ChickenBridge.scm",(void*)f_35388},
{"f_35376ChickenBridge.scm",(void*)f_35376},
{"f_21542ChickenBridge.scm",(void*)f_21542},
{"f_35356ChickenBridge.scm",(void*)f_35356},
{"f_35360ChickenBridge.scm",(void*)f_35360},
{"f_35348ChickenBridge.scm",(void*)f_35348},
{"f_21545ChickenBridge.scm",(void*)f_21545},
{"f_35328ChickenBridge.scm",(void*)f_35328},
{"f_35332ChickenBridge.scm",(void*)f_35332},
{"f_35320ChickenBridge.scm",(void*)f_35320},
{"f_21548ChickenBridge.scm",(void*)f_21548},
{"f_35219ChickenBridge.scm",(void*)f_35219},
{"f_35189ChickenBridge.scm",(void*)f_35189},
{"f_35213ChickenBridge.scm",(void*)f_35213},
{"f_35183ChickenBridge.scm",(void*)f_35183},
{"f_21551ChickenBridge.scm",(void*)f_21551},
{"f_35133ChickenBridge.scm",(void*)f_35133},
{"f_35135ChickenBridge.scm",(void*)f_35135},
{"f_35139ChickenBridge.scm",(void*)f_35139},
{"f_35167ChickenBridge.scm",(void*)f_35167},
{"f_35159ChickenBridge.scm",(void*)f_35159},
{"f_35155ChickenBridge.scm",(void*)f_35155},
{"f_35142ChickenBridge.scm",(void*)f_35142},
{"f_35125ChickenBridge.scm",(void*)f_35125},
{"f_21554ChickenBridge.scm",(void*)f_21554},
{"f_35072ChickenBridge.scm",(void*)f_35072},
{"f_35074ChickenBridge.scm",(void*)f_35074},
{"f_35078ChickenBridge.scm",(void*)f_35078},
{"f_35109ChickenBridge.scm",(void*)f_35109},
{"f_35101ChickenBridge.scm",(void*)f_35101},
{"f_35097ChickenBridge.scm",(void*)f_35097},
{"f_35081ChickenBridge.scm",(void*)f_35081},
{"f_35084ChickenBridge.scm",(void*)f_35084},
{"f_35064ChickenBridge.scm",(void*)f_35064},
{"f_21557ChickenBridge.scm",(void*)f_21557},
{"f_35014ChickenBridge.scm",(void*)f_35014},
{"f_35028ChickenBridge.scm",(void*)f_35028},
{"f_35020ChickenBridge.scm",(void*)f_35020},
{"f_34979ChickenBridge.scm",(void*)f_34979},
{"f_35012ChickenBridge.scm",(void*)f_35012},
{"f_34973ChickenBridge.scm",(void*)f_34973},
{"f_21560ChickenBridge.scm",(void*)f_21560},
{"f_34920ChickenBridge.scm",(void*)f_34920},
{"f_34924ChickenBridge.scm",(void*)f_34924},
{"f_34937ChickenBridge.scm",(void*)f_34937},
{"f_34929ChickenBridge.scm",(void*)f_34929},
{"f_34877ChickenBridge.scm",(void*)f_34877},
{"f_34910ChickenBridge.scm",(void*)f_34910},
{"f_34871ChickenBridge.scm",(void*)f_34871},
{"f_21563ChickenBridge.scm",(void*)f_21563},
{"f_34791ChickenBridge.scm",(void*)f_34791},
{"f_34785ChickenBridge.scm",(void*)f_34785},
{"f_21566ChickenBridge.scm",(void*)f_21566},
{"f_34554ChickenBridge.scm",(void*)f_34554},
{"f_34558ChickenBridge.scm",(void*)f_34558},
{"f_34566ChickenBridge.scm",(void*)f_34566},
{"f_34589ChickenBridge.scm",(void*)f_34589},
{"f_34592ChickenBridge.scm",(void*)f_34592},
{"f_34595ChickenBridge.scm",(void*)f_34595},
{"f_34598ChickenBridge.scm",(void*)f_34598},
{"f_34658ChickenBridge.scm",(void*)f_34658},
{"f_34665ChickenBridge.scm",(void*)f_34665},
{"f_34675ChickenBridge.scm",(void*)f_34675},
{"f_34685ChickenBridge.scm",(void*)f_34685},
{"f_34699ChickenBridge.scm",(void*)f_34699},
{"f_34709ChickenBridge.scm",(void*)f_34709},
{"f_34719ChickenBridge.scm",(void*)f_34719},
{"f_34729ChickenBridge.scm",(void*)f_34729},
{"f_34601ChickenBridge.scm",(void*)f_34601},
{"f_34625ChickenBridge.scm",(void*)f_34625},
{"f_34604ChickenBridge.scm",(void*)f_34604},
{"f_34511ChickenBridge.scm",(void*)f_34511},
{"f_34544ChickenBridge.scm",(void*)f_34544},
{"f_34505ChickenBridge.scm",(void*)f_34505},
{"f_21569ChickenBridge.scm",(void*)f_21569},
{"f_34423ChickenBridge.scm",(void*)f_34423},
{"f_34427ChickenBridge.scm",(void*)f_34427},
{"f_34433ChickenBridge.scm",(void*)f_34433},
{"f_34453ChickenBridge.scm",(void*)f_34453},
{"f_34397ChickenBridge.scm",(void*)f_34397},
{"f_34407ChickenBridge.scm",(void*)f_34407},
{"f_34391ChickenBridge.scm",(void*)f_34391},
{"f_21572ChickenBridge.scm",(void*)f_21572},
{"f_34268ChickenBridge.scm",(void*)f_34268},
{"f_34272ChickenBridge.scm",(void*)f_34272},
{"f_34200ChickenBridge.scm",(void*)f_34200},
{"f_34219ChickenBridge.scm",(void*)f_34219},
{"f_34254ChickenBridge.scm",(void*)f_34254},
{"f_34225ChickenBridge.scm",(void*)f_34225},
{"f_34229ChickenBridge.scm",(void*)f_34229},
{"f_34243ChickenBridge.scm",(void*)f_34243},
{"f_34232ChickenBridge.scm",(void*)f_34232},
{"f_34213ChickenBridge.scm",(void*)f_34213},
{"f_34194ChickenBridge.scm",(void*)f_34194},
{"f_21575ChickenBridge.scm",(void*)f_21575},
{"f_33922ChickenBridge.scm",(void*)f_33922},
{"f_22098ChickenBridge.scm",(void*)f_22098},
{"f_33874ChickenBridge.scm",(void*)f_33874},
{"f_33866ChickenBridge.scm",(void*)f_33866},
{"f_22101ChickenBridge.scm",(void*)f_22101},
{"f_33746ChickenBridge.scm",(void*)f_33746},
{"f_22107ChickenBridge.scm",(void*)f_22107},
{"f_22566ChickenBridge.scm",(void*)f_22566},
{"f_22600ChickenBridge.scm",(void*)f_22600},
{"f_22592ChickenBridge.scm",(void*)f_22592},
{"f_22588ChickenBridge.scm",(void*)f_22588},
{"f_22573ChickenBridge.scm",(void*)f_22573},
{"f_22577ChickenBridge.scm",(void*)f_22577},
{"f_22570ChickenBridge.scm",(void*)f_22570},
{"f_22125ChickenBridge.scm",(void*)f_22125},
{"f_22559ChickenBridge.scm",(void*)f_22559},
{"f_22555ChickenBridge.scm",(void*)f_22555},
{"f_22132ChickenBridge.scm",(void*)f_22132},
{"f_22430ChickenBridge.scm",(void*)f_22430},
{"f_22451ChickenBridge.scm",(void*)f_22451},
{"f_22453ChickenBridge.scm",(void*)f_22453},
{"f_22467ChickenBridge.scm",(void*)f_22467},
{"f_22520ChickenBridge.scm",(void*)f_22520},
{"f_22470ChickenBridge.scm",(void*)f_22470},
{"f_22505ChickenBridge.scm",(void*)f_22505},
{"f_22473ChickenBridge.scm",(void*)f_22473},
{"f_22486ChickenBridge.scm",(void*)f_22486},
{"f_22498ChickenBridge.scm",(void*)f_22498},
{"f_22490ChickenBridge.scm",(void*)f_22490},
{"f_22476ChickenBridge.scm",(void*)f_22476},
{"f_22440ChickenBridge.scm",(void*)f_22440},
{"f_22135ChickenBridge.scm",(void*)f_22135},
{"f_22394ChickenBridge.scm",(void*)f_22394},
{"f_22420ChickenBridge.scm",(void*)f_22420},
{"f_22405ChickenBridge.scm",(void*)f_22405},
{"f_22138ChickenBridge.scm",(void*)f_22138},
{"f_22142ChickenBridge.scm",(void*)f_22142},
{"f_22338ChickenBridge.scm",(void*)f_22338},
{"f_22348ChickenBridge.scm",(void*)f_22348},
{"f_22351ChickenBridge.scm",(void*)f_22351},
{"f_22372ChickenBridge.scm",(void*)f_22372},
{"f_22354ChickenBridge.scm",(void*)f_22354},
{"f_22358ChickenBridge.scm",(void*)f_22358},
{"f_22145ChickenBridge.scm",(void*)f_22145},
{"f_22148ChickenBridge.scm",(void*)f_22148},
{"f_22301ChickenBridge.scm",(void*)f_22301},
{"f_22309ChickenBridge.scm",(void*)f_22309},
{"f_22305ChickenBridge.scm",(void*)f_22305},
{"f_22151ChickenBridge.scm",(void*)f_22151},
{"f_22179ChickenBridge.scm",(void*)f_22179},
{"f_22182ChickenBridge.scm",(void*)f_22182},
{"f_22185ChickenBridge.scm",(void*)f_22185},
{"f_22188ChickenBridge.scm",(void*)f_22188},
{"f_22191ChickenBridge.scm",(void*)f_22191},
{"f_22250ChickenBridge.scm",(void*)f_22250},
{"f_33700ChickenBridge.scm",(void*)f_33700},
{"f_33716ChickenBridge.scm",(void*)f_33716},
{"f_33719ChickenBridge.scm",(void*)f_33719},
{"f_33722ChickenBridge.scm",(void*)f_33722},
{"f_33725ChickenBridge.scm",(void*)f_33725},
{"f_33736ChickenBridge.scm",(void*)f_33736},
{"f_33694ChickenBridge.scm",(void*)f_33694},
{"f_22607ChickenBridge.scm",(void*)f_22607},
{"f_33555ChickenBridge.scm",(void*)f_33555},
{"f_33594ChickenBridge.scm",(void*)f_33594},
{"f_33568ChickenBridge.scm",(void*)f_33568},
{"f_33549ChickenBridge.scm",(void*)f_33549},
{"f_22610ChickenBridge.scm",(void*)f_22610},
{"f_33137ChickenBridge.scm",(void*)f_33137},
{"f_33141ChickenBridge.scm",(void*)f_33141},
{"f_33153ChickenBridge.scm",(void*)f_33153},
{"f_33211ChickenBridge.scm",(void*)f_33211},
{"f_33214ChickenBridge.scm",(void*)f_33214},
{"f_33217ChickenBridge.scm",(void*)f_33217},
{"f_33429ChickenBridge.scm",(void*)f_33429},
{"f_33367ChickenBridge.scm",(void*)f_33367},
{"f_33401ChickenBridge.scm",(void*)f_33401},
{"f_33376ChickenBridge.scm",(void*)f_33376},
{"f_33387ChickenBridge.scm",(void*)f_33387},
{"f_33383ChickenBridge.scm",(void*)f_33383},
{"f_33226ChickenBridge.scm",(void*)f_33226},
{"f_33304ChickenBridge.scm",(void*)f_33304},
{"f_33345ChickenBridge.scm",(void*)f_33345},
{"f_33349ChickenBridge.scm",(void*)f_33349},
{"f_33353ChickenBridge.scm",(void*)f_33353},
{"f_33308ChickenBridge.scm",(void*)f_33308},
{"f_33312ChickenBridge.scm",(void*)f_33312},
{"f_33339ChickenBridge.scm",(void*)f_33339},
{"f_33315ChickenBridge.scm",(void*)f_33315},
{"f_33229ChickenBridge.scm",(void*)f_33229},
{"f_33301ChickenBridge.scm",(void*)f_33301},
{"f_33243ChickenBridge.scm",(void*)f_33243},
{"f_33245ChickenBridge.scm",(void*)f_33245},
{"f_33293ChickenBridge.scm",(void*)f_33293},
{"f_33264ChickenBridge.scm",(void*)f_33264},
{"f_33281ChickenBridge.scm",(void*)f_33281},
{"f_33267ChickenBridge.scm",(void*)f_33267},
{"f_33260ChickenBridge.scm",(void*)f_33260},
{"f_33232ChickenBridge.scm",(void*)f_33232},
{"f_33162ChickenBridge.scm",(void*)f_33162},
{"f_33172ChickenBridge.scm",(void*)f_33172},
{"f_33178ChickenBridge.scm",(void*)f_33178},
{"f_33150ChickenBridge.scm",(void*)f_33150},
{"f_33098ChickenBridge.scm",(void*)f_33098},
{"f_33115ChickenBridge.scm",(void*)f_33115},
{"f_33131ChickenBridge.scm",(void*)f_33131},
{"f_33109ChickenBridge.scm",(void*)f_33109},
{"f_33092ChickenBridge.scm",(void*)f_33092},
{"f_22613ChickenBridge.scm",(void*)f_22613},
{"f_33016ChickenBridge.scm",(void*)f_33016},
{"f_22616ChickenBridge.scm",(void*)f_22616},
{"f_32992ChickenBridge.scm",(void*)f_32992},
{"f_33004ChickenBridge.scm",(void*)f_33004},
{"f_33000ChickenBridge.scm",(void*)f_33000},
{"f_32978ChickenBridge.scm",(void*)f_32978},
{"f_32986ChickenBridge.scm",(void*)f_32986},
{"f_32972ChickenBridge.scm",(void*)f_32972},
{"f_22619ChickenBridge.scm",(void*)f_22619},
{"f_32964ChickenBridge.scm",(void*)f_32964},
{"f_26390ChickenBridge.scm",(void*)f_26390},
{"f_26393ChickenBridge.scm",(void*)f_26393},
{"f_26559ChickenBridge.scm",(void*)f_26559},
{"f_26555ChickenBridge.scm",(void*)f_26555},
{"f_26545ChickenBridge.scm",(void*)f_26545},
{"f_26400ChickenBridge.scm",(void*)f_26400},
{"f_26404ChickenBridge.scm",(void*)f_26404},
{"f_26407ChickenBridge.scm",(void*)f_26407},
{"f_26418ChickenBridge.scm",(void*)f_26418},
{"f_26426ChickenBridge.scm",(void*)f_26426},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26506ChickenBridge.scm",(void*)f_26506},
{"f_26502ChickenBridge.scm",(void*)f_26502},
{"f_26494ChickenBridge.scm",(void*)f_26494},
{"f_26490ChickenBridge.scm",(void*)f_26490},
{"f_26462ChickenBridge.scm",(void*)f_26462},
{"f_26458ChickenBridge.scm",(void*)f_26458},
{"f_26422ChickenBridge.scm",(void*)f_26422},
{"f_23037ChickenBridge.scm",(void*)f_23037},
{"f_32950ChickenBridge.scm",(void*)f_32950},
{"f_23040ChickenBridge.scm",(void*)f_23040},
{"f_32921ChickenBridge.scm",(void*)f_32921},
{"f_32925ChickenBridge.scm",(void*)f_32925},
{"f_23043ChickenBridge.scm",(void*)f_23043},
{"f_32918ChickenBridge.scm",(void*)f_32918},
{"f_23046ChickenBridge.scm",(void*)f_23046},
{"f_32776ChickenBridge.scm",(void*)f_32776},
{"f_26572ChickenBridge.scm",(void*)f_26572},
{"f_26704ChickenBridge.scm",(void*)f_26704},
{"f_26575ChickenBridge.scm",(void*)f_26575},
{"f_26586ChickenBridge.scm",(void*)f_26586},
{"f_26594ChickenBridge.scm",(void*)f_26594},
{"f_26618ChickenBridge.scm",(void*)f_26618},
{"f_26621ChickenBridge.scm",(void*)f_26621},
{"f_26629ChickenBridge.scm",(void*)f_26629},
{"f_26637ChickenBridge.scm",(void*)f_26637},
{"f_26657ChickenBridge.scm",(void*)f_26657},
{"f_26653ChickenBridge.scm",(void*)f_26653},
{"f_26633ChickenBridge.scm",(void*)f_26633},
{"f_26625ChickenBridge.scm",(void*)f_26625},
{"f_26614ChickenBridge.scm",(void*)f_26614},
{"f_26590ChickenBridge.scm",(void*)f_26590},
{"f_26566ChickenBridge.scm",(void*)f_26566},
{"f_31488ChickenBridge.scm",(void*)f_31488},
{"f_31491ChickenBridge.scm",(void*)f_31491},
{"f_31494ChickenBridge.scm",(void*)f_31494},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31500ChickenBridge.scm",(void*)f_31500},
{"f_31503ChickenBridge.scm",(void*)f_31503},
{"f_31506ChickenBridge.scm",(void*)f_31506},
{"f_31509ChickenBridge.scm",(void*)f_31509},
{"f_31512ChickenBridge.scm",(void*)f_31512},
{"f_31515ChickenBridge.scm",(void*)f_31515},
{"f_31518ChickenBridge.scm",(void*)f_31518},
{"f_31643ChickenBridge.scm",(void*)f_31643},
{"f_31646ChickenBridge.scm",(void*)f_31646},
{"f_31649ChickenBridge.scm",(void*)f_31649},
{"f_32713ChickenBridge.scm",(void*)f_32713},
{"f_32741ChickenBridge.scm",(void*)f_32741},
{"f_32380ChickenBridge.scm",(void*)f_32380},
{"f_32707ChickenBridge.scm",(void*)f_32707},
{"f_32425ChickenBridge.scm",(void*)f_32425},
{"f_32431ChickenBridge.scm",(void*)f_32431},
{"f_32434ChickenBridge.scm",(void*)f_32434},
{"f_32437ChickenBridge.scm",(void*)f_32437},
{"f_32441ChickenBridge.scm",(void*)f_32441},
{"f_32651ChickenBridge.scm",(void*)f_32651},
{"f_32663ChickenBridge.scm",(void*)f_32663},
{"f_32659ChickenBridge.scm",(void*)f_32659},
{"f_32444ChickenBridge.scm",(void*)f_32444},
{"f_32608ChickenBridge.scm",(void*)f_32608},
{"f_32644ChickenBridge.scm",(void*)f_32644},
{"f_32637ChickenBridge.scm",(void*)f_32637},
{"f_32447ChickenBridge.scm",(void*)f_32447},
{"f_32546ChickenBridge.scm",(void*)f_32546},
{"f_32554ChickenBridge.scm",(void*)f_32554},
{"f_32550ChickenBridge.scm",(void*)f_32550},
{"f_32542ChickenBridge.scm",(void*)f_32542},
{"f_32538ChickenBridge.scm",(void*)f_32538},
{"f_32494ChickenBridge.scm",(void*)f_32494},
{"f_32490ChickenBridge.scm",(void*)f_32490},
{"f_32457ChickenBridge.scm",(void*)f_32457},
{"f_32468ChickenBridge.scm",(void*)f_32468},
{"f_32476ChickenBridge.scm",(void*)f_32476},
{"f_32472ChickenBridge.scm",(void*)f_32472},
{"f_32670ChickenBridge.scm",(void*)f_32670},
{"f_32678ChickenBridge.scm",(void*)f_32678},
{"f_32692ChickenBridge.scm",(void*)f_32692},
{"f_32682ChickenBridge.scm",(void*)f_32682},
{"f_32673ChickenBridge.scm",(void*)f_32673},
{"f_32676ChickenBridge.scm",(void*)f_32676},
{"f_32382ChickenBridge.scm",(void*)f_32382},
{"f_32398ChickenBridge.scm",(void*)f_32398},
{"f_32309ChickenBridge.scm",(void*)f_32309},
{"f_32320ChickenBridge.scm",(void*)f_32320},
{"f_32323ChickenBridge.scm",(void*)f_32323},
{"f_32330ChickenBridge.scm",(void*)f_32330},
{"f_32299ChickenBridge.scm",(void*)f_32299},
{"f_31954ChickenBridge.scm",(void*)f_31954},
{"f_32303ChickenBridge.scm",(void*)f_32303},
{"f_32241ChickenBridge.scm",(void*)f_32241},
{"f_32259ChickenBridge.scm",(void*)f_32259},
{"f_32269ChickenBridge.scm",(void*)f_32269},
{"f_32245ChickenBridge.scm",(void*)f_32245},
{"f_32232ChickenBridge.scm",(void*)f_32232},
{"f_31932ChickenBridge.scm",(void*)f_31932},
{"f_32236ChickenBridge.scm",(void*)f_32236},
{"f_32226ChickenBridge.scm",(void*)f_32226},
{"f_31914ChickenBridge.scm",(void*)f_31914},
{"f_32217ChickenBridge.scm",(void*)f_32217},
{"f_31923ChickenBridge.scm",(void*)f_31923},
{"f_32221ChickenBridge.scm",(void*)f_32221},
{"f_32154ChickenBridge.scm",(void*)f_32154},
{"f_32179ChickenBridge.scm",(void*)f_32179},
{"f_31879ChickenBridge.scm",(void*)f_31879},
{"f_32167ChickenBridge.scm",(void*)f_32167},
{"f_31978ChickenBridge.scm",(void*)f_31978},
{"f_32105ChickenBridge.scm",(void*)f_32105},
{"f_32100ChickenBridge.scm",(void*)f_32100},
{"f_31980ChickenBridge.scm",(void*)f_31980},
{"f_32099ChickenBridge.scm",(void*)f_32099},
{"f_32095ChickenBridge.scm",(void*)f_32095},
{"f_32087ChickenBridge.scm",(void*)f_32087},
{"f_32051ChickenBridge.scm",(void*)f_32051},
{"f_32084ChickenBridge.scm",(void*)f_32084},
{"f_32080ChickenBridge.scm",(void*)f_32080},
{"f_32061ChickenBridge.scm",(void*)f_32061},
{"f_32040ChickenBridge.scm",(void*)f_32040},
{"f_32010ChickenBridge.scm",(void*)f_32010},
{"f_31982ChickenBridge.scm",(void*)f_31982},
{"f_31959ChickenBridge.scm",(void*)f_31959},
{"f_31964ChickenBridge.scm",(void*)f_31964},
{"f_31969ChickenBridge.scm",(void*)f_31969},
{"f_31937ChickenBridge.scm",(void*)f_31937},
{"f_31941ChickenBridge.scm",(void*)f_31941},
{"f_31893ChickenBridge.scm",(void*)f_31893},
{"f_31897ChickenBridge.scm",(void*)f_31897},
{"f_31884ChickenBridge.scm",(void*)f_31884},
{"f_31888ChickenBridge.scm",(void*)f_31888},
{"f_31872ChickenBridge.scm",(void*)f_31872},
{"f_31869ChickenBridge.scm",(void*)f_31869},
{"f_31855ChickenBridge.scm",(void*)f_31855},
{"f_31860ChickenBridge.scm",(void*)f_31860},
{"f_31841ChickenBridge.scm",(void*)f_31841},
{"f_31846ChickenBridge.scm",(void*)f_31846},
{"f_31651ChickenBridge.scm",(void*)f_31651},
{"f_31712ChickenBridge.scm",(void*)f_31712},
{"f_31714ChickenBridge.scm",(void*)f_31714},
{"f_31724ChickenBridge.scm",(void*)f_31724},
{"f_31743ChickenBridge.scm",(void*)f_31743},
{"f_31783ChickenBridge.scm",(void*)f_31783},
{"f_31825ChickenBridge.scm",(void*)f_31825},
{"f_31795ChickenBridge.scm",(void*)f_31795},
{"f_31780ChickenBridge.scm",(void*)f_31780},
{"f_31698ChickenBridge.scm",(void*)f_31698},
{"f_31663ChickenBridge.scm",(void*)f_31663},
{"f_31690ChickenBridge.scm",(void*)f_31690},
{"f_31671ChickenBridge.scm",(void*)f_31671},
{"f_31678ChickenBridge.scm",(void*)f_31678},
{"f_31682ChickenBridge.scm",(void*)f_31682},
{"f_31686ChickenBridge.scm",(void*)f_31686},
{"f_31763ChickenBridge.scm",(void*)f_31763},
{"f_31741ChickenBridge.scm",(void*)f_31741},
{"f_31727ChickenBridge.scm",(void*)f_31727},
{"f_31730ChickenBridge.scm",(void*)f_31730},
{"f_31705ChickenBridge.scm",(void*)f_31705},
{"f_31634ChickenBridge.scm",(void*)f_31634},
{"f_31639ChickenBridge.scm",(void*)f_31639},
{"f_31577ChickenBridge.scm",(void*)f_31577},
{"f_31610ChickenBridge.scm",(void*)f_31610},
{"f_31590ChickenBridge.scm",(void*)f_31590},
{"f_31598ChickenBridge.scm",(void*)f_31598},
{"f_31581ChickenBridge.scm",(void*)f_31581},
{"f_31520ChickenBridge.scm",(void*)f_31520},
{"f_31553ChickenBridge.scm",(void*)f_31553},
{"f_31533ChickenBridge.scm",(void*)f_31533},
{"f_31541ChickenBridge.scm",(void*)f_31541},
{"f_31524ChickenBridge.scm",(void*)f_31524},
{"f_31430ChickenBridge.scm",(void*)f_31430},
{"f_31484ChickenBridge.scm",(void*)f_31484},
{"f_31479ChickenBridge.scm",(void*)f_31479},
{"f_31442ChickenBridge.scm",(void*)f_31442},
{"f_31448ChickenBridge.scm",(void*)f_31448},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31478ChickenBridge.scm",(void*)f_31478},
{"f_31454ChickenBridge.scm",(void*)f_31454},
{"f_31472ChickenBridge.scm",(void*)f_31472},
{"f_31469ChickenBridge.scm",(void*)f_31469},
{"f_31465ChickenBridge.scm",(void*)f_31465},
{"f_31458ChickenBridge.scm",(void*)f_31458},
{"f_31415ChickenBridge.scm",(void*)f_31415},
{"f_31420ChickenBridge.scm",(void*)f_31420},
{"f_31387ChickenBridge.scm",(void*)f_31387},
{"f_31392ChickenBridge.scm",(void*)f_31392},
{"f_31359ChickenBridge.scm",(void*)f_31359},
{"f_31364ChickenBridge.scm",(void*)f_31364},
{"f_31331ChickenBridge.scm",(void*)f_31331},
{"f_31336ChickenBridge.scm",(void*)f_31336},
{"f_31303ChickenBridge.scm",(void*)f_31303},
{"f_31308ChickenBridge.scm",(void*)f_31308},
{"f_31275ChickenBridge.scm",(void*)f_31275},
{"f_31280ChickenBridge.scm",(void*)f_31280},
{"f_31247ChickenBridge.scm",(void*)f_31247},
{"f_31252ChickenBridge.scm",(void*)f_31252},
{"f_31219ChickenBridge.scm",(void*)f_31219},
{"f_31224ChickenBridge.scm",(void*)f_31224},
{"f_31191ChickenBridge.scm",(void*)f_31191},
{"f_31196ChickenBridge.scm",(void*)f_31196},
{"f_31163ChickenBridge.scm",(void*)f_31163},
{"f_31168ChickenBridge.scm",(void*)f_31168},
{"f_31140ChickenBridge.scm",(void*)f_31140},
{"f_31145ChickenBridge.scm",(void*)f_31145},
{"f_31144ChickenBridge.scm",(void*)f_31144},
{"f_31121ChickenBridge.scm",(void*)f_31121},
{"f_31126ChickenBridge.scm",(void*)f_31126},
{"f_31066ChickenBridge.scm",(void*)f_31066},
{"f_31073ChickenBridge.scm",(void*)f_31073},
{"f_31076ChickenBridge.scm",(void*)f_31076},
{"f_31100ChickenBridge.scm",(void*)f_31100},
{"f_31080ChickenBridge.scm",(void*)f_31080},
{"f_31070ChickenBridge.scm",(void*)f_31070},
{"f_31019ChickenBridge.scm",(void*)f_31019},
{"f_31026ChickenBridge.scm",(void*)f_31026},
{"f_31029ChickenBridge.scm",(void*)f_31029},
{"f_31049ChickenBridge.scm",(void*)f_31049},
{"f_31033ChickenBridge.scm",(void*)f_31033},
{"f_30996ChickenBridge.scm",(void*)f_30996},
{"f_31001ChickenBridge.scm",(void*)f_31001},
{"f_31000ChickenBridge.scm",(void*)f_31000},
{"f_30977ChickenBridge.scm",(void*)f_30977},
{"f_30982ChickenBridge.scm",(void*)f_30982},
{"f_30954ChickenBridge.scm",(void*)f_30954},
{"f_30959ChickenBridge.scm",(void*)f_30959},
{"f_30958ChickenBridge.scm",(void*)f_30958},
{"f_30935ChickenBridge.scm",(void*)f_30935},
{"f_30940ChickenBridge.scm",(void*)f_30940},
{"f_30916ChickenBridge.scm",(void*)f_30916},
{"f_30921ChickenBridge.scm",(void*)f_30921},
{"f_30920ChickenBridge.scm",(void*)f_30920},
{"f_30901ChickenBridge.scm",(void*)f_30901},
{"f_30906ChickenBridge.scm",(void*)f_30906},
{"f_30882ChickenBridge.scm",(void*)f_30882},
{"f_30887ChickenBridge.scm",(void*)f_30887},
{"f_30886ChickenBridge.scm",(void*)f_30886},
{"f_30867ChickenBridge.scm",(void*)f_30867},
{"f_30872ChickenBridge.scm",(void*)f_30872},
{"f_30852ChickenBridge.scm",(void*)f_30852},
{"f_30857ChickenBridge.scm",(void*)f_30857},
{"f_30834ChickenBridge.scm",(void*)f_30834},
{"f_30842ChickenBridge.scm",(void*)f_30842},
{"f_30838ChickenBridge.scm",(void*)f_30838},
{"f_30364ChickenBridge.scm",(void*)f_30364},
{"f_30792ChickenBridge.scm",(void*)f_30792},
{"f_30807ChickenBridge.scm",(void*)f_30807},
{"f_30799ChickenBridge.scm",(void*)f_30799},
{"f_30763ChickenBridge.scm",(void*)f_30763},
{"f_30767ChickenBridge.scm",(void*)f_30767},
{"f_30728ChickenBridge.scm",(void*)f_30728},
{"f_30732ChickenBridge.scm",(void*)f_30732},
{"f_30693ChickenBridge.scm",(void*)f_30693},
{"f_30697ChickenBridge.scm",(void*)f_30697},
{"f_30368ChickenBridge.scm",(void*)f_30368},
{"f_30657ChickenBridge.scm",(void*)f_30657},
{"f_30672ChickenBridge.scm",(void*)f_30672},
{"f_30664ChickenBridge.scm",(void*)f_30664},
{"f_30628ChickenBridge.scm",(void*)f_30628},
{"f_30632ChickenBridge.scm",(void*)f_30632},
{"f_30593ChickenBridge.scm",(void*)f_30593},
{"f_30597ChickenBridge.scm",(void*)f_30597},
{"f_30558ChickenBridge.scm",(void*)f_30558},
{"f_30562ChickenBridge.scm",(void*)f_30562},
{"f_30371ChickenBridge.scm",(void*)f_30371},
{"f_30522ChickenBridge.scm",(void*)f_30522},
{"f_30537ChickenBridge.scm",(void*)f_30537},
{"f_30529ChickenBridge.scm",(void*)f_30529},
{"f_30493ChickenBridge.scm",(void*)f_30493},
{"f_30497ChickenBridge.scm",(void*)f_30497},
{"f_30458ChickenBridge.scm",(void*)f_30458},
{"f_30462ChickenBridge.scm",(void*)f_30462},
{"f_30423ChickenBridge.scm",(void*)f_30423},
{"f_30427ChickenBridge.scm",(void*)f_30427},
{"f_30374ChickenBridge.scm",(void*)f_30374},
{"f_30377ChickenBridge.scm",(void*)f_30377},
{"f_30381ChickenBridge.scm",(void*)f_30381},
{"f_30345ChickenBridge.scm",(void*)f_30345},
{"f_30350ChickenBridge.scm",(void*)f_30350},
{"f_29894ChickenBridge.scm",(void*)f_29894},
{"f_30322ChickenBridge.scm",(void*)f_30322},
{"f_30337ChickenBridge.scm",(void*)f_30337},
{"f_30329ChickenBridge.scm",(void*)f_30329},
{"f_30293ChickenBridge.scm",(void*)f_30293},
{"f_30297ChickenBridge.scm",(void*)f_30297},
{"f_30258ChickenBridge.scm",(void*)f_30258},
{"f_30262ChickenBridge.scm",(void*)f_30262},
{"f_30223ChickenBridge.scm",(void*)f_30223},
{"f_30227ChickenBridge.scm",(void*)f_30227},
{"f_29898ChickenBridge.scm",(void*)f_29898},
{"f_30187ChickenBridge.scm",(void*)f_30187},
{"f_30202ChickenBridge.scm",(void*)f_30202},
{"f_30194ChickenBridge.scm",(void*)f_30194},
{"f_30158ChickenBridge.scm",(void*)f_30158},
{"f_30162ChickenBridge.scm",(void*)f_30162},
{"f_30123ChickenBridge.scm",(void*)f_30123},
{"f_30127ChickenBridge.scm",(void*)f_30127},
{"f_30088ChickenBridge.scm",(void*)f_30088},
{"f_30092ChickenBridge.scm",(void*)f_30092},
{"f_29901ChickenBridge.scm",(void*)f_29901},
{"f_30052ChickenBridge.scm",(void*)f_30052},
{"f_30067ChickenBridge.scm",(void*)f_30067},
{"f_30059ChickenBridge.scm",(void*)f_30059},
{"f_30023ChickenBridge.scm",(void*)f_30023},
{"f_30027ChickenBridge.scm",(void*)f_30027},
{"f_29988ChickenBridge.scm",(void*)f_29988},
{"f_29992ChickenBridge.scm",(void*)f_29992},
{"f_29953ChickenBridge.scm",(void*)f_29953},
{"f_29957ChickenBridge.scm",(void*)f_29957},
{"f_29904ChickenBridge.scm",(void*)f_29904},
{"f_29907ChickenBridge.scm",(void*)f_29907},
{"f_29911ChickenBridge.scm",(void*)f_29911},
{"f_29875ChickenBridge.scm",(void*)f_29875},
{"f_29880ChickenBridge.scm",(void*)f_29880},
{"f_29424ChickenBridge.scm",(void*)f_29424},
{"f_29852ChickenBridge.scm",(void*)f_29852},
{"f_29867ChickenBridge.scm",(void*)f_29867},
{"f_29859ChickenBridge.scm",(void*)f_29859},
{"f_29823ChickenBridge.scm",(void*)f_29823},
{"f_29827ChickenBridge.scm",(void*)f_29827},
{"f_29788ChickenBridge.scm",(void*)f_29788},
{"f_29792ChickenBridge.scm",(void*)f_29792},
{"f_29753ChickenBridge.scm",(void*)f_29753},
{"f_29757ChickenBridge.scm",(void*)f_29757},
{"f_29428ChickenBridge.scm",(void*)f_29428},
{"f_29717ChickenBridge.scm",(void*)f_29717},
{"f_29732ChickenBridge.scm",(void*)f_29732},
{"f_29724ChickenBridge.scm",(void*)f_29724},
{"f_29688ChickenBridge.scm",(void*)f_29688},
{"f_29692ChickenBridge.scm",(void*)f_29692},
{"f_29653ChickenBridge.scm",(void*)f_29653},
{"f_29657ChickenBridge.scm",(void*)f_29657},
{"f_29618ChickenBridge.scm",(void*)f_29618},
{"f_29622ChickenBridge.scm",(void*)f_29622},
{"f_29431ChickenBridge.scm",(void*)f_29431},
{"f_29582ChickenBridge.scm",(void*)f_29582},
{"f_29597ChickenBridge.scm",(void*)f_29597},
{"f_29589ChickenBridge.scm",(void*)f_29589},
{"f_29553ChickenBridge.scm",(void*)f_29553},
{"f_29557ChickenBridge.scm",(void*)f_29557},
{"f_29518ChickenBridge.scm",(void*)f_29518},
{"f_29522ChickenBridge.scm",(void*)f_29522},
{"f_29483ChickenBridge.scm",(void*)f_29483},
{"f_29487ChickenBridge.scm",(void*)f_29487},
{"f_29434ChickenBridge.scm",(void*)f_29434},
{"f_29437ChickenBridge.scm",(void*)f_29437},
{"f_29441ChickenBridge.scm",(void*)f_29441},
{"f_29405ChickenBridge.scm",(void*)f_29405},
{"f_29410ChickenBridge.scm",(void*)f_29410},
{"f_28676ChickenBridge.scm",(void*)f_28676},
{"f_29382ChickenBridge.scm",(void*)f_29382},
{"f_29397ChickenBridge.scm",(void*)f_29397},
{"f_29389ChickenBridge.scm",(void*)f_29389},
{"f_29353ChickenBridge.scm",(void*)f_29353},
{"f_29357ChickenBridge.scm",(void*)f_29357},
{"f_29318ChickenBridge.scm",(void*)f_29318},
{"f_29322ChickenBridge.scm",(void*)f_29322},
{"f_29283ChickenBridge.scm",(void*)f_29283},
{"f_29287ChickenBridge.scm",(void*)f_29287},
{"f_29248ChickenBridge.scm",(void*)f_29248},
{"f_29252ChickenBridge.scm",(void*)f_29252},
{"f_28680ChickenBridge.scm",(void*)f_28680},
{"f_29212ChickenBridge.scm",(void*)f_29212},
{"f_29227ChickenBridge.scm",(void*)f_29227},
{"f_29219ChickenBridge.scm",(void*)f_29219},
{"f_29183ChickenBridge.scm",(void*)f_29183},
{"f_29187ChickenBridge.scm",(void*)f_29187},
{"f_29148ChickenBridge.scm",(void*)f_29148},
{"f_29152ChickenBridge.scm",(void*)f_29152},
{"f_29113ChickenBridge.scm",(void*)f_29113},
{"f_29117ChickenBridge.scm",(void*)f_29117},
{"f_29078ChickenBridge.scm",(void*)f_29078},
{"f_29082ChickenBridge.scm",(void*)f_29082},
{"f_28683ChickenBridge.scm",(void*)f_28683},
{"f_29042ChickenBridge.scm",(void*)f_29042},
{"f_29057ChickenBridge.scm",(void*)f_29057},
{"f_29049ChickenBridge.scm",(void*)f_29049},
{"f_29013ChickenBridge.scm",(void*)f_29013},
{"f_29017ChickenBridge.scm",(void*)f_29017},
{"f_28978ChickenBridge.scm",(void*)f_28978},
{"f_28982ChickenBridge.scm",(void*)f_28982},
{"f_28943ChickenBridge.scm",(void*)f_28943},
{"f_28947ChickenBridge.scm",(void*)f_28947},
{"f_28908ChickenBridge.scm",(void*)f_28908},
{"f_28912ChickenBridge.scm",(void*)f_28912},
{"f_28686ChickenBridge.scm",(void*)f_28686},
{"f_28872ChickenBridge.scm",(void*)f_28872},
{"f_28887ChickenBridge.scm",(void*)f_28887},
{"f_28879ChickenBridge.scm",(void*)f_28879},
{"f_28843ChickenBridge.scm",(void*)f_28843},
{"f_28847ChickenBridge.scm",(void*)f_28847},
{"f_28808ChickenBridge.scm",(void*)f_28808},
{"f_28812ChickenBridge.scm",(void*)f_28812},
{"f_28773ChickenBridge.scm",(void*)f_28773},
{"f_28777ChickenBridge.scm",(void*)f_28777},
{"f_28738ChickenBridge.scm",(void*)f_28738},
{"f_28742ChickenBridge.scm",(void*)f_28742},
{"f_28689ChickenBridge.scm",(void*)f_28689},
{"f_28692ChickenBridge.scm",(void*)f_28692},
{"f_28696ChickenBridge.scm",(void*)f_28696},
{"f_28657ChickenBridge.scm",(void*)f_28657},
{"f_28662ChickenBridge.scm",(void*)f_28662},
{"f_27928ChickenBridge.scm",(void*)f_27928},
{"f_28634ChickenBridge.scm",(void*)f_28634},
{"f_28649ChickenBridge.scm",(void*)f_28649},
{"f_28641ChickenBridge.scm",(void*)f_28641},
{"f_28605ChickenBridge.scm",(void*)f_28605},
{"f_28609ChickenBridge.scm",(void*)f_28609},
{"f_28570ChickenBridge.scm",(void*)f_28570},
{"f_28574ChickenBridge.scm",(void*)f_28574},
{"f_28535ChickenBridge.scm",(void*)f_28535},
{"f_28539ChickenBridge.scm",(void*)f_28539},
{"f_28500ChickenBridge.scm",(void*)f_28500},
{"f_28504ChickenBridge.scm",(void*)f_28504},
{"f_27932ChickenBridge.scm",(void*)f_27932},
{"f_28464ChickenBridge.scm",(void*)f_28464},
{"f_28479ChickenBridge.scm",(void*)f_28479},
{"f_28471ChickenBridge.scm",(void*)f_28471},
{"f_28435ChickenBridge.scm",(void*)f_28435},
{"f_28439ChickenBridge.scm",(void*)f_28439},
{"f_28400ChickenBridge.scm",(void*)f_28400},
{"f_28404ChickenBridge.scm",(void*)f_28404},
{"f_28365ChickenBridge.scm",(void*)f_28365},
{"f_28369ChickenBridge.scm",(void*)f_28369},
{"f_28330ChickenBridge.scm",(void*)f_28330},
{"f_28334ChickenBridge.scm",(void*)f_28334},
{"f_27935ChickenBridge.scm",(void*)f_27935},
{"f_28294ChickenBridge.scm",(void*)f_28294},
{"f_28309ChickenBridge.scm",(void*)f_28309},
{"f_28301ChickenBridge.scm",(void*)f_28301},
{"f_28265ChickenBridge.scm",(void*)f_28265},
{"f_28269ChickenBridge.scm",(void*)f_28269},
{"f_28230ChickenBridge.scm",(void*)f_28230},
{"f_28234ChickenBridge.scm",(void*)f_28234},
{"f_28195ChickenBridge.scm",(void*)f_28195},
{"f_28199ChickenBridge.scm",(void*)f_28199},
{"f_28160ChickenBridge.scm",(void*)f_28160},
{"f_28164ChickenBridge.scm",(void*)f_28164},
{"f_27938ChickenBridge.scm",(void*)f_27938},
{"f_28124ChickenBridge.scm",(void*)f_28124},
{"f_28139ChickenBridge.scm",(void*)f_28139},
{"f_28131ChickenBridge.scm",(void*)f_28131},
{"f_28095ChickenBridge.scm",(void*)f_28095},
{"f_28099ChickenBridge.scm",(void*)f_28099},
{"f_28060ChickenBridge.scm",(void*)f_28060},
{"f_28064ChickenBridge.scm",(void*)f_28064},
{"f_28025ChickenBridge.scm",(void*)f_28025},
{"f_28029ChickenBridge.scm",(void*)f_28029},
{"f_27990ChickenBridge.scm",(void*)f_27990},
{"f_27994ChickenBridge.scm",(void*)f_27994},
{"f_27941ChickenBridge.scm",(void*)f_27941},
{"f_27944ChickenBridge.scm",(void*)f_27944},
{"f_27948ChickenBridge.scm",(void*)f_27948},
{"f_27909ChickenBridge.scm",(void*)f_27909},
{"f_27914ChickenBridge.scm",(void*)f_27914},
{"f_27458ChickenBridge.scm",(void*)f_27458},
{"f_27886ChickenBridge.scm",(void*)f_27886},
{"f_27901ChickenBridge.scm",(void*)f_27901},
{"f_27893ChickenBridge.scm",(void*)f_27893},
{"f_27857ChickenBridge.scm",(void*)f_27857},
{"f_27861ChickenBridge.scm",(void*)f_27861},
{"f_27822ChickenBridge.scm",(void*)f_27822},
{"f_27826ChickenBridge.scm",(void*)f_27826},
{"f_27787ChickenBridge.scm",(void*)f_27787},
{"f_27791ChickenBridge.scm",(void*)f_27791},
{"f_27462ChickenBridge.scm",(void*)f_27462},
{"f_27751ChickenBridge.scm",(void*)f_27751},
{"f_27766ChickenBridge.scm",(void*)f_27766},
{"f_27758ChickenBridge.scm",(void*)f_27758},
{"f_27722ChickenBridge.scm",(void*)f_27722},
{"f_27726ChickenBridge.scm",(void*)f_27726},
{"f_27687ChickenBridge.scm",(void*)f_27687},
{"f_27691ChickenBridge.scm",(void*)f_27691},
{"f_27652ChickenBridge.scm",(void*)f_27652},
{"f_27656ChickenBridge.scm",(void*)f_27656},
{"f_27465ChickenBridge.scm",(void*)f_27465},
{"f_27616ChickenBridge.scm",(void*)f_27616},
{"f_27631ChickenBridge.scm",(void*)f_27631},
{"f_27623ChickenBridge.scm",(void*)f_27623},
{"f_27587ChickenBridge.scm",(void*)f_27587},
{"f_27591ChickenBridge.scm",(void*)f_27591},
{"f_27552ChickenBridge.scm",(void*)f_27552},
{"f_27556ChickenBridge.scm",(void*)f_27556},
{"f_27517ChickenBridge.scm",(void*)f_27517},
{"f_27521ChickenBridge.scm",(void*)f_27521},
{"f_27468ChickenBridge.scm",(void*)f_27468},
{"f_27471ChickenBridge.scm",(void*)f_27471},
{"f_27475ChickenBridge.scm",(void*)f_27475},
{"f_27439ChickenBridge.scm",(void*)f_27439},
{"f_27444ChickenBridge.scm",(void*)f_27444},
{"f_26710ChickenBridge.scm",(void*)f_26710},
{"f_27416ChickenBridge.scm",(void*)f_27416},
{"f_27431ChickenBridge.scm",(void*)f_27431},
{"f_27423ChickenBridge.scm",(void*)f_27423},
{"f_27387ChickenBridge.scm",(void*)f_27387},
{"f_27391ChickenBridge.scm",(void*)f_27391},
{"f_27352ChickenBridge.scm",(void*)f_27352},
{"f_27356ChickenBridge.scm",(void*)f_27356},
{"f_27317ChickenBridge.scm",(void*)f_27317},
{"f_27321ChickenBridge.scm",(void*)f_27321},
{"f_27282ChickenBridge.scm",(void*)f_27282},
{"f_27286ChickenBridge.scm",(void*)f_27286},
{"f_26714ChickenBridge.scm",(void*)f_26714},
{"f_27246ChickenBridge.scm",(void*)f_27246},
{"f_27261ChickenBridge.scm",(void*)f_27261},
{"f_27253ChickenBridge.scm",(void*)f_27253},
{"f_27217ChickenBridge.scm",(void*)f_27217},
{"f_27221ChickenBridge.scm",(void*)f_27221},
{"f_27182ChickenBridge.scm",(void*)f_27182},
{"f_27186ChickenBridge.scm",(void*)f_27186},
{"f_27147ChickenBridge.scm",(void*)f_27147},
{"f_27151ChickenBridge.scm",(void*)f_27151},
{"f_27112ChickenBridge.scm",(void*)f_27112},
{"f_27116ChickenBridge.scm",(void*)f_27116},
{"f_26717ChickenBridge.scm",(void*)f_26717},
{"f_27076ChickenBridge.scm",(void*)f_27076},
{"f_27091ChickenBridge.scm",(void*)f_27091},
{"f_27083ChickenBridge.scm",(void*)f_27083},
{"f_27047ChickenBridge.scm",(void*)f_27047},
{"f_27051ChickenBridge.scm",(void*)f_27051},
{"f_27012ChickenBridge.scm",(void*)f_27012},
{"f_27016ChickenBridge.scm",(void*)f_27016},
{"f_26977ChickenBridge.scm",(void*)f_26977},
{"f_26981ChickenBridge.scm",(void*)f_26981},
{"f_26942ChickenBridge.scm",(void*)f_26942},
{"f_26946ChickenBridge.scm",(void*)f_26946},
{"f_26720ChickenBridge.scm",(void*)f_26720},
{"f_26906ChickenBridge.scm",(void*)f_26906},
{"f_26921ChickenBridge.scm",(void*)f_26921},
{"f_26913ChickenBridge.scm",(void*)f_26913},
{"f_26877ChickenBridge.scm",(void*)f_26877},
{"f_26881ChickenBridge.scm",(void*)f_26881},
{"f_26842ChickenBridge.scm",(void*)f_26842},
{"f_26846ChickenBridge.scm",(void*)f_26846},
{"f_26807ChickenBridge.scm",(void*)f_26807},
{"f_26811ChickenBridge.scm",(void*)f_26811},
{"f_26772ChickenBridge.scm",(void*)f_26772},
{"f_26776ChickenBridge.scm",(void*)f_26776},
{"f_26723ChickenBridge.scm",(void*)f_26723},
{"f_26726ChickenBridge.scm",(void*)f_26726},
{"f_26730ChickenBridge.scm",(void*)f_26730},
{"f_26372ChickenBridge.scm",(void*)f_26372},
{"f_26212ChickenBridge.scm",(void*)f_26212},
{"f_26247ChickenBridge.scm",(void*)f_26247},
{"f_26257ChickenBridge.scm",(void*)f_26257},
{"f_26261ChickenBridge.scm",(void*)f_26261},
{"f_26264ChickenBridge.scm",(void*)f_26264},
{"f_26325ChickenBridge.scm",(void*)f_26325},
{"f_26316ChickenBridge.scm",(void*)f_26316},
{"f_26267ChickenBridge.scm",(void*)f_26267},
{"f_26286ChickenBridge.scm",(void*)f_26286},
{"f_26293ChickenBridge.scm",(void*)f_26293},
{"f_26270ChickenBridge.scm",(void*)f_26270},
{"f_26276ChickenBridge.scm",(void*)f_26276},
{"f_26245ChickenBridge.scm",(void*)f_26245},
{"f_26220ChickenBridge.scm",(void*)f_26220},
{"f_26219ChickenBridge.scm",(void*)f_26219},
{"f_26380ChickenBridge.scm",(void*)f_26380},
{"f_25958ChickenBridge.scm",(void*)f_25958},
{"f_25980ChickenBridge.scm",(void*)f_25980},
{"f_25995ChickenBridge.scm",(void*)f_25995},
{"f_25998ChickenBridge.scm",(void*)f_25998},
{"f_26174ChickenBridge.scm",(void*)f_26174},
{"f_26168ChickenBridge.scm",(void*)f_26168},
{"f_26001ChickenBridge.scm",(void*)f_26001},
{"f_26150ChickenBridge.scm",(void*)f_26150},
{"f_26004ChickenBridge.scm",(void*)f_26004},
{"f_26007ChickenBridge.scm",(void*)f_26007},
{"f_26143ChickenBridge.scm",(void*)f_26143},
{"f_26131ChickenBridge.scm",(void*)f_26131},
{"f_26027ChickenBridge.scm",(void*)f_26027},
{"f_26034ChickenBridge.scm",(void*)f_26034},
{"f_26104ChickenBridge.scm",(void*)f_26104},
{"f_26090ChickenBridge.scm",(void*)f_26090},
{"f_26098ChickenBridge.scm",(void*)f_26098},
{"f_26037ChickenBridge.scm",(void*)f_26037},
{"f_26076ChickenBridge.scm",(void*)f_26076},
{"f_26040ChickenBridge.scm",(void*)f_26040},
{"f_26069ChickenBridge.scm",(void*)f_26069},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26049ChickenBridge.scm",(void*)f_26049},
{"f_26053ChickenBridge.scm",(void*)f_26053},
{"f_26014ChickenBridge.scm",(void*)f_26014},
{"f_26017ChickenBridge.scm",(void*)f_26017},
{"f_25827ChickenBridge.scm",(void*)f_25827},
{"f_25836ChickenBridge.scm",(void*)f_25836},
{"f_25784ChickenBridge.scm",(void*)f_25784},
{"f_25790ChickenBridge.scm",(void*)f_25790},
{"f_25853ChickenBridge.scm",(void*)f_25853},
{"f_25939ChickenBridge.scm",(void*)f_25939},
{"f_25926ChickenBridge.scm",(void*)f_25926},
{"f_25934ChickenBridge.scm",(void*)f_25934},
{"f_25856ChickenBridge.scm",(void*)f_25856},
{"f_25860ChickenBridge.scm",(void*)f_25860},
{"f_25903ChickenBridge.scm",(void*)f_25903},
{"f_25865ChickenBridge.scm",(void*)f_25865},
{"f_25831ChickenBridge.scm",(void*)f_25831},
{"f_25726ChickenBridge.scm",(void*)f_25726},
{"f_25733ChickenBridge.scm",(void*)f_25733},
{"f_25764ChickenBridge.scm",(void*)f_25764},
{"f_25760ChickenBridge.scm",(void*)f_25760},
{"f_25752ChickenBridge.scm",(void*)f_25752},
{"f_25635ChickenBridge.scm",(void*)f_25635},
{"f_25642ChickenBridge.scm",(void*)f_25642},
{"f_25710ChickenBridge.scm",(void*)f_25710},
{"f_25653ChickenBridge.scm",(void*)f_25653},
{"f_25680ChickenBridge.scm",(void*)f_25680},
{"f_25664ChickenBridge.scm",(void*)f_25664},
{"f_25569ChickenBridge.scm",(void*)f_25569},
{"f_25580ChickenBridge.scm",(void*)f_25580},
{"f_25583ChickenBridge.scm",(void*)f_25583},
{"f_25590ChickenBridge.scm",(void*)f_25590},
{"f_25563ChickenBridge.scm",(void*)f_25563},
{"f_25017ChickenBridge.scm",(void*)f_25017},
{"f_25048ChickenBridge.scm",(void*)f_25048},
{"f_25512ChickenBridge.scm",(void*)f_25512},
{"f_25518ChickenBridge.scm",(void*)f_25518},
{"f_25059ChickenBridge.scm",(void*)f_25059},
{"f_24944ChickenBridge.scm",(void*)f_24944},
{"f_24969ChickenBridge.scm",(void*)f_24969},
{"f_24904ChickenBridge.scm",(void*)f_24904},
{"f_24917ChickenBridge.scm",(void*)f_24917},
{"f_24958ChickenBridge.scm",(void*)f_24958},
{"f_25063ChickenBridge.scm",(void*)f_25063},
{"f_25500ChickenBridge.scm",(void*)f_25500},
{"f_25496ChickenBridge.scm",(void*)f_25496},
{"f_25492ChickenBridge.scm",(void*)f_25492},
{"f_25066ChickenBridge.scm",(void*)f_25066},
{"f_25286ChickenBridge.scm",(void*)f_25286},
{"f_25395ChickenBridge.scm",(void*)f_25395},
{"f_25460ChickenBridge.scm",(void*)f_25460},
{"f_25402ChickenBridge.scm",(void*)f_25402},
{"f_25406ChickenBridge.scm",(void*)f_25406},
{"f_25410ChickenBridge.scm",(void*)f_25410},
{"f_25452ChickenBridge.scm",(void*)f_25452},
{"f_25448ChickenBridge.scm",(void*)f_25448},
{"f_25426ChickenBridge.scm",(void*)f_25426},
{"f_25289ChickenBridge.scm",(void*)f_25289},
{"f_25292ChickenBridge.scm",(void*)f_25292},
{"f_25191ChickenBridge.scm",(void*)f_25191},
{"f_25274ChickenBridge.scm",(void*)f_25274},
{"f_25241ChickenBridge.scm",(void*)f_25241},
{"f_25267ChickenBridge.scm",(void*)f_25267},
{"f_25249ChickenBridge.scm",(void*)f_25249},
{"f_25197ChickenBridge.scm",(void*)f_25197},
{"f_25237ChickenBridge.scm",(void*)f_25237},
{"f_25179ChickenBridge.scm",(void*)f_25179},
{"f_25150ChickenBridge.scm",(void*)f_25150},
{"f_25172ChickenBridge.scm",(void*)f_25172},
{"f_25158ChickenBridge.scm",(void*)f_25158},
{"f_25112ChickenBridge.scm",(void*)f_25112},
{"f_25069ChickenBridge.scm",(void*)f_25069},
{"f_25080ChickenBridge.scm",(void*)f_25080},
{"f_25084ChickenBridge.scm",(void*)f_25084},
{"f_25088ChickenBridge.scm",(void*)f_25088},
{"f_25092ChickenBridge.scm",(void*)f_25092},
{"f_25076ChickenBridge.scm",(void*)f_25076},
{"f_25036ChickenBridge.scm",(void*)f_25036},
{"f_25031ChickenBridge.scm",(void*)f_25031},
{"f_25026ChickenBridge.scm",(void*)f_25026},
{"f_24858ChickenBridge.scm",(void*)f_24858},
{"f_24869ChickenBridge.scm",(void*)f_24869},
{"f_24884ChickenBridge.scm",(void*)f_24884},
{"f_24820ChickenBridge.scm",(void*)f_24820},
{"f_24831ChickenBridge.scm",(void*)f_24831},
{"f_24846ChickenBridge.scm",(void*)f_24846},
{"f_24753ChickenBridge.scm",(void*)f_24753},
{"f_24773ChickenBridge.scm",(void*)f_24773},
{"f_24783ChickenBridge.scm",(void*)f_24783},
{"f_24796ChickenBridge.scm",(void*)f_24796},
{"f_24764ChickenBridge.scm",(void*)f_24764},
{"f_24771ChickenBridge.scm",(void*)f_24771},
{"f_24560ChickenBridge.scm",(void*)f_24560},
{"f_24620ChickenBridge.scm",(void*)f_24620},
{"f_24630ChickenBridge.scm",(void*)f_24630},
{"f_24744ChickenBridge.scm",(void*)f_24744},
{"f_24709ChickenBridge.scm",(void*)f_24709},
{"f_24701ChickenBridge.scm",(void*)f_24701},
{"f_24672ChickenBridge.scm",(void*)f_24672},
{"f_24650ChickenBridge.scm",(void*)f_24650},
{"f_24653ChickenBridge.scm",(void*)f_24653},
{"f_24641ChickenBridge.scm",(void*)f_24641},
{"f_24567ChickenBridge.scm",(void*)f_24567},
{"f_24618ChickenBridge.scm",(void*)f_24618},
{"f_24610ChickenBridge.scm",(void*)f_24610},
{"f_24570ChickenBridge.scm",(void*)f_24570},
{"f_24581ChickenBridge.scm",(void*)f_24581},
{"f_24585ChickenBridge.scm",(void*)f_24585},
{"f_24577ChickenBridge.scm",(void*)f_24577},
{"f_24418ChickenBridge.scm",(void*)f_24418},
{"f_24466ChickenBridge.scm",(void*)f_24466},
{"f_24476ChickenBridge.scm",(void*)f_24476},
{"f_24487ChickenBridge.scm",(void*)f_24487},
{"f_24524ChickenBridge.scm",(void*)f_24524},
{"f_24499ChickenBridge.scm",(void*)f_24499},
{"f_24490ChickenBridge.scm",(void*)f_24490},
{"f_24428ChickenBridge.scm",(void*)f_24428},
{"f_24464ChickenBridge.scm",(void*)f_24464},
{"f_24435ChickenBridge.scm",(void*)f_24435},
{"f_24067ChickenBridge.scm",(void*)f_24067},
{"f_24074ChickenBridge.scm",(void*)f_24074},
{"f_24308ChickenBridge.scm",(void*)f_24308},
{"f_24318ChickenBridge.scm",(void*)f_24318},
{"f_24329ChickenBridge.scm",(void*)f_24329},
{"f_24341ChickenBridge.scm",(void*)f_24341},
{"f_24344ChickenBridge.scm",(void*)f_24344},
{"f_24332ChickenBridge.scm",(void*)f_24332},
{"f_24080ChickenBridge.scm",(void*)f_24080},
{"f_24306ChickenBridge.scm",(void*)f_24306},
{"f_24302ChickenBridge.scm",(void*)f_24302},
{"f_24248ChickenBridge.scm",(void*)f_24248},
{"f_24213ChickenBridge.scm",(void*)f_24213},
{"f_24229ChickenBridge.scm",(void*)f_24229},
{"f_24184ChickenBridge.scm",(void*)f_24184},
{"f_24108ChickenBridge.scm",(void*)f_24108},
{"f_24111ChickenBridge.scm",(void*)f_24111},
{"f_24175ChickenBridge.scm",(void*)f_24175},
{"f_24171ChickenBridge.scm",(void*)f_24171},
{"f_24091ChickenBridge.scm",(void*)f_24091},
{"f_24102ChickenBridge.scm",(void*)f_24102},
{"f_24098ChickenBridge.scm",(void*)f_24098},
{"f_24020ChickenBridge.scm",(void*)f_24020},
{"f_24053ChickenBridge.scm",(void*)f_24053},
{"f_24035ChickenBridge.scm",(void*)f_24035},
{"f_24047ChickenBridge.scm",(void*)f_24047},
{"f_23638ChickenBridge.scm",(void*)f_23638},
{"f_23847ChickenBridge.scm",(void*)f_23847},
{"f_23857ChickenBridge.scm",(void*)f_23857},
{"f_23868ChickenBridge.scm",(void*)f_23868},
{"f_23988ChickenBridge.scm",(void*)f_23988},
{"f_23967ChickenBridge.scm",(void*)f_23967},
{"f_23946ChickenBridge.scm",(void*)f_23946},
{"f_23925ChickenBridge.scm",(void*)f_23925},
{"f_23904ChickenBridge.scm",(void*)f_23904},
{"f_23883ChickenBridge.scm",(void*)f_23883},
{"f_23871ChickenBridge.scm",(void*)f_23871},
{"f_23648ChickenBridge.scm",(void*)f_23648},
{"f_23651ChickenBridge.scm",(void*)f_23651},
{"f_23814ChickenBridge.scm",(void*)f_23814},
{"f_23654ChickenBridge.scm",(void*)f_23654},
{"f_23805ChickenBridge.scm",(void*)f_23805},
{"f_23785ChickenBridge.scm",(void*)f_23785},
{"f_23657ChickenBridge.scm",(void*)f_23657},
{"f_23750ChickenBridge.scm",(void*)f_23750},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23660ChickenBridge.scm",(void*)f_23660},
{"f_23699ChickenBridge.scm",(void*)f_23699},
{"f_23733ChickenBridge.scm",(void*)f_23733},
{"f_23717ChickenBridge.scm",(void*)f_23717},
{"f_23702ChickenBridge.scm",(void*)f_23702},
{"f_23667ChickenBridge.scm",(void*)f_23667},
{"f_23678ChickenBridge.scm",(void*)f_23678},
{"f_23682ChickenBridge.scm",(void*)f_23682},
{"f_23674ChickenBridge.scm",(void*)f_23674},
{"f_23556ChickenBridge.scm",(void*)f_23556},
{"f_23560ChickenBridge.scm",(void*)f_23560},
{"f_23578ChickenBridge.scm",(void*)f_23578},
{"f_23396ChickenBridge.scm",(void*)f_23396},
{"f_23404ChickenBridge.scm",(void*)f_23404},
{"f_23414ChickenBridge.scm",(void*)f_23414},
{"f_23452ChickenBridge.scm",(void*)f_23452},
{"f_23455ChickenBridge.scm",(void*)f_23455},
{"f_23458ChickenBridge.scm",(void*)f_23458},
{"f_23533ChickenBridge.scm",(void*)f_23533},
{"f_23543ChickenBridge.scm",(void*)f_23543},
{"f_23461ChickenBridge.scm",(void*)f_23461},
{"f_23464ChickenBridge.scm",(void*)f_23464},
{"f_23467ChickenBridge.scm",(void*)f_23467},
{"f_23487ChickenBridge.scm",(void*)f_23487},
{"f_23497ChickenBridge.scm",(void*)f_23497},
{"f_23500ChickenBridge.scm",(void*)f_23500},
{"f_23503ChickenBridge.scm",(void*)f_23503},
{"f_23470ChickenBridge.scm",(void*)f_23470},
{"f_23473ChickenBridge.scm",(void*)f_23473},
{"f_23390ChickenBridge.scm",(void*)f_23390},
{"f_23384ChickenBridge.scm",(void*)f_23384},
{"f_23378ChickenBridge.scm",(void*)f_23378},
{"f_23307ChickenBridge.scm",(void*)f_23307},
{"f_23348ChickenBridge.scm",(void*)f_23348},
{"f_23352ChickenBridge.scm",(void*)f_23352},
{"f_23356ChickenBridge.scm",(void*)f_23356},
{"f_23360ChickenBridge.scm",(void*)f_23360},
{"f_23364ChickenBridge.scm",(void*)f_23364},
{"f_23368ChickenBridge.scm",(void*)f_23368},
{"f_23372ChickenBridge.scm",(void*)f_23372},
{"f_23376ChickenBridge.scm",(void*)f_23376},
{"f_23309ChickenBridge.scm",(void*)f_23309},
{"f_23315ChickenBridge.scm",(void*)f_23315},
{"f_23337ChickenBridge.scm",(void*)f_23337},
{"f_23326ChickenBridge.scm",(void*)f_23326},
{"f_23156ChickenBridge.scm",(void*)f_23156},
{"f_23171ChickenBridge.scm",(void*)f_23171},
{"f_23184ChickenBridge.scm",(void*)f_23184},
{"f_23144ChickenBridge.scm",(void*)f_23144},
{"f_23132ChickenBridge.scm",(void*)f_23132},
{"f_23120ChickenBridge.scm",(void*)f_23120},
{"f_23114ChickenBridge.scm",(void*)f_23114},
{"f_23108ChickenBridge.scm",(void*)f_23108},
{"f_23096ChickenBridge.scm",(void*)f_23096},
{"f_23084ChickenBridge.scm",(void*)f_23084},
{"f_23072ChickenBridge.scm",(void*)f_23072},
{"f_23060ChickenBridge.scm",(void*)f_23060},
{"f_23054ChickenBridge.scm",(void*)f_23054},
{"f_23018ChickenBridge.scm",(void*)f_23018},
{"f_23012ChickenBridge.scm",(void*)f_23012},
{"f_22965ChickenBridge.scm",(void*)f_22965},
{"f_22969ChickenBridge.scm",(void*)f_22969},
{"f_22985ChickenBridge.scm",(void*)f_22985},
{"f_22994ChickenBridge.scm",(void*)f_22994},
{"f_22972ChickenBridge.scm",(void*)f_22972},
{"f_22956ChickenBridge.scm",(void*)f_22956},
{"f_22960ChickenBridge.scm",(void*)f_22960},
{"f_22803ChickenBridge.scm",(void*)f_22803},
{"f_22930ChickenBridge.scm",(void*)f_22930},
{"f_22943ChickenBridge.scm",(void*)f_22943},
{"f_22925ChickenBridge.scm",(void*)f_22925},
{"f_22806ChickenBridge.scm",(void*)f_22806},
{"f_22922ChickenBridge.scm",(void*)f_22922},
{"f_22906ChickenBridge.scm",(void*)f_22906},
{"f_22834ChickenBridge.scm",(void*)f_22834},
{"f_22842ChickenBridge.scm",(void*)f_22842},
{"f_22852ChickenBridge.scm",(void*)f_22852},
{"f_22855ChickenBridge.scm",(void*)f_22855},
{"f_22837ChickenBridge.scm",(void*)f_22837},
{"f_22626ChickenBridge.scm",(void*)f_22626},
{"f_22630ChickenBridge.scm",(void*)f_22630},
{"f_22635ChickenBridge.scm",(void*)f_22635},
{"f_22638ChickenBridge.scm",(void*)f_22638},
{"f_20450ChickenBridge.scm",(void*)f_20450},
{"f_20463ChickenBridge.scm",(void*)f_20463},
{"f_20470ChickenBridge.scm",(void*)f_20470},
{"f_20477ChickenBridge.scm",(void*)f_20477},
{"f_20456ChickenBridge.scm",(void*)f_20456},
{"f_22642ChickenBridge.scm",(void*)f_22642},
{"f_22679ChickenBridge.scm",(void*)f_22679},
{"f_22772ChickenBridge.scm",(void*)f_22772},
{"f_22782ChickenBridge.scm",(void*)f_22782},
{"f_22685ChickenBridge.scm",(void*)f_22685},
{"f_22742ChickenBridge.scm",(void*)f_22742},
{"f_22752ChickenBridge.scm",(void*)f_22752},
{"f_22693ChickenBridge.scm",(void*)f_22693},
{"f_22707ChickenBridge.scm",(void*)f_22707},
{"f_22711ChickenBridge.scm",(void*)f_22711},
{"f_22715ChickenBridge.scm",(void*)f_22715},
{"f_22719ChickenBridge.scm",(void*)f_22719},
{"f_22726ChickenBridge.scm",(void*)f_22726},
{"f_22703ChickenBridge.scm",(void*)f_22703},
{"f_22696ChickenBridge.scm",(void*)f_22696},
{"f_22645ChickenBridge.scm",(void*)f_22645},
{"f_21577ChickenBridge.scm",(void*)f_21577},
{"f_21590ChickenBridge.scm",(void*)f_21590},
{"f_21640ChickenBridge.scm",(void*)f_21640},
{"f_21737ChickenBridge.scm",(void*)f_21737},
{"f_21805ChickenBridge.scm",(void*)f_21805},
{"f_22062ChickenBridge.scm",(void*)f_22062},
{"f_21812ChickenBridge.scm",(void*)f_21812},
{"f_22050ChickenBridge.scm",(void*)f_22050},
{"f_22001ChickenBridge.scm",(void*)f_22001},
{"f_22007ChickenBridge.scm",(void*)f_22007},
{"f_22031ChickenBridge.scm",(void*)f_22031},
{"f_22027ChickenBridge.scm",(void*)f_22027},
{"f_22015ChickenBridge.scm",(void*)f_22015},
{"f_21815ChickenBridge.scm",(void*)f_21815},
{"f_21977ChickenBridge.scm",(void*)f_21977},
{"f_21981ChickenBridge.scm",(void*)f_21981},
{"f_21818ChickenBridge.scm",(void*)f_21818},
{"f_21954ChickenBridge.scm",(void*)f_21954},
{"f_21958ChickenBridge.scm",(void*)f_21958},
{"f_21821ChickenBridge.scm",(void*)f_21821},
{"f_21931ChickenBridge.scm",(void*)f_21931},
{"f_21935ChickenBridge.scm",(void*)f_21935},
{"f_21824ChickenBridge.scm",(void*)f_21824},
{"f_21856ChickenBridge.scm",(void*)f_21856},
{"f_21874ChickenBridge.scm",(void*)f_21874},
{"f_21892ChickenBridge.scm",(void*)f_21892},
{"f_21910ChickenBridge.scm",(void*)f_21910},
{"f_21827ChickenBridge.scm",(void*)f_21827},
{"f_21831ChickenBridge.scm",(void*)f_21831},
{"f_21741ChickenBridge.scm",(void*)f_21741},
{"f_21745ChickenBridge.scm",(void*)f_21745},
{"f_21749ChickenBridge.scm",(void*)f_21749},
{"f_21644ChickenBridge.scm",(void*)f_21644},
{"f_21648ChickenBridge.scm",(void*)f_21648},
{"f_21652ChickenBridge.scm",(void*)f_21652},
{"f_21671ChickenBridge.scm",(void*)f_21671},
{"f_21675ChickenBridge.scm",(void*)f_21675},
{"f_21655ChickenBridge.scm",(void*)f_21655},
{"f_21659ChickenBridge.scm",(void*)f_21659},
{"f_21594ChickenBridge.scm",(void*)f_21594},
{"f_21598ChickenBridge.scm",(void*)f_21598},
{"f_21602ChickenBridge.scm",(void*)f_21602},
{"f_21584ChickenBridge.scm",(void*)f_21584},
{"f_21399ChickenBridge.scm",(void*)f_21399},
{"f_21411ChickenBridge.scm",(void*)f_21411},
{"f_21430ChickenBridge.scm",(void*)f_21430},
{"f_21448ChickenBridge.scm",(void*)f_21448},
{"f_21480ChickenBridge.scm",(void*)f_21480},
{"f_21483ChickenBridge.scm",(void*)f_21483},
{"f_21476ChickenBridge.scm",(void*)f_21476},
{"f_21462ChickenBridge.scm",(void*)f_21462},
{"f_21433ChickenBridge.scm",(void*)f_21433},
{"f_21378ChickenBridge.scm",(void*)f_21378},
{"f_21385ChickenBridge.scm",(void*)f_21385},
{"f_21388ChickenBridge.scm",(void*)f_21388},
{"f_21394ChickenBridge.scm",(void*)f_21394},
{"f_21313ChickenBridge.scm",(void*)f_21313},
{"f_21322ChickenBridge.scm",(void*)f_21322},
{"f_21345ChickenBridge.scm",(void*)f_21345},
{"f_21335ChickenBridge.scm",(void*)f_21335},
{"f_21269ChickenBridge.scm",(void*)f_21269},
{"f_21257ChickenBridge.scm",(void*)f_21257},
{"f_21155ChickenBridge.scm",(void*)f_21155},
{"f_21107ChickenBridge.scm",(void*)f_21107},
{"f_20488ChickenBridge.scm",(void*)f_20488},
{"f_20492ChickenBridge.scm",(void*)f_20492},
{"f_20495ChickenBridge.scm",(void*)f_20495},
{"f_20921ChickenBridge.scm",(void*)f_20921},
{"f_20917ChickenBridge.scm",(void*)f_20917},
{"f_20913ChickenBridge.scm",(void*)f_20913},
{"f_20498ChickenBridge.scm",(void*)f_20498},
{"f_20621ChickenBridge.scm",(void*)f_20621},
{"f_19854ChickenBridge.scm",(void*)f_19854},
{"f_20627ChickenBridge.scm",(void*)f_20627},
{"f_19870ChickenBridge.scm",(void*)f_19870},
{"f_20715ChickenBridge.scm",(void*)f_20715},
{"f_20785ChickenBridge.scm",(void*)f_20785},
{"f_19886ChickenBridge.scm",(void*)f_19886},
{"f_20788ChickenBridge.scm",(void*)f_20788},
{"f_19918ChickenBridge.scm",(void*)f_19918},
{"f_20866ChickenBridge.scm",(void*)f_20866},
{"f_20892ChickenBridge.scm",(void*)f_20892},
{"f_20886ChickenBridge.scm",(void*)f_20886},
{"f_20875ChickenBridge.scm",(void*)f_20875},
{"f_20817ChickenBridge.scm",(void*)f_20817},
{"f_20827ChickenBridge.scm",(void*)f_20827},
{"f_20853ChickenBridge.scm",(void*)f_20853},
{"f_20847ChickenBridge.scm",(void*)f_20847},
{"f_20830ChickenBridge.scm",(void*)f_20830},
{"f_20840ChickenBridge.scm",(void*)f_20840},
{"f_20833ChickenBridge.scm",(void*)f_20833},
{"f_20794ChickenBridge.scm",(void*)f_20794},
{"f_20803ChickenBridge.scm",(void*)f_20803},
{"f_20797ChickenBridge.scm",(void*)f_20797},
{"f_20721ChickenBridge.scm",(void*)f_20721},
{"f_20739ChickenBridge.scm",(void*)f_20739},
{"f_20772ChickenBridge.scm",(void*)f_20772},
{"f_20758ChickenBridge.scm",(void*)f_20758},
{"f_20766ChickenBridge.scm",(void*)f_20766},
{"f_20749ChickenBridge.scm",(void*)f_20749},
{"f_20724ChickenBridge.scm",(void*)f_20724},
{"f_20636ChickenBridge.scm",(void*)f_20636},
{"f_20658ChickenBridge.scm",(void*)f_20658},
{"f_20705ChickenBridge.scm",(void*)f_20705},
{"f_20691ChickenBridge.scm",(void*)f_20691},
{"f_20699ChickenBridge.scm",(void*)f_20699},
{"f_20671ChickenBridge.scm",(void*)f_20671},
{"f_20674ChickenBridge.scm",(void*)f_20674},
{"f_20639ChickenBridge.scm",(void*)f_20639},
{"f_20656ChickenBridge.scm",(void*)f_20656},
{"f_20642ChickenBridge.scm",(void*)f_20642},
{"f_20507ChickenBridge.scm",(void*)f_20507},
{"f_20513ChickenBridge.scm",(void*)f_20513},
{"f_20571ChickenBridge.scm",(void*)f_20571},
{"f_20574ChickenBridge.scm",(void*)f_20574},
{"f_20595ChickenBridge.scm",(void*)f_20595},
{"f_20606ChickenBridge.scm",(void*)f_20606},
{"f_20585ChickenBridge.scm",(void*)f_20585},
{"f_20519ChickenBridge.scm",(void*)f_20519},
{"f_20529ChickenBridge.scm",(void*)f_20529},
{"f_20565ChickenBridge.scm",(void*)f_20565},
{"f_20535ChickenBridge.scm",(void*)f_20535},
{"f_20550ChickenBridge.scm",(void*)f_20550},
{"f_20554ChickenBridge.scm",(void*)f_20554},
{"f_20558ChickenBridge.scm",(void*)f_20558},
{"f_20542ChickenBridge.scm",(void*)f_20542},
{"f_20384ChickenBridge.scm",(void*)f_20384},
{"f_20386ChickenBridge.scm",(void*)f_20386},
{"f_20434ChickenBridge.scm",(void*)f_20434},
{"f_20390ChickenBridge.scm",(void*)f_20390},
{"f_20393ChickenBridge.scm",(void*)f_20393},
{"f_20398ChickenBridge.scm",(void*)f_20398},
{"f_20419ChickenBridge.scm",(void*)f_20419},
{"f_20376ChickenBridge.scm",(void*)f_20376},
{"f_20378ChickenBridge.scm",(void*)f_20378},
{"f_20168ChickenBridge.scm",(void*)f_20168},
{"f_20185ChickenBridge.scm",(void*)f_20185},
{"f_20189ChickenBridge.scm",(void*)f_20189},
{"f_20135ChickenBridge.scm",(void*)f_20135},
{"f_20142ChickenBridge.scm",(void*)f_20142},
{"f_20086ChickenBridge.scm",(void*)f_20086},
{"f_20093ChickenBridge.scm",(void*)f_20093},
{"f_20151ChickenBridge.scm",(void*)f_20151},
{"f_20374ChickenBridge.scm",(void*)f_20374},
{"f_20351ChickenBridge.scm",(void*)f_20351},
{"f_20367ChickenBridge.scm",(void*)f_20367},
{"f_20213ChickenBridge.scm",(void*)f_20213},
{"f_20216ChickenBridge.scm",(void*)f_20216},
{"f_20240ChickenBridge.scm",(void*)f_20240},
{"f_20297ChickenBridge.scm",(void*)f_20297},
{"f_20303ChickenBridge.scm",(void*)f_20303},
{"f_20312ChickenBridge.scm",(void*)f_20312},
{"f_20321ChickenBridge.scm",(void*)f_20321},
{"f_20330ChickenBridge.scm",(void*)f_20330},
{"f_20339ChickenBridge.scm",(void*)f_20339},
{"f_20291ChickenBridge.scm",(void*)f_20291},
{"f_20246ChickenBridge.scm",(void*)f_20246},
{"f_20252ChickenBridge.scm",(void*)f_20252},
{"f_20258ChickenBridge.scm",(void*)f_20258},
{"f_20264ChickenBridge.scm",(void*)f_20264},
{"f_20270ChickenBridge.scm",(void*)f_20270},
{"f_20276ChickenBridge.scm",(void*)f_20276},
{"f_20117ChickenBridge.scm",(void*)f_20117},
{"f_20124ChickenBridge.scm",(void*)f_20124},
{"f_20107ChickenBridge.scm",(void*)f_20107},
{"f_20095ChickenBridge.scm",(void*)f_20095},
{"f_20063ChickenBridge.scm",(void*)f_20063},
{"f_20070ChickenBridge.scm",(void*)f_20070},
{"f_20077ChickenBridge.scm",(void*)f_20077},
{"f_20047ChickenBridge.scm",(void*)f_20047},
{"f_20054ChickenBridge.scm",(void*)f_20054},
{"f_20061ChickenBridge.scm",(void*)f_20061},
{"f_20035ChickenBridge.scm",(void*)f_20035},
{"f_20017ChickenBridge.scm",(void*)f_20017},
{"f_19999ChickenBridge.scm",(void*)f_19999},
{"f_19984ChickenBridge.scm",(void*)f_19984},
{"f_19978ChickenBridge.scm",(void*)f_19978},
{"f_19966ChickenBridge.scm",(void*)f_19966},
{"f_19948ChickenBridge.scm",(void*)f_19948},
{"f_19927ChickenBridge.scm",(void*)f_19927},
{"f_19895ChickenBridge.scm",(void*)f_19895},
{"f_19902ChickenBridge.scm",(void*)f_19902},
{"f_19837ChickenBridge.scm",(void*)f_19837},
{"f_19845ChickenBridge.scm",(void*)f_19845},
{"f_19827ChickenBridge.scm",(void*)f_19827},
{"f_19835ChickenBridge.scm",(void*)f_19835},
{"f_19821ChickenBridge.scm",(void*)f_19821},
{"f_19809ChickenBridge.scm",(void*)f_19809},
{"f_19806ChickenBridge.scm",(void*)f_19806},
{"f_19785ChickenBridge.scm",(void*)f_19785},
{"f_19698ChickenBridge.scm",(void*)f_19698},
{"f_19677ChickenBridge.scm",(void*)f_19677},
{"f_19667ChickenBridge.scm",(void*)f_19667},
{"f_19655ChickenBridge.scm",(void*)f_19655},
{"f_19626ChickenBridge.scm",(void*)f_19626},
{"f_19614ChickenBridge.scm",(void*)f_19614},
{"f_19596ChickenBridge.scm",(void*)f_19596},
{"f_19578ChickenBridge.scm",(void*)f_19578},
{"f_19557ChickenBridge.scm",(void*)f_19557},
{"f_18717ChickenBridge.scm",(void*)f_18717},
{"f_19539ChickenBridge.scm",(void*)f_19539},
{"f_18733ChickenBridge.scm",(void*)f_18733},
{"f_19447ChickenBridge.scm",(void*)f_19447},
{"f_19470ChickenBridge.scm",(void*)f_19470},
{"f_19523ChickenBridge.scm",(void*)f_19523},
{"f_19505ChickenBridge.scm",(void*)f_19505},
{"f_19498ChickenBridge.scm",(void*)f_19498},
{"f_19480ChickenBridge.scm",(void*)f_19480},
{"f_19457ChickenBridge.scm",(void*)f_19457},
{"f_18927ChickenBridge.scm",(void*)f_18927},
{"f_19409ChickenBridge.scm",(void*)f_19409},
{"f_19431ChickenBridge.scm",(void*)f_19431},
{"f_19415ChickenBridge.scm",(void*)f_19415},
{"f_19423ChickenBridge.scm",(void*)f_19423},
{"f_19427ChickenBridge.scm",(void*)f_19427},
{"f_19413ChickenBridge.scm",(void*)f_19413},
{"f_19403ChickenBridge.scm",(void*)f_19403},
{"f_18930ChickenBridge.scm",(void*)f_18930},
{"f_19280ChickenBridge.scm",(void*)f_19280},
{"f_19304ChickenBridge.scm",(void*)f_19304},
{"f_19366ChickenBridge.scm",(void*)f_19366},
{"f_19307ChickenBridge.scm",(void*)f_19307},
{"f_19323ChickenBridge.scm",(void*)f_19323},
{"f_19348ChickenBridge.scm",(void*)f_19348},
{"f_19314ChickenBridge.scm",(void*)f_19314},
{"f_19291ChickenBridge.scm",(void*)f_19291},
{"f_18933ChickenBridge.scm",(void*)f_18933},
{"f_19266ChickenBridge.scm",(void*)f_19266},
{"f_18937ChickenBridge.scm",(void*)f_18937},
{"f_18988ChickenBridge.scm",(void*)f_18988},
{"f_18991ChickenBridge.scm",(void*)f_18991},
{"f_19247ChickenBridge.scm",(void*)f_19247},
{"f_19257ChickenBridge.scm",(void*)f_19257},
{"f_18994ChickenBridge.scm",(void*)f_18994},
{"f_19185ChickenBridge.scm",(void*)f_19185},
{"f_19195ChickenBridge.scm",(void*)f_19195},
{"f_19198ChickenBridge.scm",(void*)f_19198},
{"f_19218ChickenBridge.scm",(void*)f_19218},
{"f_19220ChickenBridge.scm",(void*)f_19220},
{"f_19230ChickenBridge.scm",(void*)f_19230},
{"f_19204ChickenBridge.scm",(void*)f_19204},
{"f_19207ChickenBridge.scm",(void*)f_19207},
{"f_18997ChickenBridge.scm",(void*)f_18997},
{"f_19005ChickenBridge.scm",(void*)f_19005},
{"f_19018ChickenBridge.scm",(void*)f_19018},
{"f_18885ChickenBridge.scm",(void*)f_18885},
{"f_18894ChickenBridge.scm",(void*)f_18894},
{"f_18916ChickenBridge.scm",(void*)f_18916},
{"f_18905ChickenBridge.scm",(void*)f_18905},
{"f_19021ChickenBridge.scm",(void*)f_19021},
{"f_19156ChickenBridge.scm",(void*)f_19156},
{"f_19158ChickenBridge.scm",(void*)f_19158},
{"f_19168ChickenBridge.scm",(void*)f_19168},
{"f_19027ChickenBridge.scm",(void*)f_19027},
{"f_19129ChickenBridge.scm",(void*)f_19129},
{"f_19131ChickenBridge.scm",(void*)f_19131},
{"f_19141ChickenBridge.scm",(void*)f_19141},
{"f_19030ChickenBridge.scm",(void*)f_19030},
{"f_19042ChickenBridge.scm",(void*)f_19042},
{"f_19068ChickenBridge.scm",(void*)f_19068},
{"f_19074ChickenBridge.scm",(void*)f_19074},
{"f_19080ChickenBridge.scm",(void*)f_19080},
{"f_19090ChickenBridge.scm",(void*)f_19090},
{"f_19092ChickenBridge.scm",(void*)f_19092},
{"f_19102ChickenBridge.scm",(void*)f_19102},
{"f_19083ChickenBridge.scm",(void*)f_19083},
{"f_19055ChickenBridge.scm",(void*)f_19055},
{"f_19033ChickenBridge.scm",(void*)f_19033},
{"f_19000ChickenBridge.scm",(void*)f_19000},
{"f_18940ChickenBridge.scm",(void*)f_18940},
{"f_18970ChickenBridge.scm",(void*)f_18970},
{"f_18968ChickenBridge.scm",(void*)f_18968},
{"f_18943ChickenBridge.scm",(void*)f_18943},
{"f_18817ChickenBridge.scm",(void*)f_18817},
{"f_18865ChickenBridge.scm",(void*)f_18865},
{"f_18827ChickenBridge.scm",(void*)f_18827},
{"f_18855ChickenBridge.scm",(void*)f_18855},
{"f_18830ChickenBridge.scm",(void*)f_18830},
{"f_18735ChickenBridge.scm",(void*)f_18735},
{"f_18807ChickenBridge.scm",(void*)f_18807},
{"f_18739ChickenBridge.scm",(void*)f_18739},
{"f_18757ChickenBridge.scm",(void*)f_18757},
{"f_18789ChickenBridge.scm",(void*)f_18789},
{"f_18623ChickenBridge.scm",(void*)f_18623},
{"f_18627ChickenBridge.scm",(void*)f_18627},
{"f_18656ChickenBridge.scm",(void*)f_18656},
{"f_18661ChickenBridge.scm",(void*)f_18661},
{"f_18686ChickenBridge.scm",(void*)f_18686},
{"f_18671ChickenBridge.scm",(void*)f_18671},
{"f_18105ChickenBridge.scm",(void*)f_18105},
{"f_18376ChickenBridge.scm",(void*)f_18376},
{"f_18380ChickenBridge.scm",(void*)f_18380},
{"f_18385ChickenBridge.scm",(void*)f_18385},
{"f_18591ChickenBridge.scm",(void*)f_18591},
{"f_18606ChickenBridge.scm",(void*)f_18606},
{"f_18598ChickenBridge.scm",(void*)f_18598},
{"f_18562ChickenBridge.scm",(void*)f_18562},
{"f_18566ChickenBridge.scm",(void*)f_18566},
{"f_18527ChickenBridge.scm",(void*)f_18527},
{"f_18531ChickenBridge.scm",(void*)f_18531},
{"f_18389ChickenBridge.scm",(void*)f_18389},
{"f_18491ChickenBridge.scm",(void*)f_18491},
{"f_18506ChickenBridge.scm",(void*)f_18506},
{"f_18498ChickenBridge.scm",(void*)f_18498},
{"f_18462ChickenBridge.scm",(void*)f_18462},
{"f_18466ChickenBridge.scm",(void*)f_18466},
{"f_18427ChickenBridge.scm",(void*)f_18427},
{"f_18431ChickenBridge.scm",(void*)f_18431},
{"f_18392ChickenBridge.scm",(void*)f_18392},
{"f_18395ChickenBridge.scm",(void*)f_18395},
{"f_18398ChickenBridge.scm",(void*)f_18398},
{"f_18367ChickenBridge.scm",(void*)f_18367},
{"f_18109ChickenBridge.scm",(void*)f_18109},
{"f_18336ChickenBridge.scm",(void*)f_18336},
{"f_18351ChickenBridge.scm",(void*)f_18351},
{"f_18343ChickenBridge.scm",(void*)f_18343},
{"f_18307ChickenBridge.scm",(void*)f_18307},
{"f_18311ChickenBridge.scm",(void*)f_18311},
{"f_18272ChickenBridge.scm",(void*)f_18272},
{"f_18276ChickenBridge.scm",(void*)f_18276},
{"f_18112ChickenBridge.scm",(void*)f_18112},
{"f_18236ChickenBridge.scm",(void*)f_18236},
{"f_18251ChickenBridge.scm",(void*)f_18251},
{"f_18243ChickenBridge.scm",(void*)f_18243},
{"f_18207ChickenBridge.scm",(void*)f_18207},
{"f_18211ChickenBridge.scm",(void*)f_18211},
{"f_18172ChickenBridge.scm",(void*)f_18172},
{"f_18176ChickenBridge.scm",(void*)f_18176},
{"f_18115ChickenBridge.scm",(void*)f_18115},
{"f_18118ChickenBridge.scm",(void*)f_18118},
{"f_18121ChickenBridge.scm",(void*)f_18121},
{"f_18133ChickenBridge.scm",(void*)f_18133},
{"f_18151ChickenBridge.scm",(void*)f_18151},
{"f_18139ChickenBridge.scm",(void*)f_18139},
{"f_18127ChickenBridge.scm",(void*)f_18127},
{"f_18042ChickenBridge.scm",(void*)f_18042},
{"f_17702ChickenBridge.scm",(void*)f_17702},
{"f_17884ChickenBridge.scm",(void*)f_17884},
{"f_17888ChickenBridge.scm",(void*)f_17888},
{"f_17890ChickenBridge.scm",(void*)f_17890},
{"f_17815ChickenBridge.scm",(void*)f_17815},
{"f_17825ChickenBridge.scm",(void*)f_17825},
{"f_17832ChickenBridge.scm",(void*)f_17832},
{"f_17900ChickenBridge.scm",(void*)f_17900},
{"f_17903ChickenBridge.scm",(void*)f_17903},
{"f_17907ChickenBridge.scm",(void*)f_17907},
{"f_17927ChickenBridge.scm",(void*)f_17927},
{"f_17943ChickenBridge.scm",(void*)f_17943},
{"f_17910ChickenBridge.scm",(void*)f_17910},
{"f_17705ChickenBridge.scm",(void*)f_17705},
{"f_17717ChickenBridge.scm",(void*)f_17717},
{"f_17753ChickenBridge.scm",(void*)f_17753},
{"f_17773ChickenBridge.scm",(void*)f_17773},
{"f_17778ChickenBridge.scm",(void*)f_17778},
{"f_17215ChickenBridge.scm",(void*)f_17215},
{"f_17142ChickenBridge.scm",(void*)f_17142},
{"f_16987ChickenBridge.scm",(void*)f_16987},
{"f_16993ChickenBridge.scm",(void*)f_16993},
{"f_17078ChickenBridge.scm",(void*)f_17078},
{"f_17005ChickenBridge.scm",(void*)f_17005},
{"f_17021ChickenBridge.scm",(void*)f_17021},
{"f_17025ChickenBridge.scm",(void*)f_17025},
{"f_17028ChickenBridge.scm",(void*)f_17028},
{"f_17008ChickenBridge.scm",(void*)f_17008},
{"f_17019ChickenBridge.scm",(void*)f_17019},
{"f_17159ChickenBridge.scm",(void*)f_17159},
{"f_17696ChickenBridge.scm",(void*)f_17696},
{"f_17219ChickenBridge.scm",(void*)f_17219},
{"f_17665ChickenBridge.scm",(void*)f_17665},
{"f_17680ChickenBridge.scm",(void*)f_17680},
{"f_17672ChickenBridge.scm",(void*)f_17672},
{"f_17636ChickenBridge.scm",(void*)f_17636},
{"f_17640ChickenBridge.scm",(void*)f_17640},
{"f_17601ChickenBridge.scm",(void*)f_17601},
{"f_17605ChickenBridge.scm",(void*)f_17605},
{"f_17566ChickenBridge.scm",(void*)f_17566},
{"f_17570ChickenBridge.scm",(void*)f_17570},
{"f_17222ChickenBridge.scm",(void*)f_17222},
{"f_17530ChickenBridge.scm",(void*)f_17530},
{"f_17545ChickenBridge.scm",(void*)f_17545},
{"f_17537ChickenBridge.scm",(void*)f_17537},
{"f_17501ChickenBridge.scm",(void*)f_17501},
{"f_17505ChickenBridge.scm",(void*)f_17505},
{"f_17466ChickenBridge.scm",(void*)f_17466},
{"f_17470ChickenBridge.scm",(void*)f_17470},
{"f_17431ChickenBridge.scm",(void*)f_17431},
{"f_17435ChickenBridge.scm",(void*)f_17435},
{"f_17225ChickenBridge.scm",(void*)f_17225},
{"f_17395ChickenBridge.scm",(void*)f_17395},
{"f_17410ChickenBridge.scm",(void*)f_17410},
{"f_17402ChickenBridge.scm",(void*)f_17402},
{"f_17366ChickenBridge.scm",(void*)f_17366},
{"f_17370ChickenBridge.scm",(void*)f_17370},
{"f_17331ChickenBridge.scm",(void*)f_17331},
{"f_17335ChickenBridge.scm",(void*)f_17335},
{"f_17296ChickenBridge.scm",(void*)f_17296},
{"f_17300ChickenBridge.scm",(void*)f_17300},
{"f_17228ChickenBridge.scm",(void*)f_17228},
{"f_17231ChickenBridge.scm",(void*)f_17231},
{"f_17234ChickenBridge.scm",(void*)f_17234},
{"f_17267ChickenBridge.scm",(void*)f_17267},
{"f_17275ChickenBridge.scm",(void*)f_17275},
{"f_17240ChickenBridge.scm",(void*)f_17240},
{"f_17253ChickenBridge.scm",(void*)f_17253},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17246ChickenBridge.scm",(void*)f_17246},
{"f_16782ChickenBridge.scm",(void*)f_16782},
{"f_16786ChickenBridge.scm",(void*)f_16786},
{"f_16789ChickenBridge.scm",(void*)f_16789},
{"f_16792ChickenBridge.scm",(void*)f_16792},
{"f_16961ChickenBridge.scm",(void*)f_16961},
{"f_16974ChickenBridge.scm",(void*)f_16974},
{"f_16978ChickenBridge.scm",(void*)f_16978},
{"f_16798ChickenBridge.scm",(void*)f_16798},
{"f_16954ChickenBridge.scm",(void*)f_16954},
{"f_16935ChickenBridge.scm",(void*)f_16935},
{"f_16942ChickenBridge.scm",(void*)f_16942},
{"f_16946ChickenBridge.scm",(void*)f_16946},
{"f_16804ChickenBridge.scm",(void*)f_16804},
{"f_16810ChickenBridge.scm",(void*)f_16810},
{"f_16894ChickenBridge.scm",(void*)f_16894},
{"f_16896ChickenBridge.scm",(void*)f_16896},
{"f_16918ChickenBridge.scm",(void*)f_16918},
{"f_16925ChickenBridge.scm",(void*)f_16925},
{"f_16929ChickenBridge.scm",(void*)f_16929},
{"f_16915ChickenBridge.scm",(void*)f_16915},
{"f_16911ChickenBridge.scm",(void*)f_16911},
{"f_16852ChickenBridge.scm",(void*)f_16852},
{"f_16869ChickenBridge.scm",(void*)f_16869},
{"f_16879ChickenBridge.scm",(void*)f_16879},
{"f_16855ChickenBridge.scm",(void*)f_16855},
{"f_16814ChickenBridge.scm",(void*)f_16814},
{"f_16822ChickenBridge.scm",(void*)f_16822},
{"f_16824ChickenBridge.scm",(void*)f_16824},
{"f_16845ChickenBridge.scm",(void*)f_16845},
{"f_16670ChickenBridge.scm",(void*)f_16670},
{"f_16780ChickenBridge.scm",(void*)f_16780},
{"f_16739ChickenBridge.scm",(void*)f_16739},
{"f_16772ChickenBridge.scm",(void*)f_16772},
{"f_16768ChickenBridge.scm",(void*)f_16768},
{"f_16753ChickenBridge.scm",(void*)f_16753},
{"f_16677ChickenBridge.scm",(void*)f_16677},
{"f_16685ChickenBridge.scm",(void*)f_16685},
{"f_16730ChickenBridge.scm",(void*)f_16730},
{"f_16718ChickenBridge.scm",(void*)f_16718},
{"f_16702ChickenBridge.scm",(void*)f_16702},
{"f_15903ChickenBridge.scm",(void*)f_15903},
{"f_16220ChickenBridge.scm",(void*)f_16220},
{"f_16227ChickenBridge.scm",(void*)f_16227},
{"f_16632ChickenBridge.scm",(void*)f_16632},
{"f_16647ChickenBridge.scm",(void*)f_16647},
{"f_16639ChickenBridge.scm",(void*)f_16639},
{"f_16603ChickenBridge.scm",(void*)f_16603},
{"f_16607ChickenBridge.scm",(void*)f_16607},
{"f_16568ChickenBridge.scm",(void*)f_16568},
{"f_16572ChickenBridge.scm",(void*)f_16572},
{"f_16533ChickenBridge.scm",(void*)f_16533},
{"f_16537ChickenBridge.scm",(void*)f_16537},
{"f_16230ChickenBridge.scm",(void*)f_16230},
{"f_16497ChickenBridge.scm",(void*)f_16497},
{"f_16512ChickenBridge.scm",(void*)f_16512},
{"f_16504ChickenBridge.scm",(void*)f_16504},
{"f_16468ChickenBridge.scm",(void*)f_16468},
{"f_16472ChickenBridge.scm",(void*)f_16472},
{"f_16433ChickenBridge.scm",(void*)f_16433},
{"f_16437ChickenBridge.scm",(void*)f_16437},
{"f_16398ChickenBridge.scm",(void*)f_16398},
{"f_16402ChickenBridge.scm",(void*)f_16402},
{"f_16233ChickenBridge.scm",(void*)f_16233},
{"f_16362ChickenBridge.scm",(void*)f_16362},
{"f_16377ChickenBridge.scm",(void*)f_16377},
{"f_16369ChickenBridge.scm",(void*)f_16369},
{"f_16333ChickenBridge.scm",(void*)f_16333},
{"f_16337ChickenBridge.scm",(void*)f_16337},
{"f_16298ChickenBridge.scm",(void*)f_16298},
{"f_16302ChickenBridge.scm",(void*)f_16302},
{"f_16263ChickenBridge.scm",(void*)f_16263},
{"f_16267ChickenBridge.scm",(void*)f_16267},
{"f_16236ChickenBridge.scm",(void*)f_16236},
{"f_16239ChickenBridge.scm",(void*)f_16239},
{"f_15907ChickenBridge.scm",(void*)f_15907},
{"f_15910ChickenBridge.scm",(void*)f_15910},
{"f_16184ChickenBridge.scm",(void*)f_16184},
{"f_16188ChickenBridge.scm",(void*)f_16188},
{"f_16191ChickenBridge.scm",(void*)f_16191},
{"f_16194ChickenBridge.scm",(void*)f_16194},
{"f_16197ChickenBridge.scm",(void*)f_16197},
{"f_16210ChickenBridge.scm",(void*)f_16210},
{"f_16200ChickenBridge.scm",(void*)f_16200},
{"f_15916ChickenBridge.scm",(void*)f_15916},
{"f_15923ChickenBridge.scm",(void*)f_15923},
{"f_16154ChickenBridge.scm",(void*)f_16154},
{"f_16169ChickenBridge.scm",(void*)f_16169},
{"f_16161ChickenBridge.scm",(void*)f_16161},
{"f_16125ChickenBridge.scm",(void*)f_16125},
{"f_16129ChickenBridge.scm",(void*)f_16129},
{"f_16090ChickenBridge.scm",(void*)f_16090},
{"f_16094ChickenBridge.scm",(void*)f_16094},
{"f_15926ChickenBridge.scm",(void*)f_15926},
{"f_16054ChickenBridge.scm",(void*)f_16054},
{"f_16069ChickenBridge.scm",(void*)f_16069},
{"f_16061ChickenBridge.scm",(void*)f_16061},
{"f_16025ChickenBridge.scm",(void*)f_16025},
{"f_16029ChickenBridge.scm",(void*)f_16029},
{"f_15990ChickenBridge.scm",(void*)f_15990},
{"f_15994ChickenBridge.scm",(void*)f_15994},
{"f_15929ChickenBridge.scm",(void*)f_15929},
{"f_15932ChickenBridge.scm",(void*)f_15932},
{"f_15947ChickenBridge.scm",(void*)f_15947},
{"f_15969ChickenBridge.scm",(void*)f_15969},
{"f_15953ChickenBridge.scm",(void*)f_15953},
{"f_15961ChickenBridge.scm",(void*)f_15961},
{"f_15935ChickenBridge.scm",(void*)f_15935},
{"f_15938ChickenBridge.scm",(void*)f_15938},
{"f_15820ChickenBridge.scm",(void*)f_15820},
{"f_15811ChickenBridge.scm",(void*)f_15811},
{"f_15802ChickenBridge.scm",(void*)f_15802},
{"f_15784ChickenBridge.scm",(void*)f_15784},
{"f_15766ChickenBridge.scm",(void*)f_15766},
{"f_15748ChickenBridge.scm",(void*)f_15748},
{"f_15739ChickenBridge.scm",(void*)f_15739},
{"f_15730ChickenBridge.scm",(void*)f_15730},
{"f_15508ChickenBridge.scm",(void*)f_15508},
{"f_15558ChickenBridge.scm",(void*)f_15558},
{"f_15703ChickenBridge.scm",(void*)f_15703},
{"f_15584ChickenBridge.scm",(void*)f_15584},
{"f_15699ChickenBridge.scm",(void*)f_15699},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_15665ChickenBridge.scm",(void*)f_15665},
{"f_15638ChickenBridge.scm",(void*)f_15638},
{"f_15591ChickenBridge.scm",(void*)f_15591},
{"f_15561ChickenBridge.scm",(void*)f_15561},
{"f_15511ChickenBridge.scm",(void*)f_15511},
{"f_15517ChickenBridge.scm",(void*)f_15517},
{"f_15533ChickenBridge.scm",(void*)f_15533},
{"f_15536ChickenBridge.scm",(void*)f_15536},
{"f_15034ChickenBridge.scm",(void*)f_15034},
{"f_15498ChickenBridge.scm",(void*)f_15498},
{"f_15038ChickenBridge.scm",(void*)f_15038},
{"f_15470ChickenBridge.scm",(void*)f_15470},
{"f_15485ChickenBridge.scm",(void*)f_15485},
{"f_15477ChickenBridge.scm",(void*)f_15477},
{"f_15441ChickenBridge.scm",(void*)f_15441},
{"f_15445ChickenBridge.scm",(void*)f_15445},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_15410ChickenBridge.scm",(void*)f_15410},
{"f_15371ChickenBridge.scm",(void*)f_15371},
{"f_15375ChickenBridge.scm",(void*)f_15375},
{"f_15041ChickenBridge.scm",(void*)f_15041},
{"f_15335ChickenBridge.scm",(void*)f_15335},
{"f_15350ChickenBridge.scm",(void*)f_15350},
{"f_15342ChickenBridge.scm",(void*)f_15342},
{"f_15306ChickenBridge.scm",(void*)f_15306},
{"f_15310ChickenBridge.scm",(void*)f_15310},
{"f_15271ChickenBridge.scm",(void*)f_15271},
{"f_15275ChickenBridge.scm",(void*)f_15275},
{"f_15236ChickenBridge.scm",(void*)f_15236},
{"f_15240ChickenBridge.scm",(void*)f_15240},
{"f_15044ChickenBridge.scm",(void*)f_15044},
{"f_15200ChickenBridge.scm",(void*)f_15200},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_15207ChickenBridge.scm",(void*)f_15207},
{"f_15171ChickenBridge.scm",(void*)f_15171},
{"f_15175ChickenBridge.scm",(void*)f_15175},
{"f_15136ChickenBridge.scm",(void*)f_15136},
{"f_15140ChickenBridge.scm",(void*)f_15140},
{"f_15101ChickenBridge.scm",(void*)f_15101},
{"f_15105ChickenBridge.scm",(void*)f_15105},
{"f_15047ChickenBridge.scm",(void*)f_15047},
{"f_15050ChickenBridge.scm",(void*)f_15050},
{"f_15053ChickenBridge.scm",(void*)f_15053},
{"f_15068ChickenBridge.scm",(void*)f_15068},
{"f_15080ChickenBridge.scm",(void*)f_15080},
{"f_15059ChickenBridge.scm",(void*)f_15059},
{"f_15062ChickenBridge.scm",(void*)f_15062},
{"f_14958ChickenBridge.scm",(void*)f_14958},
{"f_14962ChickenBridge.scm",(void*)f_14962},
{"f_14981ChickenBridge.scm",(void*)f_14981},
{"f_14991ChickenBridge.scm",(void*)f_14991},
{"f_14993ChickenBridge.scm",(void*)f_14993},
{"f_15010ChickenBridge.scm",(void*)f_15010},
{"f_15013ChickenBridge.scm",(void*)f_15013},
{"f_15024ChickenBridge.scm",(void*)f_15024},
{"f_14965ChickenBridge.scm",(void*)f_14965},
{"f_14695ChickenBridge.scm",(void*)f_14695},
{"f_14948ChickenBridge.scm",(void*)f_14948},
{"f_14699ChickenBridge.scm",(void*)f_14699},
{"f_14920ChickenBridge.scm",(void*)f_14920},
{"f_14935ChickenBridge.scm",(void*)f_14935},
{"f_14927ChickenBridge.scm",(void*)f_14927},
{"f_14891ChickenBridge.scm",(void*)f_14891},
{"f_14895ChickenBridge.scm",(void*)f_14895},
{"f_14856ChickenBridge.scm",(void*)f_14856},
{"f_14860ChickenBridge.scm",(void*)f_14860},
{"f_14702ChickenBridge.scm",(void*)f_14702},
{"f_14820ChickenBridge.scm",(void*)f_14820},
{"f_14835ChickenBridge.scm",(void*)f_14835},
{"f_14827ChickenBridge.scm",(void*)f_14827},
{"f_14791ChickenBridge.scm",(void*)f_14791},
{"f_14795ChickenBridge.scm",(void*)f_14795},
{"f_14756ChickenBridge.scm",(void*)f_14756},
{"f_14760ChickenBridge.scm",(void*)f_14760},
{"f_14705ChickenBridge.scm",(void*)f_14705},
{"f_14708ChickenBridge.scm",(void*)f_14708},
{"f_14711ChickenBridge.scm",(void*)f_14711},
{"f_14723ChickenBridge.scm",(void*)f_14723},
{"f_14735ChickenBridge.scm",(void*)f_14735},
{"f_14717ChickenBridge.scm",(void*)f_14717},
{"f_14659ChickenBridge.scm",(void*)f_14659},
{"f_14663ChickenBridge.scm",(void*)f_14663},
{"f_14685ChickenBridge.scm",(void*)f_14685},
{"f_14679ChickenBridge.scm",(void*)f_14679},
{"f_14672ChickenBridge.scm",(void*)f_14672},
{"f_14412ChickenBridge.scm",(void*)f_14412},
{"f_14416ChickenBridge.scm",(void*)f_14416},
{"f_14629ChickenBridge.scm",(void*)f_14629},
{"f_14644ChickenBridge.scm",(void*)f_14644},
{"f_14636ChickenBridge.scm",(void*)f_14636},
{"f_14600ChickenBridge.scm",(void*)f_14600},
{"f_14604ChickenBridge.scm",(void*)f_14604},
{"f_14565ChickenBridge.scm",(void*)f_14565},
{"f_14569ChickenBridge.scm",(void*)f_14569},
{"f_14419ChickenBridge.scm",(void*)f_14419},
{"f_14529ChickenBridge.scm",(void*)f_14529},
{"f_14544ChickenBridge.scm",(void*)f_14544},
{"f_14536ChickenBridge.scm",(void*)f_14536},
{"f_14500ChickenBridge.scm",(void*)f_14500},
{"f_14504ChickenBridge.scm",(void*)f_14504},
{"f_14465ChickenBridge.scm",(void*)f_14465},
{"f_14469ChickenBridge.scm",(void*)f_14469},
{"f_14422ChickenBridge.scm",(void*)f_14422},
{"f_14425ChickenBridge.scm",(void*)f_14425},
{"f_14428ChickenBridge.scm",(void*)f_14428},
{"f_14436ChickenBridge.scm",(void*)f_14436},
{"f_14444ChickenBridge.scm",(void*)f_14444},
{"f_14434ChickenBridge.scm",(void*)f_14434},
{"f_14197ChickenBridge.scm",(void*)f_14197},
{"f_14201ChickenBridge.scm",(void*)f_14201},
{"f_14410ChickenBridge.scm",(void*)f_14410},
{"f_14363ChickenBridge.scm",(void*)f_14363},
{"f_14375ChickenBridge.scm",(void*)f_14375},
{"f_14231ChickenBridge.scm",(void*)f_14231},
{"f_14234ChickenBridge.scm",(void*)f_14234},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14243ChickenBridge.scm",(void*)f_14243},
{"f_14331ChickenBridge.scm",(void*)f_14331},
{"f_14246ChickenBridge.scm",(void*)f_14246},
{"f_14325ChickenBridge.scm",(void*)f_14325},
{"f_14252ChickenBridge.scm",(void*)f_14252},
{"f_14255ChickenBridge.scm",(void*)f_14255},
{"f_14207ChickenBridge.scm",(void*)f_14207},
{"f_14210ChickenBridge.scm",(void*)f_14210},
{"f_14217ChickenBridge.scm",(void*)f_14217},
{"f_13727ChickenBridge.scm",(void*)f_13727},
{"f_13731ChickenBridge.scm",(void*)f_13731},
{"f_14167ChickenBridge.scm",(void*)f_14167},
{"f_14182ChickenBridge.scm",(void*)f_14182},
{"f_14174ChickenBridge.scm",(void*)f_14174},
{"f_14138ChickenBridge.scm",(void*)f_14138},
{"f_14142ChickenBridge.scm",(void*)f_14142},
{"f_14103ChickenBridge.scm",(void*)f_14103},
{"f_14107ChickenBridge.scm",(void*)f_14107},
{"f_14068ChickenBridge.scm",(void*)f_14068},
{"f_14072ChickenBridge.scm",(void*)f_14072},
{"f_13734ChickenBridge.scm",(void*)f_13734},
{"f_14032ChickenBridge.scm",(void*)f_14032},
{"f_14047ChickenBridge.scm",(void*)f_14047},
{"f_14039ChickenBridge.scm",(void*)f_14039},
{"f_14003ChickenBridge.scm",(void*)f_14003},
{"f_14007ChickenBridge.scm",(void*)f_14007},
{"f_13968ChickenBridge.scm",(void*)f_13968},
{"f_13972ChickenBridge.scm",(void*)f_13972},
{"f_13933ChickenBridge.scm",(void*)f_13933},
{"f_13937ChickenBridge.scm",(void*)f_13937},
{"f_13737ChickenBridge.scm",(void*)f_13737},
{"f_13897ChickenBridge.scm",(void*)f_13897},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13904ChickenBridge.scm",(void*)f_13904},
{"f_13868ChickenBridge.scm",(void*)f_13868},
{"f_13872ChickenBridge.scm",(void*)f_13872},
{"f_13833ChickenBridge.scm",(void*)f_13833},
{"f_13837ChickenBridge.scm",(void*)f_13837},
{"f_13798ChickenBridge.scm",(void*)f_13798},
{"f_13802ChickenBridge.scm",(void*)f_13802},
{"f_13740ChickenBridge.scm",(void*)f_13740},
{"f_13743ChickenBridge.scm",(void*)f_13743},
{"f_13746ChickenBridge.scm",(void*)f_13746},
{"f_13769ChickenBridge.scm",(void*)f_13769},
{"f_13777ChickenBridge.scm",(void*)f_13777},
{"f_13752ChickenBridge.scm",(void*)f_13752},
{"f_13755ChickenBridge.scm",(void*)f_13755},
{"f_13647ChickenBridge.scm",(void*)f_13647},
{"f_13638ChickenBridge.scm",(void*)f_13638},
{"f_13566ChickenBridge.scm",(void*)f_13566},
{"f_13570ChickenBridge.scm",(void*)f_13570},
{"f_13573ChickenBridge.scm",(void*)f_13573},
{"f_13311ChickenBridge.scm",(void*)f_13311},
{"f_13315ChickenBridge.scm",(void*)f_13315},
{"f_13536ChickenBridge.scm",(void*)f_13536},
{"f_13551ChickenBridge.scm",(void*)f_13551},
{"f_13543ChickenBridge.scm",(void*)f_13543},
{"f_13507ChickenBridge.scm",(void*)f_13507},
{"f_13511ChickenBridge.scm",(void*)f_13511},
{"f_13472ChickenBridge.scm",(void*)f_13472},
{"f_13476ChickenBridge.scm",(void*)f_13476},
{"f_13318ChickenBridge.scm",(void*)f_13318},
{"f_13436ChickenBridge.scm",(void*)f_13436},
{"f_13451ChickenBridge.scm",(void*)f_13451},
{"f_13443ChickenBridge.scm",(void*)f_13443},
{"f_13407ChickenBridge.scm",(void*)f_13407},
{"f_13411ChickenBridge.scm",(void*)f_13411},
{"f_13372ChickenBridge.scm",(void*)f_13372},
{"f_13376ChickenBridge.scm",(void*)f_13376},
{"f_13321ChickenBridge.scm",(void*)f_13321},
{"f_13324ChickenBridge.scm",(void*)f_13324},
{"f_13327ChickenBridge.scm",(void*)f_13327},
{"f_13339ChickenBridge.scm",(void*)f_13339},
{"f_13351ChickenBridge.scm",(void*)f_13351},
{"f_13333ChickenBridge.scm",(void*)f_13333},
{"f_13196ChickenBridge.scm",(void*)f_13196},
{"f_13309ChickenBridge.scm",(void*)f_13309},
{"f_13206ChickenBridge.scm",(void*)f_13206},
{"f_13294ChickenBridge.scm",(void*)f_13294},
{"f_13305ChickenBridge.scm",(void*)f_13305},
{"f_13301ChickenBridge.scm",(void*)f_13301},
{"f_13209ChickenBridge.scm",(void*)f_13209},
{"f_13291ChickenBridge.scm",(void*)f_13291},
{"f_13217ChickenBridge.scm",(void*)f_13217},
{"f_13281ChickenBridge.scm",(void*)f_13281},
{"f_13226ChickenBridge.scm",(void*)f_13226},
{"f_13245ChickenBridge.scm",(void*)f_13245},
{"f_13274ChickenBridge.scm",(void*)f_13274},
{"f_13255ChickenBridge.scm",(void*)f_13255},
{"f_13270ChickenBridge.scm",(void*)f_13270},
{"f_13258ChickenBridge.scm",(void*)f_13258},
{"f_13229ChickenBridge.scm",(void*)f_13229},
{"f_13239ChickenBridge.scm",(void*)f_13239},
{"f_13220ChickenBridge.scm",(void*)f_13220},
{"f_13223ChickenBridge.scm",(void*)f_13223},
{"f_13150ChickenBridge.scm",(void*)f_13150},
{"f_13141ChickenBridge.scm",(void*)f_13141},
{"f_12840ChickenBridge.scm",(void*)f_12840},
{"f_12847ChickenBridge.scm",(void*)f_12847},
{"f_13136ChickenBridge.scm",(void*)f_13136},
{"f_12850ChickenBridge.scm",(void*)f_12850},
{"f_13121ChickenBridge.scm",(void*)f_13121},
{"f_13113ChickenBridge.scm",(void*)f_13113},
{"f_13105ChickenBridge.scm",(void*)f_13105},
{"f_13108ChickenBridge.scm",(void*)f_13108},
{"f_13076ChickenBridge.scm",(void*)f_13076},
{"f_13099ChickenBridge.scm",(void*)f_13099},
{"f_13082ChickenBridge.scm",(void*)f_13082},
{"f_13086ChickenBridge.scm",(void*)f_13086},
{"f_12853ChickenBridge.scm",(void*)f_12853},
{"f_12859ChickenBridge.scm",(void*)f_12859},
{"f_12951ChickenBridge.scm",(void*)f_12951},
{"f_13063ChickenBridge.scm",(void*)f_13063},
{"f_13070ChickenBridge.scm",(void*)f_13070},
{"f_12974ChickenBridge.scm",(void*)f_12974},
{"f_12976ChickenBridge.scm",(void*)f_12976},
{"f_13025ChickenBridge.scm",(void*)f_13025},
{"f_13060ChickenBridge.scm",(void*)f_13060},
{"f_13049ChickenBridge.scm",(void*)f_13049},
{"f_13194ChickenBridge.scm",(void*)f_13194},
{"f_13169ChickenBridge.scm",(void*)f_13169},
{"f_13190ChickenBridge.scm",(void*)f_13190},
{"f_13186ChickenBridge.scm",(void*)f_13186},
{"f_13178ChickenBridge.scm",(void*)f_13178},
{"f_13042ChickenBridge.scm",(void*)f_13042},
{"f_13035ChickenBridge.scm",(void*)f_13035},
{"f_12983ChickenBridge.scm",(void*)f_12983},
{"f_13023ChickenBridge.scm",(void*)f_13023},
{"f_12987ChickenBridge.scm",(void*)f_12987},
{"f_13019ChickenBridge.scm",(void*)f_13019},
{"f_13006ChickenBridge.scm",(void*)f_13006},
{"f_13014ChickenBridge.scm",(void*)f_13014},
{"f_13010ChickenBridge.scm",(void*)f_13010},
{"f_12990ChickenBridge.scm",(void*)f_12990},
{"f_12993ChickenBridge.scm",(void*)f_12993},
{"f_12967ChickenBridge.scm",(void*)f_12967},
{"f_12954ChickenBridge.scm",(void*)f_12954},
{"f_12963ChickenBridge.scm",(void*)f_12963},
{"f_12958ChickenBridge.scm",(void*)f_12958},
{"f_12865ChickenBridge.scm",(void*)f_12865},
{"f_12945ChickenBridge.scm",(void*)f_12945},
{"f_12925ChickenBridge.scm",(void*)f_12925},
{"f_12931ChickenBridge.scm",(void*)f_12931},
{"f_12942ChickenBridge.scm",(void*)f_12942},
{"f_12922ChickenBridge.scm",(void*)f_12922},
{"f_12910ChickenBridge.scm",(void*)f_12910},
{"f_12913ChickenBridge.scm",(void*)f_12913},
{"f_12868ChickenBridge.scm",(void*)f_12868},
{"f_12904ChickenBridge.scm",(void*)f_12904},
{"f_12899ChickenBridge.scm",(void*)f_12899},
{"f_12871ChickenBridge.scm",(void*)f_12871},
{"f_12884ChickenBridge.scm",(void*)f_12884},
{"f_12874ChickenBridge.scm",(void*)f_12874},
{"f_12877ChickenBridge.scm",(void*)f_12877},
{"f_12880ChickenBridge.scm",(void*)f_12880},
{"f_12717ChickenBridge.scm",(void*)f_12717},
{"f_12776ChickenBridge.scm",(void*)f_12776},
{"f_12786ChickenBridge.scm",(void*)f_12786},
{"f_12788ChickenBridge.scm",(void*)f_12788},
{"f_12817ChickenBridge.scm",(void*)f_12817},
{"f_12822ChickenBridge.scm",(void*)f_12822},
{"f_12807ChickenBridge.scm",(void*)f_12807},
{"f_12738ChickenBridge.scm",(void*)f_12738},
{"f_12770ChickenBridge.scm",(void*)f_12770},
{"f_12698ChickenBridge.scm",(void*)f_12698},
{"f_12705ChickenBridge.scm",(void*)f_12705},
{"f_12712ChickenBridge.scm",(void*)f_12712},
{"f_12679ChickenBridge.scm",(void*)f_12679},
{"f_12686ChickenBridge.scm",(void*)f_12686},
{"f_12693ChickenBridge.scm",(void*)f_12693},
{"f_12499ChickenBridge.scm",(void*)f_12499},
{"f_12503ChickenBridge.scm",(void*)f_12503},
{"f_12506ChickenBridge.scm",(void*)f_12506},
{"f_12509ChickenBridge.scm",(void*)f_12509},
{"f_12512ChickenBridge.scm",(void*)f_12512},
{"f_12669ChickenBridge.scm",(void*)f_12669},
{"f_12676ChickenBridge.scm",(void*)f_12676},
{"f_12515ChickenBridge.scm",(void*)f_12515},
{"f_12518ChickenBridge.scm",(void*)f_12518},
{"f_12524ChickenBridge.scm",(void*)f_12524},
{"f_12530ChickenBridge.scm",(void*)f_12530},
{"f_12593ChickenBridge.scm",(void*)f_12593},
{"f_12607ChickenBridge.scm",(void*)f_12607},
{"f_12533ChickenBridge.scm",(void*)f_12533},
{"f_12536ChickenBridge.scm",(void*)f_12536},
{"f_12542ChickenBridge.scm",(void*)f_12542},
{"f_12555ChickenBridge.scm",(void*)f_12555},
{"f_12545ChickenBridge.scm",(void*)f_12545},
{"f_12548ChickenBridge.scm",(void*)f_12548},
{"f_12489ChickenBridge.scm",(void*)f_12489},
{"f_12434ChickenBridge.scm",(void*)f_12434},
{"f_12425ChickenBridge.scm",(void*)f_12425},
{"f_12308ChickenBridge.scm",(void*)f_12308},
{"f_12299ChickenBridge.scm",(void*)f_12299},
{"f_12290ChickenBridge.scm",(void*)f_12290},
{"f_12281ChickenBridge.scm",(void*)f_12281},
{"f_12272ChickenBridge.scm",(void*)f_12272},
{"f_12254ChickenBridge.scm",(void*)f_12254},
{"f_12245ChickenBridge.scm",(void*)f_12245},
{"f_12236ChickenBridge.scm",(void*)f_12236},
{"f_12218ChickenBridge.scm",(void*)f_12218},
{"f_12209ChickenBridge.scm",(void*)f_12209},
{"f_12200ChickenBridge.scm",(void*)f_12200},
{"f_12185ChickenBridge.scm",(void*)f_12185},
{"f_12140ChickenBridge.scm",(void*)f_12140},
{"f_12122ChickenBridge.scm",(void*)f_12122},
{"f_12113ChickenBridge.scm",(void*)f_12113},
{"f_12086ChickenBridge.scm",(void*)f_12086},
{"f_12068ChickenBridge.scm",(void*)f_12068},
{"f_12050ChickenBridge.scm",(void*)f_12050},
{"f_12041ChickenBridge.scm",(void*)f_12041},
{"f_12029ChickenBridge.scm",(void*)f_12029},
{"f_11716ChickenBridge.scm",(void*)f_11716},
{"f_12027ChickenBridge.scm",(void*)f_12027},
{"f_11962ChickenBridge.scm",(void*)f_11962},
{"f_11964ChickenBridge.scm",(void*)f_11964},
{"f_7462ChickenBridge.scm",(void*)f_7462},
{"f_11979ChickenBridge.scm",(void*)f_11979},
{"f_11982ChickenBridge.scm",(void*)f_11982},
{"f_11729ChickenBridge.scm",(void*)f_11729},
{"f_11805ChickenBridge.scm",(void*)f_11805},
{"f_11958ChickenBridge.scm",(void*)f_11958},
{"f_11942ChickenBridge.scm",(void*)f_11942},
{"f_11894ChickenBridge.scm",(void*)f_11894},
{"f_11908ChickenBridge.scm",(void*)f_11908},
{"f_11861ChickenBridge.scm",(void*)f_11861},
{"f_11836ChickenBridge.scm",(void*)f_11836},
{"f_11732ChickenBridge.scm",(void*)f_11732},
{"f_11740ChickenBridge.scm",(void*)f_11740},
{"f_11773ChickenBridge.scm",(void*)f_11773},
{"f_11009ChickenBridge.scm",(void*)f_11009},
{"f_11693ChickenBridge.scm",(void*)f_11693},
{"f_11708ChickenBridge.scm",(void*)f_11708},
{"f_11700ChickenBridge.scm",(void*)f_11700},
{"f_11664ChickenBridge.scm",(void*)f_11664},
{"f_11668ChickenBridge.scm",(void*)f_11668},
{"f_11629ChickenBridge.scm",(void*)f_11629},
{"f_11633ChickenBridge.scm",(void*)f_11633},
{"f_11594ChickenBridge.scm",(void*)f_11594},
{"f_11598ChickenBridge.scm",(void*)f_11598},
{"f_11559ChickenBridge.scm",(void*)f_11559},
{"f_11563ChickenBridge.scm",(void*)f_11563},
{"f_11013ChickenBridge.scm",(void*)f_11013},
{"f_11523ChickenBridge.scm",(void*)f_11523},
{"f_11538ChickenBridge.scm",(void*)f_11538},
{"f_11530ChickenBridge.scm",(void*)f_11530},
{"f_11494ChickenBridge.scm",(void*)f_11494},
{"f_11498ChickenBridge.scm",(void*)f_11498},
{"f_11459ChickenBridge.scm",(void*)f_11459},
{"f_11463ChickenBridge.scm",(void*)f_11463},
{"f_11424ChickenBridge.scm",(void*)f_11424},
{"f_11428ChickenBridge.scm",(void*)f_11428},
{"f_11389ChickenBridge.scm",(void*)f_11389},
{"f_11393ChickenBridge.scm",(void*)f_11393},
{"f_11016ChickenBridge.scm",(void*)f_11016},
{"f_11353ChickenBridge.scm",(void*)f_11353},
{"f_11368ChickenBridge.scm",(void*)f_11368},
{"f_11360ChickenBridge.scm",(void*)f_11360},
{"f_11324ChickenBridge.scm",(void*)f_11324},
{"f_11328ChickenBridge.scm",(void*)f_11328},
{"f_11289ChickenBridge.scm",(void*)f_11289},
{"f_11293ChickenBridge.scm",(void*)f_11293},
{"f_11254ChickenBridge.scm",(void*)f_11254},
{"f_11258ChickenBridge.scm",(void*)f_11258},
{"f_11219ChickenBridge.scm",(void*)f_11219},
{"f_11223ChickenBridge.scm",(void*)f_11223},
{"f_11019ChickenBridge.scm",(void*)f_11019},
{"f_11183ChickenBridge.scm",(void*)f_11183},
{"f_11198ChickenBridge.scm",(void*)f_11198},
{"f_11190ChickenBridge.scm",(void*)f_11190},
{"f_11154ChickenBridge.scm",(void*)f_11154},
{"f_11158ChickenBridge.scm",(void*)f_11158},
{"f_11119ChickenBridge.scm",(void*)f_11119},
{"f_11123ChickenBridge.scm",(void*)f_11123},
{"f_11084ChickenBridge.scm",(void*)f_11084},
{"f_11088ChickenBridge.scm",(void*)f_11088},
{"f_11049ChickenBridge.scm",(void*)f_11049},
{"f_11053ChickenBridge.scm",(void*)f_11053},
{"f_11022ChickenBridge.scm",(void*)f_11022},
{"f_11025ChickenBridge.scm",(void*)f_11025},
{"f_10775ChickenBridge.scm",(void*)f_10775},
{"f_10784ChickenBridge.scm",(void*)f_10784},
{"f_10788ChickenBridge.scm",(void*)f_10788},
{"f_10990ChickenBridge.scm",(void*)f_10990},
{"f_10975ChickenBridge.scm",(void*)f_10975},
{"f_10957ChickenBridge.scm",(void*)f_10957},
{"f_10942ChickenBridge.scm",(void*)f_10942},
{"f_10892ChickenBridge.scm",(void*)f_10892},
{"f_10872ChickenBridge.scm",(void*)f_10872},
{"f_10889ChickenBridge.scm",(void*)f_10889},
{"f_10876ChickenBridge.scm",(void*)f_10876},
{"f_10882ChickenBridge.scm",(void*)f_10882},
{"f_10857ChickenBridge.scm",(void*)f_10857},
{"f_10861ChickenBridge.scm",(void*)f_10861},
{"f_10867ChickenBridge.scm",(void*)f_10867},
{"f_10843ChickenBridge.scm",(void*)f_10843},
{"f_10855ChickenBridge.scm",(void*)f_10855},
{"f_10851ChickenBridge.scm",(void*)f_10851},
{"f_10833ChickenBridge.scm",(void*)f_10833},
{"f_10841ChickenBridge.scm",(void*)f_10841},
{"f_10823ChickenBridge.scm",(void*)f_10823},
{"f_10790ChickenBridge.scm",(void*)f_10790},
{"f_10746ChickenBridge.scm",(void*)f_10746},
{"f_10750ChickenBridge.scm",(void*)f_10750},
{"f_10761ChickenBridge.scm",(void*)f_10761},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_10715ChickenBridge.scm",(void*)f_10715},
{"f_10719ChickenBridge.scm",(void*)f_10719},
{"f_10730ChickenBridge.scm",(void*)f_10730},
{"f_10728ChickenBridge.scm",(void*)f_10728},
{"f_10697ChickenBridge.scm",(void*)f_10697},
{"f_10705ChickenBridge.scm",(void*)f_10705},
{"f_10713ChickenBridge.scm",(void*)f_10713},
{"f_10687ChickenBridge.scm",(void*)f_10687},
{"f_10695ChickenBridge.scm",(void*)f_10695},
{"f_10628ChickenBridge.scm",(void*)f_10628},
{"f_10635ChickenBridge.scm",(void*)f_10635},
{"f_10638ChickenBridge.scm",(void*)f_10638},
{"f_10641ChickenBridge.scm",(void*)f_10641},
{"f_10646ChickenBridge.scm",(void*)f_10646},
{"f_10598ChickenBridge.scm",(void*)f_10598},
{"f_10602ChickenBridge.scm",(void*)f_10602},
{"f_10612ChickenBridge.scm",(void*)f_10612},
{"f_10586ChickenBridge.scm",(void*)f_10586},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10550ChickenBridge.scm",(void*)f_10550},
{"f_10532ChickenBridge.scm",(void*)f_10532},
{"f_10511ChickenBridge.scm",(void*)f_10511},
{"f_10203ChickenBridge.scm",(void*)f_10203},
{"f_10304ChickenBridge.scm",(void*)f_10304},
{"f_10353ChickenBridge.scm",(void*)f_10353},
{"f_10349ChickenBridge.scm",(void*)f_10349},
{"f_10321ChickenBridge.scm",(void*)f_10321},
{"f_10256ChickenBridge.scm",(void*)f_10256},
{"f_10265ChickenBridge.scm",(void*)f_10265},
{"f_10249ChickenBridge.scm",(void*)f_10249},
{"f_10068ChickenBridge.scm",(void*)f_10068},
{"f_10194ChickenBridge.scm",(void*)f_10194},
{"f_10190ChickenBridge.scm",(void*)f_10190},
{"f_10168ChickenBridge.scm",(void*)f_10168},
{"f_10098ChickenBridge.scm",(void*)f_10098},
{"f_10114ChickenBridge.scm",(void*)f_10114},
{"f_10023ChickenBridge.scm",(void*)f_10023},
{"f_10066ChickenBridge.scm",(void*)f_10066},
{"f_10055ChickenBridge.scm",(void*)f_10055},
{"f_9907ChickenBridge.scm",(void*)f_9907},
{"f_10021ChickenBridge.scm",(void*)f_10021},
{"f_9922ChickenBridge.scm",(void*)f_9922},
{"f_9952ChickenBridge.scm",(void*)f_9952},
{"f_9971ChickenBridge.scm",(void*)f_9971},
{"f_9956ChickenBridge.scm",(void*)f_9956},
{"f_9935ChickenBridge.scm",(void*)f_9935},
{"f_9785ChickenBridge.scm",(void*)f_9785},
{"f_9905ChickenBridge.scm",(void*)f_9905},
{"f_9800ChickenBridge.scm",(void*)f_9800},
{"f_9830ChickenBridge.scm",(void*)f_9830},
{"f_9849ChickenBridge.scm",(void*)f_9849},
{"f_9834ChickenBridge.scm",(void*)f_9834},
{"f_9813ChickenBridge.scm",(void*)f_9813},
{"f_9688ChickenBridge.scm",(void*)f_9688},
{"f_9783ChickenBridge.scm",(void*)f_9783},
{"f_9703ChickenBridge.scm",(void*)f_9703},
{"f_9749ChickenBridge.scm",(void*)f_9749},
{"f_9734ChickenBridge.scm",(void*)f_9734},
{"f_9716ChickenBridge.scm",(void*)f_9716},
{"f_9635ChickenBridge.scm",(void*)f_9635},
{"f_9673ChickenBridge.scm",(void*)f_9673},
{"f_9680ChickenBridge.scm",(void*)f_9680},
{"f_9658ChickenBridge.scm",(void*)f_9658},
{"f_9633ChickenBridge.scm",(void*)f_9633},
{"f_9605ChickenBridge.scm",(void*)f_9605},
{"f_9607ChickenBridge.scm",(void*)f_9607},
{"f_9585ChickenBridge.scm",(void*)f_9585},
{"f_9533ChickenBridge.scm",(void*)f_9533},
{"f_9570ChickenBridge.scm",(void*)f_9570},
{"f_9537ChickenBridge.scm",(void*)f_9537},
{"f_9553ChickenBridge.scm",(void*)f_9553},
{"f_9555ChickenBridge.scm",(void*)f_9555},
{"f_9319ChickenBridge.scm",(void*)f_9319},
{"f_9332ChickenBridge.scm",(void*)f_9332},
{"f_9414ChickenBridge.scm",(void*)f_9414},
{"f_9417ChickenBridge.scm",(void*)f_9417},
{"f_9425ChickenBridge.scm",(void*)f_9425},
{"f_9437ChickenBridge.scm",(void*)f_9437},
{"f_9458ChickenBridge.scm",(void*)f_9458},
{"f_9466ChickenBridge.scm",(void*)f_9466},
{"f_9353ChickenBridge.scm",(void*)f_9353},
{"f_9358ChickenBridge.scm",(void*)f_9358},
{"f_9390ChickenBridge.scm",(void*)f_9390},
{"f_9298ChickenBridge.scm",(void*)f_9298},
{"f_9279ChickenBridge.scm",(void*)f_9279},
{"f_9238ChickenBridge.scm",(void*)f_9238},
{"f_9219ChickenBridge.scm",(void*)f_9219},
{"f_8991ChickenBridge.scm",(void*)f_8991},
{"f_9196ChickenBridge.scm",(void*)f_9196},
{"f_9211ChickenBridge.scm",(void*)f_9211},
{"f_9203ChickenBridge.scm",(void*)f_9203},
{"f_9167ChickenBridge.scm",(void*)f_9167},
{"f_9171ChickenBridge.scm",(void*)f_9171},
{"f_9132ChickenBridge.scm",(void*)f_9132},
{"f_9136ChickenBridge.scm",(void*)f_9136},
{"f_8995ChickenBridge.scm",(void*)f_8995},
{"f_9096ChickenBridge.scm",(void*)f_9096},
{"f_9111ChickenBridge.scm",(void*)f_9111},
{"f_9103ChickenBridge.scm",(void*)f_9103},
{"f_9067ChickenBridge.scm",(void*)f_9067},
{"f_9071ChickenBridge.scm",(void*)f_9071},
{"f_9032ChickenBridge.scm",(void*)f_9032},
{"f_9036ChickenBridge.scm",(void*)f_9036},
{"f_8998ChickenBridge.scm",(void*)f_8998},
{"f_9001ChickenBridge.scm",(void*)f_9001},
{"f_9004ChickenBridge.scm",(void*)f_9004},
{"f_8949ChickenBridge.scm",(void*)f_8949},
{"f_8978ChickenBridge.scm",(void*)f_8978},
{"f_8963ChickenBridge.scm",(void*)f_8963},
{"f_8894ChickenBridge.scm",(void*)f_8894},
{"f_8905ChickenBridge.scm",(void*)f_8905},
{"f_8907ChickenBridge.scm",(void*)f_8907},
{"f_8935ChickenBridge.scm",(void*)f_8935},
{"f_8795ChickenBridge.scm",(void*)f_8795},
{"f_8799ChickenBridge.scm",(void*)f_8799},
{"f_8802ChickenBridge.scm",(void*)f_8802},
{"f_8867ChickenBridge.scm",(void*)f_8867},
{"f_8804ChickenBridge.scm",(void*)f_8804},
{"f_8820ChickenBridge.scm",(void*)f_8820},
{"f_8567ChickenBridge.scm",(void*)f_8567},
{"f_8772ChickenBridge.scm",(void*)f_8772},
{"f_8787ChickenBridge.scm",(void*)f_8787},
{"f_8779ChickenBridge.scm",(void*)f_8779},
{"f_8743ChickenBridge.scm",(void*)f_8743},
{"f_8747ChickenBridge.scm",(void*)f_8747},
{"f_8708ChickenBridge.scm",(void*)f_8708},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8571ChickenBridge.scm",(void*)f_8571},
{"f_8672ChickenBridge.scm",(void*)f_8672},
{"f_8687ChickenBridge.scm",(void*)f_8687},
{"f_8679ChickenBridge.scm",(void*)f_8679},
{"f_8643ChickenBridge.scm",(void*)f_8643},
{"f_8647ChickenBridge.scm",(void*)f_8647},
{"f_8608ChickenBridge.scm",(void*)f_8608},
{"f_8612ChickenBridge.scm",(void*)f_8612},
{"f_8574ChickenBridge.scm",(void*)f_8574},
{"f_8577ChickenBridge.scm",(void*)f_8577},
{"f_8587ChickenBridge.scm",(void*)f_8587},
{"f_8524ChickenBridge.scm",(void*)f_8524},
{"f_8557ChickenBridge.scm",(void*)f_8557},
{"f_8542ChickenBridge.scm",(void*)f_8542},
{"f_8503ChickenBridge.scm",(void*)f_8503},
{"f_8468ChickenBridge.scm",(void*)f_8468},
{"f_8472ChickenBridge.scm",(void*)f_8472},
{"f_8360ChickenBridge.scm",(void*)f_8360},
{"f_8447ChickenBridge.scm",(void*)f_8447},
{"f_8367ChickenBridge.scm",(void*)f_8367},
{"f_8376ChickenBridge.scm",(void*)f_8376},
{"f_8423ChickenBridge.scm",(void*)f_8423},
{"f_8389ChickenBridge.scm",(void*)f_8389},
{"f_8415ChickenBridge.scm",(void*)f_8415},
{"f_8227ChickenBridge.scm",(void*)f_8227},
{"f_8231ChickenBridge.scm",(void*)f_8231},
{"f_8234ChickenBridge.scm",(void*)f_8234},
{"f_8338ChickenBridge.scm",(void*)f_8338},
{"f_8236ChickenBridge.scm",(void*)f_8236},
{"f_8243ChickenBridge.scm",(void*)f_8243},
{"f_8285ChickenBridge.scm",(void*)f_8285},
{"f_8292ChickenBridge.scm",(void*)f_8292},
{"f_8266ChickenBridge.scm",(void*)f_8266},
{"f_8160ChickenBridge.scm",(void*)f_8160},
{"f_8164ChickenBridge.scm",(void*)f_8164},
{"f_8210ChickenBridge.scm",(void*)f_8210},
{"f_8167ChickenBridge.scm",(void*)f_8167},
{"f_8203ChickenBridge.scm",(void*)f_8203},
{"f_8170ChickenBridge.scm",(void*)f_8170},
{"f_8183ChickenBridge.scm",(void*)f_8183},
{"f_8114ChickenBridge.scm",(void*)f_8114},
{"f_8118ChickenBridge.scm",(void*)f_8118},
{"f_8028ChickenBridge.scm",(void*)f_8028},
{"f_8032ChickenBridge.scm",(void*)f_8032},
{"f_8035ChickenBridge.scm",(void*)f_8035},
{"f_8044ChickenBridge.scm",(void*)f_8044},
{"f_8066ChickenBridge.scm",(void*)f_8066},
{"f_8013ChickenBridge.scm",(void*)f_8013},
{"f_7998ChickenBridge.scm",(void*)f_7998},
{"f_7762ChickenBridge.scm",(void*)f_7762},
{"f_7975ChickenBridge.scm",(void*)f_7975},
{"f_7990ChickenBridge.scm",(void*)f_7990},
{"f_7982ChickenBridge.scm",(void*)f_7982},
{"f_7946ChickenBridge.scm",(void*)f_7946},
{"f_7950ChickenBridge.scm",(void*)f_7950},
{"f_7911ChickenBridge.scm",(void*)f_7911},
{"f_7915ChickenBridge.scm",(void*)f_7915},
{"f_7766ChickenBridge.scm",(void*)f_7766},
{"f_7875ChickenBridge.scm",(void*)f_7875},
{"f_7890ChickenBridge.scm",(void*)f_7890},
{"f_7882ChickenBridge.scm",(void*)f_7882},
{"f_7846ChickenBridge.scm",(void*)f_7846},
{"f_7850ChickenBridge.scm",(void*)f_7850},
{"f_7811ChickenBridge.scm",(void*)f_7811},
{"f_7815ChickenBridge.scm",(void*)f_7815},
{"f_7769ChickenBridge.scm",(void*)f_7769},
{"f_7772ChickenBridge.scm",(void*)f_7772},
{"f_7783ChickenBridge.scm",(void*)f_7783},
{"f_7722ChickenBridge.scm",(void*)f_7722},
{"f_7726ChickenBridge.scm",(void*)f_7726},
{"f_7756ChickenBridge.scm",(void*)f_7756},
{"f_7737ChickenBridge.scm",(void*)f_7737},
{"f_7745ChickenBridge.scm",(void*)f_7745},
{"f_7701ChickenBridge.scm",(void*)f_7701},
{"f_7713ChickenBridge.scm",(void*)f_7713},
{"f_7675ChickenBridge.scm",(void*)f_7675},
{"f_7633ChickenBridge.scm",(void*)f_7633},
{"f_7618ChickenBridge.scm",(void*)f_7618},
{"f_7507ChickenBridge.scm",(void*)f_7507},
{"f_7582ChickenBridge.scm",(void*)f_7582},
{"f_7511ChickenBridge.scm",(void*)f_7511},
{"f_7551ChickenBridge.scm",(void*)f_7551},
{"f_7540ChickenBridge.scm",(void*)f_7540},
{"f_7525ChickenBridge.scm",(void*)f_7525},
{"f_7533ChickenBridge.scm",(void*)f_7533},
{"f_7473ChickenBridge.scm",(void*)f_7473},
{"f_7485ChickenBridge.scm",(void*)f_7485},
{"f_7454ChickenBridge.scm",(void*)f_7454},
{"f_7451ChickenBridge.scm",(void*)f_7451},
{"f_7444ChickenBridge.scm",(void*)f_7444},
{"f_7441ChickenBridge.scm",(void*)f_7441},
{"f_7434ChickenBridge.scm",(void*)f_7434},
{"f_7416ChickenBridge.scm",(void*)f_7416},
{"f_7405ChickenBridge.scm",(void*)f_7405},
{"f_7402ChickenBridge.scm",(void*)f_7402},
{"f_7399ChickenBridge.scm",(void*)f_7399},
{"f_7396ChickenBridge.scm",(void*)f_7396},
{"f_7367ChickenBridge.scm",(void*)f_7367},
{"f_7360ChickenBridge.scm",(void*)f_7360},
{"f_7357ChickenBridge.scm",(void*)f_7357},
{"f_7336ChickenBridge.scm",(void*)f_7336},
{"f_7317ChickenBridge.scm",(void*)f_7317},
{"f_7298ChickenBridge.scm",(void*)f_7298},
{"f_7291ChickenBridge.scm",(void*)f_7291},
{"f_7284ChickenBridge.scm",(void*)f_7284},
{"f_7269ChickenBridge.scm",(void*)f_7269},
{"f_7258ChickenBridge.scm",(void*)f_7258},
{"f_7240ChickenBridge.scm",(void*)f_7240},
{"f_7213ChickenBridge.scm",(void*)f_7213},
{"f_7186ChickenBridge.scm",(void*)f_7186},
{"f_7145ChickenBridge.scm",(void*)f_7145},
{"f_7151ChickenBridge.scm",(void*)f_7151},
{"f_7161ChickenBridge.scm",(void*)f_7161},
{"f_7059ChickenBridge.scm",(void*)f_7059},
{"f_6960ChickenBridge.scm",(void*)f_6960},
{"f_6964ChickenBridge.scm",(void*)f_6964},
{"f_6989ChickenBridge.scm",(void*)f_6989},
{"f_7006ChickenBridge.scm",(void*)f_7006},
{"f_7010ChickenBridge.scm",(void*)f_7010},
{"f_6966ChickenBridge.scm",(void*)f_6966},
{"f_6983ChickenBridge.scm",(void*)f_6983},
{"f_6899ChickenBridge.scm",(void*)f_6899},
{"f_6912ChickenBridge.scm",(void*)f_6912},
{"f_6889ChickenBridge.scm",(void*)f_6889},
{"f_6849ChickenBridge.scm",(void*)f_6849},
{"f_6879ChickenBridge.scm",(void*)f_6879},
{"f_6711ChickenBridge.scm",(void*)f_6711},
{"f_6745ChickenBridge.scm",(void*)f_6745},
{"f_6688ChickenBridge.scm",(void*)f_6688},
{"f_6682ChickenBridge.scm",(void*)f_6682},
{"f_6667ChickenBridge.scm",(void*)f_6667},
{"f_6653ChickenBridge.scm",(void*)f_6653},
{"f_6643ChickenBridge.scm",(void*)f_6643},
{"f_6633ChickenBridge.scm",(void*)f_6633},
{"f_6623ChickenBridge.scm",(void*)f_6623},
{"f_6613ChickenBridge.scm",(void*)f_6613},
{"f_6584ChickenBridge.scm",(void*)f_6584},
{"f_6593ChickenBridge.scm",(void*)f_6593},
{"f_6598ChickenBridge.scm",(void*)f_6598},
{"f_6573ChickenBridge.scm",(void*)f_6573},
{"f_6578ChickenBridge.scm",(void*)f_6578},
{"f_6280ChickenBridge.scm",(void*)f_6280},
{"f_6290ChickenBridge.scm",(void*)f_6290},
{"f_6541ChickenBridge.scm",(void*)f_6541},
{"f_6293ChickenBridge.scm",(void*)f_6293},
{"f_6296ChickenBridge.scm",(void*)f_6296},
{"f_6311ChickenBridge.scm",(void*)f_6311},
{"f_6321ChickenBridge.scm",(void*)f_6321},
{"f_6323ChickenBridge.scm",(void*)f_6323},
{"f_6382ChickenBridge.scm",(void*)f_6382},
{"f_6392ChickenBridge.scm",(void*)f_6392},
{"f_6509ChickenBridge.scm",(void*)f_6509},
{"f_6497ChickenBridge.scm",(void*)f_6497},
{"f_6495ChickenBridge.scm",(void*)f_6495},
{"f_6482ChickenBridge.scm",(void*)f_6482},
{"f_6436ChickenBridge.scm",(void*)f_6436},
{"f_6463ChickenBridge.scm",(void*)f_6463},
{"f_6442ChickenBridge.scm",(void*)f_6442},
{"f_6376ChickenBridge.scm",(void*)f_6376},
{"f_6335ChickenBridge.scm",(void*)f_6335},
{"f_6348ChickenBridge.scm",(void*)f_6348},
{"f_6558ChickenBridge.scm",(void*)f_6558},
{"f_6549ChickenBridge.scm",(void*)f_6549},
{"f_6557ChickenBridge.scm",(void*)f_6557},
{"f_6560ChickenBridge.scm",(void*)f_6560},
{"f_6568ChickenBridge.scm",(void*)f_6568},
{"f_5982ChickenBridge.scm",(void*)f_5982},
{"f_6235ChickenBridge.scm",(void*)f_6235},
{"f_6268ChickenBridge.scm",(void*)f_6268},
{"f_6264ChickenBridge.scm",(void*)f_6264},
{"f_6253ChickenBridge.scm",(void*)f_6253},
{"f_6249ChickenBridge.scm",(void*)f_6249},
{"f_6143ChickenBridge.scm",(void*)f_6143},
{"f_6146ChickenBridge.scm",(void*)f_6146},
{"f_6149ChickenBridge.scm",(void*)f_6149},
{"f_6229ChickenBridge.scm",(void*)f_6229},
{"f_6054ChickenBridge.scm",(void*)f_6054},
{"f_5995ChickenBridge.scm",(void*)f_5995},
{"f_6152ChickenBridge.scm",(void*)f_6152},
{"f_6159ChickenBridge.scm",(void*)f_6159},
{"f_6219ChickenBridge.scm",(void*)f_6219},
{"f_6205ChickenBridge.scm",(void*)f_6205},
{"f_6171ChickenBridge.scm",(void*)f_6171},
{"f_6197ChickenBridge.scm",(void*)f_6197},
{"f_6132ChickenBridge.scm",(void*)f_6132},
{"f_6179ChickenBridge.scm",(void*)f_6179},
{"f_6175ChickenBridge.scm",(void*)f_6175},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
